Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    RETURN

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID saw_program SEMICOLON bloque
Rule 2     programa -> PROGRAM ID saw_program SEMICOLON dec bloque
Rule 3     funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque
Rule 4     func1 -> simple
Rule 5     func1 -> VOID saw_type
Rule 6     param -> param2 param1
Rule 7     param -> empty
Rule 8     param1 -> COMMA param2 param1
Rule 9     param1 -> empty
Rule 10    param2 -> simple ID saw_id saw_variable
Rule 11    param2 -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable
Rule 12    clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON
Rule 13    clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY
Rule 14    clase_bloque1 -> dec
Rule 15    clase_bloque1 -> empty
Rule 16    clase_metodos_bloque -> funcion clase_metodos_bloque
Rule 17    clase_metodos_bloque -> empty
Rule 18    ciclo_while -> WHILE cond2 THEN bloque SEMICOLON
Rule 19    ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
Rule 20    ciclo_for1 -> CSTINT
Rule 21    ciclo_for1 -> variable
Rule 22    dec -> VAR tipo SEMICOLON dec1
Rule 23    dec1 -> dec
Rule 24    dec1 -> empty
Rule 25    tipo -> compuesto ID saw_id saw_variable tipo1
Rule 26    tipo -> simple ID saw_id saw_variable tipo1
Rule 27    tipo -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable tipo2
Rule 28    tipo1 -> COMMA ID saw_id saw_variable tipo1
Rule 29    tipo1 -> empty
Rule 30    tipo2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable
Rule 31    tipo2 -> empty
Rule 32    tipo3 -> OBRACKET CSTINT CBRACKET saw_dimension
Rule 33    tipo3 -> empty
Rule 34    simple -> INT saw_type
Rule 35    simple -> FLOAT saw_type
Rule 36    simple -> BOOL saw_type
Rule 37    simple -> STRING saw_type
Rule 38    simple -> CHAR saw_type
Rule 39    multiple -> INTS saw_type
Rule 40    multiple -> FLOATS saw_type
Rule 41    multiple -> BOOLS saw_type
Rule 42    multiple -> STRINGS saw_type
Rule 43    multiple -> CHARS saw_type
Rule 44    compuesto -> ID saw_type
Rule 45    compuesto -> DATAFRAME saw_type
Rule 46    compuesto -> FILE saw_type
Rule 47    bloque -> OCURLY b1 CCURLY scope_end
Rule 48    b1 -> estatuto b1
Rule 49    b1 -> empty
Rule 50    estatuto -> asignacion
Rule 51    estatuto -> llamada
Rule 52    estatuto -> condicion
Rule 53    estatuto -> escritura
Rule 54    estatuto -> leer
Rule 55    estatuto -> ciclo_while
Rule 56    estatuto -> ciclo_for
Rule 57    estatuto -> ternaria
Rule 58    estatuto -> bloque
Rule 59    estatuto -> funcion
Rule 60    estatuto -> clase
Rule 61    estatuto -> dec
Rule 62    estatuto_redux -> asignacion
Rule 63    estatuto_redux -> llamada
Rule 64    estatuto_redux -> escritura
Rule 65    estatuto_redux -> leer
Rule 66    estatuto_redux -> ternaria
Rule 67    asignacion -> variable AS exp saw_asig
Rule 68    condicion -> IF cond2 THEN bloque cond1 SEMICOLON
Rule 69    cond1 -> ELSE bloque
Rule 70    cond1 -> ELSE IF cond2 THEN bloque cond1
Rule 71    cond1 -> empty
Rule 72    cond2 -> OPAREN exp CPAREN
Rule 73    ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON
Rule 74    escritura -> PRINT OPAREN exp saw_print_exp e1 CPAREN
Rule 75    e1 -> COMMA exp saw_print_exp e1
Rule 76    e1 -> empty
Rule 77    leer -> READ OPAREN variable saw_read_exp l1 CPAREN
Rule 78    l1 -> COMMA variable saw_read_exp e1
Rule 79    l1 -> empty
Rule 80    boolean -> TRUE
Rule 81    boolean -> FALSE
Rule 82    variable -> ID saw_id saw_called_var
Rule 83    variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
Rule 84    variable -> ID saw_id variable2
Rule 85    variable1 -> OBRACKET exp CBRACKET saw_dimension
Rule 86    variable1 -> empty
Rule 87    variable2 -> PERIOD ID saw_called_var_from_class
Rule 88    variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1
Rule 89    llamada -> ID saw_id OPAREN exp llamada1 CPAREN
Rule 90    llamada -> ID saw_id OPAREN CPAREN
Rule 91    llamada1 -> COMMA exp llamada1
Rule 92    llamada1 -> empty
Rule 93    exp -> texp exp1
Rule 94    exp1 -> OR texp exp1
Rule 95    exp1 -> empty
Rule 96    texp -> gexp texp1
Rule 97    texp1 -> AND gexp texp1
Rule 98    texp1 -> empty
Rule 99    gexp -> mexp gexp1 check_relational_operator
Rule 100   gexp1 -> LT saw_relational_operator mexp
Rule 101   gexp1 -> GT saw_relational_operator mexp
Rule 102   gexp1 -> GTE saw_relational_operator mexp
Rule 103   gexp1 -> LTE saw_relational_operator mexp
Rule 104   gexp1 -> EQ saw_relational_operator mexp
Rule 105   gexp1 -> NE saw_relational_operator mexp
Rule 106   gexp1 -> empty
Rule 107   mexp -> termino mexp1
Rule 108   mexp1 -> PLUS saw_plusminus_operator termino mexp1
Rule 109   mexp1 -> MINUS saw_plusminus_operator termino mexp1
Rule 110   mexp1 -> empty
Rule 111   termino -> factor term1 check_plusminus_operator
Rule 112   term1 -> MULT saw_multdiv_operator factor term1
Rule 113   term1 -> DIV saw_multdiv_operator factor term1
Rule 114   term1 -> empty
Rule 115   factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
Rule 116   factor -> varcst check_multdiv_operator
Rule 117   factor -> variable
Rule 118   factor -> llamada
Rule 119   varcst -> CSTINT saw_end_value_int
Rule 120   varcst -> CSTFLT saw_end_value_flt
Rule 121   varcst -> CSTCHAR
Rule 122   varcst -> CSTSTRING saw_end_value_str
Rule 123   varcst -> boolean
Rule 124   empty -> <empty>
Rule 125   saw_program -> <empty>
Rule 126   saw_class -> <empty>
Rule 127   saw_type -> <empty>
Rule 128   saw_id -> <empty>
Rule 129   saw_variable -> <empty>
Rule 130   saw_dimension -> <empty>
Rule 131   saw_called_var -> <empty>
Rule 132   saw_called_var_from_class -> <empty>
Rule 133   saw_asig -> <empty>
Rule 134   saw_end_value_int -> <empty>
Rule 135   saw_end_value_flt -> <empty>
Rule 136   saw_end_value_str -> <empty>
Rule 137   saw_plusminus_operator -> <empty>
Rule 138   check_plusminus_operator -> <empty>
Rule 139   saw_multdiv_operator -> <empty>
Rule 140   check_multdiv_operator -> <empty>
Rule 141   saw_relational_operator -> <empty>
Rule 142   check_relational_operator -> <empty>
Rule 143   saw_oparen -> <empty>
Rule 144   saw_cparen -> <empty>
Rule 145   saw_function -> <empty>
Rule 146   scope_end -> <empty>
Rule 147   class_scope_end -> <empty>
Rule 148   saw_print_exp -> <empty>
Rule 149   saw_read_exp -> <empty>

Terminals, with rules where they appear

AND                  : 97
AS                   : 67
ATTRIBUTES           : 13
BOOL                 : 36
BOOLS                : 41
BY                   : 19
CBRACKET             : 11 27 30 32 83 85 88
CCURLY               : 13 47
CHAR                 : 38
CHARS                : 43
CLASS                : 12
COLON                : 12 13 13 73
COMMA                : 8 28 30 75 78 91
COMMENT              : 
CPAREN               : 3 19 72 74 77 89 90 115
CSTCHAR              : 121
CSTFLT               : 120
CSTINT               : 11 20 27 30 32 119
CSTSTRING            : 122
DATAFRAME            : 45
DIV                  : 113
ELSE                 : 69 70
EQ                   : 104
FALSE                : 81
FILE                 : 46
FLOAT                : 35
FLOATS               : 40
FOR                  : 19
FROM                 : 19
FUNCTION             : 3
GT                   : 101
GTE                  : 102
ID                   : 1 2 3 10 11 12 25 26 27 28 30 44 82 83 84 87 88 89 90
IF                   : 68 70
INT                  : 34
INTS                 : 39
LT                   : 100
LTE                  : 103
METHODS              : 13
MINUS                : 109
MULT                 : 112
NE                   : 105
OBRACKET             : 11 27 30 32 83 85 88
OCURLY               : 13 47
OPAREN               : 3 19 72 74 77 89 90 115
OR                   : 94
PERIOD               : 87 88
PLUS                 : 108
PRINT                : 74
PROGRAM              : 1 2
QUESTION             : 73
READ                 : 77
RETURN               : 
SEMICOLON            : 1 2 12 18 19 22 68 73
STRING               : 37
STRINGS              : 42
THEN                 : 18 19 68 70
TO                   : 19
TRUE                 : 80
VAR                  : 22
VOID                 : 5
WHILE                : 18
error                : 

Nonterminals, with rules where they appear

asignacion           : 50 62
b1                   : 47 48
bloque               : 1 2 3 18 19 58 68 69 70
boolean              : 123
check_multdiv_operator : 115 116
check_plusminus_operator : 111
check_relational_operator : 99
ciclo_for            : 56
ciclo_for1           : 19 19 19
ciclo_while          : 55
clase                : 60
clase_bloque         : 12
clase_bloque1        : 13
clase_metodos_bloque : 13 16
class_scope_end      : 13
compuesto            : 25
cond1                : 68 70
cond2                : 18 68 70
condicion            : 52
dec                  : 2 14 23 61
dec1                 : 22
e1                   : 74 75 78
empty                : 7 9 15 17 24 29 31 33 49 71 76 79 86 92 95 98 106 110 114
escritura            : 53 64
estatuto             : 48
estatuto_redux       : 73 73
exp                  : 67 72 73 74 75 83 85 88 89 91 115
exp1                 : 93 94
factor               : 111 112 113
func1                : 3
funcion              : 16 59
gexp                 : 96 97
gexp1                : 99
l1                   : 77
leer                 : 54 65
llamada              : 51 63 118
llamada1             : 89 91
mexp                 : 99 100 101 102 103 104 105
mexp1                : 107 108 109
multiple             : 11 27
param                : 3
param1               : 6 8
param2               : 6 8
programa             : 0
saw_asig             : 67
saw_called_var       : 82 83
saw_called_var_from_class : 87 88
saw_class            : 12
saw_cparen           : 115
saw_dimension        : 11 27 30 32 83 85 88
saw_end_value_flt    : 120
saw_end_value_int    : 119
saw_end_value_str    : 122
saw_function         : 3
saw_id               : 3 10 11 12 25 26 27 28 30 82 83 84 89 90
saw_multdiv_operator : 112 113
saw_oparen           : 115
saw_plusminus_operator : 108 109
saw_print_exp        : 74 75
saw_program          : 1 2
saw_read_exp         : 77 78
saw_relational_operator : 100 101 102 103 104 105
saw_type             : 5 34 35 36 37 38 39 40 41 42 43 44 45 46
saw_variable         : 10 11 25 26 27 28 30
scope_end            : 47
simple               : 4 10 26
term1                : 111 112 113
termino              : 107 108 109
ternaria             : 57 66
texp                 : 93 94
texp1                : 96 97
tipo                 : 22
tipo1                : 25 26 28
tipo2                : 27
tipo3                : 11 27 30
varcst               : 116
variable             : 19 21 67 77 78 117
variable1            : 83 88
variable2            : 84

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID saw_program SEMICOLON bloque
    (2) programa -> . PROGRAM ID saw_program SEMICOLON dec bloque

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID saw_program SEMICOLON bloque
    (2) programa -> PROGRAM . ID saw_program SEMICOLON dec bloque

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . saw_program SEMICOLON bloque
    (2) programa -> PROGRAM ID . saw_program SEMICOLON dec bloque
    (125) saw_program -> .

    SEMICOLON       reduce using rule 125 (saw_program -> .)

    saw_program                    shift and go to state 4

state 4

    (1) programa -> PROGRAM ID saw_program . SEMICOLON bloque
    (2) programa -> PROGRAM ID saw_program . SEMICOLON dec bloque

    SEMICOLON       shift and go to state 5


state 5

    (1) programa -> PROGRAM ID saw_program SEMICOLON . bloque
    (2) programa -> PROGRAM ID saw_program SEMICOLON . dec bloque
    (47) bloque -> . OCURLY b1 CCURLY scope_end
    (22) dec -> . VAR tipo SEMICOLON dec1

    OCURLY          shift and go to state 8
    VAR             shift and go to state 9

    bloque                         shift and go to state 6
    dec                            shift and go to state 7

state 6

    (1) programa -> PROGRAM ID saw_program SEMICOLON bloque .

    $end            reduce using rule 1 (programa -> PROGRAM ID saw_program SEMICOLON bloque .)


state 7

    (2) programa -> PROGRAM ID saw_program SEMICOLON dec . bloque
    (47) bloque -> . OCURLY b1 CCURLY scope_end

    OCURLY          shift and go to state 8

    bloque                         shift and go to state 10

state 8

    (47) bloque -> OCURLY . b1 CCURLY scope_end
    (48) b1 -> . estatuto b1
    (49) b1 -> . empty
    (50) estatuto -> . asignacion
    (51) estatuto -> . llamada
    (52) estatuto -> . condicion
    (53) estatuto -> . escritura
    (54) estatuto -> . leer
    (55) estatuto -> . ciclo_while
    (56) estatuto -> . ciclo_for
    (57) estatuto -> . ternaria
    (58) estatuto -> . bloque
    (59) estatuto -> . funcion
    (60) estatuto -> . clase
    (61) estatuto -> . dec
    (124) empty -> .
    (67) asignacion -> . variable AS exp saw_asig
    (89) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (90) llamada -> . ID saw_id OPAREN CPAREN
    (68) condicion -> . IF cond2 THEN bloque cond1 SEMICOLON
    (74) escritura -> . PRINT OPAREN exp saw_print_exp e1 CPAREN
    (77) leer -> . READ OPAREN variable saw_read_exp l1 CPAREN
    (18) ciclo_while -> . WHILE cond2 THEN bloque SEMICOLON
    (19) ciclo_for -> . FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
    (73) ternaria -> . exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON
    (47) bloque -> . OCURLY b1 CCURLY scope_end
    (3) funcion -> . FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque
    (12) clase -> . CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON
    (22) dec -> . VAR tipo SEMICOLON dec1
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2
    (93) exp -> . texp exp1
    (96) texp -> . gexp texp1
    (99) gexp -> . mexp gexp1 check_relational_operator
    (107) mexp -> . termino mexp1
    (111) termino -> . factor term1 check_plusminus_operator
    (115) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (116) factor -> . varcst check_multdiv_operator
    (117) factor -> . variable
    (118) factor -> . llamada
    (119) varcst -> . CSTINT saw_end_value_int
    (120) varcst -> . CSTFLT saw_end_value_flt
    (121) varcst -> . CSTCHAR
    (122) varcst -> . CSTSTRING saw_end_value_str
    (123) varcst -> . boolean
    (80) boolean -> . TRUE
    (81) boolean -> . FALSE

    CCURLY          reduce using rule 124 (empty -> .)
    ID              shift and go to state 28
    IF              shift and go to state 30
    PRINT           shift and go to state 31
    READ            shift and go to state 32
    WHILE           shift and go to state 33
    FOR             shift and go to state 34
    OCURLY          shift and go to state 8
    FUNCTION        shift and go to state 35
    CLASS           shift and go to state 36
    VAR             shift and go to state 9
    OPAREN          shift and go to state 29
    CSTINT          shift and go to state 43
    CSTFLT          shift and go to state 44
    CSTCHAR         shift and go to state 45
    CSTSTRING       shift and go to state 46
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    b1                             shift and go to state 11
    estatuto                       shift and go to state 12
    empty                          shift and go to state 13
    asignacion                     shift and go to state 14
    llamada                        shift and go to state 15
    condicion                      shift and go to state 16
    escritura                      shift and go to state 17
    leer                           shift and go to state 18
    ciclo_while                    shift and go to state 19
    ciclo_for                      shift and go to state 20
    ternaria                       shift and go to state 21
    bloque                         shift and go to state 22
    funcion                        shift and go to state 23
    clase                          shift and go to state 24
    dec                            shift and go to state 25
    variable                       shift and go to state 26
    exp                            shift and go to state 27
    texp                           shift and go to state 37
    gexp                           shift and go to state 38
    mexp                           shift and go to state 39
    termino                        shift and go to state 40
    factor                         shift and go to state 41
    varcst                         shift and go to state 42
    boolean                        shift and go to state 47

state 9

    (22) dec -> VAR . tipo SEMICOLON dec1
    (25) tipo -> . compuesto ID saw_id saw_variable tipo1
    (26) tipo -> . simple ID saw_id saw_variable tipo1
    (27) tipo -> . multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable tipo2
    (44) compuesto -> . ID saw_type
    (45) compuesto -> . DATAFRAME saw_type
    (46) compuesto -> . FILE saw_type
    (34) simple -> . INT saw_type
    (35) simple -> . FLOAT saw_type
    (36) simple -> . BOOL saw_type
    (37) simple -> . STRING saw_type
    (38) simple -> . CHAR saw_type
    (39) multiple -> . INTS saw_type
    (40) multiple -> . FLOATS saw_type
    (41) multiple -> . BOOLS saw_type
    (42) multiple -> . STRINGS saw_type
    (43) multiple -> . CHARS saw_type

    ID              shift and go to state 52
    DATAFRAME       shift and go to state 55
    FILE            shift and go to state 56
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    BOOL            shift and go to state 59
    STRING          shift and go to state 60
    CHAR            shift and go to state 61
    INTS            shift and go to state 62
    FLOATS          shift and go to state 63
    BOOLS           shift and go to state 64
    STRINGS         shift and go to state 65
    CHARS           shift and go to state 66

    tipo                           shift and go to state 50
    compuesto                      shift and go to state 51
    simple                         shift and go to state 53
    multiple                       shift and go to state 54

state 10

    (2) programa -> PROGRAM ID saw_program SEMICOLON dec bloque .

    $end            reduce using rule 2 (programa -> PROGRAM ID saw_program SEMICOLON dec bloque .)


state 11

    (47) bloque -> OCURLY b1 . CCURLY scope_end

    CCURLY          shift and go to state 67


state 12

    (48) b1 -> estatuto . b1
    (48) b1 -> . estatuto b1
    (49) b1 -> . empty
    (50) estatuto -> . asignacion
    (51) estatuto -> . llamada
    (52) estatuto -> . condicion
    (53) estatuto -> . escritura
    (54) estatuto -> . leer
    (55) estatuto -> . ciclo_while
    (56) estatuto -> . ciclo_for
    (57) estatuto -> . ternaria
    (58) estatuto -> . bloque
    (59) estatuto -> . funcion
    (60) estatuto -> . clase
    (61) estatuto -> . dec
    (124) empty -> .
    (67) asignacion -> . variable AS exp saw_asig
    (89) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (90) llamada -> . ID saw_id OPAREN CPAREN
    (68) condicion -> . IF cond2 THEN bloque cond1 SEMICOLON
    (74) escritura -> . PRINT OPAREN exp saw_print_exp e1 CPAREN
    (77) leer -> . READ OPAREN variable saw_read_exp l1 CPAREN
    (18) ciclo_while -> . WHILE cond2 THEN bloque SEMICOLON
    (19) ciclo_for -> . FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
    (73) ternaria -> . exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON
    (47) bloque -> . OCURLY b1 CCURLY scope_end
    (3) funcion -> . FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque
    (12) clase -> . CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON
    (22) dec -> . VAR tipo SEMICOLON dec1
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2
    (93) exp -> . texp exp1
    (96) texp -> . gexp texp1
    (99) gexp -> . mexp gexp1 check_relational_operator
    (107) mexp -> . termino mexp1
    (111) termino -> . factor term1 check_plusminus_operator
    (115) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (116) factor -> . varcst check_multdiv_operator
    (117) factor -> . variable
    (118) factor -> . llamada
    (119) varcst -> . CSTINT saw_end_value_int
    (120) varcst -> . CSTFLT saw_end_value_flt
    (121) varcst -> . CSTCHAR
    (122) varcst -> . CSTSTRING saw_end_value_str
    (123) varcst -> . boolean
    (80) boolean -> . TRUE
    (81) boolean -> . FALSE

    CCURLY          reduce using rule 124 (empty -> .)
    ID              shift and go to state 28
    IF              shift and go to state 30
    PRINT           shift and go to state 31
    READ            shift and go to state 32
    WHILE           shift and go to state 33
    FOR             shift and go to state 34
    OCURLY          shift and go to state 8
    FUNCTION        shift and go to state 35
    CLASS           shift and go to state 36
    VAR             shift and go to state 9
    OPAREN          shift and go to state 29
    CSTINT          shift and go to state 43
    CSTFLT          shift and go to state 44
    CSTCHAR         shift and go to state 45
    CSTSTRING       shift and go to state 46
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    estatuto                       shift and go to state 12
    b1                             shift and go to state 68
    empty                          shift and go to state 13
    asignacion                     shift and go to state 14
    llamada                        shift and go to state 15
    condicion                      shift and go to state 16
    escritura                      shift and go to state 17
    leer                           shift and go to state 18
    ciclo_while                    shift and go to state 19
    ciclo_for                      shift and go to state 20
    ternaria                       shift and go to state 21
    bloque                         shift and go to state 22
    funcion                        shift and go to state 23
    clase                          shift and go to state 24
    dec                            shift and go to state 25
    variable                       shift and go to state 26
    exp                            shift and go to state 27
    texp                           shift and go to state 37
    gexp                           shift and go to state 38
    mexp                           shift and go to state 39
    termino                        shift and go to state 40
    factor                         shift and go to state 41
    varcst                         shift and go to state 42
    boolean                        shift and go to state 47

state 13

    (49) b1 -> empty .

    CCURLY          reduce using rule 49 (b1 -> empty .)


state 14

    (50) estatuto -> asignacion .

    ID              reduce using rule 50 (estatuto -> asignacion .)
    IF              reduce using rule 50 (estatuto -> asignacion .)
    PRINT           reduce using rule 50 (estatuto -> asignacion .)
    READ            reduce using rule 50 (estatuto -> asignacion .)
    WHILE           reduce using rule 50 (estatuto -> asignacion .)
    FOR             reduce using rule 50 (estatuto -> asignacion .)
    OCURLY          reduce using rule 50 (estatuto -> asignacion .)
    FUNCTION        reduce using rule 50 (estatuto -> asignacion .)
    CLASS           reduce using rule 50 (estatuto -> asignacion .)
    VAR             reduce using rule 50 (estatuto -> asignacion .)
    OPAREN          reduce using rule 50 (estatuto -> asignacion .)
    CSTINT          reduce using rule 50 (estatuto -> asignacion .)
    CSTFLT          reduce using rule 50 (estatuto -> asignacion .)
    CSTCHAR         reduce using rule 50 (estatuto -> asignacion .)
    CSTSTRING       reduce using rule 50 (estatuto -> asignacion .)
    TRUE            reduce using rule 50 (estatuto -> asignacion .)
    FALSE           reduce using rule 50 (estatuto -> asignacion .)
    CCURLY          reduce using rule 50 (estatuto -> asignacion .)


state 15

    (51) estatuto -> llamada .
    (118) factor -> llamada .

    ID              reduce using rule 51 (estatuto -> llamada .)
    IF              reduce using rule 51 (estatuto -> llamada .)
    PRINT           reduce using rule 51 (estatuto -> llamada .)
    READ            reduce using rule 51 (estatuto -> llamada .)
    WHILE           reduce using rule 51 (estatuto -> llamada .)
    FOR             reduce using rule 51 (estatuto -> llamada .)
    OCURLY          reduce using rule 51 (estatuto -> llamada .)
    FUNCTION        reduce using rule 51 (estatuto -> llamada .)
    CLASS           reduce using rule 51 (estatuto -> llamada .)
    VAR             reduce using rule 51 (estatuto -> llamada .)
    OPAREN          reduce using rule 51 (estatuto -> llamada .)
    CSTINT          reduce using rule 51 (estatuto -> llamada .)
    CSTFLT          reduce using rule 51 (estatuto -> llamada .)
    CSTCHAR         reduce using rule 51 (estatuto -> llamada .)
    CSTSTRING       reduce using rule 51 (estatuto -> llamada .)
    TRUE            reduce using rule 51 (estatuto -> llamada .)
    FALSE           reduce using rule 51 (estatuto -> llamada .)
    CCURLY          reduce using rule 51 (estatuto -> llamada .)
    MULT            reduce using rule 118 (factor -> llamada .)
    DIV             reduce using rule 118 (factor -> llamada .)
    PLUS            reduce using rule 118 (factor -> llamada .)
    MINUS           reduce using rule 118 (factor -> llamada .)
    LT              reduce using rule 118 (factor -> llamada .)
    GT              reduce using rule 118 (factor -> llamada .)
    GTE             reduce using rule 118 (factor -> llamada .)
    LTE             reduce using rule 118 (factor -> llamada .)
    EQ              reduce using rule 118 (factor -> llamada .)
    NE              reduce using rule 118 (factor -> llamada .)
    AND             reduce using rule 118 (factor -> llamada .)
    OR              reduce using rule 118 (factor -> llamada .)
    QUESTION        reduce using rule 118 (factor -> llamada .)


state 16

    (52) estatuto -> condicion .

    ID              reduce using rule 52 (estatuto -> condicion .)
    IF              reduce using rule 52 (estatuto -> condicion .)
    PRINT           reduce using rule 52 (estatuto -> condicion .)
    READ            reduce using rule 52 (estatuto -> condicion .)
    WHILE           reduce using rule 52 (estatuto -> condicion .)
    FOR             reduce using rule 52 (estatuto -> condicion .)
    OCURLY          reduce using rule 52 (estatuto -> condicion .)
    FUNCTION        reduce using rule 52 (estatuto -> condicion .)
    CLASS           reduce using rule 52 (estatuto -> condicion .)
    VAR             reduce using rule 52 (estatuto -> condicion .)
    OPAREN          reduce using rule 52 (estatuto -> condicion .)
    CSTINT          reduce using rule 52 (estatuto -> condicion .)
    CSTFLT          reduce using rule 52 (estatuto -> condicion .)
    CSTCHAR         reduce using rule 52 (estatuto -> condicion .)
    CSTSTRING       reduce using rule 52 (estatuto -> condicion .)
    TRUE            reduce using rule 52 (estatuto -> condicion .)
    FALSE           reduce using rule 52 (estatuto -> condicion .)
    CCURLY          reduce using rule 52 (estatuto -> condicion .)


state 17

    (53) estatuto -> escritura .

    ID              reduce using rule 53 (estatuto -> escritura .)
    IF              reduce using rule 53 (estatuto -> escritura .)
    PRINT           reduce using rule 53 (estatuto -> escritura .)
    READ            reduce using rule 53 (estatuto -> escritura .)
    WHILE           reduce using rule 53 (estatuto -> escritura .)
    FOR             reduce using rule 53 (estatuto -> escritura .)
    OCURLY          reduce using rule 53 (estatuto -> escritura .)
    FUNCTION        reduce using rule 53 (estatuto -> escritura .)
    CLASS           reduce using rule 53 (estatuto -> escritura .)
    VAR             reduce using rule 53 (estatuto -> escritura .)
    OPAREN          reduce using rule 53 (estatuto -> escritura .)
    CSTINT          reduce using rule 53 (estatuto -> escritura .)
    CSTFLT          reduce using rule 53 (estatuto -> escritura .)
    CSTCHAR         reduce using rule 53 (estatuto -> escritura .)
    CSTSTRING       reduce using rule 53 (estatuto -> escritura .)
    TRUE            reduce using rule 53 (estatuto -> escritura .)
    FALSE           reduce using rule 53 (estatuto -> escritura .)
    CCURLY          reduce using rule 53 (estatuto -> escritura .)


state 18

    (54) estatuto -> leer .

    ID              reduce using rule 54 (estatuto -> leer .)
    IF              reduce using rule 54 (estatuto -> leer .)
    PRINT           reduce using rule 54 (estatuto -> leer .)
    READ            reduce using rule 54 (estatuto -> leer .)
    WHILE           reduce using rule 54 (estatuto -> leer .)
    FOR             reduce using rule 54 (estatuto -> leer .)
    OCURLY          reduce using rule 54 (estatuto -> leer .)
    FUNCTION        reduce using rule 54 (estatuto -> leer .)
    CLASS           reduce using rule 54 (estatuto -> leer .)
    VAR             reduce using rule 54 (estatuto -> leer .)
    OPAREN          reduce using rule 54 (estatuto -> leer .)
    CSTINT          reduce using rule 54 (estatuto -> leer .)
    CSTFLT          reduce using rule 54 (estatuto -> leer .)
    CSTCHAR         reduce using rule 54 (estatuto -> leer .)
    CSTSTRING       reduce using rule 54 (estatuto -> leer .)
    TRUE            reduce using rule 54 (estatuto -> leer .)
    FALSE           reduce using rule 54 (estatuto -> leer .)
    CCURLY          reduce using rule 54 (estatuto -> leer .)


state 19

    (55) estatuto -> ciclo_while .

    ID              reduce using rule 55 (estatuto -> ciclo_while .)
    IF              reduce using rule 55 (estatuto -> ciclo_while .)
    PRINT           reduce using rule 55 (estatuto -> ciclo_while .)
    READ            reduce using rule 55 (estatuto -> ciclo_while .)
    WHILE           reduce using rule 55 (estatuto -> ciclo_while .)
    FOR             reduce using rule 55 (estatuto -> ciclo_while .)
    OCURLY          reduce using rule 55 (estatuto -> ciclo_while .)
    FUNCTION        reduce using rule 55 (estatuto -> ciclo_while .)
    CLASS           reduce using rule 55 (estatuto -> ciclo_while .)
    VAR             reduce using rule 55 (estatuto -> ciclo_while .)
    OPAREN          reduce using rule 55 (estatuto -> ciclo_while .)
    CSTINT          reduce using rule 55 (estatuto -> ciclo_while .)
    CSTFLT          reduce using rule 55 (estatuto -> ciclo_while .)
    CSTCHAR         reduce using rule 55 (estatuto -> ciclo_while .)
    CSTSTRING       reduce using rule 55 (estatuto -> ciclo_while .)
    TRUE            reduce using rule 55 (estatuto -> ciclo_while .)
    FALSE           reduce using rule 55 (estatuto -> ciclo_while .)
    CCURLY          reduce using rule 55 (estatuto -> ciclo_while .)


state 20

    (56) estatuto -> ciclo_for .

    ID              reduce using rule 56 (estatuto -> ciclo_for .)
    IF              reduce using rule 56 (estatuto -> ciclo_for .)
    PRINT           reduce using rule 56 (estatuto -> ciclo_for .)
    READ            reduce using rule 56 (estatuto -> ciclo_for .)
    WHILE           reduce using rule 56 (estatuto -> ciclo_for .)
    FOR             reduce using rule 56 (estatuto -> ciclo_for .)
    OCURLY          reduce using rule 56 (estatuto -> ciclo_for .)
    FUNCTION        reduce using rule 56 (estatuto -> ciclo_for .)
    CLASS           reduce using rule 56 (estatuto -> ciclo_for .)
    VAR             reduce using rule 56 (estatuto -> ciclo_for .)
    OPAREN          reduce using rule 56 (estatuto -> ciclo_for .)
    CSTINT          reduce using rule 56 (estatuto -> ciclo_for .)
    CSTFLT          reduce using rule 56 (estatuto -> ciclo_for .)
    CSTCHAR         reduce using rule 56 (estatuto -> ciclo_for .)
    CSTSTRING       reduce using rule 56 (estatuto -> ciclo_for .)
    TRUE            reduce using rule 56 (estatuto -> ciclo_for .)
    FALSE           reduce using rule 56 (estatuto -> ciclo_for .)
    CCURLY          reduce using rule 56 (estatuto -> ciclo_for .)


state 21

    (57) estatuto -> ternaria .

    ID              reduce using rule 57 (estatuto -> ternaria .)
    IF              reduce using rule 57 (estatuto -> ternaria .)
    PRINT           reduce using rule 57 (estatuto -> ternaria .)
    READ            reduce using rule 57 (estatuto -> ternaria .)
    WHILE           reduce using rule 57 (estatuto -> ternaria .)
    FOR             reduce using rule 57 (estatuto -> ternaria .)
    OCURLY          reduce using rule 57 (estatuto -> ternaria .)
    FUNCTION        reduce using rule 57 (estatuto -> ternaria .)
    CLASS           reduce using rule 57 (estatuto -> ternaria .)
    VAR             reduce using rule 57 (estatuto -> ternaria .)
    OPAREN          reduce using rule 57 (estatuto -> ternaria .)
    CSTINT          reduce using rule 57 (estatuto -> ternaria .)
    CSTFLT          reduce using rule 57 (estatuto -> ternaria .)
    CSTCHAR         reduce using rule 57 (estatuto -> ternaria .)
    CSTSTRING       reduce using rule 57 (estatuto -> ternaria .)
    TRUE            reduce using rule 57 (estatuto -> ternaria .)
    FALSE           reduce using rule 57 (estatuto -> ternaria .)
    CCURLY          reduce using rule 57 (estatuto -> ternaria .)


state 22

    (58) estatuto -> bloque .

    ID              reduce using rule 58 (estatuto -> bloque .)
    IF              reduce using rule 58 (estatuto -> bloque .)
    PRINT           reduce using rule 58 (estatuto -> bloque .)
    READ            reduce using rule 58 (estatuto -> bloque .)
    WHILE           reduce using rule 58 (estatuto -> bloque .)
    FOR             reduce using rule 58 (estatuto -> bloque .)
    OCURLY          reduce using rule 58 (estatuto -> bloque .)
    FUNCTION        reduce using rule 58 (estatuto -> bloque .)
    CLASS           reduce using rule 58 (estatuto -> bloque .)
    VAR             reduce using rule 58 (estatuto -> bloque .)
    OPAREN          reduce using rule 58 (estatuto -> bloque .)
    CSTINT          reduce using rule 58 (estatuto -> bloque .)
    CSTFLT          reduce using rule 58 (estatuto -> bloque .)
    CSTCHAR         reduce using rule 58 (estatuto -> bloque .)
    CSTSTRING       reduce using rule 58 (estatuto -> bloque .)
    TRUE            reduce using rule 58 (estatuto -> bloque .)
    FALSE           reduce using rule 58 (estatuto -> bloque .)
    CCURLY          reduce using rule 58 (estatuto -> bloque .)


state 23

    (59) estatuto -> funcion .

    ID              reduce using rule 59 (estatuto -> funcion .)
    IF              reduce using rule 59 (estatuto -> funcion .)
    PRINT           reduce using rule 59 (estatuto -> funcion .)
    READ            reduce using rule 59 (estatuto -> funcion .)
    WHILE           reduce using rule 59 (estatuto -> funcion .)
    FOR             reduce using rule 59 (estatuto -> funcion .)
    OCURLY          reduce using rule 59 (estatuto -> funcion .)
    FUNCTION        reduce using rule 59 (estatuto -> funcion .)
    CLASS           reduce using rule 59 (estatuto -> funcion .)
    VAR             reduce using rule 59 (estatuto -> funcion .)
    OPAREN          reduce using rule 59 (estatuto -> funcion .)
    CSTINT          reduce using rule 59 (estatuto -> funcion .)
    CSTFLT          reduce using rule 59 (estatuto -> funcion .)
    CSTCHAR         reduce using rule 59 (estatuto -> funcion .)
    CSTSTRING       reduce using rule 59 (estatuto -> funcion .)
    TRUE            reduce using rule 59 (estatuto -> funcion .)
    FALSE           reduce using rule 59 (estatuto -> funcion .)
    CCURLY          reduce using rule 59 (estatuto -> funcion .)


state 24

    (60) estatuto -> clase .

    ID              reduce using rule 60 (estatuto -> clase .)
    IF              reduce using rule 60 (estatuto -> clase .)
    PRINT           reduce using rule 60 (estatuto -> clase .)
    READ            reduce using rule 60 (estatuto -> clase .)
    WHILE           reduce using rule 60 (estatuto -> clase .)
    FOR             reduce using rule 60 (estatuto -> clase .)
    OCURLY          reduce using rule 60 (estatuto -> clase .)
    FUNCTION        reduce using rule 60 (estatuto -> clase .)
    CLASS           reduce using rule 60 (estatuto -> clase .)
    VAR             reduce using rule 60 (estatuto -> clase .)
    OPAREN          reduce using rule 60 (estatuto -> clase .)
    CSTINT          reduce using rule 60 (estatuto -> clase .)
    CSTFLT          reduce using rule 60 (estatuto -> clase .)
    CSTCHAR         reduce using rule 60 (estatuto -> clase .)
    CSTSTRING       reduce using rule 60 (estatuto -> clase .)
    TRUE            reduce using rule 60 (estatuto -> clase .)
    FALSE           reduce using rule 60 (estatuto -> clase .)
    CCURLY          reduce using rule 60 (estatuto -> clase .)


state 25

    (61) estatuto -> dec .

    ID              reduce using rule 61 (estatuto -> dec .)
    IF              reduce using rule 61 (estatuto -> dec .)
    PRINT           reduce using rule 61 (estatuto -> dec .)
    READ            reduce using rule 61 (estatuto -> dec .)
    WHILE           reduce using rule 61 (estatuto -> dec .)
    FOR             reduce using rule 61 (estatuto -> dec .)
    OCURLY          reduce using rule 61 (estatuto -> dec .)
    FUNCTION        reduce using rule 61 (estatuto -> dec .)
    CLASS           reduce using rule 61 (estatuto -> dec .)
    VAR             reduce using rule 61 (estatuto -> dec .)
    OPAREN          reduce using rule 61 (estatuto -> dec .)
    CSTINT          reduce using rule 61 (estatuto -> dec .)
    CSTFLT          reduce using rule 61 (estatuto -> dec .)
    CSTCHAR         reduce using rule 61 (estatuto -> dec .)
    CSTSTRING       reduce using rule 61 (estatuto -> dec .)
    TRUE            reduce using rule 61 (estatuto -> dec .)
    FALSE           reduce using rule 61 (estatuto -> dec .)
    CCURLY          reduce using rule 61 (estatuto -> dec .)


state 26

    (67) asignacion -> variable . AS exp saw_asig
    (117) factor -> variable .

    AS              shift and go to state 69
    MULT            reduce using rule 117 (factor -> variable .)
    DIV             reduce using rule 117 (factor -> variable .)
    PLUS            reduce using rule 117 (factor -> variable .)
    MINUS           reduce using rule 117 (factor -> variable .)
    LT              reduce using rule 117 (factor -> variable .)
    GT              reduce using rule 117 (factor -> variable .)
    GTE             reduce using rule 117 (factor -> variable .)
    LTE             reduce using rule 117 (factor -> variable .)
    EQ              reduce using rule 117 (factor -> variable .)
    NE              reduce using rule 117 (factor -> variable .)
    AND             reduce using rule 117 (factor -> variable .)
    OR              reduce using rule 117 (factor -> variable .)
    QUESTION        reduce using rule 117 (factor -> variable .)


state 27

    (73) ternaria -> exp . QUESTION estatuto_redux COLON estatuto_redux SEMICOLON

    QUESTION        shift and go to state 70


state 28

    (89) llamada -> ID . saw_id OPAREN exp llamada1 CPAREN
    (90) llamada -> ID . saw_id OPAREN CPAREN
    (82) variable -> ID . saw_id saw_called_var
    (83) variable -> ID . saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> ID . saw_id variable2
    (128) saw_id -> .

    OPAREN          reduce using rule 128 (saw_id -> .)
    OBRACKET        reduce using rule 128 (saw_id -> .)
    PERIOD          reduce using rule 128 (saw_id -> .)
    AS              reduce using rule 128 (saw_id -> .)
    MULT            reduce using rule 128 (saw_id -> .)
    DIV             reduce using rule 128 (saw_id -> .)
    PLUS            reduce using rule 128 (saw_id -> .)
    MINUS           reduce using rule 128 (saw_id -> .)
    LT              reduce using rule 128 (saw_id -> .)
    GT              reduce using rule 128 (saw_id -> .)
    GTE             reduce using rule 128 (saw_id -> .)
    LTE             reduce using rule 128 (saw_id -> .)
    EQ              reduce using rule 128 (saw_id -> .)
    NE              reduce using rule 128 (saw_id -> .)
    AND             reduce using rule 128 (saw_id -> .)
    OR              reduce using rule 128 (saw_id -> .)
    QUESTION        reduce using rule 128 (saw_id -> .)

    saw_id                         shift and go to state 71

state 29

    (115) factor -> OPAREN . saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (143) saw_oparen -> .

    OPAREN          reduce using rule 143 (saw_oparen -> .)
    CSTINT          reduce using rule 143 (saw_oparen -> .)
    CSTFLT          reduce using rule 143 (saw_oparen -> .)
    CSTCHAR         reduce using rule 143 (saw_oparen -> .)
    CSTSTRING       reduce using rule 143 (saw_oparen -> .)
    ID              reduce using rule 143 (saw_oparen -> .)
    TRUE            reduce using rule 143 (saw_oparen -> .)
    FALSE           reduce using rule 143 (saw_oparen -> .)

    saw_oparen                     shift and go to state 72

state 30

    (68) condicion -> IF . cond2 THEN bloque cond1 SEMICOLON
    (72) cond2 -> . OPAREN exp CPAREN

    OPAREN          shift and go to state 74

    cond2                          shift and go to state 73

state 31

    (74) escritura -> PRINT . OPAREN exp saw_print_exp e1 CPAREN

    OPAREN          shift and go to state 75


state 32

    (77) leer -> READ . OPAREN variable saw_read_exp l1 CPAREN

    OPAREN          shift and go to state 76


state 33

    (18) ciclo_while -> WHILE . cond2 THEN bloque SEMICOLON
    (72) cond2 -> . OPAREN exp CPAREN

    OPAREN          shift and go to state 74

    cond2                          shift and go to state 77

state 34

    (19) ciclo_for -> FOR . OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON

    OPAREN          shift and go to state 78


state 35

    (3) funcion -> FUNCTION . func1 ID saw_id saw_function OPAREN param CPAREN bloque
    (4) func1 -> . simple
    (5) func1 -> . VOID saw_type
    (34) simple -> . INT saw_type
    (35) simple -> . FLOAT saw_type
    (36) simple -> . BOOL saw_type
    (37) simple -> . STRING saw_type
    (38) simple -> . CHAR saw_type

    VOID            shift and go to state 81
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    BOOL            shift and go to state 59
    STRING          shift and go to state 60
    CHAR            shift and go to state 61

    func1                          shift and go to state 79
    simple                         shift and go to state 80

state 36

    (12) clase -> CLASS . ID saw_id saw_class COLON clase_bloque SEMICOLON

    ID              shift and go to state 82


state 37

    (93) exp -> texp . exp1
    (94) exp1 -> . OR texp exp1
    (95) exp1 -> . empty
    (124) empty -> .

    OR              shift and go to state 84
    QUESTION        reduce using rule 124 (empty -> .)
    ID              reduce using rule 124 (empty -> .)
    IF              reduce using rule 124 (empty -> .)
    PRINT           reduce using rule 124 (empty -> .)
    READ            reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    FOR             reduce using rule 124 (empty -> .)
    OCURLY          reduce using rule 124 (empty -> .)
    FUNCTION        reduce using rule 124 (empty -> .)
    CLASS           reduce using rule 124 (empty -> .)
    VAR             reduce using rule 124 (empty -> .)
    OPAREN          reduce using rule 124 (empty -> .)
    CSTINT          reduce using rule 124 (empty -> .)
    CSTFLT          reduce using rule 124 (empty -> .)
    CSTCHAR         reduce using rule 124 (empty -> .)
    CSTSTRING       reduce using rule 124 (empty -> .)
    TRUE            reduce using rule 124 (empty -> .)
    FALSE           reduce using rule 124 (empty -> .)
    CCURLY          reduce using rule 124 (empty -> .)
    COLON           reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    CPAREN          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    CBRACKET        reduce using rule 124 (empty -> .)

    exp1                           shift and go to state 83
    empty                          shift and go to state 85

state 38

    (96) texp -> gexp . texp1
    (97) texp1 -> . AND gexp texp1
    (98) texp1 -> . empty
    (124) empty -> .

    AND             shift and go to state 87
    OR              reduce using rule 124 (empty -> .)
    QUESTION        reduce using rule 124 (empty -> .)
    ID              reduce using rule 124 (empty -> .)
    IF              reduce using rule 124 (empty -> .)
    PRINT           reduce using rule 124 (empty -> .)
    READ            reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    FOR             reduce using rule 124 (empty -> .)
    OCURLY          reduce using rule 124 (empty -> .)
    FUNCTION        reduce using rule 124 (empty -> .)
    CLASS           reduce using rule 124 (empty -> .)
    VAR             reduce using rule 124 (empty -> .)
    OPAREN          reduce using rule 124 (empty -> .)
    CSTINT          reduce using rule 124 (empty -> .)
    CSTFLT          reduce using rule 124 (empty -> .)
    CSTCHAR         reduce using rule 124 (empty -> .)
    CSTSTRING       reduce using rule 124 (empty -> .)
    TRUE            reduce using rule 124 (empty -> .)
    FALSE           reduce using rule 124 (empty -> .)
    CCURLY          reduce using rule 124 (empty -> .)
    COLON           reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    CPAREN          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    CBRACKET        reduce using rule 124 (empty -> .)

    texp1                          shift and go to state 86
    empty                          shift and go to state 88

state 39

    (99) gexp -> mexp . gexp1 check_relational_operator
    (100) gexp1 -> . LT saw_relational_operator mexp
    (101) gexp1 -> . GT saw_relational_operator mexp
    (102) gexp1 -> . GTE saw_relational_operator mexp
    (103) gexp1 -> . LTE saw_relational_operator mexp
    (104) gexp1 -> . EQ saw_relational_operator mexp
    (105) gexp1 -> . NE saw_relational_operator mexp
    (106) gexp1 -> . empty
    (124) empty -> .

    LT              shift and go to state 90
    GT              shift and go to state 91
    GTE             shift and go to state 92
    LTE             shift and go to state 93
    EQ              shift and go to state 94
    NE              shift and go to state 95
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    QUESTION        reduce using rule 124 (empty -> .)
    ID              reduce using rule 124 (empty -> .)
    IF              reduce using rule 124 (empty -> .)
    PRINT           reduce using rule 124 (empty -> .)
    READ            reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    FOR             reduce using rule 124 (empty -> .)
    OCURLY          reduce using rule 124 (empty -> .)
    FUNCTION        reduce using rule 124 (empty -> .)
    CLASS           reduce using rule 124 (empty -> .)
    VAR             reduce using rule 124 (empty -> .)
    OPAREN          reduce using rule 124 (empty -> .)
    CSTINT          reduce using rule 124 (empty -> .)
    CSTFLT          reduce using rule 124 (empty -> .)
    CSTCHAR         reduce using rule 124 (empty -> .)
    CSTSTRING       reduce using rule 124 (empty -> .)
    TRUE            reduce using rule 124 (empty -> .)
    FALSE           reduce using rule 124 (empty -> .)
    CCURLY          reduce using rule 124 (empty -> .)
    COLON           reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    CPAREN          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    CBRACKET        reduce using rule 124 (empty -> .)

    gexp1                          shift and go to state 89
    empty                          shift and go to state 96

state 40

    (107) mexp -> termino . mexp1
    (108) mexp1 -> . PLUS saw_plusminus_operator termino mexp1
    (109) mexp1 -> . MINUS saw_plusminus_operator termino mexp1
    (110) mexp1 -> . empty
    (124) empty -> .

    PLUS            shift and go to state 98
    MINUS           shift and go to state 99
    LT              reduce using rule 124 (empty -> .)
    GT              reduce using rule 124 (empty -> .)
    GTE             reduce using rule 124 (empty -> .)
    LTE             reduce using rule 124 (empty -> .)
    EQ              reduce using rule 124 (empty -> .)
    NE              reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    QUESTION        reduce using rule 124 (empty -> .)
    ID              reduce using rule 124 (empty -> .)
    IF              reduce using rule 124 (empty -> .)
    PRINT           reduce using rule 124 (empty -> .)
    READ            reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    FOR             reduce using rule 124 (empty -> .)
    OCURLY          reduce using rule 124 (empty -> .)
    FUNCTION        reduce using rule 124 (empty -> .)
    CLASS           reduce using rule 124 (empty -> .)
    VAR             reduce using rule 124 (empty -> .)
    OPAREN          reduce using rule 124 (empty -> .)
    CSTINT          reduce using rule 124 (empty -> .)
    CSTFLT          reduce using rule 124 (empty -> .)
    CSTCHAR         reduce using rule 124 (empty -> .)
    CSTSTRING       reduce using rule 124 (empty -> .)
    TRUE            reduce using rule 124 (empty -> .)
    FALSE           reduce using rule 124 (empty -> .)
    CCURLY          reduce using rule 124 (empty -> .)
    COLON           reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    CPAREN          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    CBRACKET        reduce using rule 124 (empty -> .)

    mexp1                          shift and go to state 97
    empty                          shift and go to state 100

state 41

    (111) termino -> factor . term1 check_plusminus_operator
    (112) term1 -> . MULT saw_multdiv_operator factor term1
    (113) term1 -> . DIV saw_multdiv_operator factor term1
    (114) term1 -> . empty
    (124) empty -> .

    MULT            shift and go to state 102
    DIV             shift and go to state 103
    PLUS            reduce using rule 124 (empty -> .)
    MINUS           reduce using rule 124 (empty -> .)
    LT              reduce using rule 124 (empty -> .)
    GT              reduce using rule 124 (empty -> .)
    GTE             reduce using rule 124 (empty -> .)
    LTE             reduce using rule 124 (empty -> .)
    EQ              reduce using rule 124 (empty -> .)
    NE              reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    QUESTION        reduce using rule 124 (empty -> .)
    ID              reduce using rule 124 (empty -> .)
    IF              reduce using rule 124 (empty -> .)
    PRINT           reduce using rule 124 (empty -> .)
    READ            reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    FOR             reduce using rule 124 (empty -> .)
    OCURLY          reduce using rule 124 (empty -> .)
    FUNCTION        reduce using rule 124 (empty -> .)
    CLASS           reduce using rule 124 (empty -> .)
    VAR             reduce using rule 124 (empty -> .)
    OPAREN          reduce using rule 124 (empty -> .)
    CSTINT          reduce using rule 124 (empty -> .)
    CSTFLT          reduce using rule 124 (empty -> .)
    CSTCHAR         reduce using rule 124 (empty -> .)
    CSTSTRING       reduce using rule 124 (empty -> .)
    TRUE            reduce using rule 124 (empty -> .)
    FALSE           reduce using rule 124 (empty -> .)
    CCURLY          reduce using rule 124 (empty -> .)
    COLON           reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    CPAREN          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    CBRACKET        reduce using rule 124 (empty -> .)

    term1                          shift and go to state 101
    empty                          shift and go to state 104

state 42

    (116) factor -> varcst . check_multdiv_operator
    (140) check_multdiv_operator -> .

    MULT            reduce using rule 140 (check_multdiv_operator -> .)
    DIV             reduce using rule 140 (check_multdiv_operator -> .)
    PLUS            reduce using rule 140 (check_multdiv_operator -> .)
    MINUS           reduce using rule 140 (check_multdiv_operator -> .)
    LT              reduce using rule 140 (check_multdiv_operator -> .)
    GT              reduce using rule 140 (check_multdiv_operator -> .)
    GTE             reduce using rule 140 (check_multdiv_operator -> .)
    LTE             reduce using rule 140 (check_multdiv_operator -> .)
    EQ              reduce using rule 140 (check_multdiv_operator -> .)
    NE              reduce using rule 140 (check_multdiv_operator -> .)
    AND             reduce using rule 140 (check_multdiv_operator -> .)
    OR              reduce using rule 140 (check_multdiv_operator -> .)
    QUESTION        reduce using rule 140 (check_multdiv_operator -> .)
    ID              reduce using rule 140 (check_multdiv_operator -> .)
    IF              reduce using rule 140 (check_multdiv_operator -> .)
    PRINT           reduce using rule 140 (check_multdiv_operator -> .)
    READ            reduce using rule 140 (check_multdiv_operator -> .)
    WHILE           reduce using rule 140 (check_multdiv_operator -> .)
    FOR             reduce using rule 140 (check_multdiv_operator -> .)
    OCURLY          reduce using rule 140 (check_multdiv_operator -> .)
    FUNCTION        reduce using rule 140 (check_multdiv_operator -> .)
    CLASS           reduce using rule 140 (check_multdiv_operator -> .)
    VAR             reduce using rule 140 (check_multdiv_operator -> .)
    OPAREN          reduce using rule 140 (check_multdiv_operator -> .)
    CSTINT          reduce using rule 140 (check_multdiv_operator -> .)
    CSTFLT          reduce using rule 140 (check_multdiv_operator -> .)
    CSTCHAR         reduce using rule 140 (check_multdiv_operator -> .)
    CSTSTRING       reduce using rule 140 (check_multdiv_operator -> .)
    TRUE            reduce using rule 140 (check_multdiv_operator -> .)
    FALSE           reduce using rule 140 (check_multdiv_operator -> .)
    CCURLY          reduce using rule 140 (check_multdiv_operator -> .)
    COLON           reduce using rule 140 (check_multdiv_operator -> .)
    SEMICOLON       reduce using rule 140 (check_multdiv_operator -> .)
    CPAREN          reduce using rule 140 (check_multdiv_operator -> .)
    COMMA           reduce using rule 140 (check_multdiv_operator -> .)
    CBRACKET        reduce using rule 140 (check_multdiv_operator -> .)

    check_multdiv_operator         shift and go to state 105

state 43

    (119) varcst -> CSTINT . saw_end_value_int
    (134) saw_end_value_int -> .

    MULT            reduce using rule 134 (saw_end_value_int -> .)
    DIV             reduce using rule 134 (saw_end_value_int -> .)
    PLUS            reduce using rule 134 (saw_end_value_int -> .)
    MINUS           reduce using rule 134 (saw_end_value_int -> .)
    LT              reduce using rule 134 (saw_end_value_int -> .)
    GT              reduce using rule 134 (saw_end_value_int -> .)
    GTE             reduce using rule 134 (saw_end_value_int -> .)
    LTE             reduce using rule 134 (saw_end_value_int -> .)
    EQ              reduce using rule 134 (saw_end_value_int -> .)
    NE              reduce using rule 134 (saw_end_value_int -> .)
    AND             reduce using rule 134 (saw_end_value_int -> .)
    OR              reduce using rule 134 (saw_end_value_int -> .)
    QUESTION        reduce using rule 134 (saw_end_value_int -> .)
    ID              reduce using rule 134 (saw_end_value_int -> .)
    IF              reduce using rule 134 (saw_end_value_int -> .)
    PRINT           reduce using rule 134 (saw_end_value_int -> .)
    READ            reduce using rule 134 (saw_end_value_int -> .)
    WHILE           reduce using rule 134 (saw_end_value_int -> .)
    FOR             reduce using rule 134 (saw_end_value_int -> .)
    OCURLY          reduce using rule 134 (saw_end_value_int -> .)
    FUNCTION        reduce using rule 134 (saw_end_value_int -> .)
    CLASS           reduce using rule 134 (saw_end_value_int -> .)
    VAR             reduce using rule 134 (saw_end_value_int -> .)
    OPAREN          reduce using rule 134 (saw_end_value_int -> .)
    CSTINT          reduce using rule 134 (saw_end_value_int -> .)
    CSTFLT          reduce using rule 134 (saw_end_value_int -> .)
    CSTCHAR         reduce using rule 134 (saw_end_value_int -> .)
    CSTSTRING       reduce using rule 134 (saw_end_value_int -> .)
    TRUE            reduce using rule 134 (saw_end_value_int -> .)
    FALSE           reduce using rule 134 (saw_end_value_int -> .)
    CCURLY          reduce using rule 134 (saw_end_value_int -> .)
    COLON           reduce using rule 134 (saw_end_value_int -> .)
    SEMICOLON       reduce using rule 134 (saw_end_value_int -> .)
    CPAREN          reduce using rule 134 (saw_end_value_int -> .)
    COMMA           reduce using rule 134 (saw_end_value_int -> .)
    CBRACKET        reduce using rule 134 (saw_end_value_int -> .)

    saw_end_value_int              shift and go to state 106

state 44

    (120) varcst -> CSTFLT . saw_end_value_flt
    (135) saw_end_value_flt -> .

    MULT            reduce using rule 135 (saw_end_value_flt -> .)
    DIV             reduce using rule 135 (saw_end_value_flt -> .)
    PLUS            reduce using rule 135 (saw_end_value_flt -> .)
    MINUS           reduce using rule 135 (saw_end_value_flt -> .)
    LT              reduce using rule 135 (saw_end_value_flt -> .)
    GT              reduce using rule 135 (saw_end_value_flt -> .)
    GTE             reduce using rule 135 (saw_end_value_flt -> .)
    LTE             reduce using rule 135 (saw_end_value_flt -> .)
    EQ              reduce using rule 135 (saw_end_value_flt -> .)
    NE              reduce using rule 135 (saw_end_value_flt -> .)
    AND             reduce using rule 135 (saw_end_value_flt -> .)
    OR              reduce using rule 135 (saw_end_value_flt -> .)
    QUESTION        reduce using rule 135 (saw_end_value_flt -> .)
    ID              reduce using rule 135 (saw_end_value_flt -> .)
    IF              reduce using rule 135 (saw_end_value_flt -> .)
    PRINT           reduce using rule 135 (saw_end_value_flt -> .)
    READ            reduce using rule 135 (saw_end_value_flt -> .)
    WHILE           reduce using rule 135 (saw_end_value_flt -> .)
    FOR             reduce using rule 135 (saw_end_value_flt -> .)
    OCURLY          reduce using rule 135 (saw_end_value_flt -> .)
    FUNCTION        reduce using rule 135 (saw_end_value_flt -> .)
    CLASS           reduce using rule 135 (saw_end_value_flt -> .)
    VAR             reduce using rule 135 (saw_end_value_flt -> .)
    OPAREN          reduce using rule 135 (saw_end_value_flt -> .)
    CSTINT          reduce using rule 135 (saw_end_value_flt -> .)
    CSTFLT          reduce using rule 135 (saw_end_value_flt -> .)
    CSTCHAR         reduce using rule 135 (saw_end_value_flt -> .)
    CSTSTRING       reduce using rule 135 (saw_end_value_flt -> .)
    TRUE            reduce using rule 135 (saw_end_value_flt -> .)
    FALSE           reduce using rule 135 (saw_end_value_flt -> .)
    CCURLY          reduce using rule 135 (saw_end_value_flt -> .)
    COLON           reduce using rule 135 (saw_end_value_flt -> .)
    SEMICOLON       reduce using rule 135 (saw_end_value_flt -> .)
    CPAREN          reduce using rule 135 (saw_end_value_flt -> .)
    COMMA           reduce using rule 135 (saw_end_value_flt -> .)
    CBRACKET        reduce using rule 135 (saw_end_value_flt -> .)

    saw_end_value_flt              shift and go to state 107

state 45

    (121) varcst -> CSTCHAR .

    MULT            reduce using rule 121 (varcst -> CSTCHAR .)
    DIV             reduce using rule 121 (varcst -> CSTCHAR .)
    PLUS            reduce using rule 121 (varcst -> CSTCHAR .)
    MINUS           reduce using rule 121 (varcst -> CSTCHAR .)
    LT              reduce using rule 121 (varcst -> CSTCHAR .)
    GT              reduce using rule 121 (varcst -> CSTCHAR .)
    GTE             reduce using rule 121 (varcst -> CSTCHAR .)
    LTE             reduce using rule 121 (varcst -> CSTCHAR .)
    EQ              reduce using rule 121 (varcst -> CSTCHAR .)
    NE              reduce using rule 121 (varcst -> CSTCHAR .)
    AND             reduce using rule 121 (varcst -> CSTCHAR .)
    OR              reduce using rule 121 (varcst -> CSTCHAR .)
    QUESTION        reduce using rule 121 (varcst -> CSTCHAR .)
    ID              reduce using rule 121 (varcst -> CSTCHAR .)
    IF              reduce using rule 121 (varcst -> CSTCHAR .)
    PRINT           reduce using rule 121 (varcst -> CSTCHAR .)
    READ            reduce using rule 121 (varcst -> CSTCHAR .)
    WHILE           reduce using rule 121 (varcst -> CSTCHAR .)
    FOR             reduce using rule 121 (varcst -> CSTCHAR .)
    OCURLY          reduce using rule 121 (varcst -> CSTCHAR .)
    FUNCTION        reduce using rule 121 (varcst -> CSTCHAR .)
    CLASS           reduce using rule 121 (varcst -> CSTCHAR .)
    VAR             reduce using rule 121 (varcst -> CSTCHAR .)
    OPAREN          reduce using rule 121 (varcst -> CSTCHAR .)
    CSTINT          reduce using rule 121 (varcst -> CSTCHAR .)
    CSTFLT          reduce using rule 121 (varcst -> CSTCHAR .)
    CSTCHAR         reduce using rule 121 (varcst -> CSTCHAR .)
    CSTSTRING       reduce using rule 121 (varcst -> CSTCHAR .)
    TRUE            reduce using rule 121 (varcst -> CSTCHAR .)
    FALSE           reduce using rule 121 (varcst -> CSTCHAR .)
    CCURLY          reduce using rule 121 (varcst -> CSTCHAR .)
    COLON           reduce using rule 121 (varcst -> CSTCHAR .)
    SEMICOLON       reduce using rule 121 (varcst -> CSTCHAR .)
    CPAREN          reduce using rule 121 (varcst -> CSTCHAR .)
    COMMA           reduce using rule 121 (varcst -> CSTCHAR .)
    CBRACKET        reduce using rule 121 (varcst -> CSTCHAR .)


state 46

    (122) varcst -> CSTSTRING . saw_end_value_str
    (136) saw_end_value_str -> .

    MULT            reduce using rule 136 (saw_end_value_str -> .)
    DIV             reduce using rule 136 (saw_end_value_str -> .)
    PLUS            reduce using rule 136 (saw_end_value_str -> .)
    MINUS           reduce using rule 136 (saw_end_value_str -> .)
    LT              reduce using rule 136 (saw_end_value_str -> .)
    GT              reduce using rule 136 (saw_end_value_str -> .)
    GTE             reduce using rule 136 (saw_end_value_str -> .)
    LTE             reduce using rule 136 (saw_end_value_str -> .)
    EQ              reduce using rule 136 (saw_end_value_str -> .)
    NE              reduce using rule 136 (saw_end_value_str -> .)
    AND             reduce using rule 136 (saw_end_value_str -> .)
    OR              reduce using rule 136 (saw_end_value_str -> .)
    QUESTION        reduce using rule 136 (saw_end_value_str -> .)
    ID              reduce using rule 136 (saw_end_value_str -> .)
    IF              reduce using rule 136 (saw_end_value_str -> .)
    PRINT           reduce using rule 136 (saw_end_value_str -> .)
    READ            reduce using rule 136 (saw_end_value_str -> .)
    WHILE           reduce using rule 136 (saw_end_value_str -> .)
    FOR             reduce using rule 136 (saw_end_value_str -> .)
    OCURLY          reduce using rule 136 (saw_end_value_str -> .)
    FUNCTION        reduce using rule 136 (saw_end_value_str -> .)
    CLASS           reduce using rule 136 (saw_end_value_str -> .)
    VAR             reduce using rule 136 (saw_end_value_str -> .)
    OPAREN          reduce using rule 136 (saw_end_value_str -> .)
    CSTINT          reduce using rule 136 (saw_end_value_str -> .)
    CSTFLT          reduce using rule 136 (saw_end_value_str -> .)
    CSTCHAR         reduce using rule 136 (saw_end_value_str -> .)
    CSTSTRING       reduce using rule 136 (saw_end_value_str -> .)
    TRUE            reduce using rule 136 (saw_end_value_str -> .)
    FALSE           reduce using rule 136 (saw_end_value_str -> .)
    CCURLY          reduce using rule 136 (saw_end_value_str -> .)
    COLON           reduce using rule 136 (saw_end_value_str -> .)
    SEMICOLON       reduce using rule 136 (saw_end_value_str -> .)
    CPAREN          reduce using rule 136 (saw_end_value_str -> .)
    COMMA           reduce using rule 136 (saw_end_value_str -> .)
    CBRACKET        reduce using rule 136 (saw_end_value_str -> .)

    saw_end_value_str              shift and go to state 108

state 47

    (123) varcst -> boolean .

    MULT            reduce using rule 123 (varcst -> boolean .)
    DIV             reduce using rule 123 (varcst -> boolean .)
    PLUS            reduce using rule 123 (varcst -> boolean .)
    MINUS           reduce using rule 123 (varcst -> boolean .)
    LT              reduce using rule 123 (varcst -> boolean .)
    GT              reduce using rule 123 (varcst -> boolean .)
    GTE             reduce using rule 123 (varcst -> boolean .)
    LTE             reduce using rule 123 (varcst -> boolean .)
    EQ              reduce using rule 123 (varcst -> boolean .)
    NE              reduce using rule 123 (varcst -> boolean .)
    AND             reduce using rule 123 (varcst -> boolean .)
    OR              reduce using rule 123 (varcst -> boolean .)
    QUESTION        reduce using rule 123 (varcst -> boolean .)
    ID              reduce using rule 123 (varcst -> boolean .)
    IF              reduce using rule 123 (varcst -> boolean .)
    PRINT           reduce using rule 123 (varcst -> boolean .)
    READ            reduce using rule 123 (varcst -> boolean .)
    WHILE           reduce using rule 123 (varcst -> boolean .)
    FOR             reduce using rule 123 (varcst -> boolean .)
    OCURLY          reduce using rule 123 (varcst -> boolean .)
    FUNCTION        reduce using rule 123 (varcst -> boolean .)
    CLASS           reduce using rule 123 (varcst -> boolean .)
    VAR             reduce using rule 123 (varcst -> boolean .)
    OPAREN          reduce using rule 123 (varcst -> boolean .)
    CSTINT          reduce using rule 123 (varcst -> boolean .)
    CSTFLT          reduce using rule 123 (varcst -> boolean .)
    CSTCHAR         reduce using rule 123 (varcst -> boolean .)
    CSTSTRING       reduce using rule 123 (varcst -> boolean .)
    TRUE            reduce using rule 123 (varcst -> boolean .)
    FALSE           reduce using rule 123 (varcst -> boolean .)
    CCURLY          reduce using rule 123 (varcst -> boolean .)
    COLON           reduce using rule 123 (varcst -> boolean .)
    SEMICOLON       reduce using rule 123 (varcst -> boolean .)
    CPAREN          reduce using rule 123 (varcst -> boolean .)
    COMMA           reduce using rule 123 (varcst -> boolean .)
    CBRACKET        reduce using rule 123 (varcst -> boolean .)


state 48

    (80) boolean -> TRUE .

    MULT            reduce using rule 80 (boolean -> TRUE .)
    DIV             reduce using rule 80 (boolean -> TRUE .)
    PLUS            reduce using rule 80 (boolean -> TRUE .)
    MINUS           reduce using rule 80 (boolean -> TRUE .)
    LT              reduce using rule 80 (boolean -> TRUE .)
    GT              reduce using rule 80 (boolean -> TRUE .)
    GTE             reduce using rule 80 (boolean -> TRUE .)
    LTE             reduce using rule 80 (boolean -> TRUE .)
    EQ              reduce using rule 80 (boolean -> TRUE .)
    NE              reduce using rule 80 (boolean -> TRUE .)
    AND             reduce using rule 80 (boolean -> TRUE .)
    OR              reduce using rule 80 (boolean -> TRUE .)
    QUESTION        reduce using rule 80 (boolean -> TRUE .)
    ID              reduce using rule 80 (boolean -> TRUE .)
    IF              reduce using rule 80 (boolean -> TRUE .)
    PRINT           reduce using rule 80 (boolean -> TRUE .)
    READ            reduce using rule 80 (boolean -> TRUE .)
    WHILE           reduce using rule 80 (boolean -> TRUE .)
    FOR             reduce using rule 80 (boolean -> TRUE .)
    OCURLY          reduce using rule 80 (boolean -> TRUE .)
    FUNCTION        reduce using rule 80 (boolean -> TRUE .)
    CLASS           reduce using rule 80 (boolean -> TRUE .)
    VAR             reduce using rule 80 (boolean -> TRUE .)
    OPAREN          reduce using rule 80 (boolean -> TRUE .)
    CSTINT          reduce using rule 80 (boolean -> TRUE .)
    CSTFLT          reduce using rule 80 (boolean -> TRUE .)
    CSTCHAR         reduce using rule 80 (boolean -> TRUE .)
    CSTSTRING       reduce using rule 80 (boolean -> TRUE .)
    TRUE            reduce using rule 80 (boolean -> TRUE .)
    FALSE           reduce using rule 80 (boolean -> TRUE .)
    CCURLY          reduce using rule 80 (boolean -> TRUE .)
    COLON           reduce using rule 80 (boolean -> TRUE .)
    SEMICOLON       reduce using rule 80 (boolean -> TRUE .)
    CPAREN          reduce using rule 80 (boolean -> TRUE .)
    COMMA           reduce using rule 80 (boolean -> TRUE .)
    CBRACKET        reduce using rule 80 (boolean -> TRUE .)


state 49

    (81) boolean -> FALSE .

    MULT            reduce using rule 81 (boolean -> FALSE .)
    DIV             reduce using rule 81 (boolean -> FALSE .)
    PLUS            reduce using rule 81 (boolean -> FALSE .)
    MINUS           reduce using rule 81 (boolean -> FALSE .)
    LT              reduce using rule 81 (boolean -> FALSE .)
    GT              reduce using rule 81 (boolean -> FALSE .)
    GTE             reduce using rule 81 (boolean -> FALSE .)
    LTE             reduce using rule 81 (boolean -> FALSE .)
    EQ              reduce using rule 81 (boolean -> FALSE .)
    NE              reduce using rule 81 (boolean -> FALSE .)
    AND             reduce using rule 81 (boolean -> FALSE .)
    OR              reduce using rule 81 (boolean -> FALSE .)
    QUESTION        reduce using rule 81 (boolean -> FALSE .)
    ID              reduce using rule 81 (boolean -> FALSE .)
    IF              reduce using rule 81 (boolean -> FALSE .)
    PRINT           reduce using rule 81 (boolean -> FALSE .)
    READ            reduce using rule 81 (boolean -> FALSE .)
    WHILE           reduce using rule 81 (boolean -> FALSE .)
    FOR             reduce using rule 81 (boolean -> FALSE .)
    OCURLY          reduce using rule 81 (boolean -> FALSE .)
    FUNCTION        reduce using rule 81 (boolean -> FALSE .)
    CLASS           reduce using rule 81 (boolean -> FALSE .)
    VAR             reduce using rule 81 (boolean -> FALSE .)
    OPAREN          reduce using rule 81 (boolean -> FALSE .)
    CSTINT          reduce using rule 81 (boolean -> FALSE .)
    CSTFLT          reduce using rule 81 (boolean -> FALSE .)
    CSTCHAR         reduce using rule 81 (boolean -> FALSE .)
    CSTSTRING       reduce using rule 81 (boolean -> FALSE .)
    TRUE            reduce using rule 81 (boolean -> FALSE .)
    FALSE           reduce using rule 81 (boolean -> FALSE .)
    CCURLY          reduce using rule 81 (boolean -> FALSE .)
    COLON           reduce using rule 81 (boolean -> FALSE .)
    SEMICOLON       reduce using rule 81 (boolean -> FALSE .)
    CPAREN          reduce using rule 81 (boolean -> FALSE .)
    COMMA           reduce using rule 81 (boolean -> FALSE .)
    CBRACKET        reduce using rule 81 (boolean -> FALSE .)


state 50

    (22) dec -> VAR tipo . SEMICOLON dec1

    SEMICOLON       shift and go to state 109


state 51

    (25) tipo -> compuesto . ID saw_id saw_variable tipo1

    ID              shift and go to state 110


state 52

    (44) compuesto -> ID . saw_type
    (127) saw_type -> .

    ID              reduce using rule 127 (saw_type -> .)

    saw_type                       shift and go to state 111

state 53

    (26) tipo -> simple . ID saw_id saw_variable tipo1

    ID              shift and go to state 112


state 54

    (27) tipo -> multiple . ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable tipo2

    ID              shift and go to state 113


state 55

    (45) compuesto -> DATAFRAME . saw_type
    (127) saw_type -> .

    ID              reduce using rule 127 (saw_type -> .)

    saw_type                       shift and go to state 114

state 56

    (46) compuesto -> FILE . saw_type
    (127) saw_type -> .

    ID              reduce using rule 127 (saw_type -> .)

    saw_type                       shift and go to state 115

state 57

    (34) simple -> INT . saw_type
    (127) saw_type -> .

    ID              reduce using rule 127 (saw_type -> .)

    saw_type                       shift and go to state 116

state 58

    (35) simple -> FLOAT . saw_type
    (127) saw_type -> .

    ID              reduce using rule 127 (saw_type -> .)

    saw_type                       shift and go to state 117

state 59

    (36) simple -> BOOL . saw_type
    (127) saw_type -> .

    ID              reduce using rule 127 (saw_type -> .)

    saw_type                       shift and go to state 118

state 60

    (37) simple -> STRING . saw_type
    (127) saw_type -> .

    ID              reduce using rule 127 (saw_type -> .)

    saw_type                       shift and go to state 119

state 61

    (38) simple -> CHAR . saw_type
    (127) saw_type -> .

    ID              reduce using rule 127 (saw_type -> .)

    saw_type                       shift and go to state 120

state 62

    (39) multiple -> INTS . saw_type
    (127) saw_type -> .

    ID              reduce using rule 127 (saw_type -> .)

    saw_type                       shift and go to state 121

state 63

    (40) multiple -> FLOATS . saw_type
    (127) saw_type -> .

    ID              reduce using rule 127 (saw_type -> .)

    saw_type                       shift and go to state 122

state 64

    (41) multiple -> BOOLS . saw_type
    (127) saw_type -> .

    ID              reduce using rule 127 (saw_type -> .)

    saw_type                       shift and go to state 123

state 65

    (42) multiple -> STRINGS . saw_type
    (127) saw_type -> .

    ID              reduce using rule 127 (saw_type -> .)

    saw_type                       shift and go to state 124

state 66

    (43) multiple -> CHARS . saw_type
    (127) saw_type -> .

    ID              reduce using rule 127 (saw_type -> .)

    saw_type                       shift and go to state 125

state 67

    (47) bloque -> OCURLY b1 CCURLY . scope_end
    (146) scope_end -> .

    $end            reduce using rule 146 (scope_end -> .)
    ID              reduce using rule 146 (scope_end -> .)
    IF              reduce using rule 146 (scope_end -> .)
    PRINT           reduce using rule 146 (scope_end -> .)
    READ            reduce using rule 146 (scope_end -> .)
    WHILE           reduce using rule 146 (scope_end -> .)
    FOR             reduce using rule 146 (scope_end -> .)
    OCURLY          reduce using rule 146 (scope_end -> .)
    FUNCTION        reduce using rule 146 (scope_end -> .)
    CLASS           reduce using rule 146 (scope_end -> .)
    VAR             reduce using rule 146 (scope_end -> .)
    OPAREN          reduce using rule 146 (scope_end -> .)
    CSTINT          reduce using rule 146 (scope_end -> .)
    CSTFLT          reduce using rule 146 (scope_end -> .)
    CSTCHAR         reduce using rule 146 (scope_end -> .)
    CSTSTRING       reduce using rule 146 (scope_end -> .)
    TRUE            reduce using rule 146 (scope_end -> .)
    FALSE           reduce using rule 146 (scope_end -> .)
    CCURLY          reduce using rule 146 (scope_end -> .)
    ELSE            reduce using rule 146 (scope_end -> .)
    SEMICOLON       reduce using rule 146 (scope_end -> .)

    scope_end                      shift and go to state 126

state 68

    (48) b1 -> estatuto b1 .

    CCURLY          reduce using rule 48 (b1 -> estatuto b1 .)


state 69

    (67) asignacion -> variable AS . exp saw_asig
    (93) exp -> . texp exp1
    (96) texp -> . gexp texp1
    (99) gexp -> . mexp gexp1 check_relational_operator
    (107) mexp -> . termino mexp1
    (111) termino -> . factor term1 check_plusminus_operator
    (115) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (116) factor -> . varcst check_multdiv_operator
    (117) factor -> . variable
    (118) factor -> . llamada
    (119) varcst -> . CSTINT saw_end_value_int
    (120) varcst -> . CSTFLT saw_end_value_flt
    (121) varcst -> . CSTCHAR
    (122) varcst -> . CSTSTRING saw_end_value_str
    (123) varcst -> . boolean
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2
    (89) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (90) llamada -> . ID saw_id OPAREN CPAREN
    (80) boolean -> . TRUE
    (81) boolean -> . FALSE

    OPAREN          shift and go to state 29
    CSTINT          shift and go to state 43
    CSTFLT          shift and go to state 44
    CSTCHAR         shift and go to state 45
    CSTSTRING       shift and go to state 46
    ID              shift and go to state 130
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    variable                       shift and go to state 127
    exp                            shift and go to state 128
    texp                           shift and go to state 37
    gexp                           shift and go to state 38
    mexp                           shift and go to state 39
    termino                        shift and go to state 40
    factor                         shift and go to state 41
    varcst                         shift and go to state 42
    llamada                        shift and go to state 129
    boolean                        shift and go to state 47

state 70

    (73) ternaria -> exp QUESTION . estatuto_redux COLON estatuto_redux SEMICOLON
    (62) estatuto_redux -> . asignacion
    (63) estatuto_redux -> . llamada
    (64) estatuto_redux -> . escritura
    (65) estatuto_redux -> . leer
    (66) estatuto_redux -> . ternaria
    (67) asignacion -> . variable AS exp saw_asig
    (89) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (90) llamada -> . ID saw_id OPAREN CPAREN
    (74) escritura -> . PRINT OPAREN exp saw_print_exp e1 CPAREN
    (77) leer -> . READ OPAREN variable saw_read_exp l1 CPAREN
    (73) ternaria -> . exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2
    (93) exp -> . texp exp1
    (96) texp -> . gexp texp1
    (99) gexp -> . mexp gexp1 check_relational_operator
    (107) mexp -> . termino mexp1
    (111) termino -> . factor term1 check_plusminus_operator
    (115) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (116) factor -> . varcst check_multdiv_operator
    (117) factor -> . variable
    (118) factor -> . llamada
    (119) varcst -> . CSTINT saw_end_value_int
    (120) varcst -> . CSTFLT saw_end_value_flt
    (121) varcst -> . CSTCHAR
    (122) varcst -> . CSTSTRING saw_end_value_str
    (123) varcst -> . boolean
    (80) boolean -> . TRUE
    (81) boolean -> . FALSE

    ID              shift and go to state 28
    PRINT           shift and go to state 31
    READ            shift and go to state 32
    OPAREN          shift and go to state 29
    CSTINT          shift and go to state 43
    CSTFLT          shift and go to state 44
    CSTCHAR         shift and go to state 45
    CSTSTRING       shift and go to state 46
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    exp                            shift and go to state 27
    estatuto_redux                 shift and go to state 131
    asignacion                     shift and go to state 132
    llamada                        shift and go to state 133
    escritura                      shift and go to state 134
    leer                           shift and go to state 135
    ternaria                       shift and go to state 136
    variable                       shift and go to state 26
    texp                           shift and go to state 37
    gexp                           shift and go to state 38
    mexp                           shift and go to state 39
    termino                        shift and go to state 40
    factor                         shift and go to state 41
    varcst                         shift and go to state 42
    boolean                        shift and go to state 47

state 71

    (89) llamada -> ID saw_id . OPAREN exp llamada1 CPAREN
    (90) llamada -> ID saw_id . OPAREN CPAREN
    (82) variable -> ID saw_id . saw_called_var
    (83) variable -> ID saw_id . OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> ID saw_id . variable2
    (131) saw_called_var -> .
    (87) variable2 -> . PERIOD ID saw_called_var_from_class
    (88) variable2 -> . PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1

    OPAREN          shift and go to state 137
    OBRACKET        shift and go to state 139
    AS              reduce using rule 131 (saw_called_var -> .)
    MULT            reduce using rule 131 (saw_called_var -> .)
    DIV             reduce using rule 131 (saw_called_var -> .)
    PLUS            reduce using rule 131 (saw_called_var -> .)
    MINUS           reduce using rule 131 (saw_called_var -> .)
    LT              reduce using rule 131 (saw_called_var -> .)
    GT              reduce using rule 131 (saw_called_var -> .)
    GTE             reduce using rule 131 (saw_called_var -> .)
    LTE             reduce using rule 131 (saw_called_var -> .)
    EQ              reduce using rule 131 (saw_called_var -> .)
    NE              reduce using rule 131 (saw_called_var -> .)
    AND             reduce using rule 131 (saw_called_var -> .)
    OR              reduce using rule 131 (saw_called_var -> .)
    QUESTION        reduce using rule 131 (saw_called_var -> .)
    PERIOD          shift and go to state 141

    saw_called_var                 shift and go to state 138
    variable2                      shift and go to state 140

state 72

    (115) factor -> OPAREN saw_oparen . exp CPAREN saw_cparen check_multdiv_operator
    (93) exp -> . texp exp1
    (96) texp -> . gexp texp1
    (99) gexp -> . mexp gexp1 check_relational_operator
    (107) mexp -> . termino mexp1
    (111) termino -> . factor term1 check_plusminus_operator
    (115) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (116) factor -> . varcst check_multdiv_operator
    (117) factor -> . variable
    (118) factor -> . llamada
    (119) varcst -> . CSTINT saw_end_value_int
    (120) varcst -> . CSTFLT saw_end_value_flt
    (121) varcst -> . CSTCHAR
    (122) varcst -> . CSTSTRING saw_end_value_str
    (123) varcst -> . boolean
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2
    (89) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (90) llamada -> . ID saw_id OPAREN CPAREN
    (80) boolean -> . TRUE
    (81) boolean -> . FALSE

    OPAREN          shift and go to state 29
    CSTINT          shift and go to state 43
    CSTFLT          shift and go to state 44
    CSTCHAR         shift and go to state 45
    CSTSTRING       shift and go to state 46
    ID              shift and go to state 130
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    exp                            shift and go to state 142
    texp                           shift and go to state 37
    gexp                           shift and go to state 38
    mexp                           shift and go to state 39
    termino                        shift and go to state 40
    factor                         shift and go to state 41
    varcst                         shift and go to state 42
    variable                       shift and go to state 127
    llamada                        shift and go to state 129
    boolean                        shift and go to state 47

state 73

    (68) condicion -> IF cond2 . THEN bloque cond1 SEMICOLON

    THEN            shift and go to state 143


state 74

    (72) cond2 -> OPAREN . exp CPAREN
    (93) exp -> . texp exp1
    (96) texp -> . gexp texp1
    (99) gexp -> . mexp gexp1 check_relational_operator
    (107) mexp -> . termino mexp1
    (111) termino -> . factor term1 check_plusminus_operator
    (115) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (116) factor -> . varcst check_multdiv_operator
    (117) factor -> . variable
    (118) factor -> . llamada
    (119) varcst -> . CSTINT saw_end_value_int
    (120) varcst -> . CSTFLT saw_end_value_flt
    (121) varcst -> . CSTCHAR
    (122) varcst -> . CSTSTRING saw_end_value_str
    (123) varcst -> . boolean
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2
    (89) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (90) llamada -> . ID saw_id OPAREN CPAREN
    (80) boolean -> . TRUE
    (81) boolean -> . FALSE

    OPAREN          shift and go to state 29
    CSTINT          shift and go to state 43
    CSTFLT          shift and go to state 44
    CSTCHAR         shift and go to state 45
    CSTSTRING       shift and go to state 46
    ID              shift and go to state 130
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    exp                            shift and go to state 144
    texp                           shift and go to state 37
    gexp                           shift and go to state 38
    mexp                           shift and go to state 39
    termino                        shift and go to state 40
    factor                         shift and go to state 41
    varcst                         shift and go to state 42
    variable                       shift and go to state 127
    llamada                        shift and go to state 129
    boolean                        shift and go to state 47

state 75

    (74) escritura -> PRINT OPAREN . exp saw_print_exp e1 CPAREN
    (93) exp -> . texp exp1
    (96) texp -> . gexp texp1
    (99) gexp -> . mexp gexp1 check_relational_operator
    (107) mexp -> . termino mexp1
    (111) termino -> . factor term1 check_plusminus_operator
    (115) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (116) factor -> . varcst check_multdiv_operator
    (117) factor -> . variable
    (118) factor -> . llamada
    (119) varcst -> . CSTINT saw_end_value_int
    (120) varcst -> . CSTFLT saw_end_value_flt
    (121) varcst -> . CSTCHAR
    (122) varcst -> . CSTSTRING saw_end_value_str
    (123) varcst -> . boolean
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2
    (89) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (90) llamada -> . ID saw_id OPAREN CPAREN
    (80) boolean -> . TRUE
    (81) boolean -> . FALSE

    OPAREN          shift and go to state 29
    CSTINT          shift and go to state 43
    CSTFLT          shift and go to state 44
    CSTCHAR         shift and go to state 45
    CSTSTRING       shift and go to state 46
    ID              shift and go to state 130
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    exp                            shift and go to state 145
    texp                           shift and go to state 37
    gexp                           shift and go to state 38
    mexp                           shift and go to state 39
    termino                        shift and go to state 40
    factor                         shift and go to state 41
    varcst                         shift and go to state 42
    variable                       shift and go to state 127
    llamada                        shift and go to state 129
    boolean                        shift and go to state 47

state 76

    (77) leer -> READ OPAREN . variable saw_read_exp l1 CPAREN
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2

    ID              shift and go to state 147

    variable                       shift and go to state 146

state 77

    (18) ciclo_while -> WHILE cond2 . THEN bloque SEMICOLON

    THEN            shift and go to state 148


state 78

    (19) ciclo_for -> FOR OPAREN . variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2

    ID              shift and go to state 147

    variable                       shift and go to state 149

state 79

    (3) funcion -> FUNCTION func1 . ID saw_id saw_function OPAREN param CPAREN bloque

    ID              shift and go to state 150


state 80

    (4) func1 -> simple .

    ID              reduce using rule 4 (func1 -> simple .)


state 81

    (5) func1 -> VOID . saw_type
    (127) saw_type -> .

    ID              reduce using rule 127 (saw_type -> .)

    saw_type                       shift and go to state 151

state 82

    (12) clase -> CLASS ID . saw_id saw_class COLON clase_bloque SEMICOLON
    (128) saw_id -> .

    COLON           reduce using rule 128 (saw_id -> .)

    saw_id                         shift and go to state 152

state 83

    (93) exp -> texp exp1 .

    QUESTION        reduce using rule 93 (exp -> texp exp1 .)
    ID              reduce using rule 93 (exp -> texp exp1 .)
    IF              reduce using rule 93 (exp -> texp exp1 .)
    PRINT           reduce using rule 93 (exp -> texp exp1 .)
    READ            reduce using rule 93 (exp -> texp exp1 .)
    WHILE           reduce using rule 93 (exp -> texp exp1 .)
    FOR             reduce using rule 93 (exp -> texp exp1 .)
    OCURLY          reduce using rule 93 (exp -> texp exp1 .)
    FUNCTION        reduce using rule 93 (exp -> texp exp1 .)
    CLASS           reduce using rule 93 (exp -> texp exp1 .)
    VAR             reduce using rule 93 (exp -> texp exp1 .)
    OPAREN          reduce using rule 93 (exp -> texp exp1 .)
    CSTINT          reduce using rule 93 (exp -> texp exp1 .)
    CSTFLT          reduce using rule 93 (exp -> texp exp1 .)
    CSTCHAR         reduce using rule 93 (exp -> texp exp1 .)
    CSTSTRING       reduce using rule 93 (exp -> texp exp1 .)
    TRUE            reduce using rule 93 (exp -> texp exp1 .)
    FALSE           reduce using rule 93 (exp -> texp exp1 .)
    CCURLY          reduce using rule 93 (exp -> texp exp1 .)
    COLON           reduce using rule 93 (exp -> texp exp1 .)
    SEMICOLON       reduce using rule 93 (exp -> texp exp1 .)
    CPAREN          reduce using rule 93 (exp -> texp exp1 .)
    COMMA           reduce using rule 93 (exp -> texp exp1 .)
    CBRACKET        reduce using rule 93 (exp -> texp exp1 .)


state 84

    (94) exp1 -> OR . texp exp1
    (96) texp -> . gexp texp1
    (99) gexp -> . mexp gexp1 check_relational_operator
    (107) mexp -> . termino mexp1
    (111) termino -> . factor term1 check_plusminus_operator
    (115) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (116) factor -> . varcst check_multdiv_operator
    (117) factor -> . variable
    (118) factor -> . llamada
    (119) varcst -> . CSTINT saw_end_value_int
    (120) varcst -> . CSTFLT saw_end_value_flt
    (121) varcst -> . CSTCHAR
    (122) varcst -> . CSTSTRING saw_end_value_str
    (123) varcst -> . boolean
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2
    (89) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (90) llamada -> . ID saw_id OPAREN CPAREN
    (80) boolean -> . TRUE
    (81) boolean -> . FALSE

    OPAREN          shift and go to state 29
    CSTINT          shift and go to state 43
    CSTFLT          shift and go to state 44
    CSTCHAR         shift and go to state 45
    CSTSTRING       shift and go to state 46
    ID              shift and go to state 130
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    texp                           shift and go to state 153
    gexp                           shift and go to state 38
    mexp                           shift and go to state 39
    termino                        shift and go to state 40
    factor                         shift and go to state 41
    varcst                         shift and go to state 42
    variable                       shift and go to state 127
    llamada                        shift and go to state 129
    boolean                        shift and go to state 47

state 85

    (95) exp1 -> empty .

    QUESTION        reduce using rule 95 (exp1 -> empty .)
    ID              reduce using rule 95 (exp1 -> empty .)
    IF              reduce using rule 95 (exp1 -> empty .)
    PRINT           reduce using rule 95 (exp1 -> empty .)
    READ            reduce using rule 95 (exp1 -> empty .)
    WHILE           reduce using rule 95 (exp1 -> empty .)
    FOR             reduce using rule 95 (exp1 -> empty .)
    OCURLY          reduce using rule 95 (exp1 -> empty .)
    FUNCTION        reduce using rule 95 (exp1 -> empty .)
    CLASS           reduce using rule 95 (exp1 -> empty .)
    VAR             reduce using rule 95 (exp1 -> empty .)
    OPAREN          reduce using rule 95 (exp1 -> empty .)
    CSTINT          reduce using rule 95 (exp1 -> empty .)
    CSTFLT          reduce using rule 95 (exp1 -> empty .)
    CSTCHAR         reduce using rule 95 (exp1 -> empty .)
    CSTSTRING       reduce using rule 95 (exp1 -> empty .)
    TRUE            reduce using rule 95 (exp1 -> empty .)
    FALSE           reduce using rule 95 (exp1 -> empty .)
    CCURLY          reduce using rule 95 (exp1 -> empty .)
    COLON           reduce using rule 95 (exp1 -> empty .)
    SEMICOLON       reduce using rule 95 (exp1 -> empty .)
    CPAREN          reduce using rule 95 (exp1 -> empty .)
    COMMA           reduce using rule 95 (exp1 -> empty .)
    CBRACKET        reduce using rule 95 (exp1 -> empty .)


state 86

    (96) texp -> gexp texp1 .

    OR              reduce using rule 96 (texp -> gexp texp1 .)
    QUESTION        reduce using rule 96 (texp -> gexp texp1 .)
    ID              reduce using rule 96 (texp -> gexp texp1 .)
    IF              reduce using rule 96 (texp -> gexp texp1 .)
    PRINT           reduce using rule 96 (texp -> gexp texp1 .)
    READ            reduce using rule 96 (texp -> gexp texp1 .)
    WHILE           reduce using rule 96 (texp -> gexp texp1 .)
    FOR             reduce using rule 96 (texp -> gexp texp1 .)
    OCURLY          reduce using rule 96 (texp -> gexp texp1 .)
    FUNCTION        reduce using rule 96 (texp -> gexp texp1 .)
    CLASS           reduce using rule 96 (texp -> gexp texp1 .)
    VAR             reduce using rule 96 (texp -> gexp texp1 .)
    OPAREN          reduce using rule 96 (texp -> gexp texp1 .)
    CSTINT          reduce using rule 96 (texp -> gexp texp1 .)
    CSTFLT          reduce using rule 96 (texp -> gexp texp1 .)
    CSTCHAR         reduce using rule 96 (texp -> gexp texp1 .)
    CSTSTRING       reduce using rule 96 (texp -> gexp texp1 .)
    TRUE            reduce using rule 96 (texp -> gexp texp1 .)
    FALSE           reduce using rule 96 (texp -> gexp texp1 .)
    CCURLY          reduce using rule 96 (texp -> gexp texp1 .)
    COLON           reduce using rule 96 (texp -> gexp texp1 .)
    SEMICOLON       reduce using rule 96 (texp -> gexp texp1 .)
    CPAREN          reduce using rule 96 (texp -> gexp texp1 .)
    COMMA           reduce using rule 96 (texp -> gexp texp1 .)
    CBRACKET        reduce using rule 96 (texp -> gexp texp1 .)


state 87

    (97) texp1 -> AND . gexp texp1
    (99) gexp -> . mexp gexp1 check_relational_operator
    (107) mexp -> . termino mexp1
    (111) termino -> . factor term1 check_plusminus_operator
    (115) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (116) factor -> . varcst check_multdiv_operator
    (117) factor -> . variable
    (118) factor -> . llamada
    (119) varcst -> . CSTINT saw_end_value_int
    (120) varcst -> . CSTFLT saw_end_value_flt
    (121) varcst -> . CSTCHAR
    (122) varcst -> . CSTSTRING saw_end_value_str
    (123) varcst -> . boolean
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2
    (89) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (90) llamada -> . ID saw_id OPAREN CPAREN
    (80) boolean -> . TRUE
    (81) boolean -> . FALSE

    OPAREN          shift and go to state 29
    CSTINT          shift and go to state 43
    CSTFLT          shift and go to state 44
    CSTCHAR         shift and go to state 45
    CSTSTRING       shift and go to state 46
    ID              shift and go to state 130
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    gexp                           shift and go to state 154
    mexp                           shift and go to state 39
    termino                        shift and go to state 40
    factor                         shift and go to state 41
    varcst                         shift and go to state 42
    variable                       shift and go to state 127
    llamada                        shift and go to state 129
    boolean                        shift and go to state 47

state 88

    (98) texp1 -> empty .

    OR              reduce using rule 98 (texp1 -> empty .)
    QUESTION        reduce using rule 98 (texp1 -> empty .)
    ID              reduce using rule 98 (texp1 -> empty .)
    IF              reduce using rule 98 (texp1 -> empty .)
    PRINT           reduce using rule 98 (texp1 -> empty .)
    READ            reduce using rule 98 (texp1 -> empty .)
    WHILE           reduce using rule 98 (texp1 -> empty .)
    FOR             reduce using rule 98 (texp1 -> empty .)
    OCURLY          reduce using rule 98 (texp1 -> empty .)
    FUNCTION        reduce using rule 98 (texp1 -> empty .)
    CLASS           reduce using rule 98 (texp1 -> empty .)
    VAR             reduce using rule 98 (texp1 -> empty .)
    OPAREN          reduce using rule 98 (texp1 -> empty .)
    CSTINT          reduce using rule 98 (texp1 -> empty .)
    CSTFLT          reduce using rule 98 (texp1 -> empty .)
    CSTCHAR         reduce using rule 98 (texp1 -> empty .)
    CSTSTRING       reduce using rule 98 (texp1 -> empty .)
    TRUE            reduce using rule 98 (texp1 -> empty .)
    FALSE           reduce using rule 98 (texp1 -> empty .)
    CCURLY          reduce using rule 98 (texp1 -> empty .)
    COLON           reduce using rule 98 (texp1 -> empty .)
    SEMICOLON       reduce using rule 98 (texp1 -> empty .)
    CPAREN          reduce using rule 98 (texp1 -> empty .)
    COMMA           reduce using rule 98 (texp1 -> empty .)
    CBRACKET        reduce using rule 98 (texp1 -> empty .)


state 89

    (99) gexp -> mexp gexp1 . check_relational_operator
    (142) check_relational_operator -> .

    AND             reduce using rule 142 (check_relational_operator -> .)
    OR              reduce using rule 142 (check_relational_operator -> .)
    QUESTION        reduce using rule 142 (check_relational_operator -> .)
    ID              reduce using rule 142 (check_relational_operator -> .)
    IF              reduce using rule 142 (check_relational_operator -> .)
    PRINT           reduce using rule 142 (check_relational_operator -> .)
    READ            reduce using rule 142 (check_relational_operator -> .)
    WHILE           reduce using rule 142 (check_relational_operator -> .)
    FOR             reduce using rule 142 (check_relational_operator -> .)
    OCURLY          reduce using rule 142 (check_relational_operator -> .)
    FUNCTION        reduce using rule 142 (check_relational_operator -> .)
    CLASS           reduce using rule 142 (check_relational_operator -> .)
    VAR             reduce using rule 142 (check_relational_operator -> .)
    OPAREN          reduce using rule 142 (check_relational_operator -> .)
    CSTINT          reduce using rule 142 (check_relational_operator -> .)
    CSTFLT          reduce using rule 142 (check_relational_operator -> .)
    CSTCHAR         reduce using rule 142 (check_relational_operator -> .)
    CSTSTRING       reduce using rule 142 (check_relational_operator -> .)
    TRUE            reduce using rule 142 (check_relational_operator -> .)
    FALSE           reduce using rule 142 (check_relational_operator -> .)
    CCURLY          reduce using rule 142 (check_relational_operator -> .)
    COLON           reduce using rule 142 (check_relational_operator -> .)
    SEMICOLON       reduce using rule 142 (check_relational_operator -> .)
    CPAREN          reduce using rule 142 (check_relational_operator -> .)
    COMMA           reduce using rule 142 (check_relational_operator -> .)
    CBRACKET        reduce using rule 142 (check_relational_operator -> .)

    check_relational_operator      shift and go to state 155

state 90

    (100) gexp1 -> LT . saw_relational_operator mexp
    (141) saw_relational_operator -> .

    OPAREN          reduce using rule 141 (saw_relational_operator -> .)
    CSTINT          reduce using rule 141 (saw_relational_operator -> .)
    CSTFLT          reduce using rule 141 (saw_relational_operator -> .)
    CSTCHAR         reduce using rule 141 (saw_relational_operator -> .)
    CSTSTRING       reduce using rule 141 (saw_relational_operator -> .)
    ID              reduce using rule 141 (saw_relational_operator -> .)
    TRUE            reduce using rule 141 (saw_relational_operator -> .)
    FALSE           reduce using rule 141 (saw_relational_operator -> .)

    saw_relational_operator        shift and go to state 156

state 91

    (101) gexp1 -> GT . saw_relational_operator mexp
    (141) saw_relational_operator -> .

    OPAREN          reduce using rule 141 (saw_relational_operator -> .)
    CSTINT          reduce using rule 141 (saw_relational_operator -> .)
    CSTFLT          reduce using rule 141 (saw_relational_operator -> .)
    CSTCHAR         reduce using rule 141 (saw_relational_operator -> .)
    CSTSTRING       reduce using rule 141 (saw_relational_operator -> .)
    ID              reduce using rule 141 (saw_relational_operator -> .)
    TRUE            reduce using rule 141 (saw_relational_operator -> .)
    FALSE           reduce using rule 141 (saw_relational_operator -> .)

    saw_relational_operator        shift and go to state 157

state 92

    (102) gexp1 -> GTE . saw_relational_operator mexp
    (141) saw_relational_operator -> .

    OPAREN          reduce using rule 141 (saw_relational_operator -> .)
    CSTINT          reduce using rule 141 (saw_relational_operator -> .)
    CSTFLT          reduce using rule 141 (saw_relational_operator -> .)
    CSTCHAR         reduce using rule 141 (saw_relational_operator -> .)
    CSTSTRING       reduce using rule 141 (saw_relational_operator -> .)
    ID              reduce using rule 141 (saw_relational_operator -> .)
    TRUE            reduce using rule 141 (saw_relational_operator -> .)
    FALSE           reduce using rule 141 (saw_relational_operator -> .)

    saw_relational_operator        shift and go to state 158

state 93

    (103) gexp1 -> LTE . saw_relational_operator mexp
    (141) saw_relational_operator -> .

    OPAREN          reduce using rule 141 (saw_relational_operator -> .)
    CSTINT          reduce using rule 141 (saw_relational_operator -> .)
    CSTFLT          reduce using rule 141 (saw_relational_operator -> .)
    CSTCHAR         reduce using rule 141 (saw_relational_operator -> .)
    CSTSTRING       reduce using rule 141 (saw_relational_operator -> .)
    ID              reduce using rule 141 (saw_relational_operator -> .)
    TRUE            reduce using rule 141 (saw_relational_operator -> .)
    FALSE           reduce using rule 141 (saw_relational_operator -> .)

    saw_relational_operator        shift and go to state 159

state 94

    (104) gexp1 -> EQ . saw_relational_operator mexp
    (141) saw_relational_operator -> .

    OPAREN          reduce using rule 141 (saw_relational_operator -> .)
    CSTINT          reduce using rule 141 (saw_relational_operator -> .)
    CSTFLT          reduce using rule 141 (saw_relational_operator -> .)
    CSTCHAR         reduce using rule 141 (saw_relational_operator -> .)
    CSTSTRING       reduce using rule 141 (saw_relational_operator -> .)
    ID              reduce using rule 141 (saw_relational_operator -> .)
    TRUE            reduce using rule 141 (saw_relational_operator -> .)
    FALSE           reduce using rule 141 (saw_relational_operator -> .)

    saw_relational_operator        shift and go to state 160

state 95

    (105) gexp1 -> NE . saw_relational_operator mexp
    (141) saw_relational_operator -> .

    OPAREN          reduce using rule 141 (saw_relational_operator -> .)
    CSTINT          reduce using rule 141 (saw_relational_operator -> .)
    CSTFLT          reduce using rule 141 (saw_relational_operator -> .)
    CSTCHAR         reduce using rule 141 (saw_relational_operator -> .)
    CSTSTRING       reduce using rule 141 (saw_relational_operator -> .)
    ID              reduce using rule 141 (saw_relational_operator -> .)
    TRUE            reduce using rule 141 (saw_relational_operator -> .)
    FALSE           reduce using rule 141 (saw_relational_operator -> .)

    saw_relational_operator        shift and go to state 161

state 96

    (106) gexp1 -> empty .

    AND             reduce using rule 106 (gexp1 -> empty .)
    OR              reduce using rule 106 (gexp1 -> empty .)
    QUESTION        reduce using rule 106 (gexp1 -> empty .)
    ID              reduce using rule 106 (gexp1 -> empty .)
    IF              reduce using rule 106 (gexp1 -> empty .)
    PRINT           reduce using rule 106 (gexp1 -> empty .)
    READ            reduce using rule 106 (gexp1 -> empty .)
    WHILE           reduce using rule 106 (gexp1 -> empty .)
    FOR             reduce using rule 106 (gexp1 -> empty .)
    OCURLY          reduce using rule 106 (gexp1 -> empty .)
    FUNCTION        reduce using rule 106 (gexp1 -> empty .)
    CLASS           reduce using rule 106 (gexp1 -> empty .)
    VAR             reduce using rule 106 (gexp1 -> empty .)
    OPAREN          reduce using rule 106 (gexp1 -> empty .)
    CSTINT          reduce using rule 106 (gexp1 -> empty .)
    CSTFLT          reduce using rule 106 (gexp1 -> empty .)
    CSTCHAR         reduce using rule 106 (gexp1 -> empty .)
    CSTSTRING       reduce using rule 106 (gexp1 -> empty .)
    TRUE            reduce using rule 106 (gexp1 -> empty .)
    FALSE           reduce using rule 106 (gexp1 -> empty .)
    CCURLY          reduce using rule 106 (gexp1 -> empty .)
    COLON           reduce using rule 106 (gexp1 -> empty .)
    SEMICOLON       reduce using rule 106 (gexp1 -> empty .)
    CPAREN          reduce using rule 106 (gexp1 -> empty .)
    COMMA           reduce using rule 106 (gexp1 -> empty .)
    CBRACKET        reduce using rule 106 (gexp1 -> empty .)


state 97

    (107) mexp -> termino mexp1 .

    LT              reduce using rule 107 (mexp -> termino mexp1 .)
    GT              reduce using rule 107 (mexp -> termino mexp1 .)
    GTE             reduce using rule 107 (mexp -> termino mexp1 .)
    LTE             reduce using rule 107 (mexp -> termino mexp1 .)
    EQ              reduce using rule 107 (mexp -> termino mexp1 .)
    NE              reduce using rule 107 (mexp -> termino mexp1 .)
    AND             reduce using rule 107 (mexp -> termino mexp1 .)
    OR              reduce using rule 107 (mexp -> termino mexp1 .)
    QUESTION        reduce using rule 107 (mexp -> termino mexp1 .)
    ID              reduce using rule 107 (mexp -> termino mexp1 .)
    IF              reduce using rule 107 (mexp -> termino mexp1 .)
    PRINT           reduce using rule 107 (mexp -> termino mexp1 .)
    READ            reduce using rule 107 (mexp -> termino mexp1 .)
    WHILE           reduce using rule 107 (mexp -> termino mexp1 .)
    FOR             reduce using rule 107 (mexp -> termino mexp1 .)
    OCURLY          reduce using rule 107 (mexp -> termino mexp1 .)
    FUNCTION        reduce using rule 107 (mexp -> termino mexp1 .)
    CLASS           reduce using rule 107 (mexp -> termino mexp1 .)
    VAR             reduce using rule 107 (mexp -> termino mexp1 .)
    OPAREN          reduce using rule 107 (mexp -> termino mexp1 .)
    CSTINT          reduce using rule 107 (mexp -> termino mexp1 .)
    CSTFLT          reduce using rule 107 (mexp -> termino mexp1 .)
    CSTCHAR         reduce using rule 107 (mexp -> termino mexp1 .)
    CSTSTRING       reduce using rule 107 (mexp -> termino mexp1 .)
    TRUE            reduce using rule 107 (mexp -> termino mexp1 .)
    FALSE           reduce using rule 107 (mexp -> termino mexp1 .)
    CCURLY          reduce using rule 107 (mexp -> termino mexp1 .)
    COLON           reduce using rule 107 (mexp -> termino mexp1 .)
    SEMICOLON       reduce using rule 107 (mexp -> termino mexp1 .)
    CPAREN          reduce using rule 107 (mexp -> termino mexp1 .)
    COMMA           reduce using rule 107 (mexp -> termino mexp1 .)
    CBRACKET        reduce using rule 107 (mexp -> termino mexp1 .)


state 98

    (108) mexp1 -> PLUS . saw_plusminus_operator termino mexp1
    (137) saw_plusminus_operator -> .

    OPAREN          reduce using rule 137 (saw_plusminus_operator -> .)
    CSTINT          reduce using rule 137 (saw_plusminus_operator -> .)
    CSTFLT          reduce using rule 137 (saw_plusminus_operator -> .)
    CSTCHAR         reduce using rule 137 (saw_plusminus_operator -> .)
    CSTSTRING       reduce using rule 137 (saw_plusminus_operator -> .)
    ID              reduce using rule 137 (saw_plusminus_operator -> .)
    TRUE            reduce using rule 137 (saw_plusminus_operator -> .)
    FALSE           reduce using rule 137 (saw_plusminus_operator -> .)

    saw_plusminus_operator         shift and go to state 162

state 99

    (109) mexp1 -> MINUS . saw_plusminus_operator termino mexp1
    (137) saw_plusminus_operator -> .

    OPAREN          reduce using rule 137 (saw_plusminus_operator -> .)
    CSTINT          reduce using rule 137 (saw_plusminus_operator -> .)
    CSTFLT          reduce using rule 137 (saw_plusminus_operator -> .)
    CSTCHAR         reduce using rule 137 (saw_plusminus_operator -> .)
    CSTSTRING       reduce using rule 137 (saw_plusminus_operator -> .)
    ID              reduce using rule 137 (saw_plusminus_operator -> .)
    TRUE            reduce using rule 137 (saw_plusminus_operator -> .)
    FALSE           reduce using rule 137 (saw_plusminus_operator -> .)

    saw_plusminus_operator         shift and go to state 163

state 100

    (110) mexp1 -> empty .

    LT              reduce using rule 110 (mexp1 -> empty .)
    GT              reduce using rule 110 (mexp1 -> empty .)
    GTE             reduce using rule 110 (mexp1 -> empty .)
    LTE             reduce using rule 110 (mexp1 -> empty .)
    EQ              reduce using rule 110 (mexp1 -> empty .)
    NE              reduce using rule 110 (mexp1 -> empty .)
    AND             reduce using rule 110 (mexp1 -> empty .)
    OR              reduce using rule 110 (mexp1 -> empty .)
    QUESTION        reduce using rule 110 (mexp1 -> empty .)
    ID              reduce using rule 110 (mexp1 -> empty .)
    IF              reduce using rule 110 (mexp1 -> empty .)
    PRINT           reduce using rule 110 (mexp1 -> empty .)
    READ            reduce using rule 110 (mexp1 -> empty .)
    WHILE           reduce using rule 110 (mexp1 -> empty .)
    FOR             reduce using rule 110 (mexp1 -> empty .)
    OCURLY          reduce using rule 110 (mexp1 -> empty .)
    FUNCTION        reduce using rule 110 (mexp1 -> empty .)
    CLASS           reduce using rule 110 (mexp1 -> empty .)
    VAR             reduce using rule 110 (mexp1 -> empty .)
    OPAREN          reduce using rule 110 (mexp1 -> empty .)
    CSTINT          reduce using rule 110 (mexp1 -> empty .)
    CSTFLT          reduce using rule 110 (mexp1 -> empty .)
    CSTCHAR         reduce using rule 110 (mexp1 -> empty .)
    CSTSTRING       reduce using rule 110 (mexp1 -> empty .)
    TRUE            reduce using rule 110 (mexp1 -> empty .)
    FALSE           reduce using rule 110 (mexp1 -> empty .)
    CCURLY          reduce using rule 110 (mexp1 -> empty .)
    COLON           reduce using rule 110 (mexp1 -> empty .)
    SEMICOLON       reduce using rule 110 (mexp1 -> empty .)
    CPAREN          reduce using rule 110 (mexp1 -> empty .)
    COMMA           reduce using rule 110 (mexp1 -> empty .)
    CBRACKET        reduce using rule 110 (mexp1 -> empty .)


state 101

    (111) termino -> factor term1 . check_plusminus_operator
    (138) check_plusminus_operator -> .

    PLUS            reduce using rule 138 (check_plusminus_operator -> .)
    MINUS           reduce using rule 138 (check_plusminus_operator -> .)
    LT              reduce using rule 138 (check_plusminus_operator -> .)
    GT              reduce using rule 138 (check_plusminus_operator -> .)
    GTE             reduce using rule 138 (check_plusminus_operator -> .)
    LTE             reduce using rule 138 (check_plusminus_operator -> .)
    EQ              reduce using rule 138 (check_plusminus_operator -> .)
    NE              reduce using rule 138 (check_plusminus_operator -> .)
    AND             reduce using rule 138 (check_plusminus_operator -> .)
    OR              reduce using rule 138 (check_plusminus_operator -> .)
    QUESTION        reduce using rule 138 (check_plusminus_operator -> .)
    ID              reduce using rule 138 (check_plusminus_operator -> .)
    IF              reduce using rule 138 (check_plusminus_operator -> .)
    PRINT           reduce using rule 138 (check_plusminus_operator -> .)
    READ            reduce using rule 138 (check_plusminus_operator -> .)
    WHILE           reduce using rule 138 (check_plusminus_operator -> .)
    FOR             reduce using rule 138 (check_plusminus_operator -> .)
    OCURLY          reduce using rule 138 (check_plusminus_operator -> .)
    FUNCTION        reduce using rule 138 (check_plusminus_operator -> .)
    CLASS           reduce using rule 138 (check_plusminus_operator -> .)
    VAR             reduce using rule 138 (check_plusminus_operator -> .)
    OPAREN          reduce using rule 138 (check_plusminus_operator -> .)
    CSTINT          reduce using rule 138 (check_plusminus_operator -> .)
    CSTFLT          reduce using rule 138 (check_plusminus_operator -> .)
    CSTCHAR         reduce using rule 138 (check_plusminus_operator -> .)
    CSTSTRING       reduce using rule 138 (check_plusminus_operator -> .)
    TRUE            reduce using rule 138 (check_plusminus_operator -> .)
    FALSE           reduce using rule 138 (check_plusminus_operator -> .)
    CCURLY          reduce using rule 138 (check_plusminus_operator -> .)
    COLON           reduce using rule 138 (check_plusminus_operator -> .)
    SEMICOLON       reduce using rule 138 (check_plusminus_operator -> .)
    CPAREN          reduce using rule 138 (check_plusminus_operator -> .)
    COMMA           reduce using rule 138 (check_plusminus_operator -> .)
    CBRACKET        reduce using rule 138 (check_plusminus_operator -> .)

    check_plusminus_operator       shift and go to state 164

state 102

    (112) term1 -> MULT . saw_multdiv_operator factor term1
    (139) saw_multdiv_operator -> .

    OPAREN          reduce using rule 139 (saw_multdiv_operator -> .)
    CSTINT          reduce using rule 139 (saw_multdiv_operator -> .)
    CSTFLT          reduce using rule 139 (saw_multdiv_operator -> .)
    CSTCHAR         reduce using rule 139 (saw_multdiv_operator -> .)
    CSTSTRING       reduce using rule 139 (saw_multdiv_operator -> .)
    ID              reduce using rule 139 (saw_multdiv_operator -> .)
    TRUE            reduce using rule 139 (saw_multdiv_operator -> .)
    FALSE           reduce using rule 139 (saw_multdiv_operator -> .)

    saw_multdiv_operator           shift and go to state 165

state 103

    (113) term1 -> DIV . saw_multdiv_operator factor term1
    (139) saw_multdiv_operator -> .

    OPAREN          reduce using rule 139 (saw_multdiv_operator -> .)
    CSTINT          reduce using rule 139 (saw_multdiv_operator -> .)
    CSTFLT          reduce using rule 139 (saw_multdiv_operator -> .)
    CSTCHAR         reduce using rule 139 (saw_multdiv_operator -> .)
    CSTSTRING       reduce using rule 139 (saw_multdiv_operator -> .)
    ID              reduce using rule 139 (saw_multdiv_operator -> .)
    TRUE            reduce using rule 139 (saw_multdiv_operator -> .)
    FALSE           reduce using rule 139 (saw_multdiv_operator -> .)

    saw_multdiv_operator           shift and go to state 166

state 104

    (114) term1 -> empty .

    PLUS            reduce using rule 114 (term1 -> empty .)
    MINUS           reduce using rule 114 (term1 -> empty .)
    LT              reduce using rule 114 (term1 -> empty .)
    GT              reduce using rule 114 (term1 -> empty .)
    GTE             reduce using rule 114 (term1 -> empty .)
    LTE             reduce using rule 114 (term1 -> empty .)
    EQ              reduce using rule 114 (term1 -> empty .)
    NE              reduce using rule 114 (term1 -> empty .)
    AND             reduce using rule 114 (term1 -> empty .)
    OR              reduce using rule 114 (term1 -> empty .)
    QUESTION        reduce using rule 114 (term1 -> empty .)
    ID              reduce using rule 114 (term1 -> empty .)
    IF              reduce using rule 114 (term1 -> empty .)
    PRINT           reduce using rule 114 (term1 -> empty .)
    READ            reduce using rule 114 (term1 -> empty .)
    WHILE           reduce using rule 114 (term1 -> empty .)
    FOR             reduce using rule 114 (term1 -> empty .)
    OCURLY          reduce using rule 114 (term1 -> empty .)
    FUNCTION        reduce using rule 114 (term1 -> empty .)
    CLASS           reduce using rule 114 (term1 -> empty .)
    VAR             reduce using rule 114 (term1 -> empty .)
    OPAREN          reduce using rule 114 (term1 -> empty .)
    CSTINT          reduce using rule 114 (term1 -> empty .)
    CSTFLT          reduce using rule 114 (term1 -> empty .)
    CSTCHAR         reduce using rule 114 (term1 -> empty .)
    CSTSTRING       reduce using rule 114 (term1 -> empty .)
    TRUE            reduce using rule 114 (term1 -> empty .)
    FALSE           reduce using rule 114 (term1 -> empty .)
    CCURLY          reduce using rule 114 (term1 -> empty .)
    COLON           reduce using rule 114 (term1 -> empty .)
    SEMICOLON       reduce using rule 114 (term1 -> empty .)
    CPAREN          reduce using rule 114 (term1 -> empty .)
    COMMA           reduce using rule 114 (term1 -> empty .)
    CBRACKET        reduce using rule 114 (term1 -> empty .)


state 105

    (116) factor -> varcst check_multdiv_operator .

    MULT            reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    DIV             reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    PLUS            reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    MINUS           reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    LT              reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    GT              reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    GTE             reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    LTE             reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    EQ              reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    NE              reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    AND             reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    OR              reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    QUESTION        reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    ID              reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    IF              reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    PRINT           reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    READ            reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    WHILE           reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    FOR             reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    OCURLY          reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    FUNCTION        reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    CLASS           reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    VAR             reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    OPAREN          reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    CSTINT          reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    CSTFLT          reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    CSTCHAR         reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    CSTSTRING       reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    TRUE            reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    FALSE           reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    CCURLY          reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    COLON           reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    SEMICOLON       reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    CPAREN          reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    COMMA           reduce using rule 116 (factor -> varcst check_multdiv_operator .)
    CBRACKET        reduce using rule 116 (factor -> varcst check_multdiv_operator .)


state 106

    (119) varcst -> CSTINT saw_end_value_int .

    MULT            reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    DIV             reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    PLUS            reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    MINUS           reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    LT              reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    GT              reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    GTE             reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    LTE             reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    EQ              reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    NE              reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    AND             reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    OR              reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    QUESTION        reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    ID              reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    IF              reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    PRINT           reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    READ            reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    WHILE           reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    FOR             reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    OCURLY          reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    FUNCTION        reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    CLASS           reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    VAR             reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    OPAREN          reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    CSTINT          reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    CSTFLT          reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    CSTCHAR         reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    CSTSTRING       reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    TRUE            reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    FALSE           reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    CCURLY          reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    COLON           reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    SEMICOLON       reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    CPAREN          reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    COMMA           reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)
    CBRACKET        reduce using rule 119 (varcst -> CSTINT saw_end_value_int .)


state 107

    (120) varcst -> CSTFLT saw_end_value_flt .

    MULT            reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    DIV             reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    PLUS            reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    MINUS           reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    LT              reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    GT              reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    GTE             reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    LTE             reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    EQ              reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    NE              reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    AND             reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    OR              reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    QUESTION        reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    ID              reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    IF              reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    PRINT           reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    READ            reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    WHILE           reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    FOR             reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    OCURLY          reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    FUNCTION        reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    CLASS           reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    VAR             reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    OPAREN          reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    CSTINT          reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    CSTFLT          reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    CSTCHAR         reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    CSTSTRING       reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    TRUE            reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    FALSE           reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    CCURLY          reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    COLON           reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    SEMICOLON       reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    CPAREN          reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    COMMA           reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)
    CBRACKET        reduce using rule 120 (varcst -> CSTFLT saw_end_value_flt .)


state 108

    (122) varcst -> CSTSTRING saw_end_value_str .

    MULT            reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    DIV             reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    PLUS            reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    MINUS           reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    LT              reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    GT              reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    GTE             reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    LTE             reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    EQ              reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    NE              reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    AND             reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    OR              reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    QUESTION        reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    ID              reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    IF              reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    PRINT           reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    READ            reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    WHILE           reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    FOR             reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    OCURLY          reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    FUNCTION        reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    CLASS           reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    VAR             reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    OPAREN          reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    CSTINT          reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    CSTFLT          reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    CSTCHAR         reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    CSTSTRING       reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    TRUE            reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    FALSE           reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    CCURLY          reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    COLON           reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    SEMICOLON       reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    CPAREN          reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    COMMA           reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)
    CBRACKET        reduce using rule 122 (varcst -> CSTSTRING saw_end_value_str .)


state 109

    (22) dec -> VAR tipo SEMICOLON . dec1
    (23) dec1 -> . dec
    (24) dec1 -> . empty
    (22) dec -> . VAR tipo SEMICOLON dec1
    (124) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 9
    OCURLY          reduce using rule 124 (empty -> .)
    ID              reduce using rule 124 (empty -> .)
    IF              reduce using rule 124 (empty -> .)
    PRINT           reduce using rule 124 (empty -> .)
    READ            reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    FOR             reduce using rule 124 (empty -> .)
    FUNCTION        reduce using rule 124 (empty -> .)
    CLASS           reduce using rule 124 (empty -> .)
    OPAREN          reduce using rule 124 (empty -> .)
    CSTINT          reduce using rule 124 (empty -> .)
    CSTFLT          reduce using rule 124 (empty -> .)
    CSTCHAR         reduce using rule 124 (empty -> .)
    CSTSTRING       reduce using rule 124 (empty -> .)
    TRUE            reduce using rule 124 (empty -> .)
    FALSE           reduce using rule 124 (empty -> .)
    CCURLY          reduce using rule 124 (empty -> .)
    METHODS         reduce using rule 124 (empty -> .)

  ! VAR             [ reduce using rule 124 (empty -> .) ]

    dec1                           shift and go to state 167
    dec                            shift and go to state 168
    empty                          shift and go to state 169

state 110

    (25) tipo -> compuesto ID . saw_id saw_variable tipo1
    (128) saw_id -> .

    COMMA           reduce using rule 128 (saw_id -> .)
    SEMICOLON       reduce using rule 128 (saw_id -> .)

    saw_id                         shift and go to state 170

state 111

    (44) compuesto -> ID saw_type .

    ID              reduce using rule 44 (compuesto -> ID saw_type .)


state 112

    (26) tipo -> simple ID . saw_id saw_variable tipo1
    (128) saw_id -> .

    COMMA           reduce using rule 128 (saw_id -> .)
    SEMICOLON       reduce using rule 128 (saw_id -> .)

    saw_id                         shift and go to state 171

state 113

    (27) tipo -> multiple ID . saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable tipo2
    (128) saw_id -> .

    OBRACKET        reduce using rule 128 (saw_id -> .)

    saw_id                         shift and go to state 172

state 114

    (45) compuesto -> DATAFRAME saw_type .

    ID              reduce using rule 45 (compuesto -> DATAFRAME saw_type .)


state 115

    (46) compuesto -> FILE saw_type .

    ID              reduce using rule 46 (compuesto -> FILE saw_type .)


state 116

    (34) simple -> INT saw_type .

    ID              reduce using rule 34 (simple -> INT saw_type .)


state 117

    (35) simple -> FLOAT saw_type .

    ID              reduce using rule 35 (simple -> FLOAT saw_type .)


state 118

    (36) simple -> BOOL saw_type .

    ID              reduce using rule 36 (simple -> BOOL saw_type .)


state 119

    (37) simple -> STRING saw_type .

    ID              reduce using rule 37 (simple -> STRING saw_type .)


state 120

    (38) simple -> CHAR saw_type .

    ID              reduce using rule 38 (simple -> CHAR saw_type .)


state 121

    (39) multiple -> INTS saw_type .

    ID              reduce using rule 39 (multiple -> INTS saw_type .)


state 122

    (40) multiple -> FLOATS saw_type .

    ID              reduce using rule 40 (multiple -> FLOATS saw_type .)


state 123

    (41) multiple -> BOOLS saw_type .

    ID              reduce using rule 41 (multiple -> BOOLS saw_type .)


state 124

    (42) multiple -> STRINGS saw_type .

    ID              reduce using rule 42 (multiple -> STRINGS saw_type .)


state 125

    (43) multiple -> CHARS saw_type .

    ID              reduce using rule 43 (multiple -> CHARS saw_type .)


state 126

    (47) bloque -> OCURLY b1 CCURLY scope_end .

    $end            reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    ID              reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    IF              reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    PRINT           reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    READ            reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    WHILE           reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    FOR             reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    OCURLY          reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    FUNCTION        reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    CLASS           reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    VAR             reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    OPAREN          reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    CSTINT          reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    CSTFLT          reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    CSTCHAR         reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    CSTSTRING       reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    TRUE            reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    FALSE           reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    CCURLY          reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    ELSE            reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    SEMICOLON       reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)


state 127

    (117) factor -> variable .

    MULT            reduce using rule 117 (factor -> variable .)
    DIV             reduce using rule 117 (factor -> variable .)
    PLUS            reduce using rule 117 (factor -> variable .)
    MINUS           reduce using rule 117 (factor -> variable .)
    LT              reduce using rule 117 (factor -> variable .)
    GT              reduce using rule 117 (factor -> variable .)
    GTE             reduce using rule 117 (factor -> variable .)
    LTE             reduce using rule 117 (factor -> variable .)
    EQ              reduce using rule 117 (factor -> variable .)
    NE              reduce using rule 117 (factor -> variable .)
    AND             reduce using rule 117 (factor -> variable .)
    OR              reduce using rule 117 (factor -> variable .)
    ID              reduce using rule 117 (factor -> variable .)
    IF              reduce using rule 117 (factor -> variable .)
    PRINT           reduce using rule 117 (factor -> variable .)
    READ            reduce using rule 117 (factor -> variable .)
    WHILE           reduce using rule 117 (factor -> variable .)
    FOR             reduce using rule 117 (factor -> variable .)
    OCURLY          reduce using rule 117 (factor -> variable .)
    FUNCTION        reduce using rule 117 (factor -> variable .)
    CLASS           reduce using rule 117 (factor -> variable .)
    VAR             reduce using rule 117 (factor -> variable .)
    OPAREN          reduce using rule 117 (factor -> variable .)
    CSTINT          reduce using rule 117 (factor -> variable .)
    CSTFLT          reduce using rule 117 (factor -> variable .)
    CSTCHAR         reduce using rule 117 (factor -> variable .)
    CSTSTRING       reduce using rule 117 (factor -> variable .)
    TRUE            reduce using rule 117 (factor -> variable .)
    FALSE           reduce using rule 117 (factor -> variable .)
    CCURLY          reduce using rule 117 (factor -> variable .)
    COLON           reduce using rule 117 (factor -> variable .)
    SEMICOLON       reduce using rule 117 (factor -> variable .)
    CPAREN          reduce using rule 117 (factor -> variable .)
    COMMA           reduce using rule 117 (factor -> variable .)
    QUESTION        reduce using rule 117 (factor -> variable .)
    CBRACKET        reduce using rule 117 (factor -> variable .)


state 128

    (67) asignacion -> variable AS exp . saw_asig
    (133) saw_asig -> .

    ID              reduce using rule 133 (saw_asig -> .)
    IF              reduce using rule 133 (saw_asig -> .)
    PRINT           reduce using rule 133 (saw_asig -> .)
    READ            reduce using rule 133 (saw_asig -> .)
    WHILE           reduce using rule 133 (saw_asig -> .)
    FOR             reduce using rule 133 (saw_asig -> .)
    OCURLY          reduce using rule 133 (saw_asig -> .)
    FUNCTION        reduce using rule 133 (saw_asig -> .)
    CLASS           reduce using rule 133 (saw_asig -> .)
    VAR             reduce using rule 133 (saw_asig -> .)
    OPAREN          reduce using rule 133 (saw_asig -> .)
    CSTINT          reduce using rule 133 (saw_asig -> .)
    CSTFLT          reduce using rule 133 (saw_asig -> .)
    CSTCHAR         reduce using rule 133 (saw_asig -> .)
    CSTSTRING       reduce using rule 133 (saw_asig -> .)
    TRUE            reduce using rule 133 (saw_asig -> .)
    FALSE           reduce using rule 133 (saw_asig -> .)
    CCURLY          reduce using rule 133 (saw_asig -> .)
    COLON           reduce using rule 133 (saw_asig -> .)
    SEMICOLON       reduce using rule 133 (saw_asig -> .)

    saw_asig                       shift and go to state 173

state 129

    (118) factor -> llamada .

    MULT            reduce using rule 118 (factor -> llamada .)
    DIV             reduce using rule 118 (factor -> llamada .)
    PLUS            reduce using rule 118 (factor -> llamada .)
    MINUS           reduce using rule 118 (factor -> llamada .)
    LT              reduce using rule 118 (factor -> llamada .)
    GT              reduce using rule 118 (factor -> llamada .)
    GTE             reduce using rule 118 (factor -> llamada .)
    LTE             reduce using rule 118 (factor -> llamada .)
    EQ              reduce using rule 118 (factor -> llamada .)
    NE              reduce using rule 118 (factor -> llamada .)
    AND             reduce using rule 118 (factor -> llamada .)
    OR              reduce using rule 118 (factor -> llamada .)
    ID              reduce using rule 118 (factor -> llamada .)
    IF              reduce using rule 118 (factor -> llamada .)
    PRINT           reduce using rule 118 (factor -> llamada .)
    READ            reduce using rule 118 (factor -> llamada .)
    WHILE           reduce using rule 118 (factor -> llamada .)
    FOR             reduce using rule 118 (factor -> llamada .)
    OCURLY          reduce using rule 118 (factor -> llamada .)
    FUNCTION        reduce using rule 118 (factor -> llamada .)
    CLASS           reduce using rule 118 (factor -> llamada .)
    VAR             reduce using rule 118 (factor -> llamada .)
    OPAREN          reduce using rule 118 (factor -> llamada .)
    CSTINT          reduce using rule 118 (factor -> llamada .)
    CSTFLT          reduce using rule 118 (factor -> llamada .)
    CSTCHAR         reduce using rule 118 (factor -> llamada .)
    CSTSTRING       reduce using rule 118 (factor -> llamada .)
    TRUE            reduce using rule 118 (factor -> llamada .)
    FALSE           reduce using rule 118 (factor -> llamada .)
    CCURLY          reduce using rule 118 (factor -> llamada .)
    COLON           reduce using rule 118 (factor -> llamada .)
    SEMICOLON       reduce using rule 118 (factor -> llamada .)
    CPAREN          reduce using rule 118 (factor -> llamada .)
    COMMA           reduce using rule 118 (factor -> llamada .)
    QUESTION        reduce using rule 118 (factor -> llamada .)
    CBRACKET        reduce using rule 118 (factor -> llamada .)


state 130

    (82) variable -> ID . saw_id saw_called_var
    (83) variable -> ID . saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> ID . saw_id variable2
    (89) llamada -> ID . saw_id OPAREN exp llamada1 CPAREN
    (90) llamada -> ID . saw_id OPAREN CPAREN
    (128) saw_id -> .

    OBRACKET        reduce using rule 128 (saw_id -> .)
    OPAREN          reduce using rule 128 (saw_id -> .)
    PERIOD          reduce using rule 128 (saw_id -> .)
    MULT            reduce using rule 128 (saw_id -> .)
    DIV             reduce using rule 128 (saw_id -> .)
    PLUS            reduce using rule 128 (saw_id -> .)
    MINUS           reduce using rule 128 (saw_id -> .)
    LT              reduce using rule 128 (saw_id -> .)
    GT              reduce using rule 128 (saw_id -> .)
    GTE             reduce using rule 128 (saw_id -> .)
    LTE             reduce using rule 128 (saw_id -> .)
    EQ              reduce using rule 128 (saw_id -> .)
    NE              reduce using rule 128 (saw_id -> .)
    AND             reduce using rule 128 (saw_id -> .)
    OR              reduce using rule 128 (saw_id -> .)
    ID              reduce using rule 128 (saw_id -> .)
    IF              reduce using rule 128 (saw_id -> .)
    PRINT           reduce using rule 128 (saw_id -> .)
    READ            reduce using rule 128 (saw_id -> .)
    WHILE           reduce using rule 128 (saw_id -> .)
    FOR             reduce using rule 128 (saw_id -> .)
    OCURLY          reduce using rule 128 (saw_id -> .)
    FUNCTION        reduce using rule 128 (saw_id -> .)
    CLASS           reduce using rule 128 (saw_id -> .)
    VAR             reduce using rule 128 (saw_id -> .)
    CSTINT          reduce using rule 128 (saw_id -> .)
    CSTFLT          reduce using rule 128 (saw_id -> .)
    CSTCHAR         reduce using rule 128 (saw_id -> .)
    CSTSTRING       reduce using rule 128 (saw_id -> .)
    TRUE            reduce using rule 128 (saw_id -> .)
    FALSE           reduce using rule 128 (saw_id -> .)
    CCURLY          reduce using rule 128 (saw_id -> .)
    COLON           reduce using rule 128 (saw_id -> .)
    SEMICOLON       reduce using rule 128 (saw_id -> .)
    CPAREN          reduce using rule 128 (saw_id -> .)
    COMMA           reduce using rule 128 (saw_id -> .)
    QUESTION        reduce using rule 128 (saw_id -> .)
    CBRACKET        reduce using rule 128 (saw_id -> .)

    saw_id                         shift and go to state 174

state 131

    (73) ternaria -> exp QUESTION estatuto_redux . COLON estatuto_redux SEMICOLON

    COLON           shift and go to state 175


state 132

    (62) estatuto_redux -> asignacion .

    COLON           reduce using rule 62 (estatuto_redux -> asignacion .)
    SEMICOLON       reduce using rule 62 (estatuto_redux -> asignacion .)


state 133

    (63) estatuto_redux -> llamada .
    (118) factor -> llamada .

    COLON           reduce using rule 63 (estatuto_redux -> llamada .)
    SEMICOLON       reduce using rule 63 (estatuto_redux -> llamada .)
    MULT            reduce using rule 118 (factor -> llamada .)
    DIV             reduce using rule 118 (factor -> llamada .)
    PLUS            reduce using rule 118 (factor -> llamada .)
    MINUS           reduce using rule 118 (factor -> llamada .)
    LT              reduce using rule 118 (factor -> llamada .)
    GT              reduce using rule 118 (factor -> llamada .)
    GTE             reduce using rule 118 (factor -> llamada .)
    LTE             reduce using rule 118 (factor -> llamada .)
    EQ              reduce using rule 118 (factor -> llamada .)
    NE              reduce using rule 118 (factor -> llamada .)
    AND             reduce using rule 118 (factor -> llamada .)
    OR              reduce using rule 118 (factor -> llamada .)
    QUESTION        reduce using rule 118 (factor -> llamada .)


state 134

    (64) estatuto_redux -> escritura .

    COLON           reduce using rule 64 (estatuto_redux -> escritura .)
    SEMICOLON       reduce using rule 64 (estatuto_redux -> escritura .)


state 135

    (65) estatuto_redux -> leer .

    COLON           reduce using rule 65 (estatuto_redux -> leer .)
    SEMICOLON       reduce using rule 65 (estatuto_redux -> leer .)


state 136

    (66) estatuto_redux -> ternaria .

    COLON           reduce using rule 66 (estatuto_redux -> ternaria .)
    SEMICOLON       reduce using rule 66 (estatuto_redux -> ternaria .)


state 137

    (89) llamada -> ID saw_id OPAREN . exp llamada1 CPAREN
    (90) llamada -> ID saw_id OPAREN . CPAREN
    (93) exp -> . texp exp1
    (96) texp -> . gexp texp1
    (99) gexp -> . mexp gexp1 check_relational_operator
    (107) mexp -> . termino mexp1
    (111) termino -> . factor term1 check_plusminus_operator
    (115) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (116) factor -> . varcst check_multdiv_operator
    (117) factor -> . variable
    (118) factor -> . llamada
    (119) varcst -> . CSTINT saw_end_value_int
    (120) varcst -> . CSTFLT saw_end_value_flt
    (121) varcst -> . CSTCHAR
    (122) varcst -> . CSTSTRING saw_end_value_str
    (123) varcst -> . boolean
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2
    (89) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (90) llamada -> . ID saw_id OPAREN CPAREN
    (80) boolean -> . TRUE
    (81) boolean -> . FALSE

    CPAREN          shift and go to state 177
    OPAREN          shift and go to state 29
    CSTINT          shift and go to state 43
    CSTFLT          shift and go to state 44
    CSTCHAR         shift and go to state 45
    CSTSTRING       shift and go to state 46
    ID              shift and go to state 130
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    exp                            shift and go to state 176
    texp                           shift and go to state 37
    gexp                           shift and go to state 38
    mexp                           shift and go to state 39
    termino                        shift and go to state 40
    factor                         shift and go to state 41
    varcst                         shift and go to state 42
    variable                       shift and go to state 127
    llamada                        shift and go to state 129
    boolean                        shift and go to state 47

state 138

    (82) variable -> ID saw_id saw_called_var .

    AS              reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    MULT            reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    DIV             reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    PLUS            reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    MINUS           reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    LT              reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    GT              reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    GTE             reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    LTE             reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    EQ              reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    NE              reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    AND             reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    OR              reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    QUESTION        reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    ID              reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    IF              reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    PRINT           reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    READ            reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    WHILE           reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    FOR             reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    OCURLY          reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    FUNCTION        reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    CLASS           reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    VAR             reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    OPAREN          reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    CSTINT          reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    CSTFLT          reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    CSTCHAR         reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    CSTSTRING       reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    TRUE            reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    FALSE           reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    CCURLY          reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    COLON           reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    SEMICOLON       reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    CPAREN          reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    COMMA           reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    FROM            reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    CBRACKET        reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    TO              reduce using rule 82 (variable -> ID saw_id saw_called_var .)
    BY              reduce using rule 82 (variable -> ID saw_id saw_called_var .)


state 139

    (83) variable -> ID saw_id OBRACKET . exp CBRACKET saw_dimension variable1 saw_called_var
    (93) exp -> . texp exp1
    (96) texp -> . gexp texp1
    (99) gexp -> . mexp gexp1 check_relational_operator
    (107) mexp -> . termino mexp1
    (111) termino -> . factor term1 check_plusminus_operator
    (115) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (116) factor -> . varcst check_multdiv_operator
    (117) factor -> . variable
    (118) factor -> . llamada
    (119) varcst -> . CSTINT saw_end_value_int
    (120) varcst -> . CSTFLT saw_end_value_flt
    (121) varcst -> . CSTCHAR
    (122) varcst -> . CSTSTRING saw_end_value_str
    (123) varcst -> . boolean
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2
    (89) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (90) llamada -> . ID saw_id OPAREN CPAREN
    (80) boolean -> . TRUE
    (81) boolean -> . FALSE

    OPAREN          shift and go to state 29
    CSTINT          shift and go to state 43
    CSTFLT          shift and go to state 44
    CSTCHAR         shift and go to state 45
    CSTSTRING       shift and go to state 46
    ID              shift and go to state 130
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    exp                            shift and go to state 178
    texp                           shift and go to state 37
    gexp                           shift and go to state 38
    mexp                           shift and go to state 39
    termino                        shift and go to state 40
    factor                         shift and go to state 41
    varcst                         shift and go to state 42
    variable                       shift and go to state 127
    llamada                        shift and go to state 129
    boolean                        shift and go to state 47

state 140

    (84) variable -> ID saw_id variable2 .

    AS              reduce using rule 84 (variable -> ID saw_id variable2 .)
    MULT            reduce using rule 84 (variable -> ID saw_id variable2 .)
    DIV             reduce using rule 84 (variable -> ID saw_id variable2 .)
    PLUS            reduce using rule 84 (variable -> ID saw_id variable2 .)
    MINUS           reduce using rule 84 (variable -> ID saw_id variable2 .)
    LT              reduce using rule 84 (variable -> ID saw_id variable2 .)
    GT              reduce using rule 84 (variable -> ID saw_id variable2 .)
    GTE             reduce using rule 84 (variable -> ID saw_id variable2 .)
    LTE             reduce using rule 84 (variable -> ID saw_id variable2 .)
    EQ              reduce using rule 84 (variable -> ID saw_id variable2 .)
    NE              reduce using rule 84 (variable -> ID saw_id variable2 .)
    AND             reduce using rule 84 (variable -> ID saw_id variable2 .)
    OR              reduce using rule 84 (variable -> ID saw_id variable2 .)
    QUESTION        reduce using rule 84 (variable -> ID saw_id variable2 .)
    ID              reduce using rule 84 (variable -> ID saw_id variable2 .)
    IF              reduce using rule 84 (variable -> ID saw_id variable2 .)
    PRINT           reduce using rule 84 (variable -> ID saw_id variable2 .)
    READ            reduce using rule 84 (variable -> ID saw_id variable2 .)
    WHILE           reduce using rule 84 (variable -> ID saw_id variable2 .)
    FOR             reduce using rule 84 (variable -> ID saw_id variable2 .)
    OCURLY          reduce using rule 84 (variable -> ID saw_id variable2 .)
    FUNCTION        reduce using rule 84 (variable -> ID saw_id variable2 .)
    CLASS           reduce using rule 84 (variable -> ID saw_id variable2 .)
    VAR             reduce using rule 84 (variable -> ID saw_id variable2 .)
    OPAREN          reduce using rule 84 (variable -> ID saw_id variable2 .)
    CSTINT          reduce using rule 84 (variable -> ID saw_id variable2 .)
    CSTFLT          reduce using rule 84 (variable -> ID saw_id variable2 .)
    CSTCHAR         reduce using rule 84 (variable -> ID saw_id variable2 .)
    CSTSTRING       reduce using rule 84 (variable -> ID saw_id variable2 .)
    TRUE            reduce using rule 84 (variable -> ID saw_id variable2 .)
    FALSE           reduce using rule 84 (variable -> ID saw_id variable2 .)
    CCURLY          reduce using rule 84 (variable -> ID saw_id variable2 .)
    COLON           reduce using rule 84 (variable -> ID saw_id variable2 .)
    SEMICOLON       reduce using rule 84 (variable -> ID saw_id variable2 .)
    CPAREN          reduce using rule 84 (variable -> ID saw_id variable2 .)
    COMMA           reduce using rule 84 (variable -> ID saw_id variable2 .)
    FROM            reduce using rule 84 (variable -> ID saw_id variable2 .)
    CBRACKET        reduce using rule 84 (variable -> ID saw_id variable2 .)
    TO              reduce using rule 84 (variable -> ID saw_id variable2 .)
    BY              reduce using rule 84 (variable -> ID saw_id variable2 .)


state 141

    (87) variable2 -> PERIOD . ID saw_called_var_from_class
    (88) variable2 -> PERIOD . ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1

    ID              shift and go to state 179


state 142

    (115) factor -> OPAREN saw_oparen exp . CPAREN saw_cparen check_multdiv_operator

    CPAREN          shift and go to state 180


state 143

    (68) condicion -> IF cond2 THEN . bloque cond1 SEMICOLON
    (47) bloque -> . OCURLY b1 CCURLY scope_end

    OCURLY          shift and go to state 8

    bloque                         shift and go to state 181

state 144

    (72) cond2 -> OPAREN exp . CPAREN

    CPAREN          shift and go to state 182


state 145

    (74) escritura -> PRINT OPAREN exp . saw_print_exp e1 CPAREN
    (148) saw_print_exp -> .

    COMMA           reduce using rule 148 (saw_print_exp -> .)
    CPAREN          reduce using rule 148 (saw_print_exp -> .)

    saw_print_exp                  shift and go to state 183

state 146

    (77) leer -> READ OPAREN variable . saw_read_exp l1 CPAREN
    (149) saw_read_exp -> .

    COMMA           reduce using rule 149 (saw_read_exp -> .)
    CPAREN          reduce using rule 149 (saw_read_exp -> .)

    saw_read_exp                   shift and go to state 184

state 147

    (82) variable -> ID . saw_id saw_called_var
    (83) variable -> ID . saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> ID . saw_id variable2
    (128) saw_id -> .

    OBRACKET        reduce using rule 128 (saw_id -> .)
    PERIOD          reduce using rule 128 (saw_id -> .)
    COMMA           reduce using rule 128 (saw_id -> .)
    CPAREN          reduce using rule 128 (saw_id -> .)
    FROM            reduce using rule 128 (saw_id -> .)
    TO              reduce using rule 128 (saw_id -> .)
    BY              reduce using rule 128 (saw_id -> .)

    saw_id                         shift and go to state 185

state 148

    (18) ciclo_while -> WHILE cond2 THEN . bloque SEMICOLON
    (47) bloque -> . OCURLY b1 CCURLY scope_end

    OCURLY          shift and go to state 8

    bloque                         shift and go to state 186

state 149

    (19) ciclo_for -> FOR OPAREN variable . FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON

    FROM            shift and go to state 187


state 150

    (3) funcion -> FUNCTION func1 ID . saw_id saw_function OPAREN param CPAREN bloque
    (128) saw_id -> .

    OPAREN          reduce using rule 128 (saw_id -> .)

    saw_id                         shift and go to state 188

state 151

    (5) func1 -> VOID saw_type .

    ID              reduce using rule 5 (func1 -> VOID saw_type .)


state 152

    (12) clase -> CLASS ID saw_id . saw_class COLON clase_bloque SEMICOLON
    (126) saw_class -> .

    COLON           reduce using rule 126 (saw_class -> .)

    saw_class                      shift and go to state 189

state 153

    (94) exp1 -> OR texp . exp1
    (94) exp1 -> . OR texp exp1
    (95) exp1 -> . empty
    (124) empty -> .

    OR              shift and go to state 84
    QUESTION        reduce using rule 124 (empty -> .)
    ID              reduce using rule 124 (empty -> .)
    IF              reduce using rule 124 (empty -> .)
    PRINT           reduce using rule 124 (empty -> .)
    READ            reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    FOR             reduce using rule 124 (empty -> .)
    OCURLY          reduce using rule 124 (empty -> .)
    FUNCTION        reduce using rule 124 (empty -> .)
    CLASS           reduce using rule 124 (empty -> .)
    VAR             reduce using rule 124 (empty -> .)
    OPAREN          reduce using rule 124 (empty -> .)
    CSTINT          reduce using rule 124 (empty -> .)
    CSTFLT          reduce using rule 124 (empty -> .)
    CSTCHAR         reduce using rule 124 (empty -> .)
    CSTSTRING       reduce using rule 124 (empty -> .)
    TRUE            reduce using rule 124 (empty -> .)
    FALSE           reduce using rule 124 (empty -> .)
    CCURLY          reduce using rule 124 (empty -> .)
    COLON           reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    CPAREN          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    CBRACKET        reduce using rule 124 (empty -> .)

    exp1                           shift and go to state 190
    empty                          shift and go to state 85

state 154

    (97) texp1 -> AND gexp . texp1
    (97) texp1 -> . AND gexp texp1
    (98) texp1 -> . empty
    (124) empty -> .

    AND             shift and go to state 87
    OR              reduce using rule 124 (empty -> .)
    QUESTION        reduce using rule 124 (empty -> .)
    ID              reduce using rule 124 (empty -> .)
    IF              reduce using rule 124 (empty -> .)
    PRINT           reduce using rule 124 (empty -> .)
    READ            reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    FOR             reduce using rule 124 (empty -> .)
    OCURLY          reduce using rule 124 (empty -> .)
    FUNCTION        reduce using rule 124 (empty -> .)
    CLASS           reduce using rule 124 (empty -> .)
    VAR             reduce using rule 124 (empty -> .)
    OPAREN          reduce using rule 124 (empty -> .)
    CSTINT          reduce using rule 124 (empty -> .)
    CSTFLT          reduce using rule 124 (empty -> .)
    CSTCHAR         reduce using rule 124 (empty -> .)
    CSTSTRING       reduce using rule 124 (empty -> .)
    TRUE            reduce using rule 124 (empty -> .)
    FALSE           reduce using rule 124 (empty -> .)
    CCURLY          reduce using rule 124 (empty -> .)
    COLON           reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    CPAREN          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    CBRACKET        reduce using rule 124 (empty -> .)

    texp1                          shift and go to state 191
    empty                          shift and go to state 88

state 155

    (99) gexp -> mexp gexp1 check_relational_operator .

    AND             reduce using rule 99 (gexp -> mexp gexp1 check_relational_operator .)
    OR              reduce using rule 99 (gexp -> mexp gexp1 check_relational_operator .)
    QUESTION        reduce using rule 99 (gexp -> mexp gexp1 check_relational_operator .)
    ID              reduce using rule 99 (gexp -> mexp gexp1 check_relational_operator .)
    IF              reduce using rule 99 (gexp -> mexp gexp1 check_relational_operator .)
    PRINT           reduce using rule 99 (gexp -> mexp gexp1 check_relational_operator .)
    READ            reduce using rule 99 (gexp -> mexp gexp1 check_relational_operator .)
    WHILE           reduce using rule 99 (gexp -> mexp gexp1 check_relational_operator .)
    FOR             reduce using rule 99 (gexp -> mexp gexp1 check_relational_operator .)
    OCURLY          reduce using rule 99 (gexp -> mexp gexp1 check_relational_operator .)
    FUNCTION        reduce using rule 99 (gexp -> mexp gexp1 check_relational_operator .)
    CLASS           reduce using rule 99 (gexp -> mexp gexp1 check_relational_operator .)
    VAR             reduce using rule 99 (gexp -> mexp gexp1 check_relational_operator .)
    OPAREN          reduce using rule 99 (gexp -> mexp gexp1 check_relational_operator .)
    CSTINT          reduce using rule 99 (gexp -> mexp gexp1 check_relational_operator .)
    CSTFLT          reduce using rule 99 (gexp -> mexp gexp1 check_relational_operator .)
    CSTCHAR         reduce using rule 99 (gexp -> mexp gexp1 check_relational_operator .)
    CSTSTRING       reduce using rule 99 (gexp -> mexp gexp1 check_relational_operator .)
    TRUE            reduce using rule 99 (gexp -> mexp gexp1 check_relational_operator .)
    FALSE           reduce using rule 99 (gexp -> mexp gexp1 check_relational_operator .)
    CCURLY          reduce using rule 99 (gexp -> mexp gexp1 check_relational_operator .)
    COLON           reduce using rule 99 (gexp -> mexp gexp1 check_relational_operator .)
    SEMICOLON       reduce using rule 99 (gexp -> mexp gexp1 check_relational_operator .)
    CPAREN          reduce using rule 99 (gexp -> mexp gexp1 check_relational_operator .)
    COMMA           reduce using rule 99 (gexp -> mexp gexp1 check_relational_operator .)
    CBRACKET        reduce using rule 99 (gexp -> mexp gexp1 check_relational_operator .)


state 156

    (100) gexp1 -> LT saw_relational_operator . mexp
    (107) mexp -> . termino mexp1
    (111) termino -> . factor term1 check_plusminus_operator
    (115) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (116) factor -> . varcst check_multdiv_operator
    (117) factor -> . variable
    (118) factor -> . llamada
    (119) varcst -> . CSTINT saw_end_value_int
    (120) varcst -> . CSTFLT saw_end_value_flt
    (121) varcst -> . CSTCHAR
    (122) varcst -> . CSTSTRING saw_end_value_str
    (123) varcst -> . boolean
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2
    (89) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (90) llamada -> . ID saw_id OPAREN CPAREN
    (80) boolean -> . TRUE
    (81) boolean -> . FALSE

    OPAREN          shift and go to state 29
    CSTINT          shift and go to state 43
    CSTFLT          shift and go to state 44
    CSTCHAR         shift and go to state 45
    CSTSTRING       shift and go to state 46
    ID              shift and go to state 130
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    mexp                           shift and go to state 192
    termino                        shift and go to state 40
    factor                         shift and go to state 41
    varcst                         shift and go to state 42
    variable                       shift and go to state 127
    llamada                        shift and go to state 129
    boolean                        shift and go to state 47

state 157

    (101) gexp1 -> GT saw_relational_operator . mexp
    (107) mexp -> . termino mexp1
    (111) termino -> . factor term1 check_plusminus_operator
    (115) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (116) factor -> . varcst check_multdiv_operator
    (117) factor -> . variable
    (118) factor -> . llamada
    (119) varcst -> . CSTINT saw_end_value_int
    (120) varcst -> . CSTFLT saw_end_value_flt
    (121) varcst -> . CSTCHAR
    (122) varcst -> . CSTSTRING saw_end_value_str
    (123) varcst -> . boolean
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2
    (89) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (90) llamada -> . ID saw_id OPAREN CPAREN
    (80) boolean -> . TRUE
    (81) boolean -> . FALSE

    OPAREN          shift and go to state 29
    CSTINT          shift and go to state 43
    CSTFLT          shift and go to state 44
    CSTCHAR         shift and go to state 45
    CSTSTRING       shift and go to state 46
    ID              shift and go to state 130
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    mexp                           shift and go to state 193
    termino                        shift and go to state 40
    factor                         shift and go to state 41
    varcst                         shift and go to state 42
    variable                       shift and go to state 127
    llamada                        shift and go to state 129
    boolean                        shift and go to state 47

state 158

    (102) gexp1 -> GTE saw_relational_operator . mexp
    (107) mexp -> . termino mexp1
    (111) termino -> . factor term1 check_plusminus_operator
    (115) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (116) factor -> . varcst check_multdiv_operator
    (117) factor -> . variable
    (118) factor -> . llamada
    (119) varcst -> . CSTINT saw_end_value_int
    (120) varcst -> . CSTFLT saw_end_value_flt
    (121) varcst -> . CSTCHAR
    (122) varcst -> . CSTSTRING saw_end_value_str
    (123) varcst -> . boolean
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2
    (89) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (90) llamada -> . ID saw_id OPAREN CPAREN
    (80) boolean -> . TRUE
    (81) boolean -> . FALSE

    OPAREN          shift and go to state 29
    CSTINT          shift and go to state 43
    CSTFLT          shift and go to state 44
    CSTCHAR         shift and go to state 45
    CSTSTRING       shift and go to state 46
    ID              shift and go to state 130
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    mexp                           shift and go to state 194
    termino                        shift and go to state 40
    factor                         shift and go to state 41
    varcst                         shift and go to state 42
    variable                       shift and go to state 127
    llamada                        shift and go to state 129
    boolean                        shift and go to state 47

state 159

    (103) gexp1 -> LTE saw_relational_operator . mexp
    (107) mexp -> . termino mexp1
    (111) termino -> . factor term1 check_plusminus_operator
    (115) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (116) factor -> . varcst check_multdiv_operator
    (117) factor -> . variable
    (118) factor -> . llamada
    (119) varcst -> . CSTINT saw_end_value_int
    (120) varcst -> . CSTFLT saw_end_value_flt
    (121) varcst -> . CSTCHAR
    (122) varcst -> . CSTSTRING saw_end_value_str
    (123) varcst -> . boolean
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2
    (89) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (90) llamada -> . ID saw_id OPAREN CPAREN
    (80) boolean -> . TRUE
    (81) boolean -> . FALSE

    OPAREN          shift and go to state 29
    CSTINT          shift and go to state 43
    CSTFLT          shift and go to state 44
    CSTCHAR         shift and go to state 45
    CSTSTRING       shift and go to state 46
    ID              shift and go to state 130
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    mexp                           shift and go to state 195
    termino                        shift and go to state 40
    factor                         shift and go to state 41
    varcst                         shift and go to state 42
    variable                       shift and go to state 127
    llamada                        shift and go to state 129
    boolean                        shift and go to state 47

state 160

    (104) gexp1 -> EQ saw_relational_operator . mexp
    (107) mexp -> . termino mexp1
    (111) termino -> . factor term1 check_plusminus_operator
    (115) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (116) factor -> . varcst check_multdiv_operator
    (117) factor -> . variable
    (118) factor -> . llamada
    (119) varcst -> . CSTINT saw_end_value_int
    (120) varcst -> . CSTFLT saw_end_value_flt
    (121) varcst -> . CSTCHAR
    (122) varcst -> . CSTSTRING saw_end_value_str
    (123) varcst -> . boolean
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2
    (89) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (90) llamada -> . ID saw_id OPAREN CPAREN
    (80) boolean -> . TRUE
    (81) boolean -> . FALSE

    OPAREN          shift and go to state 29
    CSTINT          shift and go to state 43
    CSTFLT          shift and go to state 44
    CSTCHAR         shift and go to state 45
    CSTSTRING       shift and go to state 46
    ID              shift and go to state 130
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    mexp                           shift and go to state 196
    termino                        shift and go to state 40
    factor                         shift and go to state 41
    varcst                         shift and go to state 42
    variable                       shift and go to state 127
    llamada                        shift and go to state 129
    boolean                        shift and go to state 47

state 161

    (105) gexp1 -> NE saw_relational_operator . mexp
    (107) mexp -> . termino mexp1
    (111) termino -> . factor term1 check_plusminus_operator
    (115) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (116) factor -> . varcst check_multdiv_operator
    (117) factor -> . variable
    (118) factor -> . llamada
    (119) varcst -> . CSTINT saw_end_value_int
    (120) varcst -> . CSTFLT saw_end_value_flt
    (121) varcst -> . CSTCHAR
    (122) varcst -> . CSTSTRING saw_end_value_str
    (123) varcst -> . boolean
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2
    (89) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (90) llamada -> . ID saw_id OPAREN CPAREN
    (80) boolean -> . TRUE
    (81) boolean -> . FALSE

    OPAREN          shift and go to state 29
    CSTINT          shift and go to state 43
    CSTFLT          shift and go to state 44
    CSTCHAR         shift and go to state 45
    CSTSTRING       shift and go to state 46
    ID              shift and go to state 130
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    mexp                           shift and go to state 197
    termino                        shift and go to state 40
    factor                         shift and go to state 41
    varcst                         shift and go to state 42
    variable                       shift and go to state 127
    llamada                        shift and go to state 129
    boolean                        shift and go to state 47

state 162

    (108) mexp1 -> PLUS saw_plusminus_operator . termino mexp1
    (111) termino -> . factor term1 check_plusminus_operator
    (115) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (116) factor -> . varcst check_multdiv_operator
    (117) factor -> . variable
    (118) factor -> . llamada
    (119) varcst -> . CSTINT saw_end_value_int
    (120) varcst -> . CSTFLT saw_end_value_flt
    (121) varcst -> . CSTCHAR
    (122) varcst -> . CSTSTRING saw_end_value_str
    (123) varcst -> . boolean
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2
    (89) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (90) llamada -> . ID saw_id OPAREN CPAREN
    (80) boolean -> . TRUE
    (81) boolean -> . FALSE

    OPAREN          shift and go to state 29
    CSTINT          shift and go to state 43
    CSTFLT          shift and go to state 44
    CSTCHAR         shift and go to state 45
    CSTSTRING       shift and go to state 46
    ID              shift and go to state 130
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    termino                        shift and go to state 198
    factor                         shift and go to state 41
    varcst                         shift and go to state 42
    variable                       shift and go to state 127
    llamada                        shift and go to state 129
    boolean                        shift and go to state 47

state 163

    (109) mexp1 -> MINUS saw_plusminus_operator . termino mexp1
    (111) termino -> . factor term1 check_plusminus_operator
    (115) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (116) factor -> . varcst check_multdiv_operator
    (117) factor -> . variable
    (118) factor -> . llamada
    (119) varcst -> . CSTINT saw_end_value_int
    (120) varcst -> . CSTFLT saw_end_value_flt
    (121) varcst -> . CSTCHAR
    (122) varcst -> . CSTSTRING saw_end_value_str
    (123) varcst -> . boolean
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2
    (89) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (90) llamada -> . ID saw_id OPAREN CPAREN
    (80) boolean -> . TRUE
    (81) boolean -> . FALSE

    OPAREN          shift and go to state 29
    CSTINT          shift and go to state 43
    CSTFLT          shift and go to state 44
    CSTCHAR         shift and go to state 45
    CSTSTRING       shift and go to state 46
    ID              shift and go to state 130
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    termino                        shift and go to state 199
    factor                         shift and go to state 41
    varcst                         shift and go to state 42
    variable                       shift and go to state 127
    llamada                        shift and go to state 129
    boolean                        shift and go to state 47

state 164

    (111) termino -> factor term1 check_plusminus_operator .

    PLUS            reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    MINUS           reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    LT              reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    GT              reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    GTE             reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    LTE             reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    EQ              reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    NE              reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    AND             reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    OR              reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    QUESTION        reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    ID              reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    IF              reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    PRINT           reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    READ            reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    WHILE           reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    FOR             reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    OCURLY          reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    FUNCTION        reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    CLASS           reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    VAR             reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    OPAREN          reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    CSTINT          reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    CSTFLT          reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    CSTCHAR         reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    CSTSTRING       reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    TRUE            reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    FALSE           reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    CCURLY          reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    COLON           reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    SEMICOLON       reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    CPAREN          reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    COMMA           reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)
    CBRACKET        reduce using rule 111 (termino -> factor term1 check_plusminus_operator .)


state 165

    (112) term1 -> MULT saw_multdiv_operator . factor term1
    (115) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (116) factor -> . varcst check_multdiv_operator
    (117) factor -> . variable
    (118) factor -> . llamada
    (119) varcst -> . CSTINT saw_end_value_int
    (120) varcst -> . CSTFLT saw_end_value_flt
    (121) varcst -> . CSTCHAR
    (122) varcst -> . CSTSTRING saw_end_value_str
    (123) varcst -> . boolean
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2
    (89) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (90) llamada -> . ID saw_id OPAREN CPAREN
    (80) boolean -> . TRUE
    (81) boolean -> . FALSE

    OPAREN          shift and go to state 29
    CSTINT          shift and go to state 43
    CSTFLT          shift and go to state 44
    CSTCHAR         shift and go to state 45
    CSTSTRING       shift and go to state 46
    ID              shift and go to state 130
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    factor                         shift and go to state 200
    varcst                         shift and go to state 42
    variable                       shift and go to state 127
    llamada                        shift and go to state 129
    boolean                        shift and go to state 47

state 166

    (113) term1 -> DIV saw_multdiv_operator . factor term1
    (115) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (116) factor -> . varcst check_multdiv_operator
    (117) factor -> . variable
    (118) factor -> . llamada
    (119) varcst -> . CSTINT saw_end_value_int
    (120) varcst -> . CSTFLT saw_end_value_flt
    (121) varcst -> . CSTCHAR
    (122) varcst -> . CSTSTRING saw_end_value_str
    (123) varcst -> . boolean
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2
    (89) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (90) llamada -> . ID saw_id OPAREN CPAREN
    (80) boolean -> . TRUE
    (81) boolean -> . FALSE

    OPAREN          shift and go to state 29
    CSTINT          shift and go to state 43
    CSTFLT          shift and go to state 44
    CSTCHAR         shift and go to state 45
    CSTSTRING       shift and go to state 46
    ID              shift and go to state 130
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    factor                         shift and go to state 201
    varcst                         shift and go to state 42
    variable                       shift and go to state 127
    llamada                        shift and go to state 129
    boolean                        shift and go to state 47

state 167

    (22) dec -> VAR tipo SEMICOLON dec1 .

    OCURLY          reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    ID              reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    IF              reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    PRINT           reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    READ            reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    WHILE           reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    FOR             reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    FUNCTION        reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    CLASS           reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    VAR             reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    OPAREN          reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    CSTINT          reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    CSTFLT          reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    CSTCHAR         reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    CSTSTRING       reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    TRUE            reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    FALSE           reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    CCURLY          reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    METHODS         reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)


state 168

    (23) dec1 -> dec .

    OCURLY          reduce using rule 23 (dec1 -> dec .)
    ID              reduce using rule 23 (dec1 -> dec .)
    IF              reduce using rule 23 (dec1 -> dec .)
    PRINT           reduce using rule 23 (dec1 -> dec .)
    READ            reduce using rule 23 (dec1 -> dec .)
    WHILE           reduce using rule 23 (dec1 -> dec .)
    FOR             reduce using rule 23 (dec1 -> dec .)
    FUNCTION        reduce using rule 23 (dec1 -> dec .)
    CLASS           reduce using rule 23 (dec1 -> dec .)
    VAR             reduce using rule 23 (dec1 -> dec .)
    OPAREN          reduce using rule 23 (dec1 -> dec .)
    CSTINT          reduce using rule 23 (dec1 -> dec .)
    CSTFLT          reduce using rule 23 (dec1 -> dec .)
    CSTCHAR         reduce using rule 23 (dec1 -> dec .)
    CSTSTRING       reduce using rule 23 (dec1 -> dec .)
    TRUE            reduce using rule 23 (dec1 -> dec .)
    FALSE           reduce using rule 23 (dec1 -> dec .)
    CCURLY          reduce using rule 23 (dec1 -> dec .)
    METHODS         reduce using rule 23 (dec1 -> dec .)


state 169

    (24) dec1 -> empty .

    OCURLY          reduce using rule 24 (dec1 -> empty .)
    ID              reduce using rule 24 (dec1 -> empty .)
    IF              reduce using rule 24 (dec1 -> empty .)
    PRINT           reduce using rule 24 (dec1 -> empty .)
    READ            reduce using rule 24 (dec1 -> empty .)
    WHILE           reduce using rule 24 (dec1 -> empty .)
    FOR             reduce using rule 24 (dec1 -> empty .)
    FUNCTION        reduce using rule 24 (dec1 -> empty .)
    CLASS           reduce using rule 24 (dec1 -> empty .)
    VAR             reduce using rule 24 (dec1 -> empty .)
    OPAREN          reduce using rule 24 (dec1 -> empty .)
    CSTINT          reduce using rule 24 (dec1 -> empty .)
    CSTFLT          reduce using rule 24 (dec1 -> empty .)
    CSTCHAR         reduce using rule 24 (dec1 -> empty .)
    CSTSTRING       reduce using rule 24 (dec1 -> empty .)
    TRUE            reduce using rule 24 (dec1 -> empty .)
    FALSE           reduce using rule 24 (dec1 -> empty .)
    CCURLY          reduce using rule 24 (dec1 -> empty .)
    METHODS         reduce using rule 24 (dec1 -> empty .)


state 170

    (25) tipo -> compuesto ID saw_id . saw_variable tipo1
    (129) saw_variable -> .

    COMMA           reduce using rule 129 (saw_variable -> .)
    SEMICOLON       reduce using rule 129 (saw_variable -> .)

    saw_variable                   shift and go to state 202

state 171

    (26) tipo -> simple ID saw_id . saw_variable tipo1
    (129) saw_variable -> .

    COMMA           reduce using rule 129 (saw_variable -> .)
    SEMICOLON       reduce using rule 129 (saw_variable -> .)

    saw_variable                   shift and go to state 203

state 172

    (27) tipo -> multiple ID saw_id . OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable tipo2

    OBRACKET        shift and go to state 204


state 173

    (67) asignacion -> variable AS exp saw_asig .

    ID              reduce using rule 67 (asignacion -> variable AS exp saw_asig .)
    IF              reduce using rule 67 (asignacion -> variable AS exp saw_asig .)
    PRINT           reduce using rule 67 (asignacion -> variable AS exp saw_asig .)
    READ            reduce using rule 67 (asignacion -> variable AS exp saw_asig .)
    WHILE           reduce using rule 67 (asignacion -> variable AS exp saw_asig .)
    FOR             reduce using rule 67 (asignacion -> variable AS exp saw_asig .)
    OCURLY          reduce using rule 67 (asignacion -> variable AS exp saw_asig .)
    FUNCTION        reduce using rule 67 (asignacion -> variable AS exp saw_asig .)
    CLASS           reduce using rule 67 (asignacion -> variable AS exp saw_asig .)
    VAR             reduce using rule 67 (asignacion -> variable AS exp saw_asig .)
    OPAREN          reduce using rule 67 (asignacion -> variable AS exp saw_asig .)
    CSTINT          reduce using rule 67 (asignacion -> variable AS exp saw_asig .)
    CSTFLT          reduce using rule 67 (asignacion -> variable AS exp saw_asig .)
    CSTCHAR         reduce using rule 67 (asignacion -> variable AS exp saw_asig .)
    CSTSTRING       reduce using rule 67 (asignacion -> variable AS exp saw_asig .)
    TRUE            reduce using rule 67 (asignacion -> variable AS exp saw_asig .)
    FALSE           reduce using rule 67 (asignacion -> variable AS exp saw_asig .)
    CCURLY          reduce using rule 67 (asignacion -> variable AS exp saw_asig .)
    COLON           reduce using rule 67 (asignacion -> variable AS exp saw_asig .)
    SEMICOLON       reduce using rule 67 (asignacion -> variable AS exp saw_asig .)


state 174

    (82) variable -> ID saw_id . saw_called_var
    (83) variable -> ID saw_id . OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> ID saw_id . variable2
    (89) llamada -> ID saw_id . OPAREN exp llamada1 CPAREN
    (90) llamada -> ID saw_id . OPAREN CPAREN
    (131) saw_called_var -> .
    (87) variable2 -> . PERIOD ID saw_called_var_from_class
    (88) variable2 -> . PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1

  ! shift/reduce conflict for OPAREN resolved as shift
    OBRACKET        shift and go to state 139
    OPAREN          shift and go to state 137
    MULT            reduce using rule 131 (saw_called_var -> .)
    DIV             reduce using rule 131 (saw_called_var -> .)
    PLUS            reduce using rule 131 (saw_called_var -> .)
    MINUS           reduce using rule 131 (saw_called_var -> .)
    LT              reduce using rule 131 (saw_called_var -> .)
    GT              reduce using rule 131 (saw_called_var -> .)
    GTE             reduce using rule 131 (saw_called_var -> .)
    LTE             reduce using rule 131 (saw_called_var -> .)
    EQ              reduce using rule 131 (saw_called_var -> .)
    NE              reduce using rule 131 (saw_called_var -> .)
    AND             reduce using rule 131 (saw_called_var -> .)
    OR              reduce using rule 131 (saw_called_var -> .)
    ID              reduce using rule 131 (saw_called_var -> .)
    IF              reduce using rule 131 (saw_called_var -> .)
    PRINT           reduce using rule 131 (saw_called_var -> .)
    READ            reduce using rule 131 (saw_called_var -> .)
    WHILE           reduce using rule 131 (saw_called_var -> .)
    FOR             reduce using rule 131 (saw_called_var -> .)
    OCURLY          reduce using rule 131 (saw_called_var -> .)
    FUNCTION        reduce using rule 131 (saw_called_var -> .)
    CLASS           reduce using rule 131 (saw_called_var -> .)
    VAR             reduce using rule 131 (saw_called_var -> .)
    CSTINT          reduce using rule 131 (saw_called_var -> .)
    CSTFLT          reduce using rule 131 (saw_called_var -> .)
    CSTCHAR         reduce using rule 131 (saw_called_var -> .)
    CSTSTRING       reduce using rule 131 (saw_called_var -> .)
    TRUE            reduce using rule 131 (saw_called_var -> .)
    FALSE           reduce using rule 131 (saw_called_var -> .)
    CCURLY          reduce using rule 131 (saw_called_var -> .)
    COLON           reduce using rule 131 (saw_called_var -> .)
    SEMICOLON       reduce using rule 131 (saw_called_var -> .)
    CPAREN          reduce using rule 131 (saw_called_var -> .)
    COMMA           reduce using rule 131 (saw_called_var -> .)
    QUESTION        reduce using rule 131 (saw_called_var -> .)
    CBRACKET        reduce using rule 131 (saw_called_var -> .)
    PERIOD          shift and go to state 141

  ! OPAREN          [ reduce using rule 131 (saw_called_var -> .) ]

    saw_called_var                 shift and go to state 138
    variable2                      shift and go to state 140

state 175

    (73) ternaria -> exp QUESTION estatuto_redux COLON . estatuto_redux SEMICOLON
    (62) estatuto_redux -> . asignacion
    (63) estatuto_redux -> . llamada
    (64) estatuto_redux -> . escritura
    (65) estatuto_redux -> . leer
    (66) estatuto_redux -> . ternaria
    (67) asignacion -> . variable AS exp saw_asig
    (89) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (90) llamada -> . ID saw_id OPAREN CPAREN
    (74) escritura -> . PRINT OPAREN exp saw_print_exp e1 CPAREN
    (77) leer -> . READ OPAREN variable saw_read_exp l1 CPAREN
    (73) ternaria -> . exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2
    (93) exp -> . texp exp1
    (96) texp -> . gexp texp1
    (99) gexp -> . mexp gexp1 check_relational_operator
    (107) mexp -> . termino mexp1
    (111) termino -> . factor term1 check_plusminus_operator
    (115) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (116) factor -> . varcst check_multdiv_operator
    (117) factor -> . variable
    (118) factor -> . llamada
    (119) varcst -> . CSTINT saw_end_value_int
    (120) varcst -> . CSTFLT saw_end_value_flt
    (121) varcst -> . CSTCHAR
    (122) varcst -> . CSTSTRING saw_end_value_str
    (123) varcst -> . boolean
    (80) boolean -> . TRUE
    (81) boolean -> . FALSE

    ID              shift and go to state 28
    PRINT           shift and go to state 31
    READ            shift and go to state 32
    OPAREN          shift and go to state 29
    CSTINT          shift and go to state 43
    CSTFLT          shift and go to state 44
    CSTCHAR         shift and go to state 45
    CSTSTRING       shift and go to state 46
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    exp                            shift and go to state 27
    estatuto_redux                 shift and go to state 205
    asignacion                     shift and go to state 132
    llamada                        shift and go to state 133
    escritura                      shift and go to state 134
    leer                           shift and go to state 135
    ternaria                       shift and go to state 136
    variable                       shift and go to state 26
    texp                           shift and go to state 37
    gexp                           shift and go to state 38
    mexp                           shift and go to state 39
    termino                        shift and go to state 40
    factor                         shift and go to state 41
    varcst                         shift and go to state 42
    boolean                        shift and go to state 47

state 176

    (89) llamada -> ID saw_id OPAREN exp . llamada1 CPAREN
    (91) llamada1 -> . COMMA exp llamada1
    (92) llamada1 -> . empty
    (124) empty -> .

    COMMA           shift and go to state 207
    CPAREN          reduce using rule 124 (empty -> .)

    llamada1                       shift and go to state 206
    empty                          shift and go to state 208

state 177

    (90) llamada -> ID saw_id OPAREN CPAREN .

    ID              reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    IF              reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    PRINT           reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    READ            reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    WHILE           reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    FOR             reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    OCURLY          reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    FUNCTION        reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    CLASS           reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    VAR             reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    OPAREN          reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    CSTINT          reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    CSTFLT          reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    CSTCHAR         reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    CSTSTRING       reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    TRUE            reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    FALSE           reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    CCURLY          reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    MULT            reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    DIV             reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    PLUS            reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    MINUS           reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    LT              reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    GT              reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    GTE             reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    LTE             reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    EQ              reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    NE              reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    AND             reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    OR              reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    QUESTION        reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    COLON           reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    SEMICOLON       reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    CPAREN          reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    COMMA           reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)
    CBRACKET        reduce using rule 90 (llamada -> ID saw_id OPAREN CPAREN .)


state 178

    (83) variable -> ID saw_id OBRACKET exp . CBRACKET saw_dimension variable1 saw_called_var

    CBRACKET        shift and go to state 209


state 179

    (87) variable2 -> PERIOD ID . saw_called_var_from_class
    (88) variable2 -> PERIOD ID . saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1
    (132) saw_called_var_from_class -> .

    OBRACKET        reduce using rule 132 (saw_called_var_from_class -> .)
    AS              reduce using rule 132 (saw_called_var_from_class -> .)
    MULT            reduce using rule 132 (saw_called_var_from_class -> .)
    DIV             reduce using rule 132 (saw_called_var_from_class -> .)
    PLUS            reduce using rule 132 (saw_called_var_from_class -> .)
    MINUS           reduce using rule 132 (saw_called_var_from_class -> .)
    LT              reduce using rule 132 (saw_called_var_from_class -> .)
    GT              reduce using rule 132 (saw_called_var_from_class -> .)
    GTE             reduce using rule 132 (saw_called_var_from_class -> .)
    LTE             reduce using rule 132 (saw_called_var_from_class -> .)
    EQ              reduce using rule 132 (saw_called_var_from_class -> .)
    NE              reduce using rule 132 (saw_called_var_from_class -> .)
    AND             reduce using rule 132 (saw_called_var_from_class -> .)
    OR              reduce using rule 132 (saw_called_var_from_class -> .)
    QUESTION        reduce using rule 132 (saw_called_var_from_class -> .)
    ID              reduce using rule 132 (saw_called_var_from_class -> .)
    IF              reduce using rule 132 (saw_called_var_from_class -> .)
    PRINT           reduce using rule 132 (saw_called_var_from_class -> .)
    READ            reduce using rule 132 (saw_called_var_from_class -> .)
    WHILE           reduce using rule 132 (saw_called_var_from_class -> .)
    FOR             reduce using rule 132 (saw_called_var_from_class -> .)
    OCURLY          reduce using rule 132 (saw_called_var_from_class -> .)
    FUNCTION        reduce using rule 132 (saw_called_var_from_class -> .)
    CLASS           reduce using rule 132 (saw_called_var_from_class -> .)
    VAR             reduce using rule 132 (saw_called_var_from_class -> .)
    OPAREN          reduce using rule 132 (saw_called_var_from_class -> .)
    CSTINT          reduce using rule 132 (saw_called_var_from_class -> .)
    CSTFLT          reduce using rule 132 (saw_called_var_from_class -> .)
    CSTCHAR         reduce using rule 132 (saw_called_var_from_class -> .)
    CSTSTRING       reduce using rule 132 (saw_called_var_from_class -> .)
    TRUE            reduce using rule 132 (saw_called_var_from_class -> .)
    FALSE           reduce using rule 132 (saw_called_var_from_class -> .)
    CCURLY          reduce using rule 132 (saw_called_var_from_class -> .)
    COLON           reduce using rule 132 (saw_called_var_from_class -> .)
    SEMICOLON       reduce using rule 132 (saw_called_var_from_class -> .)
    CPAREN          reduce using rule 132 (saw_called_var_from_class -> .)
    COMMA           reduce using rule 132 (saw_called_var_from_class -> .)
    CBRACKET        reduce using rule 132 (saw_called_var_from_class -> .)
    FROM            reduce using rule 132 (saw_called_var_from_class -> .)
    TO              reduce using rule 132 (saw_called_var_from_class -> .)
    BY              reduce using rule 132 (saw_called_var_from_class -> .)

    saw_called_var_from_class      shift and go to state 210

state 180

    (115) factor -> OPAREN saw_oparen exp CPAREN . saw_cparen check_multdiv_operator
    (144) saw_cparen -> .

    MULT            reduce using rule 144 (saw_cparen -> .)
    DIV             reduce using rule 144 (saw_cparen -> .)
    PLUS            reduce using rule 144 (saw_cparen -> .)
    MINUS           reduce using rule 144 (saw_cparen -> .)
    LT              reduce using rule 144 (saw_cparen -> .)
    GT              reduce using rule 144 (saw_cparen -> .)
    GTE             reduce using rule 144 (saw_cparen -> .)
    LTE             reduce using rule 144 (saw_cparen -> .)
    EQ              reduce using rule 144 (saw_cparen -> .)
    NE              reduce using rule 144 (saw_cparen -> .)
    AND             reduce using rule 144 (saw_cparen -> .)
    OR              reduce using rule 144 (saw_cparen -> .)
    QUESTION        reduce using rule 144 (saw_cparen -> .)
    ID              reduce using rule 144 (saw_cparen -> .)
    IF              reduce using rule 144 (saw_cparen -> .)
    PRINT           reduce using rule 144 (saw_cparen -> .)
    READ            reduce using rule 144 (saw_cparen -> .)
    WHILE           reduce using rule 144 (saw_cparen -> .)
    FOR             reduce using rule 144 (saw_cparen -> .)
    OCURLY          reduce using rule 144 (saw_cparen -> .)
    FUNCTION        reduce using rule 144 (saw_cparen -> .)
    CLASS           reduce using rule 144 (saw_cparen -> .)
    VAR             reduce using rule 144 (saw_cparen -> .)
    OPAREN          reduce using rule 144 (saw_cparen -> .)
    CSTINT          reduce using rule 144 (saw_cparen -> .)
    CSTFLT          reduce using rule 144 (saw_cparen -> .)
    CSTCHAR         reduce using rule 144 (saw_cparen -> .)
    CSTSTRING       reduce using rule 144 (saw_cparen -> .)
    TRUE            reduce using rule 144 (saw_cparen -> .)
    FALSE           reduce using rule 144 (saw_cparen -> .)
    CCURLY          reduce using rule 144 (saw_cparen -> .)
    COLON           reduce using rule 144 (saw_cparen -> .)
    SEMICOLON       reduce using rule 144 (saw_cparen -> .)
    CPAREN          reduce using rule 144 (saw_cparen -> .)
    COMMA           reduce using rule 144 (saw_cparen -> .)
    CBRACKET        reduce using rule 144 (saw_cparen -> .)

    saw_cparen                     shift and go to state 211

state 181

    (68) condicion -> IF cond2 THEN bloque . cond1 SEMICOLON
    (69) cond1 -> . ELSE bloque
    (70) cond1 -> . ELSE IF cond2 THEN bloque cond1
    (71) cond1 -> . empty
    (124) empty -> .

    ELSE            shift and go to state 213
    SEMICOLON       reduce using rule 124 (empty -> .)

    cond1                          shift and go to state 212
    empty                          shift and go to state 214

state 182

    (72) cond2 -> OPAREN exp CPAREN .

    THEN            reduce using rule 72 (cond2 -> OPAREN exp CPAREN .)


state 183

    (74) escritura -> PRINT OPAREN exp saw_print_exp . e1 CPAREN
    (75) e1 -> . COMMA exp saw_print_exp e1
    (76) e1 -> . empty
    (124) empty -> .

    COMMA           shift and go to state 216
    CPAREN          reduce using rule 124 (empty -> .)

    e1                             shift and go to state 215
    empty                          shift and go to state 217

state 184

    (77) leer -> READ OPAREN variable saw_read_exp . l1 CPAREN
    (78) l1 -> . COMMA variable saw_read_exp e1
    (79) l1 -> . empty
    (124) empty -> .

    COMMA           shift and go to state 219
    CPAREN          reduce using rule 124 (empty -> .)

    l1                             shift and go to state 218
    empty                          shift and go to state 220

state 185

    (82) variable -> ID saw_id . saw_called_var
    (83) variable -> ID saw_id . OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> ID saw_id . variable2
    (131) saw_called_var -> .
    (87) variable2 -> . PERIOD ID saw_called_var_from_class
    (88) variable2 -> . PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1

    OBRACKET        shift and go to state 139
    COMMA           reduce using rule 131 (saw_called_var -> .)
    CPAREN          reduce using rule 131 (saw_called_var -> .)
    FROM            reduce using rule 131 (saw_called_var -> .)
    TO              reduce using rule 131 (saw_called_var -> .)
    BY              reduce using rule 131 (saw_called_var -> .)
    PERIOD          shift and go to state 141

    saw_called_var                 shift and go to state 138
    variable2                      shift and go to state 140

state 186

    (18) ciclo_while -> WHILE cond2 THEN bloque . SEMICOLON

    SEMICOLON       shift and go to state 221


state 187

    (19) ciclo_for -> FOR OPAREN variable FROM . ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
    (20) ciclo_for1 -> . CSTINT
    (21) ciclo_for1 -> . variable
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2

    CSTINT          shift and go to state 224
    ID              shift and go to state 147

    variable                       shift and go to state 222
    ciclo_for1                     shift and go to state 223

state 188

    (3) funcion -> FUNCTION func1 ID saw_id . saw_function OPAREN param CPAREN bloque
    (145) saw_function -> .

    OPAREN          reduce using rule 145 (saw_function -> .)

    saw_function                   shift and go to state 225

state 189

    (12) clase -> CLASS ID saw_id saw_class . COLON clase_bloque SEMICOLON

    COLON           shift and go to state 226


state 190

    (94) exp1 -> OR texp exp1 .

    QUESTION        reduce using rule 94 (exp1 -> OR texp exp1 .)
    ID              reduce using rule 94 (exp1 -> OR texp exp1 .)
    IF              reduce using rule 94 (exp1 -> OR texp exp1 .)
    PRINT           reduce using rule 94 (exp1 -> OR texp exp1 .)
    READ            reduce using rule 94 (exp1 -> OR texp exp1 .)
    WHILE           reduce using rule 94 (exp1 -> OR texp exp1 .)
    FOR             reduce using rule 94 (exp1 -> OR texp exp1 .)
    OCURLY          reduce using rule 94 (exp1 -> OR texp exp1 .)
    FUNCTION        reduce using rule 94 (exp1 -> OR texp exp1 .)
    CLASS           reduce using rule 94 (exp1 -> OR texp exp1 .)
    VAR             reduce using rule 94 (exp1 -> OR texp exp1 .)
    OPAREN          reduce using rule 94 (exp1 -> OR texp exp1 .)
    CSTINT          reduce using rule 94 (exp1 -> OR texp exp1 .)
    CSTFLT          reduce using rule 94 (exp1 -> OR texp exp1 .)
    CSTCHAR         reduce using rule 94 (exp1 -> OR texp exp1 .)
    CSTSTRING       reduce using rule 94 (exp1 -> OR texp exp1 .)
    TRUE            reduce using rule 94 (exp1 -> OR texp exp1 .)
    FALSE           reduce using rule 94 (exp1 -> OR texp exp1 .)
    CCURLY          reduce using rule 94 (exp1 -> OR texp exp1 .)
    COLON           reduce using rule 94 (exp1 -> OR texp exp1 .)
    SEMICOLON       reduce using rule 94 (exp1 -> OR texp exp1 .)
    CPAREN          reduce using rule 94 (exp1 -> OR texp exp1 .)
    COMMA           reduce using rule 94 (exp1 -> OR texp exp1 .)
    CBRACKET        reduce using rule 94 (exp1 -> OR texp exp1 .)


state 191

    (97) texp1 -> AND gexp texp1 .

    OR              reduce using rule 97 (texp1 -> AND gexp texp1 .)
    QUESTION        reduce using rule 97 (texp1 -> AND gexp texp1 .)
    ID              reduce using rule 97 (texp1 -> AND gexp texp1 .)
    IF              reduce using rule 97 (texp1 -> AND gexp texp1 .)
    PRINT           reduce using rule 97 (texp1 -> AND gexp texp1 .)
    READ            reduce using rule 97 (texp1 -> AND gexp texp1 .)
    WHILE           reduce using rule 97 (texp1 -> AND gexp texp1 .)
    FOR             reduce using rule 97 (texp1 -> AND gexp texp1 .)
    OCURLY          reduce using rule 97 (texp1 -> AND gexp texp1 .)
    FUNCTION        reduce using rule 97 (texp1 -> AND gexp texp1 .)
    CLASS           reduce using rule 97 (texp1 -> AND gexp texp1 .)
    VAR             reduce using rule 97 (texp1 -> AND gexp texp1 .)
    OPAREN          reduce using rule 97 (texp1 -> AND gexp texp1 .)
    CSTINT          reduce using rule 97 (texp1 -> AND gexp texp1 .)
    CSTFLT          reduce using rule 97 (texp1 -> AND gexp texp1 .)
    CSTCHAR         reduce using rule 97 (texp1 -> AND gexp texp1 .)
    CSTSTRING       reduce using rule 97 (texp1 -> AND gexp texp1 .)
    TRUE            reduce using rule 97 (texp1 -> AND gexp texp1 .)
    FALSE           reduce using rule 97 (texp1 -> AND gexp texp1 .)
    CCURLY          reduce using rule 97 (texp1 -> AND gexp texp1 .)
    COLON           reduce using rule 97 (texp1 -> AND gexp texp1 .)
    SEMICOLON       reduce using rule 97 (texp1 -> AND gexp texp1 .)
    CPAREN          reduce using rule 97 (texp1 -> AND gexp texp1 .)
    COMMA           reduce using rule 97 (texp1 -> AND gexp texp1 .)
    CBRACKET        reduce using rule 97 (texp1 -> AND gexp texp1 .)


state 192

    (100) gexp1 -> LT saw_relational_operator mexp .

    AND             reduce using rule 100 (gexp1 -> LT saw_relational_operator mexp .)
    OR              reduce using rule 100 (gexp1 -> LT saw_relational_operator mexp .)
    QUESTION        reduce using rule 100 (gexp1 -> LT saw_relational_operator mexp .)
    ID              reduce using rule 100 (gexp1 -> LT saw_relational_operator mexp .)
    IF              reduce using rule 100 (gexp1 -> LT saw_relational_operator mexp .)
    PRINT           reduce using rule 100 (gexp1 -> LT saw_relational_operator mexp .)
    READ            reduce using rule 100 (gexp1 -> LT saw_relational_operator mexp .)
    WHILE           reduce using rule 100 (gexp1 -> LT saw_relational_operator mexp .)
    FOR             reduce using rule 100 (gexp1 -> LT saw_relational_operator mexp .)
    OCURLY          reduce using rule 100 (gexp1 -> LT saw_relational_operator mexp .)
    FUNCTION        reduce using rule 100 (gexp1 -> LT saw_relational_operator mexp .)
    CLASS           reduce using rule 100 (gexp1 -> LT saw_relational_operator mexp .)
    VAR             reduce using rule 100 (gexp1 -> LT saw_relational_operator mexp .)
    OPAREN          reduce using rule 100 (gexp1 -> LT saw_relational_operator mexp .)
    CSTINT          reduce using rule 100 (gexp1 -> LT saw_relational_operator mexp .)
    CSTFLT          reduce using rule 100 (gexp1 -> LT saw_relational_operator mexp .)
    CSTCHAR         reduce using rule 100 (gexp1 -> LT saw_relational_operator mexp .)
    CSTSTRING       reduce using rule 100 (gexp1 -> LT saw_relational_operator mexp .)
    TRUE            reduce using rule 100 (gexp1 -> LT saw_relational_operator mexp .)
    FALSE           reduce using rule 100 (gexp1 -> LT saw_relational_operator mexp .)
    CCURLY          reduce using rule 100 (gexp1 -> LT saw_relational_operator mexp .)
    COLON           reduce using rule 100 (gexp1 -> LT saw_relational_operator mexp .)
    SEMICOLON       reduce using rule 100 (gexp1 -> LT saw_relational_operator mexp .)
    CPAREN          reduce using rule 100 (gexp1 -> LT saw_relational_operator mexp .)
    COMMA           reduce using rule 100 (gexp1 -> LT saw_relational_operator mexp .)
    CBRACKET        reduce using rule 100 (gexp1 -> LT saw_relational_operator mexp .)


state 193

    (101) gexp1 -> GT saw_relational_operator mexp .

    AND             reduce using rule 101 (gexp1 -> GT saw_relational_operator mexp .)
    OR              reduce using rule 101 (gexp1 -> GT saw_relational_operator mexp .)
    QUESTION        reduce using rule 101 (gexp1 -> GT saw_relational_operator mexp .)
    ID              reduce using rule 101 (gexp1 -> GT saw_relational_operator mexp .)
    IF              reduce using rule 101 (gexp1 -> GT saw_relational_operator mexp .)
    PRINT           reduce using rule 101 (gexp1 -> GT saw_relational_operator mexp .)
    READ            reduce using rule 101 (gexp1 -> GT saw_relational_operator mexp .)
    WHILE           reduce using rule 101 (gexp1 -> GT saw_relational_operator mexp .)
    FOR             reduce using rule 101 (gexp1 -> GT saw_relational_operator mexp .)
    OCURLY          reduce using rule 101 (gexp1 -> GT saw_relational_operator mexp .)
    FUNCTION        reduce using rule 101 (gexp1 -> GT saw_relational_operator mexp .)
    CLASS           reduce using rule 101 (gexp1 -> GT saw_relational_operator mexp .)
    VAR             reduce using rule 101 (gexp1 -> GT saw_relational_operator mexp .)
    OPAREN          reduce using rule 101 (gexp1 -> GT saw_relational_operator mexp .)
    CSTINT          reduce using rule 101 (gexp1 -> GT saw_relational_operator mexp .)
    CSTFLT          reduce using rule 101 (gexp1 -> GT saw_relational_operator mexp .)
    CSTCHAR         reduce using rule 101 (gexp1 -> GT saw_relational_operator mexp .)
    CSTSTRING       reduce using rule 101 (gexp1 -> GT saw_relational_operator mexp .)
    TRUE            reduce using rule 101 (gexp1 -> GT saw_relational_operator mexp .)
    FALSE           reduce using rule 101 (gexp1 -> GT saw_relational_operator mexp .)
    CCURLY          reduce using rule 101 (gexp1 -> GT saw_relational_operator mexp .)
    COLON           reduce using rule 101 (gexp1 -> GT saw_relational_operator mexp .)
    SEMICOLON       reduce using rule 101 (gexp1 -> GT saw_relational_operator mexp .)
    CPAREN          reduce using rule 101 (gexp1 -> GT saw_relational_operator mexp .)
    COMMA           reduce using rule 101 (gexp1 -> GT saw_relational_operator mexp .)
    CBRACKET        reduce using rule 101 (gexp1 -> GT saw_relational_operator mexp .)


state 194

    (102) gexp1 -> GTE saw_relational_operator mexp .

    AND             reduce using rule 102 (gexp1 -> GTE saw_relational_operator mexp .)
    OR              reduce using rule 102 (gexp1 -> GTE saw_relational_operator mexp .)
    QUESTION        reduce using rule 102 (gexp1 -> GTE saw_relational_operator mexp .)
    ID              reduce using rule 102 (gexp1 -> GTE saw_relational_operator mexp .)
    IF              reduce using rule 102 (gexp1 -> GTE saw_relational_operator mexp .)
    PRINT           reduce using rule 102 (gexp1 -> GTE saw_relational_operator mexp .)
    READ            reduce using rule 102 (gexp1 -> GTE saw_relational_operator mexp .)
    WHILE           reduce using rule 102 (gexp1 -> GTE saw_relational_operator mexp .)
    FOR             reduce using rule 102 (gexp1 -> GTE saw_relational_operator mexp .)
    OCURLY          reduce using rule 102 (gexp1 -> GTE saw_relational_operator mexp .)
    FUNCTION        reduce using rule 102 (gexp1 -> GTE saw_relational_operator mexp .)
    CLASS           reduce using rule 102 (gexp1 -> GTE saw_relational_operator mexp .)
    VAR             reduce using rule 102 (gexp1 -> GTE saw_relational_operator mexp .)
    OPAREN          reduce using rule 102 (gexp1 -> GTE saw_relational_operator mexp .)
    CSTINT          reduce using rule 102 (gexp1 -> GTE saw_relational_operator mexp .)
    CSTFLT          reduce using rule 102 (gexp1 -> GTE saw_relational_operator mexp .)
    CSTCHAR         reduce using rule 102 (gexp1 -> GTE saw_relational_operator mexp .)
    CSTSTRING       reduce using rule 102 (gexp1 -> GTE saw_relational_operator mexp .)
    TRUE            reduce using rule 102 (gexp1 -> GTE saw_relational_operator mexp .)
    FALSE           reduce using rule 102 (gexp1 -> GTE saw_relational_operator mexp .)
    CCURLY          reduce using rule 102 (gexp1 -> GTE saw_relational_operator mexp .)
    COLON           reduce using rule 102 (gexp1 -> GTE saw_relational_operator mexp .)
    SEMICOLON       reduce using rule 102 (gexp1 -> GTE saw_relational_operator mexp .)
    CPAREN          reduce using rule 102 (gexp1 -> GTE saw_relational_operator mexp .)
    COMMA           reduce using rule 102 (gexp1 -> GTE saw_relational_operator mexp .)
    CBRACKET        reduce using rule 102 (gexp1 -> GTE saw_relational_operator mexp .)


state 195

    (103) gexp1 -> LTE saw_relational_operator mexp .

    AND             reduce using rule 103 (gexp1 -> LTE saw_relational_operator mexp .)
    OR              reduce using rule 103 (gexp1 -> LTE saw_relational_operator mexp .)
    QUESTION        reduce using rule 103 (gexp1 -> LTE saw_relational_operator mexp .)
    ID              reduce using rule 103 (gexp1 -> LTE saw_relational_operator mexp .)
    IF              reduce using rule 103 (gexp1 -> LTE saw_relational_operator mexp .)
    PRINT           reduce using rule 103 (gexp1 -> LTE saw_relational_operator mexp .)
    READ            reduce using rule 103 (gexp1 -> LTE saw_relational_operator mexp .)
    WHILE           reduce using rule 103 (gexp1 -> LTE saw_relational_operator mexp .)
    FOR             reduce using rule 103 (gexp1 -> LTE saw_relational_operator mexp .)
    OCURLY          reduce using rule 103 (gexp1 -> LTE saw_relational_operator mexp .)
    FUNCTION        reduce using rule 103 (gexp1 -> LTE saw_relational_operator mexp .)
    CLASS           reduce using rule 103 (gexp1 -> LTE saw_relational_operator mexp .)
    VAR             reduce using rule 103 (gexp1 -> LTE saw_relational_operator mexp .)
    OPAREN          reduce using rule 103 (gexp1 -> LTE saw_relational_operator mexp .)
    CSTINT          reduce using rule 103 (gexp1 -> LTE saw_relational_operator mexp .)
    CSTFLT          reduce using rule 103 (gexp1 -> LTE saw_relational_operator mexp .)
    CSTCHAR         reduce using rule 103 (gexp1 -> LTE saw_relational_operator mexp .)
    CSTSTRING       reduce using rule 103 (gexp1 -> LTE saw_relational_operator mexp .)
    TRUE            reduce using rule 103 (gexp1 -> LTE saw_relational_operator mexp .)
    FALSE           reduce using rule 103 (gexp1 -> LTE saw_relational_operator mexp .)
    CCURLY          reduce using rule 103 (gexp1 -> LTE saw_relational_operator mexp .)
    COLON           reduce using rule 103 (gexp1 -> LTE saw_relational_operator mexp .)
    SEMICOLON       reduce using rule 103 (gexp1 -> LTE saw_relational_operator mexp .)
    CPAREN          reduce using rule 103 (gexp1 -> LTE saw_relational_operator mexp .)
    COMMA           reduce using rule 103 (gexp1 -> LTE saw_relational_operator mexp .)
    CBRACKET        reduce using rule 103 (gexp1 -> LTE saw_relational_operator mexp .)


state 196

    (104) gexp1 -> EQ saw_relational_operator mexp .

    AND             reduce using rule 104 (gexp1 -> EQ saw_relational_operator mexp .)
    OR              reduce using rule 104 (gexp1 -> EQ saw_relational_operator mexp .)
    QUESTION        reduce using rule 104 (gexp1 -> EQ saw_relational_operator mexp .)
    ID              reduce using rule 104 (gexp1 -> EQ saw_relational_operator mexp .)
    IF              reduce using rule 104 (gexp1 -> EQ saw_relational_operator mexp .)
    PRINT           reduce using rule 104 (gexp1 -> EQ saw_relational_operator mexp .)
    READ            reduce using rule 104 (gexp1 -> EQ saw_relational_operator mexp .)
    WHILE           reduce using rule 104 (gexp1 -> EQ saw_relational_operator mexp .)
    FOR             reduce using rule 104 (gexp1 -> EQ saw_relational_operator mexp .)
    OCURLY          reduce using rule 104 (gexp1 -> EQ saw_relational_operator mexp .)
    FUNCTION        reduce using rule 104 (gexp1 -> EQ saw_relational_operator mexp .)
    CLASS           reduce using rule 104 (gexp1 -> EQ saw_relational_operator mexp .)
    VAR             reduce using rule 104 (gexp1 -> EQ saw_relational_operator mexp .)
    OPAREN          reduce using rule 104 (gexp1 -> EQ saw_relational_operator mexp .)
    CSTINT          reduce using rule 104 (gexp1 -> EQ saw_relational_operator mexp .)
    CSTFLT          reduce using rule 104 (gexp1 -> EQ saw_relational_operator mexp .)
    CSTCHAR         reduce using rule 104 (gexp1 -> EQ saw_relational_operator mexp .)
    CSTSTRING       reduce using rule 104 (gexp1 -> EQ saw_relational_operator mexp .)
    TRUE            reduce using rule 104 (gexp1 -> EQ saw_relational_operator mexp .)
    FALSE           reduce using rule 104 (gexp1 -> EQ saw_relational_operator mexp .)
    CCURLY          reduce using rule 104 (gexp1 -> EQ saw_relational_operator mexp .)
    COLON           reduce using rule 104 (gexp1 -> EQ saw_relational_operator mexp .)
    SEMICOLON       reduce using rule 104 (gexp1 -> EQ saw_relational_operator mexp .)
    CPAREN          reduce using rule 104 (gexp1 -> EQ saw_relational_operator mexp .)
    COMMA           reduce using rule 104 (gexp1 -> EQ saw_relational_operator mexp .)
    CBRACKET        reduce using rule 104 (gexp1 -> EQ saw_relational_operator mexp .)


state 197

    (105) gexp1 -> NE saw_relational_operator mexp .

    AND             reduce using rule 105 (gexp1 -> NE saw_relational_operator mexp .)
    OR              reduce using rule 105 (gexp1 -> NE saw_relational_operator mexp .)
    QUESTION        reduce using rule 105 (gexp1 -> NE saw_relational_operator mexp .)
    ID              reduce using rule 105 (gexp1 -> NE saw_relational_operator mexp .)
    IF              reduce using rule 105 (gexp1 -> NE saw_relational_operator mexp .)
    PRINT           reduce using rule 105 (gexp1 -> NE saw_relational_operator mexp .)
    READ            reduce using rule 105 (gexp1 -> NE saw_relational_operator mexp .)
    WHILE           reduce using rule 105 (gexp1 -> NE saw_relational_operator mexp .)
    FOR             reduce using rule 105 (gexp1 -> NE saw_relational_operator mexp .)
    OCURLY          reduce using rule 105 (gexp1 -> NE saw_relational_operator mexp .)
    FUNCTION        reduce using rule 105 (gexp1 -> NE saw_relational_operator mexp .)
    CLASS           reduce using rule 105 (gexp1 -> NE saw_relational_operator mexp .)
    VAR             reduce using rule 105 (gexp1 -> NE saw_relational_operator mexp .)
    OPAREN          reduce using rule 105 (gexp1 -> NE saw_relational_operator mexp .)
    CSTINT          reduce using rule 105 (gexp1 -> NE saw_relational_operator mexp .)
    CSTFLT          reduce using rule 105 (gexp1 -> NE saw_relational_operator mexp .)
    CSTCHAR         reduce using rule 105 (gexp1 -> NE saw_relational_operator mexp .)
    CSTSTRING       reduce using rule 105 (gexp1 -> NE saw_relational_operator mexp .)
    TRUE            reduce using rule 105 (gexp1 -> NE saw_relational_operator mexp .)
    FALSE           reduce using rule 105 (gexp1 -> NE saw_relational_operator mexp .)
    CCURLY          reduce using rule 105 (gexp1 -> NE saw_relational_operator mexp .)
    COLON           reduce using rule 105 (gexp1 -> NE saw_relational_operator mexp .)
    SEMICOLON       reduce using rule 105 (gexp1 -> NE saw_relational_operator mexp .)
    CPAREN          reduce using rule 105 (gexp1 -> NE saw_relational_operator mexp .)
    COMMA           reduce using rule 105 (gexp1 -> NE saw_relational_operator mexp .)
    CBRACKET        reduce using rule 105 (gexp1 -> NE saw_relational_operator mexp .)


state 198

    (108) mexp1 -> PLUS saw_plusminus_operator termino . mexp1
    (108) mexp1 -> . PLUS saw_plusminus_operator termino mexp1
    (109) mexp1 -> . MINUS saw_plusminus_operator termino mexp1
    (110) mexp1 -> . empty
    (124) empty -> .

    PLUS            shift and go to state 98
    MINUS           shift and go to state 99
    LT              reduce using rule 124 (empty -> .)
    GT              reduce using rule 124 (empty -> .)
    GTE             reduce using rule 124 (empty -> .)
    LTE             reduce using rule 124 (empty -> .)
    EQ              reduce using rule 124 (empty -> .)
    NE              reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    QUESTION        reduce using rule 124 (empty -> .)
    ID              reduce using rule 124 (empty -> .)
    IF              reduce using rule 124 (empty -> .)
    PRINT           reduce using rule 124 (empty -> .)
    READ            reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    FOR             reduce using rule 124 (empty -> .)
    OCURLY          reduce using rule 124 (empty -> .)
    FUNCTION        reduce using rule 124 (empty -> .)
    CLASS           reduce using rule 124 (empty -> .)
    VAR             reduce using rule 124 (empty -> .)
    OPAREN          reduce using rule 124 (empty -> .)
    CSTINT          reduce using rule 124 (empty -> .)
    CSTFLT          reduce using rule 124 (empty -> .)
    CSTCHAR         reduce using rule 124 (empty -> .)
    CSTSTRING       reduce using rule 124 (empty -> .)
    TRUE            reduce using rule 124 (empty -> .)
    FALSE           reduce using rule 124 (empty -> .)
    CCURLY          reduce using rule 124 (empty -> .)
    COLON           reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    CPAREN          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    CBRACKET        reduce using rule 124 (empty -> .)

    mexp1                          shift and go to state 227
    empty                          shift and go to state 100

state 199

    (109) mexp1 -> MINUS saw_plusminus_operator termino . mexp1
    (108) mexp1 -> . PLUS saw_plusminus_operator termino mexp1
    (109) mexp1 -> . MINUS saw_plusminus_operator termino mexp1
    (110) mexp1 -> . empty
    (124) empty -> .

    PLUS            shift and go to state 98
    MINUS           shift and go to state 99
    LT              reduce using rule 124 (empty -> .)
    GT              reduce using rule 124 (empty -> .)
    GTE             reduce using rule 124 (empty -> .)
    LTE             reduce using rule 124 (empty -> .)
    EQ              reduce using rule 124 (empty -> .)
    NE              reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    QUESTION        reduce using rule 124 (empty -> .)
    ID              reduce using rule 124 (empty -> .)
    IF              reduce using rule 124 (empty -> .)
    PRINT           reduce using rule 124 (empty -> .)
    READ            reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    FOR             reduce using rule 124 (empty -> .)
    OCURLY          reduce using rule 124 (empty -> .)
    FUNCTION        reduce using rule 124 (empty -> .)
    CLASS           reduce using rule 124 (empty -> .)
    VAR             reduce using rule 124 (empty -> .)
    OPAREN          reduce using rule 124 (empty -> .)
    CSTINT          reduce using rule 124 (empty -> .)
    CSTFLT          reduce using rule 124 (empty -> .)
    CSTCHAR         reduce using rule 124 (empty -> .)
    CSTSTRING       reduce using rule 124 (empty -> .)
    TRUE            reduce using rule 124 (empty -> .)
    FALSE           reduce using rule 124 (empty -> .)
    CCURLY          reduce using rule 124 (empty -> .)
    COLON           reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    CPAREN          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    CBRACKET        reduce using rule 124 (empty -> .)

    mexp1                          shift and go to state 228
    empty                          shift and go to state 100

state 200

    (112) term1 -> MULT saw_multdiv_operator factor . term1
    (112) term1 -> . MULT saw_multdiv_operator factor term1
    (113) term1 -> . DIV saw_multdiv_operator factor term1
    (114) term1 -> . empty
    (124) empty -> .

    MULT            shift and go to state 102
    DIV             shift and go to state 103
    PLUS            reduce using rule 124 (empty -> .)
    MINUS           reduce using rule 124 (empty -> .)
    LT              reduce using rule 124 (empty -> .)
    GT              reduce using rule 124 (empty -> .)
    GTE             reduce using rule 124 (empty -> .)
    LTE             reduce using rule 124 (empty -> .)
    EQ              reduce using rule 124 (empty -> .)
    NE              reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    QUESTION        reduce using rule 124 (empty -> .)
    ID              reduce using rule 124 (empty -> .)
    IF              reduce using rule 124 (empty -> .)
    PRINT           reduce using rule 124 (empty -> .)
    READ            reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    FOR             reduce using rule 124 (empty -> .)
    OCURLY          reduce using rule 124 (empty -> .)
    FUNCTION        reduce using rule 124 (empty -> .)
    CLASS           reduce using rule 124 (empty -> .)
    VAR             reduce using rule 124 (empty -> .)
    OPAREN          reduce using rule 124 (empty -> .)
    CSTINT          reduce using rule 124 (empty -> .)
    CSTFLT          reduce using rule 124 (empty -> .)
    CSTCHAR         reduce using rule 124 (empty -> .)
    CSTSTRING       reduce using rule 124 (empty -> .)
    TRUE            reduce using rule 124 (empty -> .)
    FALSE           reduce using rule 124 (empty -> .)
    CCURLY          reduce using rule 124 (empty -> .)
    COLON           reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    CPAREN          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    CBRACKET        reduce using rule 124 (empty -> .)

    term1                          shift and go to state 229
    empty                          shift and go to state 104

state 201

    (113) term1 -> DIV saw_multdiv_operator factor . term1
    (112) term1 -> . MULT saw_multdiv_operator factor term1
    (113) term1 -> . DIV saw_multdiv_operator factor term1
    (114) term1 -> . empty
    (124) empty -> .

    MULT            shift and go to state 102
    DIV             shift and go to state 103
    PLUS            reduce using rule 124 (empty -> .)
    MINUS           reduce using rule 124 (empty -> .)
    LT              reduce using rule 124 (empty -> .)
    GT              reduce using rule 124 (empty -> .)
    GTE             reduce using rule 124 (empty -> .)
    LTE             reduce using rule 124 (empty -> .)
    EQ              reduce using rule 124 (empty -> .)
    NE              reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    QUESTION        reduce using rule 124 (empty -> .)
    ID              reduce using rule 124 (empty -> .)
    IF              reduce using rule 124 (empty -> .)
    PRINT           reduce using rule 124 (empty -> .)
    READ            reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    FOR             reduce using rule 124 (empty -> .)
    OCURLY          reduce using rule 124 (empty -> .)
    FUNCTION        reduce using rule 124 (empty -> .)
    CLASS           reduce using rule 124 (empty -> .)
    VAR             reduce using rule 124 (empty -> .)
    OPAREN          reduce using rule 124 (empty -> .)
    CSTINT          reduce using rule 124 (empty -> .)
    CSTFLT          reduce using rule 124 (empty -> .)
    CSTCHAR         reduce using rule 124 (empty -> .)
    CSTSTRING       reduce using rule 124 (empty -> .)
    TRUE            reduce using rule 124 (empty -> .)
    FALSE           reduce using rule 124 (empty -> .)
    CCURLY          reduce using rule 124 (empty -> .)
    COLON           reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    CPAREN          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    CBRACKET        reduce using rule 124 (empty -> .)

    term1                          shift and go to state 230
    empty                          shift and go to state 104

state 202

    (25) tipo -> compuesto ID saw_id saw_variable . tipo1
    (28) tipo1 -> . COMMA ID saw_id saw_variable tipo1
    (29) tipo1 -> . empty
    (124) empty -> .

    COMMA           shift and go to state 232
    SEMICOLON       reduce using rule 124 (empty -> .)

    tipo1                          shift and go to state 231
    empty                          shift and go to state 233

state 203

    (26) tipo -> simple ID saw_id saw_variable . tipo1
    (28) tipo1 -> . COMMA ID saw_id saw_variable tipo1
    (29) tipo1 -> . empty
    (124) empty -> .

    COMMA           shift and go to state 232
    SEMICOLON       reduce using rule 124 (empty -> .)

    tipo1                          shift and go to state 234
    empty                          shift and go to state 233

state 204

    (27) tipo -> multiple ID saw_id OBRACKET . CSTINT CBRACKET saw_dimension tipo3 saw_variable tipo2

    CSTINT          shift and go to state 235


state 205

    (73) ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux . SEMICOLON

    SEMICOLON       shift and go to state 236


state 206

    (89) llamada -> ID saw_id OPAREN exp llamada1 . CPAREN

    CPAREN          shift and go to state 237


state 207

    (91) llamada1 -> COMMA . exp llamada1
    (93) exp -> . texp exp1
    (96) texp -> . gexp texp1
    (99) gexp -> . mexp gexp1 check_relational_operator
    (107) mexp -> . termino mexp1
    (111) termino -> . factor term1 check_plusminus_operator
    (115) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (116) factor -> . varcst check_multdiv_operator
    (117) factor -> . variable
    (118) factor -> . llamada
    (119) varcst -> . CSTINT saw_end_value_int
    (120) varcst -> . CSTFLT saw_end_value_flt
    (121) varcst -> . CSTCHAR
    (122) varcst -> . CSTSTRING saw_end_value_str
    (123) varcst -> . boolean
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2
    (89) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (90) llamada -> . ID saw_id OPAREN CPAREN
    (80) boolean -> . TRUE
    (81) boolean -> . FALSE

    OPAREN          shift and go to state 29
    CSTINT          shift and go to state 43
    CSTFLT          shift and go to state 44
    CSTCHAR         shift and go to state 45
    CSTSTRING       shift and go to state 46
    ID              shift and go to state 130
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    exp                            shift and go to state 238
    texp                           shift and go to state 37
    gexp                           shift and go to state 38
    mexp                           shift and go to state 39
    termino                        shift and go to state 40
    factor                         shift and go to state 41
    varcst                         shift and go to state 42
    variable                       shift and go to state 127
    llamada                        shift and go to state 129
    boolean                        shift and go to state 47

state 208

    (92) llamada1 -> empty .

    CPAREN          reduce using rule 92 (llamada1 -> empty .)


state 209

    (83) variable -> ID saw_id OBRACKET exp CBRACKET . saw_dimension variable1 saw_called_var
    (130) saw_dimension -> .

    OBRACKET        reduce using rule 130 (saw_dimension -> .)
    AS              reduce using rule 130 (saw_dimension -> .)
    MULT            reduce using rule 130 (saw_dimension -> .)
    DIV             reduce using rule 130 (saw_dimension -> .)
    PLUS            reduce using rule 130 (saw_dimension -> .)
    MINUS           reduce using rule 130 (saw_dimension -> .)
    LT              reduce using rule 130 (saw_dimension -> .)
    GT              reduce using rule 130 (saw_dimension -> .)
    GTE             reduce using rule 130 (saw_dimension -> .)
    LTE             reduce using rule 130 (saw_dimension -> .)
    EQ              reduce using rule 130 (saw_dimension -> .)
    NE              reduce using rule 130 (saw_dimension -> .)
    AND             reduce using rule 130 (saw_dimension -> .)
    OR              reduce using rule 130 (saw_dimension -> .)
    QUESTION        reduce using rule 130 (saw_dimension -> .)
    ID              reduce using rule 130 (saw_dimension -> .)
    IF              reduce using rule 130 (saw_dimension -> .)
    PRINT           reduce using rule 130 (saw_dimension -> .)
    READ            reduce using rule 130 (saw_dimension -> .)
    WHILE           reduce using rule 130 (saw_dimension -> .)
    FOR             reduce using rule 130 (saw_dimension -> .)
    OCURLY          reduce using rule 130 (saw_dimension -> .)
    FUNCTION        reduce using rule 130 (saw_dimension -> .)
    CLASS           reduce using rule 130 (saw_dimension -> .)
    VAR             reduce using rule 130 (saw_dimension -> .)
    OPAREN          reduce using rule 130 (saw_dimension -> .)
    CSTINT          reduce using rule 130 (saw_dimension -> .)
    CSTFLT          reduce using rule 130 (saw_dimension -> .)
    CSTCHAR         reduce using rule 130 (saw_dimension -> .)
    CSTSTRING       reduce using rule 130 (saw_dimension -> .)
    TRUE            reduce using rule 130 (saw_dimension -> .)
    FALSE           reduce using rule 130 (saw_dimension -> .)
    CCURLY          reduce using rule 130 (saw_dimension -> .)
    COLON           reduce using rule 130 (saw_dimension -> .)
    SEMICOLON       reduce using rule 130 (saw_dimension -> .)
    CPAREN          reduce using rule 130 (saw_dimension -> .)
    COMMA           reduce using rule 130 (saw_dimension -> .)
    FROM            reduce using rule 130 (saw_dimension -> .)
    CBRACKET        reduce using rule 130 (saw_dimension -> .)
    TO              reduce using rule 130 (saw_dimension -> .)
    BY              reduce using rule 130 (saw_dimension -> .)

    saw_dimension                  shift and go to state 239

state 210

    (87) variable2 -> PERIOD ID saw_called_var_from_class .
    (88) variable2 -> PERIOD ID saw_called_var_from_class . OBRACKET exp CBRACKET saw_dimension variable1

    AS              reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    MULT            reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    DIV             reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    PLUS            reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    MINUS           reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    LT              reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    GT              reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    GTE             reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    LTE             reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    EQ              reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    NE              reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    AND             reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    OR              reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    QUESTION        reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    ID              reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    IF              reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    PRINT           reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    READ            reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    WHILE           reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    FOR             reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    OCURLY          reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    FUNCTION        reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    CLASS           reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    VAR             reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    OPAREN          reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    CSTINT          reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    CSTFLT          reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    CSTCHAR         reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    CSTSTRING       reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    TRUE            reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    FALSE           reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    CCURLY          reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    COLON           reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    SEMICOLON       reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    CPAREN          reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    COMMA           reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    CBRACKET        reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    FROM            reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    TO              reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    BY              reduce using rule 87 (variable2 -> PERIOD ID saw_called_var_from_class .)
    OBRACKET        shift and go to state 240


state 211

    (115) factor -> OPAREN saw_oparen exp CPAREN saw_cparen . check_multdiv_operator
    (140) check_multdiv_operator -> .

    MULT            reduce using rule 140 (check_multdiv_operator -> .)
    DIV             reduce using rule 140 (check_multdiv_operator -> .)
    PLUS            reduce using rule 140 (check_multdiv_operator -> .)
    MINUS           reduce using rule 140 (check_multdiv_operator -> .)
    LT              reduce using rule 140 (check_multdiv_operator -> .)
    GT              reduce using rule 140 (check_multdiv_operator -> .)
    GTE             reduce using rule 140 (check_multdiv_operator -> .)
    LTE             reduce using rule 140 (check_multdiv_operator -> .)
    EQ              reduce using rule 140 (check_multdiv_operator -> .)
    NE              reduce using rule 140 (check_multdiv_operator -> .)
    AND             reduce using rule 140 (check_multdiv_operator -> .)
    OR              reduce using rule 140 (check_multdiv_operator -> .)
    QUESTION        reduce using rule 140 (check_multdiv_operator -> .)
    ID              reduce using rule 140 (check_multdiv_operator -> .)
    IF              reduce using rule 140 (check_multdiv_operator -> .)
    PRINT           reduce using rule 140 (check_multdiv_operator -> .)
    READ            reduce using rule 140 (check_multdiv_operator -> .)
    WHILE           reduce using rule 140 (check_multdiv_operator -> .)
    FOR             reduce using rule 140 (check_multdiv_operator -> .)
    OCURLY          reduce using rule 140 (check_multdiv_operator -> .)
    FUNCTION        reduce using rule 140 (check_multdiv_operator -> .)
    CLASS           reduce using rule 140 (check_multdiv_operator -> .)
    VAR             reduce using rule 140 (check_multdiv_operator -> .)
    OPAREN          reduce using rule 140 (check_multdiv_operator -> .)
    CSTINT          reduce using rule 140 (check_multdiv_operator -> .)
    CSTFLT          reduce using rule 140 (check_multdiv_operator -> .)
    CSTCHAR         reduce using rule 140 (check_multdiv_operator -> .)
    CSTSTRING       reduce using rule 140 (check_multdiv_operator -> .)
    TRUE            reduce using rule 140 (check_multdiv_operator -> .)
    FALSE           reduce using rule 140 (check_multdiv_operator -> .)
    CCURLY          reduce using rule 140 (check_multdiv_operator -> .)
    COLON           reduce using rule 140 (check_multdiv_operator -> .)
    SEMICOLON       reduce using rule 140 (check_multdiv_operator -> .)
    CPAREN          reduce using rule 140 (check_multdiv_operator -> .)
    COMMA           reduce using rule 140 (check_multdiv_operator -> .)
    CBRACKET        reduce using rule 140 (check_multdiv_operator -> .)

    check_multdiv_operator         shift and go to state 241

state 212

    (68) condicion -> IF cond2 THEN bloque cond1 . SEMICOLON

    SEMICOLON       shift and go to state 242


state 213

    (69) cond1 -> ELSE . bloque
    (70) cond1 -> ELSE . IF cond2 THEN bloque cond1
    (47) bloque -> . OCURLY b1 CCURLY scope_end

    IF              shift and go to state 244
    OCURLY          shift and go to state 8

    bloque                         shift and go to state 243

state 214

    (71) cond1 -> empty .

    SEMICOLON       reduce using rule 71 (cond1 -> empty .)


state 215

    (74) escritura -> PRINT OPAREN exp saw_print_exp e1 . CPAREN

    CPAREN          shift and go to state 245


state 216

    (75) e1 -> COMMA . exp saw_print_exp e1
    (93) exp -> . texp exp1
    (96) texp -> . gexp texp1
    (99) gexp -> . mexp gexp1 check_relational_operator
    (107) mexp -> . termino mexp1
    (111) termino -> . factor term1 check_plusminus_operator
    (115) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (116) factor -> . varcst check_multdiv_operator
    (117) factor -> . variable
    (118) factor -> . llamada
    (119) varcst -> . CSTINT saw_end_value_int
    (120) varcst -> . CSTFLT saw_end_value_flt
    (121) varcst -> . CSTCHAR
    (122) varcst -> . CSTSTRING saw_end_value_str
    (123) varcst -> . boolean
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2
    (89) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (90) llamada -> . ID saw_id OPAREN CPAREN
    (80) boolean -> . TRUE
    (81) boolean -> . FALSE

    OPAREN          shift and go to state 29
    CSTINT          shift and go to state 43
    CSTFLT          shift and go to state 44
    CSTCHAR         shift and go to state 45
    CSTSTRING       shift and go to state 46
    ID              shift and go to state 130
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    exp                            shift and go to state 246
    texp                           shift and go to state 37
    gexp                           shift and go to state 38
    mexp                           shift and go to state 39
    termino                        shift and go to state 40
    factor                         shift and go to state 41
    varcst                         shift and go to state 42
    variable                       shift and go to state 127
    llamada                        shift and go to state 129
    boolean                        shift and go to state 47

state 217

    (76) e1 -> empty .

    CPAREN          reduce using rule 76 (e1 -> empty .)


state 218

    (77) leer -> READ OPAREN variable saw_read_exp l1 . CPAREN

    CPAREN          shift and go to state 247


state 219

    (78) l1 -> COMMA . variable saw_read_exp e1
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2

    ID              shift and go to state 147

    variable                       shift and go to state 248

state 220

    (79) l1 -> empty .

    CPAREN          reduce using rule 79 (l1 -> empty .)


state 221

    (18) ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .

    ID              reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    IF              reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    PRINT           reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    READ            reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    WHILE           reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    FOR             reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    OCURLY          reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    FUNCTION        reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CLASS           reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    VAR             reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    OPAREN          reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CSTINT          reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CSTFLT          reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CSTCHAR         reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CSTSTRING       reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    TRUE            reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    FALSE           reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CCURLY          reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)


state 222

    (21) ciclo_for1 -> variable .

    TO              reduce using rule 21 (ciclo_for1 -> variable .)
    BY              reduce using rule 21 (ciclo_for1 -> variable .)
    CPAREN          reduce using rule 21 (ciclo_for1 -> variable .)


state 223

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 . TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON

    TO              shift and go to state 249


state 224

    (20) ciclo_for1 -> CSTINT .

    TO              reduce using rule 20 (ciclo_for1 -> CSTINT .)
    BY              reduce using rule 20 (ciclo_for1 -> CSTINT .)
    CPAREN          reduce using rule 20 (ciclo_for1 -> CSTINT .)


state 225

    (3) funcion -> FUNCTION func1 ID saw_id saw_function . OPAREN param CPAREN bloque

    OPAREN          shift and go to state 250


state 226

    (12) clase -> CLASS ID saw_id saw_class COLON . clase_bloque SEMICOLON
    (13) clase_bloque -> . OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY

    OCURLY          shift and go to state 252

    clase_bloque                   shift and go to state 251

state 227

    (108) mexp1 -> PLUS saw_plusminus_operator termino mexp1 .

    LT              reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    GT              reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    GTE             reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    LTE             reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    EQ              reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    NE              reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    AND             reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    OR              reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    QUESTION        reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    ID              reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    IF              reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    PRINT           reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    READ            reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    WHILE           reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    FOR             reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    OCURLY          reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    FUNCTION        reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    CLASS           reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    VAR             reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    OPAREN          reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    CSTINT          reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    CSTFLT          reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    CSTCHAR         reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    CSTSTRING       reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    TRUE            reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    FALSE           reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    CCURLY          reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    COLON           reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    SEMICOLON       reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    CPAREN          reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    COMMA           reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    CBRACKET        reduce using rule 108 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)


state 228

    (109) mexp1 -> MINUS saw_plusminus_operator termino mexp1 .

    LT              reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    GT              reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    GTE             reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    LTE             reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    EQ              reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    NE              reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    AND             reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    OR              reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    QUESTION        reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    ID              reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    IF              reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    PRINT           reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    READ            reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    WHILE           reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    FOR             reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    OCURLY          reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    FUNCTION        reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    CLASS           reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    VAR             reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    OPAREN          reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    CSTINT          reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    CSTFLT          reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    CSTCHAR         reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    CSTSTRING       reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    TRUE            reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    FALSE           reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    CCURLY          reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    COLON           reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    SEMICOLON       reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    CPAREN          reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    COMMA           reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    CBRACKET        reduce using rule 109 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)


state 229

    (112) term1 -> MULT saw_multdiv_operator factor term1 .

    PLUS            reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    MINUS           reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    LT              reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    GT              reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    GTE             reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    LTE             reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    EQ              reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    NE              reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    AND             reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    OR              reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    QUESTION        reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    ID              reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    IF              reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    PRINT           reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    READ            reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    WHILE           reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    FOR             reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    OCURLY          reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    FUNCTION        reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    CLASS           reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    VAR             reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    OPAREN          reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    CSTINT          reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    CSTFLT          reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    CSTCHAR         reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    CSTSTRING       reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    TRUE            reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    FALSE           reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    CCURLY          reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    COLON           reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    SEMICOLON       reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    CPAREN          reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    COMMA           reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)
    CBRACKET        reduce using rule 112 (term1 -> MULT saw_multdiv_operator factor term1 .)


state 230

    (113) term1 -> DIV saw_multdiv_operator factor term1 .

    PLUS            reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    MINUS           reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    LT              reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    GT              reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    GTE             reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    LTE             reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    EQ              reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    NE              reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    AND             reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    OR              reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    QUESTION        reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    ID              reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    IF              reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    PRINT           reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    READ            reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    WHILE           reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    FOR             reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    OCURLY          reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    FUNCTION        reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    CLASS           reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    VAR             reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    OPAREN          reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    CSTINT          reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    CSTFLT          reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    CSTCHAR         reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    CSTSTRING       reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    TRUE            reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    FALSE           reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    CCURLY          reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    COLON           reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    SEMICOLON       reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    CPAREN          reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    COMMA           reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)
    CBRACKET        reduce using rule 113 (term1 -> DIV saw_multdiv_operator factor term1 .)


state 231

    (25) tipo -> compuesto ID saw_id saw_variable tipo1 .

    SEMICOLON       reduce using rule 25 (tipo -> compuesto ID saw_id saw_variable tipo1 .)


state 232

    (28) tipo1 -> COMMA . ID saw_id saw_variable tipo1

    ID              shift and go to state 253


state 233

    (29) tipo1 -> empty .

    SEMICOLON       reduce using rule 29 (tipo1 -> empty .)


state 234

    (26) tipo -> simple ID saw_id saw_variable tipo1 .

    SEMICOLON       reduce using rule 26 (tipo -> simple ID saw_id saw_variable tipo1 .)


state 235

    (27) tipo -> multiple ID saw_id OBRACKET CSTINT . CBRACKET saw_dimension tipo3 saw_variable tipo2

    CBRACKET        shift and go to state 254


state 236

    (73) ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .

    ID              reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    IF              reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    PRINT           reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    READ            reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    WHILE           reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    FOR             reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    OCURLY          reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    FUNCTION        reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CLASS           reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    VAR             reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    OPAREN          reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CSTINT          reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CSTFLT          reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CSTCHAR         reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CSTSTRING       reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    TRUE            reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    FALSE           reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CCURLY          reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    COLON           reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    SEMICOLON       reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)


state 237

    (89) llamada -> ID saw_id OPAREN exp llamada1 CPAREN .

    ID              reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    IF              reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    PRINT           reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    READ            reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    WHILE           reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    FOR             reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    OCURLY          reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    FUNCTION        reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    CLASS           reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    VAR             reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    OPAREN          reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    CSTINT          reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    CSTFLT          reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    CSTCHAR         reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    CSTSTRING       reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    TRUE            reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    FALSE           reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    CCURLY          reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    MULT            reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    DIV             reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    PLUS            reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    MINUS           reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    LT              reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    GT              reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    GTE             reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    LTE             reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    EQ              reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    NE              reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    AND             reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    OR              reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    QUESTION        reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    COLON           reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    SEMICOLON       reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    CPAREN          reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    COMMA           reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    CBRACKET        reduce using rule 89 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)


state 238

    (91) llamada1 -> COMMA exp . llamada1
    (91) llamada1 -> . COMMA exp llamada1
    (92) llamada1 -> . empty
    (124) empty -> .

    COMMA           shift and go to state 207
    CPAREN          reduce using rule 124 (empty -> .)

    llamada1                       shift and go to state 255
    empty                          shift and go to state 208

state 239

    (83) variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension . variable1 saw_called_var
    (85) variable1 -> . OBRACKET exp CBRACKET saw_dimension
    (86) variable1 -> . empty
    (124) empty -> .

    OBRACKET        shift and go to state 256
    AS              reduce using rule 124 (empty -> .)
    MULT            reduce using rule 124 (empty -> .)
    DIV             reduce using rule 124 (empty -> .)
    PLUS            reduce using rule 124 (empty -> .)
    MINUS           reduce using rule 124 (empty -> .)
    LT              reduce using rule 124 (empty -> .)
    GT              reduce using rule 124 (empty -> .)
    GTE             reduce using rule 124 (empty -> .)
    LTE             reduce using rule 124 (empty -> .)
    EQ              reduce using rule 124 (empty -> .)
    NE              reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    QUESTION        reduce using rule 124 (empty -> .)
    ID              reduce using rule 124 (empty -> .)
    IF              reduce using rule 124 (empty -> .)
    PRINT           reduce using rule 124 (empty -> .)
    READ            reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    FOR             reduce using rule 124 (empty -> .)
    OCURLY          reduce using rule 124 (empty -> .)
    FUNCTION        reduce using rule 124 (empty -> .)
    CLASS           reduce using rule 124 (empty -> .)
    VAR             reduce using rule 124 (empty -> .)
    OPAREN          reduce using rule 124 (empty -> .)
    CSTINT          reduce using rule 124 (empty -> .)
    CSTFLT          reduce using rule 124 (empty -> .)
    CSTCHAR         reduce using rule 124 (empty -> .)
    CSTSTRING       reduce using rule 124 (empty -> .)
    TRUE            reduce using rule 124 (empty -> .)
    FALSE           reduce using rule 124 (empty -> .)
    CCURLY          reduce using rule 124 (empty -> .)
    COLON           reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    CPAREN          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    FROM            reduce using rule 124 (empty -> .)
    CBRACKET        reduce using rule 124 (empty -> .)
    TO              reduce using rule 124 (empty -> .)
    BY              reduce using rule 124 (empty -> .)

    variable1                      shift and go to state 257
    empty                          shift and go to state 258

state 240

    (88) variable2 -> PERIOD ID saw_called_var_from_class OBRACKET . exp CBRACKET saw_dimension variable1
    (93) exp -> . texp exp1
    (96) texp -> . gexp texp1
    (99) gexp -> . mexp gexp1 check_relational_operator
    (107) mexp -> . termino mexp1
    (111) termino -> . factor term1 check_plusminus_operator
    (115) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (116) factor -> . varcst check_multdiv_operator
    (117) factor -> . variable
    (118) factor -> . llamada
    (119) varcst -> . CSTINT saw_end_value_int
    (120) varcst -> . CSTFLT saw_end_value_flt
    (121) varcst -> . CSTCHAR
    (122) varcst -> . CSTSTRING saw_end_value_str
    (123) varcst -> . boolean
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2
    (89) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (90) llamada -> . ID saw_id OPAREN CPAREN
    (80) boolean -> . TRUE
    (81) boolean -> . FALSE

    OPAREN          shift and go to state 29
    CSTINT          shift and go to state 43
    CSTFLT          shift and go to state 44
    CSTCHAR         shift and go to state 45
    CSTSTRING       shift and go to state 46
    ID              shift and go to state 130
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    exp                            shift and go to state 259
    texp                           shift and go to state 37
    gexp                           shift and go to state 38
    mexp                           shift and go to state 39
    termino                        shift and go to state 40
    factor                         shift and go to state 41
    varcst                         shift and go to state 42
    variable                       shift and go to state 127
    llamada                        shift and go to state 129
    boolean                        shift and go to state 47

state 241

    (115) factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .

    MULT            reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    DIV             reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    PLUS            reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    MINUS           reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    LT              reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    GT              reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    GTE             reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    LTE             reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    EQ              reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    NE              reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    AND             reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    OR              reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    QUESTION        reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    ID              reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    IF              reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    PRINT           reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    READ            reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    WHILE           reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    FOR             reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    OCURLY          reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    FUNCTION        reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    CLASS           reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    VAR             reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    OPAREN          reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    CSTINT          reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    CSTFLT          reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    CSTCHAR         reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    CSTSTRING       reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    TRUE            reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    FALSE           reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    CCURLY          reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    COLON           reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    SEMICOLON       reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    CPAREN          reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    COMMA           reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    CBRACKET        reduce using rule 115 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)


state 242

    (68) condicion -> IF cond2 THEN bloque cond1 SEMICOLON .

    ID              reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    IF              reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    PRINT           reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    READ            reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    WHILE           reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    FOR             reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    OCURLY          reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    FUNCTION        reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CLASS           reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    VAR             reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    OPAREN          reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CSTINT          reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CSTFLT          reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CSTCHAR         reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CSTSTRING       reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    TRUE            reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    FALSE           reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CCURLY          reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)


state 243

    (69) cond1 -> ELSE bloque .

    SEMICOLON       reduce using rule 69 (cond1 -> ELSE bloque .)


state 244

    (70) cond1 -> ELSE IF . cond2 THEN bloque cond1
    (72) cond2 -> . OPAREN exp CPAREN

    OPAREN          shift and go to state 74

    cond2                          shift and go to state 260

state 245

    (74) escritura -> PRINT OPAREN exp saw_print_exp e1 CPAREN .

    ID              reduce using rule 74 (escritura -> PRINT OPAREN exp saw_print_exp e1 CPAREN .)
    IF              reduce using rule 74 (escritura -> PRINT OPAREN exp saw_print_exp e1 CPAREN .)
    PRINT           reduce using rule 74 (escritura -> PRINT OPAREN exp saw_print_exp e1 CPAREN .)
    READ            reduce using rule 74 (escritura -> PRINT OPAREN exp saw_print_exp e1 CPAREN .)
    WHILE           reduce using rule 74 (escritura -> PRINT OPAREN exp saw_print_exp e1 CPAREN .)
    FOR             reduce using rule 74 (escritura -> PRINT OPAREN exp saw_print_exp e1 CPAREN .)
    OCURLY          reduce using rule 74 (escritura -> PRINT OPAREN exp saw_print_exp e1 CPAREN .)
    FUNCTION        reduce using rule 74 (escritura -> PRINT OPAREN exp saw_print_exp e1 CPAREN .)
    CLASS           reduce using rule 74 (escritura -> PRINT OPAREN exp saw_print_exp e1 CPAREN .)
    VAR             reduce using rule 74 (escritura -> PRINT OPAREN exp saw_print_exp e1 CPAREN .)
    OPAREN          reduce using rule 74 (escritura -> PRINT OPAREN exp saw_print_exp e1 CPAREN .)
    CSTINT          reduce using rule 74 (escritura -> PRINT OPAREN exp saw_print_exp e1 CPAREN .)
    CSTFLT          reduce using rule 74 (escritura -> PRINT OPAREN exp saw_print_exp e1 CPAREN .)
    CSTCHAR         reduce using rule 74 (escritura -> PRINT OPAREN exp saw_print_exp e1 CPAREN .)
    CSTSTRING       reduce using rule 74 (escritura -> PRINT OPAREN exp saw_print_exp e1 CPAREN .)
    TRUE            reduce using rule 74 (escritura -> PRINT OPAREN exp saw_print_exp e1 CPAREN .)
    FALSE           reduce using rule 74 (escritura -> PRINT OPAREN exp saw_print_exp e1 CPAREN .)
    CCURLY          reduce using rule 74 (escritura -> PRINT OPAREN exp saw_print_exp e1 CPAREN .)
    COLON           reduce using rule 74 (escritura -> PRINT OPAREN exp saw_print_exp e1 CPAREN .)
    SEMICOLON       reduce using rule 74 (escritura -> PRINT OPAREN exp saw_print_exp e1 CPAREN .)


state 246

    (75) e1 -> COMMA exp . saw_print_exp e1
    (148) saw_print_exp -> .

    COMMA           reduce using rule 148 (saw_print_exp -> .)
    CPAREN          reduce using rule 148 (saw_print_exp -> .)

    saw_print_exp                  shift and go to state 261

state 247

    (77) leer -> READ OPAREN variable saw_read_exp l1 CPAREN .

    ID              reduce using rule 77 (leer -> READ OPAREN variable saw_read_exp l1 CPAREN .)
    IF              reduce using rule 77 (leer -> READ OPAREN variable saw_read_exp l1 CPAREN .)
    PRINT           reduce using rule 77 (leer -> READ OPAREN variable saw_read_exp l1 CPAREN .)
    READ            reduce using rule 77 (leer -> READ OPAREN variable saw_read_exp l1 CPAREN .)
    WHILE           reduce using rule 77 (leer -> READ OPAREN variable saw_read_exp l1 CPAREN .)
    FOR             reduce using rule 77 (leer -> READ OPAREN variable saw_read_exp l1 CPAREN .)
    OCURLY          reduce using rule 77 (leer -> READ OPAREN variable saw_read_exp l1 CPAREN .)
    FUNCTION        reduce using rule 77 (leer -> READ OPAREN variable saw_read_exp l1 CPAREN .)
    CLASS           reduce using rule 77 (leer -> READ OPAREN variable saw_read_exp l1 CPAREN .)
    VAR             reduce using rule 77 (leer -> READ OPAREN variable saw_read_exp l1 CPAREN .)
    OPAREN          reduce using rule 77 (leer -> READ OPAREN variable saw_read_exp l1 CPAREN .)
    CSTINT          reduce using rule 77 (leer -> READ OPAREN variable saw_read_exp l1 CPAREN .)
    CSTFLT          reduce using rule 77 (leer -> READ OPAREN variable saw_read_exp l1 CPAREN .)
    CSTCHAR         reduce using rule 77 (leer -> READ OPAREN variable saw_read_exp l1 CPAREN .)
    CSTSTRING       reduce using rule 77 (leer -> READ OPAREN variable saw_read_exp l1 CPAREN .)
    TRUE            reduce using rule 77 (leer -> READ OPAREN variable saw_read_exp l1 CPAREN .)
    FALSE           reduce using rule 77 (leer -> READ OPAREN variable saw_read_exp l1 CPAREN .)
    CCURLY          reduce using rule 77 (leer -> READ OPAREN variable saw_read_exp l1 CPAREN .)
    COLON           reduce using rule 77 (leer -> READ OPAREN variable saw_read_exp l1 CPAREN .)
    SEMICOLON       reduce using rule 77 (leer -> READ OPAREN variable saw_read_exp l1 CPAREN .)


state 248

    (78) l1 -> COMMA variable . saw_read_exp e1
    (149) saw_read_exp -> .

    COMMA           reduce using rule 149 (saw_read_exp -> .)
    CPAREN          reduce using rule 149 (saw_read_exp -> .)

    saw_read_exp                   shift and go to state 262

state 249

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO . ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
    (20) ciclo_for1 -> . CSTINT
    (21) ciclo_for1 -> . variable
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2

    CSTINT          shift and go to state 224
    ID              shift and go to state 147

    variable                       shift and go to state 222
    ciclo_for1                     shift and go to state 263

state 250

    (3) funcion -> FUNCTION func1 ID saw_id saw_function OPAREN . param CPAREN bloque
    (6) param -> . param2 param1
    (7) param -> . empty
    (10) param2 -> . simple ID saw_id saw_variable
    (11) param2 -> . multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable
    (124) empty -> .
    (34) simple -> . INT saw_type
    (35) simple -> . FLOAT saw_type
    (36) simple -> . BOOL saw_type
    (37) simple -> . STRING saw_type
    (38) simple -> . CHAR saw_type
    (39) multiple -> . INTS saw_type
    (40) multiple -> . FLOATS saw_type
    (41) multiple -> . BOOLS saw_type
    (42) multiple -> . STRINGS saw_type
    (43) multiple -> . CHARS saw_type

    CPAREN          reduce using rule 124 (empty -> .)
    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    BOOL            shift and go to state 59
    STRING          shift and go to state 60
    CHAR            shift and go to state 61
    INTS            shift and go to state 62
    FLOATS          shift and go to state 63
    BOOLS           shift and go to state 64
    STRINGS         shift and go to state 65
    CHARS           shift and go to state 66

    param                          shift and go to state 264
    param2                         shift and go to state 265
    empty                          shift and go to state 266
    simple                         shift and go to state 267
    multiple                       shift and go to state 268

state 251

    (12) clase -> CLASS ID saw_id saw_class COLON clase_bloque . SEMICOLON

    SEMICOLON       shift and go to state 269


state 252

    (13) clase_bloque -> OCURLY . ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY

    ATTRIBUTES      shift and go to state 270


state 253

    (28) tipo1 -> COMMA ID . saw_id saw_variable tipo1
    (128) saw_id -> .

    COMMA           reduce using rule 128 (saw_id -> .)
    SEMICOLON       reduce using rule 128 (saw_id -> .)

    saw_id                         shift and go to state 271

state 254

    (27) tipo -> multiple ID saw_id OBRACKET CSTINT CBRACKET . saw_dimension tipo3 saw_variable tipo2
    (130) saw_dimension -> .

    OBRACKET        reduce using rule 130 (saw_dimension -> .)
    COMMA           reduce using rule 130 (saw_dimension -> .)
    SEMICOLON       reduce using rule 130 (saw_dimension -> .)

    saw_dimension                  shift and go to state 272

state 255

    (91) llamada1 -> COMMA exp llamada1 .

    CPAREN          reduce using rule 91 (llamada1 -> COMMA exp llamada1 .)


state 256

    (85) variable1 -> OBRACKET . exp CBRACKET saw_dimension
    (93) exp -> . texp exp1
    (96) texp -> . gexp texp1
    (99) gexp -> . mexp gexp1 check_relational_operator
    (107) mexp -> . termino mexp1
    (111) termino -> . factor term1 check_plusminus_operator
    (115) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (116) factor -> . varcst check_multdiv_operator
    (117) factor -> . variable
    (118) factor -> . llamada
    (119) varcst -> . CSTINT saw_end_value_int
    (120) varcst -> . CSTFLT saw_end_value_flt
    (121) varcst -> . CSTCHAR
    (122) varcst -> . CSTSTRING saw_end_value_str
    (123) varcst -> . boolean
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2
    (89) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (90) llamada -> . ID saw_id OPAREN CPAREN
    (80) boolean -> . TRUE
    (81) boolean -> . FALSE

    OPAREN          shift and go to state 29
    CSTINT          shift and go to state 43
    CSTFLT          shift and go to state 44
    CSTCHAR         shift and go to state 45
    CSTSTRING       shift and go to state 46
    ID              shift and go to state 130
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    exp                            shift and go to state 273
    texp                           shift and go to state 37
    gexp                           shift and go to state 38
    mexp                           shift and go to state 39
    termino                        shift and go to state 40
    factor                         shift and go to state 41
    varcst                         shift and go to state 42
    variable                       shift and go to state 127
    llamada                        shift and go to state 129
    boolean                        shift and go to state 47

state 257

    (83) variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 . saw_called_var
    (131) saw_called_var -> .

    AS              reduce using rule 131 (saw_called_var -> .)
    MULT            reduce using rule 131 (saw_called_var -> .)
    DIV             reduce using rule 131 (saw_called_var -> .)
    PLUS            reduce using rule 131 (saw_called_var -> .)
    MINUS           reduce using rule 131 (saw_called_var -> .)
    LT              reduce using rule 131 (saw_called_var -> .)
    GT              reduce using rule 131 (saw_called_var -> .)
    GTE             reduce using rule 131 (saw_called_var -> .)
    LTE             reduce using rule 131 (saw_called_var -> .)
    EQ              reduce using rule 131 (saw_called_var -> .)
    NE              reduce using rule 131 (saw_called_var -> .)
    AND             reduce using rule 131 (saw_called_var -> .)
    OR              reduce using rule 131 (saw_called_var -> .)
    QUESTION        reduce using rule 131 (saw_called_var -> .)
    ID              reduce using rule 131 (saw_called_var -> .)
    IF              reduce using rule 131 (saw_called_var -> .)
    PRINT           reduce using rule 131 (saw_called_var -> .)
    READ            reduce using rule 131 (saw_called_var -> .)
    WHILE           reduce using rule 131 (saw_called_var -> .)
    FOR             reduce using rule 131 (saw_called_var -> .)
    OCURLY          reduce using rule 131 (saw_called_var -> .)
    FUNCTION        reduce using rule 131 (saw_called_var -> .)
    CLASS           reduce using rule 131 (saw_called_var -> .)
    VAR             reduce using rule 131 (saw_called_var -> .)
    OPAREN          reduce using rule 131 (saw_called_var -> .)
    CSTINT          reduce using rule 131 (saw_called_var -> .)
    CSTFLT          reduce using rule 131 (saw_called_var -> .)
    CSTCHAR         reduce using rule 131 (saw_called_var -> .)
    CSTSTRING       reduce using rule 131 (saw_called_var -> .)
    TRUE            reduce using rule 131 (saw_called_var -> .)
    FALSE           reduce using rule 131 (saw_called_var -> .)
    CCURLY          reduce using rule 131 (saw_called_var -> .)
    COLON           reduce using rule 131 (saw_called_var -> .)
    SEMICOLON       reduce using rule 131 (saw_called_var -> .)
    CPAREN          reduce using rule 131 (saw_called_var -> .)
    COMMA           reduce using rule 131 (saw_called_var -> .)
    FROM            reduce using rule 131 (saw_called_var -> .)
    CBRACKET        reduce using rule 131 (saw_called_var -> .)
    TO              reduce using rule 131 (saw_called_var -> .)
    BY              reduce using rule 131 (saw_called_var -> .)

    saw_called_var                 shift and go to state 274

state 258

    (86) variable1 -> empty .

    AS              reduce using rule 86 (variable1 -> empty .)
    MULT            reduce using rule 86 (variable1 -> empty .)
    DIV             reduce using rule 86 (variable1 -> empty .)
    PLUS            reduce using rule 86 (variable1 -> empty .)
    MINUS           reduce using rule 86 (variable1 -> empty .)
    LT              reduce using rule 86 (variable1 -> empty .)
    GT              reduce using rule 86 (variable1 -> empty .)
    GTE             reduce using rule 86 (variable1 -> empty .)
    LTE             reduce using rule 86 (variable1 -> empty .)
    EQ              reduce using rule 86 (variable1 -> empty .)
    NE              reduce using rule 86 (variable1 -> empty .)
    AND             reduce using rule 86 (variable1 -> empty .)
    OR              reduce using rule 86 (variable1 -> empty .)
    QUESTION        reduce using rule 86 (variable1 -> empty .)
    ID              reduce using rule 86 (variable1 -> empty .)
    IF              reduce using rule 86 (variable1 -> empty .)
    PRINT           reduce using rule 86 (variable1 -> empty .)
    READ            reduce using rule 86 (variable1 -> empty .)
    WHILE           reduce using rule 86 (variable1 -> empty .)
    FOR             reduce using rule 86 (variable1 -> empty .)
    OCURLY          reduce using rule 86 (variable1 -> empty .)
    FUNCTION        reduce using rule 86 (variable1 -> empty .)
    CLASS           reduce using rule 86 (variable1 -> empty .)
    VAR             reduce using rule 86 (variable1 -> empty .)
    OPAREN          reduce using rule 86 (variable1 -> empty .)
    CSTINT          reduce using rule 86 (variable1 -> empty .)
    CSTFLT          reduce using rule 86 (variable1 -> empty .)
    CSTCHAR         reduce using rule 86 (variable1 -> empty .)
    CSTSTRING       reduce using rule 86 (variable1 -> empty .)
    TRUE            reduce using rule 86 (variable1 -> empty .)
    FALSE           reduce using rule 86 (variable1 -> empty .)
    CCURLY          reduce using rule 86 (variable1 -> empty .)
    COLON           reduce using rule 86 (variable1 -> empty .)
    SEMICOLON       reduce using rule 86 (variable1 -> empty .)
    CPAREN          reduce using rule 86 (variable1 -> empty .)
    COMMA           reduce using rule 86 (variable1 -> empty .)
    FROM            reduce using rule 86 (variable1 -> empty .)
    CBRACKET        reduce using rule 86 (variable1 -> empty .)
    TO              reduce using rule 86 (variable1 -> empty .)
    BY              reduce using rule 86 (variable1 -> empty .)


state 259

    (88) variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp . CBRACKET saw_dimension variable1

    CBRACKET        shift and go to state 275


state 260

    (70) cond1 -> ELSE IF cond2 . THEN bloque cond1

    THEN            shift and go to state 276


state 261

    (75) e1 -> COMMA exp saw_print_exp . e1
    (75) e1 -> . COMMA exp saw_print_exp e1
    (76) e1 -> . empty
    (124) empty -> .

    COMMA           shift and go to state 216
    CPAREN          reduce using rule 124 (empty -> .)

    e1                             shift and go to state 277
    empty                          shift and go to state 217

state 262

    (78) l1 -> COMMA variable saw_read_exp . e1
    (75) e1 -> . COMMA exp saw_print_exp e1
    (76) e1 -> . empty
    (124) empty -> .

    COMMA           shift and go to state 216
    CPAREN          reduce using rule 124 (empty -> .)

    e1                             shift and go to state 278
    empty                          shift and go to state 217

state 263

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 . BY ciclo_for1 CPAREN THEN bloque SEMICOLON

    BY              shift and go to state 279


state 264

    (3) funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param . CPAREN bloque

    CPAREN          shift and go to state 280


state 265

    (6) param -> param2 . param1
    (8) param1 -> . COMMA param2 param1
    (9) param1 -> . empty
    (124) empty -> .

    COMMA           shift and go to state 282
    CPAREN          reduce using rule 124 (empty -> .)

    param1                         shift and go to state 281
    empty                          shift and go to state 283

state 266

    (7) param -> empty .

    CPAREN          reduce using rule 7 (param -> empty .)


state 267

    (10) param2 -> simple . ID saw_id saw_variable

    ID              shift and go to state 284


state 268

    (11) param2 -> multiple . ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable

    ID              shift and go to state 285


state 269

    (12) clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .

    ID              reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    IF              reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    PRINT           reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    READ            reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    WHILE           reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    FOR             reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    OCURLY          reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    FUNCTION        reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    CLASS           reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    VAR             reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    OPAREN          reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    CSTINT          reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    CSTFLT          reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    CSTCHAR         reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    CSTSTRING       reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    TRUE            reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    FALSE           reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    CCURLY          reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)


state 270

    (13) clase_bloque -> OCURLY ATTRIBUTES . COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY

    COLON           shift and go to state 286


state 271

    (28) tipo1 -> COMMA ID saw_id . saw_variable tipo1
    (129) saw_variable -> .

    COMMA           reduce using rule 129 (saw_variable -> .)
    SEMICOLON       reduce using rule 129 (saw_variable -> .)

    saw_variable                   shift and go to state 287

state 272

    (27) tipo -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension . tipo3 saw_variable tipo2
    (32) tipo3 -> . OBRACKET CSTINT CBRACKET saw_dimension
    (33) tipo3 -> . empty
    (124) empty -> .

    OBRACKET        shift and go to state 288
    COMMA           reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)

    tipo3                          shift and go to state 289
    empty                          shift and go to state 290

state 273

    (85) variable1 -> OBRACKET exp . CBRACKET saw_dimension

    CBRACKET        shift and go to state 291


state 274

    (83) variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .

    AS              reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    MULT            reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    DIV             reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    PLUS            reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    MINUS           reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    LT              reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    GT              reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    GTE             reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    LTE             reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    EQ              reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    NE              reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    AND             reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    OR              reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    QUESTION        reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    ID              reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    IF              reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    PRINT           reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    READ            reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    WHILE           reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    FOR             reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    OCURLY          reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    FUNCTION        reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    CLASS           reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    VAR             reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    OPAREN          reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    CSTINT          reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    CSTFLT          reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    CSTCHAR         reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    CSTSTRING       reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    TRUE            reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    FALSE           reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    CCURLY          reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    COLON           reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    SEMICOLON       reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    CPAREN          reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    COMMA           reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    FROM            reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    CBRACKET        reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    TO              reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    BY              reduce using rule 83 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)


state 275

    (88) variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET . saw_dimension variable1
    (130) saw_dimension -> .

    OBRACKET        reduce using rule 130 (saw_dimension -> .)
    AS              reduce using rule 130 (saw_dimension -> .)
    MULT            reduce using rule 130 (saw_dimension -> .)
    DIV             reduce using rule 130 (saw_dimension -> .)
    PLUS            reduce using rule 130 (saw_dimension -> .)
    MINUS           reduce using rule 130 (saw_dimension -> .)
    LT              reduce using rule 130 (saw_dimension -> .)
    GT              reduce using rule 130 (saw_dimension -> .)
    GTE             reduce using rule 130 (saw_dimension -> .)
    LTE             reduce using rule 130 (saw_dimension -> .)
    EQ              reduce using rule 130 (saw_dimension -> .)
    NE              reduce using rule 130 (saw_dimension -> .)
    AND             reduce using rule 130 (saw_dimension -> .)
    OR              reduce using rule 130 (saw_dimension -> .)
    QUESTION        reduce using rule 130 (saw_dimension -> .)
    ID              reduce using rule 130 (saw_dimension -> .)
    IF              reduce using rule 130 (saw_dimension -> .)
    PRINT           reduce using rule 130 (saw_dimension -> .)
    READ            reduce using rule 130 (saw_dimension -> .)
    WHILE           reduce using rule 130 (saw_dimension -> .)
    FOR             reduce using rule 130 (saw_dimension -> .)
    OCURLY          reduce using rule 130 (saw_dimension -> .)
    FUNCTION        reduce using rule 130 (saw_dimension -> .)
    CLASS           reduce using rule 130 (saw_dimension -> .)
    VAR             reduce using rule 130 (saw_dimension -> .)
    OPAREN          reduce using rule 130 (saw_dimension -> .)
    CSTINT          reduce using rule 130 (saw_dimension -> .)
    CSTFLT          reduce using rule 130 (saw_dimension -> .)
    CSTCHAR         reduce using rule 130 (saw_dimension -> .)
    CSTSTRING       reduce using rule 130 (saw_dimension -> .)
    TRUE            reduce using rule 130 (saw_dimension -> .)
    FALSE           reduce using rule 130 (saw_dimension -> .)
    CCURLY          reduce using rule 130 (saw_dimension -> .)
    COLON           reduce using rule 130 (saw_dimension -> .)
    SEMICOLON       reduce using rule 130 (saw_dimension -> .)
    CPAREN          reduce using rule 130 (saw_dimension -> .)
    COMMA           reduce using rule 130 (saw_dimension -> .)
    CBRACKET        reduce using rule 130 (saw_dimension -> .)
    FROM            reduce using rule 130 (saw_dimension -> .)
    TO              reduce using rule 130 (saw_dimension -> .)
    BY              reduce using rule 130 (saw_dimension -> .)

    saw_dimension                  shift and go to state 292

state 276

    (70) cond1 -> ELSE IF cond2 THEN . bloque cond1
    (47) bloque -> . OCURLY b1 CCURLY scope_end

    OCURLY          shift and go to state 8

    bloque                         shift and go to state 293

state 277

    (75) e1 -> COMMA exp saw_print_exp e1 .

    CPAREN          reduce using rule 75 (e1 -> COMMA exp saw_print_exp e1 .)


state 278

    (78) l1 -> COMMA variable saw_read_exp e1 .

    CPAREN          reduce using rule 78 (l1 -> COMMA variable saw_read_exp e1 .)


state 279

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY . ciclo_for1 CPAREN THEN bloque SEMICOLON
    (20) ciclo_for1 -> . CSTINT
    (21) ciclo_for1 -> . variable
    (82) variable -> . ID saw_id saw_called_var
    (83) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (84) variable -> . ID saw_id variable2

    CSTINT          shift and go to state 224
    ID              shift and go to state 147

    variable                       shift and go to state 222
    ciclo_for1                     shift and go to state 294

state 280

    (3) funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN . bloque
    (47) bloque -> . OCURLY b1 CCURLY scope_end

    OCURLY          shift and go to state 8

    bloque                         shift and go to state 295

state 281

    (6) param -> param2 param1 .

    CPAREN          reduce using rule 6 (param -> param2 param1 .)


state 282

    (8) param1 -> COMMA . param2 param1
    (10) param2 -> . simple ID saw_id saw_variable
    (11) param2 -> . multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable
    (34) simple -> . INT saw_type
    (35) simple -> . FLOAT saw_type
    (36) simple -> . BOOL saw_type
    (37) simple -> . STRING saw_type
    (38) simple -> . CHAR saw_type
    (39) multiple -> . INTS saw_type
    (40) multiple -> . FLOATS saw_type
    (41) multiple -> . BOOLS saw_type
    (42) multiple -> . STRINGS saw_type
    (43) multiple -> . CHARS saw_type

    INT             shift and go to state 57
    FLOAT           shift and go to state 58
    BOOL            shift and go to state 59
    STRING          shift and go to state 60
    CHAR            shift and go to state 61
    INTS            shift and go to state 62
    FLOATS          shift and go to state 63
    BOOLS           shift and go to state 64
    STRINGS         shift and go to state 65
    CHARS           shift and go to state 66

    param2                         shift and go to state 296
    simple                         shift and go to state 267
    multiple                       shift and go to state 268

state 283

    (9) param1 -> empty .

    CPAREN          reduce using rule 9 (param1 -> empty .)


state 284

    (10) param2 -> simple ID . saw_id saw_variable
    (128) saw_id -> .

    COMMA           reduce using rule 128 (saw_id -> .)
    CPAREN          reduce using rule 128 (saw_id -> .)

    saw_id                         shift and go to state 297

state 285

    (11) param2 -> multiple ID . saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable
    (128) saw_id -> .

    OBRACKET        reduce using rule 128 (saw_id -> .)

    saw_id                         shift and go to state 298

state 286

    (13) clase_bloque -> OCURLY ATTRIBUTES COLON . clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY
    (14) clase_bloque1 -> . dec
    (15) clase_bloque1 -> . empty
    (22) dec -> . VAR tipo SEMICOLON dec1
    (124) empty -> .

    VAR             shift and go to state 9
    METHODS         reduce using rule 124 (empty -> .)

    clase_bloque1                  shift and go to state 299
    dec                            shift and go to state 300
    empty                          shift and go to state 301

state 287

    (28) tipo1 -> COMMA ID saw_id saw_variable . tipo1
    (28) tipo1 -> . COMMA ID saw_id saw_variable tipo1
    (29) tipo1 -> . empty
    (124) empty -> .

    COMMA           shift and go to state 232
    SEMICOLON       reduce using rule 124 (empty -> .)

    tipo1                          shift and go to state 302
    empty                          shift and go to state 233

state 288

    (32) tipo3 -> OBRACKET . CSTINT CBRACKET saw_dimension

    CSTINT          shift and go to state 303


state 289

    (27) tipo -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 . saw_variable tipo2
    (129) saw_variable -> .

    COMMA           reduce using rule 129 (saw_variable -> .)
    SEMICOLON       reduce using rule 129 (saw_variable -> .)

    saw_variable                   shift and go to state 304

state 290

    (33) tipo3 -> empty .

    COMMA           reduce using rule 33 (tipo3 -> empty .)
    SEMICOLON       reduce using rule 33 (tipo3 -> empty .)
    CPAREN          reduce using rule 33 (tipo3 -> empty .)


state 291

    (85) variable1 -> OBRACKET exp CBRACKET . saw_dimension
    (130) saw_dimension -> .

    AS              reduce using rule 130 (saw_dimension -> .)
    MULT            reduce using rule 130 (saw_dimension -> .)
    DIV             reduce using rule 130 (saw_dimension -> .)
    PLUS            reduce using rule 130 (saw_dimension -> .)
    MINUS           reduce using rule 130 (saw_dimension -> .)
    LT              reduce using rule 130 (saw_dimension -> .)
    GT              reduce using rule 130 (saw_dimension -> .)
    GTE             reduce using rule 130 (saw_dimension -> .)
    LTE             reduce using rule 130 (saw_dimension -> .)
    EQ              reduce using rule 130 (saw_dimension -> .)
    NE              reduce using rule 130 (saw_dimension -> .)
    AND             reduce using rule 130 (saw_dimension -> .)
    OR              reduce using rule 130 (saw_dimension -> .)
    QUESTION        reduce using rule 130 (saw_dimension -> .)
    ID              reduce using rule 130 (saw_dimension -> .)
    IF              reduce using rule 130 (saw_dimension -> .)
    PRINT           reduce using rule 130 (saw_dimension -> .)
    READ            reduce using rule 130 (saw_dimension -> .)
    WHILE           reduce using rule 130 (saw_dimension -> .)
    FOR             reduce using rule 130 (saw_dimension -> .)
    OCURLY          reduce using rule 130 (saw_dimension -> .)
    FUNCTION        reduce using rule 130 (saw_dimension -> .)
    CLASS           reduce using rule 130 (saw_dimension -> .)
    VAR             reduce using rule 130 (saw_dimension -> .)
    OPAREN          reduce using rule 130 (saw_dimension -> .)
    CSTINT          reduce using rule 130 (saw_dimension -> .)
    CSTFLT          reduce using rule 130 (saw_dimension -> .)
    CSTCHAR         reduce using rule 130 (saw_dimension -> .)
    CSTSTRING       reduce using rule 130 (saw_dimension -> .)
    TRUE            reduce using rule 130 (saw_dimension -> .)
    FALSE           reduce using rule 130 (saw_dimension -> .)
    CCURLY          reduce using rule 130 (saw_dimension -> .)
    COLON           reduce using rule 130 (saw_dimension -> .)
    SEMICOLON       reduce using rule 130 (saw_dimension -> .)
    CPAREN          reduce using rule 130 (saw_dimension -> .)
    COMMA           reduce using rule 130 (saw_dimension -> .)
    FROM            reduce using rule 130 (saw_dimension -> .)
    CBRACKET        reduce using rule 130 (saw_dimension -> .)
    TO              reduce using rule 130 (saw_dimension -> .)
    BY              reduce using rule 130 (saw_dimension -> .)

    saw_dimension                  shift and go to state 305

state 292

    (88) variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension . variable1
    (85) variable1 -> . OBRACKET exp CBRACKET saw_dimension
    (86) variable1 -> . empty
    (124) empty -> .

    OBRACKET        shift and go to state 256
    AS              reduce using rule 124 (empty -> .)
    MULT            reduce using rule 124 (empty -> .)
    DIV             reduce using rule 124 (empty -> .)
    PLUS            reduce using rule 124 (empty -> .)
    MINUS           reduce using rule 124 (empty -> .)
    LT              reduce using rule 124 (empty -> .)
    GT              reduce using rule 124 (empty -> .)
    GTE             reduce using rule 124 (empty -> .)
    LTE             reduce using rule 124 (empty -> .)
    EQ              reduce using rule 124 (empty -> .)
    NE              reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    QUESTION        reduce using rule 124 (empty -> .)
    ID              reduce using rule 124 (empty -> .)
    IF              reduce using rule 124 (empty -> .)
    PRINT           reduce using rule 124 (empty -> .)
    READ            reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    FOR             reduce using rule 124 (empty -> .)
    OCURLY          reduce using rule 124 (empty -> .)
    FUNCTION        reduce using rule 124 (empty -> .)
    CLASS           reduce using rule 124 (empty -> .)
    VAR             reduce using rule 124 (empty -> .)
    OPAREN          reduce using rule 124 (empty -> .)
    CSTINT          reduce using rule 124 (empty -> .)
    CSTFLT          reduce using rule 124 (empty -> .)
    CSTCHAR         reduce using rule 124 (empty -> .)
    CSTSTRING       reduce using rule 124 (empty -> .)
    TRUE            reduce using rule 124 (empty -> .)
    FALSE           reduce using rule 124 (empty -> .)
    CCURLY          reduce using rule 124 (empty -> .)
    COLON           reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    CPAREN          reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    CBRACKET        reduce using rule 124 (empty -> .)
    FROM            reduce using rule 124 (empty -> .)
    TO              reduce using rule 124 (empty -> .)
    BY              reduce using rule 124 (empty -> .)

    variable1                      shift and go to state 306
    empty                          shift and go to state 258

state 293

    (70) cond1 -> ELSE IF cond2 THEN bloque . cond1
    (69) cond1 -> . ELSE bloque
    (70) cond1 -> . ELSE IF cond2 THEN bloque cond1
    (71) cond1 -> . empty
    (124) empty -> .

    ELSE            shift and go to state 213
    SEMICOLON       reduce using rule 124 (empty -> .)

    cond1                          shift and go to state 307
    empty                          shift and go to state 214

state 294

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 . CPAREN THEN bloque SEMICOLON

    CPAREN          shift and go to state 308


state 295

    (3) funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .

    ID              reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    IF              reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    PRINT           reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    READ            reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    WHILE           reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    FOR             reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    OCURLY          reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    FUNCTION        reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    CLASS           reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    VAR             reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    OPAREN          reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    CSTINT          reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    CSTFLT          reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    CSTCHAR         reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    CSTSTRING       reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    TRUE            reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    FALSE           reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    CCURLY          reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)


state 296

    (8) param1 -> COMMA param2 . param1
    (8) param1 -> . COMMA param2 param1
    (9) param1 -> . empty
    (124) empty -> .

    COMMA           shift and go to state 282
    CPAREN          reduce using rule 124 (empty -> .)

    param1                         shift and go to state 309
    empty                          shift and go to state 283

state 297

    (10) param2 -> simple ID saw_id . saw_variable
    (129) saw_variable -> .

    COMMA           reduce using rule 129 (saw_variable -> .)
    CPAREN          reduce using rule 129 (saw_variable -> .)

    saw_variable                   shift and go to state 310

state 298

    (11) param2 -> multiple ID saw_id . OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable

    OBRACKET        shift and go to state 311


state 299

    (13) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 . METHODS COLON clase_metodos_bloque class_scope_end CCURLY

    METHODS         shift and go to state 312


state 300

    (14) clase_bloque1 -> dec .

    METHODS         reduce using rule 14 (clase_bloque1 -> dec .)


state 301

    (15) clase_bloque1 -> empty .

    METHODS         reduce using rule 15 (clase_bloque1 -> empty .)


state 302

    (28) tipo1 -> COMMA ID saw_id saw_variable tipo1 .

    SEMICOLON       reduce using rule 28 (tipo1 -> COMMA ID saw_id saw_variable tipo1 .)


state 303

    (32) tipo3 -> OBRACKET CSTINT . CBRACKET saw_dimension

    CBRACKET        shift and go to state 313


state 304

    (27) tipo -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable . tipo2
    (30) tipo2 -> . COMMA ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable
    (31) tipo2 -> . empty
    (124) empty -> .

    COMMA           shift and go to state 315
    SEMICOLON       reduce using rule 124 (empty -> .)

    tipo2                          shift and go to state 314
    empty                          shift and go to state 316

state 305

    (85) variable1 -> OBRACKET exp CBRACKET saw_dimension .

    AS              reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    MULT            reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    DIV             reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    PLUS            reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    MINUS           reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    LT              reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    GT              reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    GTE             reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    LTE             reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    EQ              reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    NE              reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    AND             reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    OR              reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    QUESTION        reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    ID              reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    IF              reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    PRINT           reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    READ            reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    WHILE           reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    FOR             reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    OCURLY          reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    FUNCTION        reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    CLASS           reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    VAR             reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    OPAREN          reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    CSTINT          reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    CSTFLT          reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    CSTCHAR         reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    CSTSTRING       reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    TRUE            reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    FALSE           reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    CCURLY          reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    COLON           reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    SEMICOLON       reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    CPAREN          reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    COMMA           reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    FROM            reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    CBRACKET        reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    TO              reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    BY              reduce using rule 85 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)


state 306

    (88) variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .

    AS              reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    MULT            reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    DIV             reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    PLUS            reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    MINUS           reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    LT              reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    GT              reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    GTE             reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    LTE             reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    EQ              reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    NE              reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    AND             reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    OR              reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    QUESTION        reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    ID              reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    IF              reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    PRINT           reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    READ            reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    WHILE           reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    FOR             reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    OCURLY          reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    FUNCTION        reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    CLASS           reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    VAR             reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    OPAREN          reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    CSTINT          reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    CSTFLT          reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    CSTCHAR         reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    CSTSTRING       reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    TRUE            reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    FALSE           reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    CCURLY          reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    COLON           reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    SEMICOLON       reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    CPAREN          reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    COMMA           reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    CBRACKET        reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    FROM            reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    TO              reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    BY              reduce using rule 88 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)


state 307

    (70) cond1 -> ELSE IF cond2 THEN bloque cond1 .

    SEMICOLON       reduce using rule 70 (cond1 -> ELSE IF cond2 THEN bloque cond1 .)


state 308

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN . THEN bloque SEMICOLON

    THEN            shift and go to state 317


state 309

    (8) param1 -> COMMA param2 param1 .

    CPAREN          reduce using rule 8 (param1 -> COMMA param2 param1 .)


state 310

    (10) param2 -> simple ID saw_id saw_variable .

    COMMA           reduce using rule 10 (param2 -> simple ID saw_id saw_variable .)
    CPAREN          reduce using rule 10 (param2 -> simple ID saw_id saw_variable .)


state 311

    (11) param2 -> multiple ID saw_id OBRACKET . CSTINT CBRACKET saw_dimension tipo3 saw_variable

    CSTINT          shift and go to state 318


state 312

    (13) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS . COLON clase_metodos_bloque class_scope_end CCURLY

    COLON           shift and go to state 319


state 313

    (32) tipo3 -> OBRACKET CSTINT CBRACKET . saw_dimension
    (130) saw_dimension -> .

    COMMA           reduce using rule 130 (saw_dimension -> .)
    SEMICOLON       reduce using rule 130 (saw_dimension -> .)
    CPAREN          reduce using rule 130 (saw_dimension -> .)

    saw_dimension                  shift and go to state 320

state 314

    (27) tipo -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable tipo2 .

    SEMICOLON       reduce using rule 27 (tipo -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable tipo2 .)


state 315

    (30) tipo2 -> COMMA . ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable

    ID              shift and go to state 321


state 316

    (31) tipo2 -> empty .

    SEMICOLON       reduce using rule 31 (tipo2 -> empty .)


state 317

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN . bloque SEMICOLON
    (47) bloque -> . OCURLY b1 CCURLY scope_end

    OCURLY          shift and go to state 8

    bloque                         shift and go to state 322

state 318

    (11) param2 -> multiple ID saw_id OBRACKET CSTINT . CBRACKET saw_dimension tipo3 saw_variable

    CBRACKET        shift and go to state 323


state 319

    (13) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON . clase_metodos_bloque class_scope_end CCURLY
    (16) clase_metodos_bloque -> . funcion clase_metodos_bloque
    (17) clase_metodos_bloque -> . empty
    (3) funcion -> . FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque
    (124) empty -> .

    FUNCTION        shift and go to state 35
    CCURLY          reduce using rule 124 (empty -> .)

    clase_metodos_bloque           shift and go to state 324
    funcion                        shift and go to state 325
    empty                          shift and go to state 326

state 320

    (32) tipo3 -> OBRACKET CSTINT CBRACKET saw_dimension .

    COMMA           reduce using rule 32 (tipo3 -> OBRACKET CSTINT CBRACKET saw_dimension .)
    SEMICOLON       reduce using rule 32 (tipo3 -> OBRACKET CSTINT CBRACKET saw_dimension .)
    CPAREN          reduce using rule 32 (tipo3 -> OBRACKET CSTINT CBRACKET saw_dimension .)


state 321

    (30) tipo2 -> COMMA ID . saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable
    (128) saw_id -> .

    OBRACKET        reduce using rule 128 (saw_id -> .)

    saw_id                         shift and go to state 327

state 322

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque . SEMICOLON

    SEMICOLON       shift and go to state 328


state 323

    (11) param2 -> multiple ID saw_id OBRACKET CSTINT CBRACKET . saw_dimension tipo3 saw_variable
    (130) saw_dimension -> .

    OBRACKET        reduce using rule 130 (saw_dimension -> .)
    COMMA           reduce using rule 130 (saw_dimension -> .)
    CPAREN          reduce using rule 130 (saw_dimension -> .)

    saw_dimension                  shift and go to state 329

state 324

    (13) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque . class_scope_end CCURLY
    (147) class_scope_end -> .

    CCURLY          reduce using rule 147 (class_scope_end -> .)

    class_scope_end                shift and go to state 330

state 325

    (16) clase_metodos_bloque -> funcion . clase_metodos_bloque
    (16) clase_metodos_bloque -> . funcion clase_metodos_bloque
    (17) clase_metodos_bloque -> . empty
    (3) funcion -> . FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque
    (124) empty -> .

    FUNCTION        shift and go to state 35
    CCURLY          reduce using rule 124 (empty -> .)

    funcion                        shift and go to state 325
    clase_metodos_bloque           shift and go to state 331
    empty                          shift and go to state 326

state 326

    (17) clase_metodos_bloque -> empty .

    CCURLY          reduce using rule 17 (clase_metodos_bloque -> empty .)


state 327

    (30) tipo2 -> COMMA ID saw_id . OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable

    OBRACKET        shift and go to state 332


state 328

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .

    ID              reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    IF              reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    PRINT           reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    READ            reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    WHILE           reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    FOR             reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    OCURLY          reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    FUNCTION        reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CLASS           reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    VAR             reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    OPAREN          reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CSTINT          reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CSTFLT          reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CSTCHAR         reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CSTSTRING       reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    TRUE            reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    FALSE           reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CCURLY          reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)


state 329

    (11) param2 -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension . tipo3 saw_variable
    (32) tipo3 -> . OBRACKET CSTINT CBRACKET saw_dimension
    (33) tipo3 -> . empty
    (124) empty -> .

    OBRACKET        shift and go to state 288
    COMMA           reduce using rule 124 (empty -> .)
    CPAREN          reduce using rule 124 (empty -> .)

    tipo3                          shift and go to state 333
    empty                          shift and go to state 290

state 330

    (13) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end . CCURLY

    CCURLY          shift and go to state 334


state 331

    (16) clase_metodos_bloque -> funcion clase_metodos_bloque .

    CCURLY          reduce using rule 16 (clase_metodos_bloque -> funcion clase_metodos_bloque .)


state 332

    (30) tipo2 -> COMMA ID saw_id OBRACKET . CSTINT CBRACKET saw_dimension tipo3 saw_variable

    CSTINT          shift and go to state 335


state 333

    (11) param2 -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 . saw_variable
    (129) saw_variable -> .

    COMMA           reduce using rule 129 (saw_variable -> .)
    CPAREN          reduce using rule 129 (saw_variable -> .)

    saw_variable                   shift and go to state 336

state 334

    (13) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY .

    SEMICOLON       reduce using rule 13 (clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY .)


state 335

    (30) tipo2 -> COMMA ID saw_id OBRACKET CSTINT . CBRACKET saw_dimension tipo3 saw_variable

    CBRACKET        shift and go to state 337


state 336

    (11) param2 -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable .

    COMMA           reduce using rule 11 (param2 -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable .)
    CPAREN          reduce using rule 11 (param2 -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable .)


state 337

    (30) tipo2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET . saw_dimension tipo3 saw_variable
    (130) saw_dimension -> .

    OBRACKET        reduce using rule 130 (saw_dimension -> .)
    SEMICOLON       reduce using rule 130 (saw_dimension -> .)

    saw_dimension                  shift and go to state 338

state 338

    (30) tipo2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET saw_dimension . tipo3 saw_variable
    (32) tipo3 -> . OBRACKET CSTINT CBRACKET saw_dimension
    (33) tipo3 -> . empty
    (124) empty -> .

    OBRACKET        shift and go to state 288
    SEMICOLON       reduce using rule 124 (empty -> .)

    tipo3                          shift and go to state 339
    empty                          shift and go to state 290

state 339

    (30) tipo2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 . saw_variable
    (129) saw_variable -> .

    SEMICOLON       reduce using rule 129 (saw_variable -> .)

    saw_variable                   shift and go to state 340

state 340

    (30) tipo2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable .

    SEMICOLON       reduce using rule 30 (tipo2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 109 resolved as shift
WARNING: shift/reduce conflict for OPAREN in state 174 resolved as shift
