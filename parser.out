Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    RETURN

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON bloque
Rule 2     programa -> PROGRAM ID SEMICOLON dec bloque
Rule 3     funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque
Rule 4     func1 -> simple
Rule 5     func1 -> VOID saw_type
Rule 6     param -> param2 param1
Rule 7     param -> empty
Rule 8     param1 -> COMMA param2 param1
Rule 9     param1 -> empty
Rule 10    param2 -> simple ID saw_id saw_variable_param
Rule 11    param2 -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable_param
Rule 12    clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON
Rule 13    clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY
Rule 14    clase_bloque1 -> dec
Rule 15    clase_bloque1 -> empty
Rule 16    clase_metodos_bloque -> funcion clase_metodos_bloque
Rule 17    clase_metodos_bloque -> empty
Rule 18    ciclo_while -> WHILE saw_while cond2 THEN bloque_ciclo SEMICOLON saw_while_end
Rule 19    ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON
Rule 20    ciclo_for1 -> CSTINT
Rule 21    ciclo_for1 -> variable
Rule 22    dec -> VAR tipo SEMICOLON dec1
Rule 23    dec1 -> dec
Rule 24    dec1 -> empty
Rule 25    tipo -> compuesto ID saw_id saw_variable tipo1
Rule 26    tipo -> simple ID saw_id saw_variable tipo1
Rule 27    tipo -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable tipo2
Rule 28    tipo1 -> COMMA ID saw_id saw_variable tipo1
Rule 29    tipo1 -> empty
Rule 30    tipo2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable
Rule 31    tipo2 -> empty
Rule 32    tipo3 -> OBRACKET CSTINT CBRACKET saw_dimension
Rule 33    tipo3 -> empty
Rule 34    simple -> INT saw_type
Rule 35    simple -> FLOAT saw_type
Rule 36    simple -> BOOL saw_type
Rule 37    simple -> STRING saw_type
Rule 38    simple -> CHAR saw_type
Rule 39    multiple -> INTS saw_type
Rule 40    multiple -> FLOATS saw_type
Rule 41    multiple -> BOOLS saw_type
Rule 42    multiple -> STRINGS saw_type
Rule 43    multiple -> CHARS saw_type
Rule 44    compuesto -> ID saw_type
Rule 45    compuesto -> DATAFRAME saw_type
Rule 46    compuesto -> FILE saw_type
Rule 47    bloque -> OCURLY b1 CCURLY scope_end
Rule 48    b1 -> estatuto b1
Rule 49    b1 -> empty
Rule 50    bloque_ciclo -> OCURLY bc1 CCURLY
Rule 51    bc1 -> estatuto_ciclo bc1
Rule 52    bc1 -> empty
Rule 53    estatuto -> asignacion
Rule 54    estatuto -> llamada
Rule 55    estatuto -> condicion
Rule 56    estatuto -> escritura
Rule 57    estatuto -> leer
Rule 58    estatuto -> ciclo_while
Rule 59    estatuto -> ciclo_for
Rule 60    estatuto -> ternaria
Rule 61    estatuto -> bloque
Rule 62    estatuto -> funcion
Rule 63    estatuto -> clase
Rule 64    estatuto -> dec
Rule 65    estatuto_ciclo -> asignacion
Rule 66    estatuto_ciclo -> condicion
Rule 67    estatuto_ciclo -> escritura
Rule 68    estatuto_ciclo -> leer
Rule 69    estatuto_ciclo -> ciclo_while
Rule 70    estatuto_ciclo -> ciclo_for
Rule 71    estatuto_ciclo -> dec
Rule 72    estatuto_redux -> asignacion
Rule 73    estatuto_redux -> llamada
Rule 74    estatuto_redux -> escritura
Rule 75    estatuto_redux -> leer
Rule 76    estatuto_redux -> ternaria
Rule 77    asignacion -> variable saw_var_factor AS saw_asig exp
Rule 78    condicion -> IF cond2 THEN bloque_ciclo cond1 SEMICOLON bc_end
Rule 79    cond1 -> ELSE saw_else bloque_ciclo
Rule 80    cond1 -> empty
Rule 81    cond2 -> OPAREN exp CPAREN
Rule 82    ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON
Rule 83    escritura -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end
Rule 84    e1 -> COMMA exp e1
Rule 85    e1 -> empty
Rule 86    leer -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end
Rule 87    l1 -> COMMA variable saw_read_exp e1
Rule 88    l1 -> empty
Rule 89    boolean -> TRUE
Rule 90    boolean -> FALSE
Rule 91    variable -> ID saw_id saw_called_var
Rule 92    variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
Rule 93    variable -> ID saw_id variable2
Rule 94    variable1 -> OBRACKET exp CBRACKET saw_dimension
Rule 95    variable1 -> empty
Rule 96    variable2 -> PERIOD ID saw_called_var_from_class
Rule 97    variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1
Rule 98    llamada -> ID saw_id OPAREN exp llamada1 CPAREN
Rule 99    llamada -> ID saw_id OPAREN CPAREN
Rule 100   llamada1 -> COMMA exp llamada1
Rule 101   llamada1 -> empty
Rule 102   exp -> texp exp1 check_or_operator
Rule 103   exp1 -> OR saw_or texp exp1
Rule 104   exp1 -> empty
Rule 105   texp -> gexp texp1 check_and_operator
Rule 106   texp1 -> AND saw_and gexp texp1
Rule 107   texp1 -> empty
Rule 108   gexp -> mexp gexp1 check_relational_operator
Rule 109   gexp1 -> LT saw_relational_operator mexp
Rule 110   gexp1 -> GT saw_relational_operator mexp
Rule 111   gexp1 -> GTE saw_relational_operator mexp
Rule 112   gexp1 -> LTE saw_relational_operator mexp
Rule 113   gexp1 -> EQ saw_relational_operator mexp
Rule 114   gexp1 -> NE saw_relational_operator mexp
Rule 115   gexp1 -> empty
Rule 116   mexp -> termino mexp1
Rule 117   mexp1 -> PLUS saw_plusminus_operator termino mexp1
Rule 118   mexp1 -> MINUS saw_plusminus_operator termino mexp1
Rule 119   mexp1 -> empty
Rule 120   termino -> factor term1 check_plusminus_operator
Rule 121   term1 -> MULT saw_multdiv_operator factor term1
Rule 122   term1 -> DIV saw_multdiv_operator factor term1
Rule 123   term1 -> empty
Rule 124   factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
Rule 125   factor -> varcst check_multdiv_operator
Rule 126   factor -> variable saw_var_factor check_multdiv_operator
Rule 127   factor -> llamada
Rule 128   saw_var_factor -> <empty>
Rule 129   varcst -> CSTINT saw_end_value
Rule 130   varcst -> CSTFLT saw_end_value
Rule 131   varcst -> CSTCHAR saw_end_value
Rule 132   varcst -> CSTSTRING saw_end_value
Rule 133   varcst -> boolean saw_end_value
Rule 134   empty -> <empty>
Rule 135   saw_class -> <empty>
Rule 136   saw_type -> <empty>
Rule 137   saw_id -> <empty>
Rule 138   saw_variable -> <empty>
Rule 139   saw_variable_param -> <empty>
Rule 140   saw_dimension -> <empty>
Rule 141   saw_called_var -> <empty>
Rule 142   saw_called_var_from_class -> <empty>
Rule 143   saw_asig -> <empty>
Rule 144   saw_end_value -> <empty>
Rule 145   saw_plusminus_operator -> <empty>
Rule 146   check_plusminus_operator -> <empty>
Rule 147   saw_multdiv_operator -> <empty>
Rule 148   check_multdiv_operator -> <empty>
Rule 149   saw_relational_operator -> <empty>
Rule 150   check_relational_operator -> <empty>
Rule 151   check_and_operator -> <empty>
Rule 152   check_or_operator -> <empty>
Rule 153   saw_and -> <empty>
Rule 154   saw_or -> <empty>
Rule 155   saw_oparen -> <empty>
Rule 156   saw_cparen -> <empty>
Rule 157   saw_function -> <empty>
Rule 158   scope_end -> <empty>
Rule 159   class_scope_end -> <empty>
Rule 160   saw_print -> <empty>
Rule 161   saw_print_end -> <empty>
Rule 162   saw_read -> <empty>
Rule 163   saw_read_exp -> <empty>
Rule 164   saw_read_end -> <empty>
Rule 165   bc_end -> <empty>
Rule 166   saw_else -> <empty>
Rule 167   saw_while -> <empty>
Rule 168   saw_while_end -> <empty>

Terminals, with rules where they appear

AND                  : 106
AS                   : 77
ATTRIBUTES           : 13
BOOL                 : 36
BOOLS                : 41
BY                   : 19
CBRACKET             : 11 27 30 32 92 94 97
CCURLY               : 13 47 50
CHAR                 : 38
CHARS                : 43
CLASS                : 12
COLON                : 12 13 13 82
COMMA                : 8 28 30 84 87 100
COMMENT              : 
CPAREN               : 3 19 81 83 86 98 99 124
CSTCHAR              : 131
CSTFLT               : 130
CSTINT               : 11 20 27 30 32 129
CSTSTRING            : 132
DATAFRAME            : 45
DIV                  : 122
ELSE                 : 79
EQ                   : 113
FALSE                : 90
FILE                 : 46
FLOAT                : 35
FLOATS               : 40
FOR                  : 19
FROM                 : 19
FUNCTION             : 3
GT                   : 110
GTE                  : 111
ID                   : 1 2 3 10 11 12 25 26 27 28 30 44 91 92 93 96 97 98 99
IF                   : 78
INT                  : 34
INTS                 : 39
LT                   : 109
LTE                  : 112
METHODS              : 13
MINUS                : 118
MULT                 : 121
NE                   : 114
OBRACKET             : 11 27 30 32 92 94 97
OCURLY               : 13 47 50
OPAREN               : 3 19 81 83 86 98 99 124
OR                   : 103
PERIOD               : 96 97
PLUS                 : 117
PRINT                : 83
PROGRAM              : 1 2
QUESTION             : 82
READ                 : 86
RETURN               : 
SEMICOLON            : 1 2 12 18 19 22 78 82
STRING               : 37
STRINGS              : 42
THEN                 : 18 19 78
TO                   : 19
TRUE                 : 89
VAR                  : 22
VOID                 : 5
WHILE                : 18
error                : 

Nonterminals, with rules where they appear

asignacion           : 53 65 72
b1                   : 47 48
bc1                  : 50 51
bc_end               : 78
bloque               : 1 2 3 61
bloque_ciclo         : 18 19 78 79
boolean              : 133
check_and_operator   : 105
check_multdiv_operator : 124 125 126
check_or_operator    : 102
check_plusminus_operator : 120
check_relational_operator : 108
ciclo_for            : 59 70
ciclo_for1           : 19 19 19
ciclo_while          : 58 69
clase                : 63
clase_bloque         : 12
clase_bloque1        : 13
clase_metodos_bloque : 13 16
class_scope_end      : 13
compuesto            : 25
cond1                : 78
cond2                : 18 78
condicion            : 55 66
dec                  : 2 14 23 64 71
dec1                 : 22
e1                   : 83 84 87
empty                : 7 9 15 17 24 29 31 33 49 52 80 85 88 95 101 104 107 115 119 123
escritura            : 56 67 74
estatuto             : 48
estatuto_ciclo       : 51
estatuto_redux       : 82 82
exp                  : 77 81 82 83 84 92 94 97 98 100 124
exp1                 : 102 103
factor               : 120 121 122
func1                : 3
funcion              : 16 62
gexp                 : 105 106
gexp1                : 108
l1                   : 86
leer                 : 57 68 75
llamada              : 54 73 127
llamada1             : 98 100
mexp                 : 108 109 110 111 112 113 114
mexp1                : 116 117 118
multiple             : 11 27
param                : 3
param1               : 6 8
param2               : 6 8
programa             : 0
saw_and              : 106
saw_asig             : 77
saw_called_var       : 91 92
saw_called_var_from_class : 96 97
saw_class            : 12
saw_cparen           : 124
saw_dimension        : 11 27 30 32 92 94 97
saw_else             : 79
saw_end_value        : 129 130 131 132 133
saw_function         : 3
saw_id               : 3 10 11 12 25 26 27 28 30 91 92 93 98 99
saw_multdiv_operator : 121 122
saw_oparen           : 124
saw_or               : 103
saw_plusminus_operator : 117 118
saw_print            : 83
saw_print_end        : 83
saw_read             : 86
saw_read_end         : 86
saw_read_exp         : 86 87
saw_relational_operator : 109 110 111 112 113 114
saw_type             : 5 34 35 36 37 38 39 40 41 42 43 44 45 46
saw_var_factor       : 77 126
saw_variable         : 25 26 27 28 30
saw_variable_param   : 10 11
saw_while            : 18
saw_while_end        : 18
scope_end            : 47
simple               : 4 10 26
term1                : 120 121 122
termino              : 116 117 118
ternaria             : 60 76
texp                 : 102 103
texp1                : 105 106
tipo                 : 22
tipo1                : 25 26 28
tipo2                : 27
tipo3                : 11 27 30
varcst               : 125
variable             : 19 21 77 86 87 126
variable1            : 92 97
variable2            : 93

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON bloque
    (2) programa -> . PROGRAM ID SEMICOLON dec bloque

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SEMICOLON bloque
    (2) programa -> PROGRAM . ID SEMICOLON dec bloque

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SEMICOLON bloque
    (2) programa -> PROGRAM ID . SEMICOLON dec bloque

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . bloque
    (2) programa -> PROGRAM ID SEMICOLON . dec bloque
    (47) bloque -> . OCURLY b1 CCURLY scope_end
    (22) dec -> . VAR tipo SEMICOLON dec1

    OCURLY          shift and go to state 7
    VAR             shift and go to state 8

    bloque                         shift and go to state 5
    dec                            shift and go to state 6

state 5

    (1) programa -> PROGRAM ID SEMICOLON bloque .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON bloque .)


state 6

    (2) programa -> PROGRAM ID SEMICOLON dec . bloque
    (47) bloque -> . OCURLY b1 CCURLY scope_end

    OCURLY          shift and go to state 7

    bloque                         shift and go to state 9

state 7

    (47) bloque -> OCURLY . b1 CCURLY scope_end
    (48) b1 -> . estatuto b1
    (49) b1 -> . empty
    (53) estatuto -> . asignacion
    (54) estatuto -> . llamada
    (55) estatuto -> . condicion
    (56) estatuto -> . escritura
    (57) estatuto -> . leer
    (58) estatuto -> . ciclo_while
    (59) estatuto -> . ciclo_for
    (60) estatuto -> . ternaria
    (61) estatuto -> . bloque
    (62) estatuto -> . funcion
    (63) estatuto -> . clase
    (64) estatuto -> . dec
    (134) empty -> .
    (77) asignacion -> . variable saw_var_factor AS saw_asig exp
    (98) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (99) llamada -> . ID saw_id OPAREN CPAREN
    (78) condicion -> . IF cond2 THEN bloque_ciclo cond1 SEMICOLON bc_end
    (83) escritura -> . PRINT saw_print OPAREN exp e1 CPAREN saw_print_end
    (86) leer -> . READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end
    (18) ciclo_while -> . WHILE saw_while cond2 THEN bloque_ciclo SEMICOLON saw_while_end
    (19) ciclo_for -> . FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON
    (82) ternaria -> . exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON
    (47) bloque -> . OCURLY b1 CCURLY scope_end
    (3) funcion -> . FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque
    (12) clase -> . CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON
    (22) dec -> . VAR tipo SEMICOLON dec1
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2
    (102) exp -> . texp exp1 check_or_operator
    (105) texp -> . gexp texp1 check_and_operator
    (108) gexp -> . mexp gexp1 check_relational_operator
    (116) mexp -> . termino mexp1
    (120) termino -> . factor term1 check_plusminus_operator
    (124) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (125) factor -> . varcst check_multdiv_operator
    (126) factor -> . variable saw_var_factor check_multdiv_operator
    (127) factor -> . llamada
    (129) varcst -> . CSTINT saw_end_value
    (130) varcst -> . CSTFLT saw_end_value
    (131) varcst -> . CSTCHAR saw_end_value
    (132) varcst -> . CSTSTRING saw_end_value
    (133) varcst -> . boolean saw_end_value
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE

    CCURLY          reduce using rule 134 (empty -> .)
    ID              shift and go to state 27
    IF              shift and go to state 29
    PRINT           shift and go to state 30
    READ            shift and go to state 31
    WHILE           shift and go to state 32
    FOR             shift and go to state 33
    OCURLY          shift and go to state 7
    FUNCTION        shift and go to state 34
    CLASS           shift and go to state 35
    VAR             shift and go to state 8
    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    b1                             shift and go to state 10
    estatuto                       shift and go to state 11
    empty                          shift and go to state 12
    asignacion                     shift and go to state 13
    llamada                        shift and go to state 14
    condicion                      shift and go to state 15
    escritura                      shift and go to state 16
    leer                           shift and go to state 17
    ciclo_while                    shift and go to state 18
    ciclo_for                      shift and go to state 19
    ternaria                       shift and go to state 20
    bloque                         shift and go to state 21
    funcion                        shift and go to state 22
    clase                          shift and go to state 23
    dec                            shift and go to state 24
    variable                       shift and go to state 25
    exp                            shift and go to state 26
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    boolean                        shift and go to state 46

state 8

    (22) dec -> VAR . tipo SEMICOLON dec1
    (25) tipo -> . compuesto ID saw_id saw_variable tipo1
    (26) tipo -> . simple ID saw_id saw_variable tipo1
    (27) tipo -> . multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable tipo2
    (44) compuesto -> . ID saw_type
    (45) compuesto -> . DATAFRAME saw_type
    (46) compuesto -> . FILE saw_type
    (34) simple -> . INT saw_type
    (35) simple -> . FLOAT saw_type
    (36) simple -> . BOOL saw_type
    (37) simple -> . STRING saw_type
    (38) simple -> . CHAR saw_type
    (39) multiple -> . INTS saw_type
    (40) multiple -> . FLOATS saw_type
    (41) multiple -> . BOOLS saw_type
    (42) multiple -> . STRINGS saw_type
    (43) multiple -> . CHARS saw_type

    ID              shift and go to state 51
    DATAFRAME       shift and go to state 54
    FILE            shift and go to state 55
    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    BOOL            shift and go to state 58
    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    INTS            shift and go to state 61
    FLOATS          shift and go to state 62
    BOOLS           shift and go to state 63
    STRINGS         shift and go to state 64
    CHARS           shift and go to state 65

    tipo                           shift and go to state 49
    compuesto                      shift and go to state 50
    simple                         shift and go to state 52
    multiple                       shift and go to state 53

state 9

    (2) programa -> PROGRAM ID SEMICOLON dec bloque .

    $end            reduce using rule 2 (programa -> PROGRAM ID SEMICOLON dec bloque .)


state 10

    (47) bloque -> OCURLY b1 . CCURLY scope_end

    CCURLY          shift and go to state 66


state 11

    (48) b1 -> estatuto . b1
    (48) b1 -> . estatuto b1
    (49) b1 -> . empty
    (53) estatuto -> . asignacion
    (54) estatuto -> . llamada
    (55) estatuto -> . condicion
    (56) estatuto -> . escritura
    (57) estatuto -> . leer
    (58) estatuto -> . ciclo_while
    (59) estatuto -> . ciclo_for
    (60) estatuto -> . ternaria
    (61) estatuto -> . bloque
    (62) estatuto -> . funcion
    (63) estatuto -> . clase
    (64) estatuto -> . dec
    (134) empty -> .
    (77) asignacion -> . variable saw_var_factor AS saw_asig exp
    (98) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (99) llamada -> . ID saw_id OPAREN CPAREN
    (78) condicion -> . IF cond2 THEN bloque_ciclo cond1 SEMICOLON bc_end
    (83) escritura -> . PRINT saw_print OPAREN exp e1 CPAREN saw_print_end
    (86) leer -> . READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end
    (18) ciclo_while -> . WHILE saw_while cond2 THEN bloque_ciclo SEMICOLON saw_while_end
    (19) ciclo_for -> . FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON
    (82) ternaria -> . exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON
    (47) bloque -> . OCURLY b1 CCURLY scope_end
    (3) funcion -> . FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque
    (12) clase -> . CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON
    (22) dec -> . VAR tipo SEMICOLON dec1
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2
    (102) exp -> . texp exp1 check_or_operator
    (105) texp -> . gexp texp1 check_and_operator
    (108) gexp -> . mexp gexp1 check_relational_operator
    (116) mexp -> . termino mexp1
    (120) termino -> . factor term1 check_plusminus_operator
    (124) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (125) factor -> . varcst check_multdiv_operator
    (126) factor -> . variable saw_var_factor check_multdiv_operator
    (127) factor -> . llamada
    (129) varcst -> . CSTINT saw_end_value
    (130) varcst -> . CSTFLT saw_end_value
    (131) varcst -> . CSTCHAR saw_end_value
    (132) varcst -> . CSTSTRING saw_end_value
    (133) varcst -> . boolean saw_end_value
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE

    CCURLY          reduce using rule 134 (empty -> .)
    ID              shift and go to state 27
    IF              shift and go to state 29
    PRINT           shift and go to state 30
    READ            shift and go to state 31
    WHILE           shift and go to state 32
    FOR             shift and go to state 33
    OCURLY          shift and go to state 7
    FUNCTION        shift and go to state 34
    CLASS           shift and go to state 35
    VAR             shift and go to state 8
    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    estatuto                       shift and go to state 11
    b1                             shift and go to state 67
    empty                          shift and go to state 12
    asignacion                     shift and go to state 13
    llamada                        shift and go to state 14
    condicion                      shift and go to state 15
    escritura                      shift and go to state 16
    leer                           shift and go to state 17
    ciclo_while                    shift and go to state 18
    ciclo_for                      shift and go to state 19
    ternaria                       shift and go to state 20
    bloque                         shift and go to state 21
    funcion                        shift and go to state 22
    clase                          shift and go to state 23
    dec                            shift and go to state 24
    variable                       shift and go to state 25
    exp                            shift and go to state 26
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    boolean                        shift and go to state 46

state 12

    (49) b1 -> empty .

    CCURLY          reduce using rule 49 (b1 -> empty .)


state 13

    (53) estatuto -> asignacion .

    ID              reduce using rule 53 (estatuto -> asignacion .)
    IF              reduce using rule 53 (estatuto -> asignacion .)
    PRINT           reduce using rule 53 (estatuto -> asignacion .)
    READ            reduce using rule 53 (estatuto -> asignacion .)
    WHILE           reduce using rule 53 (estatuto -> asignacion .)
    FOR             reduce using rule 53 (estatuto -> asignacion .)
    OCURLY          reduce using rule 53 (estatuto -> asignacion .)
    FUNCTION        reduce using rule 53 (estatuto -> asignacion .)
    CLASS           reduce using rule 53 (estatuto -> asignacion .)
    VAR             reduce using rule 53 (estatuto -> asignacion .)
    OPAREN          reduce using rule 53 (estatuto -> asignacion .)
    CSTINT          reduce using rule 53 (estatuto -> asignacion .)
    CSTFLT          reduce using rule 53 (estatuto -> asignacion .)
    CSTCHAR         reduce using rule 53 (estatuto -> asignacion .)
    CSTSTRING       reduce using rule 53 (estatuto -> asignacion .)
    TRUE            reduce using rule 53 (estatuto -> asignacion .)
    FALSE           reduce using rule 53 (estatuto -> asignacion .)
    CCURLY          reduce using rule 53 (estatuto -> asignacion .)


state 14

    (54) estatuto -> llamada .
    (127) factor -> llamada .

    ID              reduce using rule 54 (estatuto -> llamada .)
    IF              reduce using rule 54 (estatuto -> llamada .)
    PRINT           reduce using rule 54 (estatuto -> llamada .)
    READ            reduce using rule 54 (estatuto -> llamada .)
    WHILE           reduce using rule 54 (estatuto -> llamada .)
    FOR             reduce using rule 54 (estatuto -> llamada .)
    OCURLY          reduce using rule 54 (estatuto -> llamada .)
    FUNCTION        reduce using rule 54 (estatuto -> llamada .)
    CLASS           reduce using rule 54 (estatuto -> llamada .)
    VAR             reduce using rule 54 (estatuto -> llamada .)
    OPAREN          reduce using rule 54 (estatuto -> llamada .)
    CSTINT          reduce using rule 54 (estatuto -> llamada .)
    CSTFLT          reduce using rule 54 (estatuto -> llamada .)
    CSTCHAR         reduce using rule 54 (estatuto -> llamada .)
    CSTSTRING       reduce using rule 54 (estatuto -> llamada .)
    TRUE            reduce using rule 54 (estatuto -> llamada .)
    FALSE           reduce using rule 54 (estatuto -> llamada .)
    CCURLY          reduce using rule 54 (estatuto -> llamada .)
    MULT            reduce using rule 127 (factor -> llamada .)
    DIV             reduce using rule 127 (factor -> llamada .)
    PLUS            reduce using rule 127 (factor -> llamada .)
    MINUS           reduce using rule 127 (factor -> llamada .)
    LT              reduce using rule 127 (factor -> llamada .)
    GT              reduce using rule 127 (factor -> llamada .)
    GTE             reduce using rule 127 (factor -> llamada .)
    LTE             reduce using rule 127 (factor -> llamada .)
    EQ              reduce using rule 127 (factor -> llamada .)
    NE              reduce using rule 127 (factor -> llamada .)
    AND             reduce using rule 127 (factor -> llamada .)
    OR              reduce using rule 127 (factor -> llamada .)
    QUESTION        reduce using rule 127 (factor -> llamada .)


state 15

    (55) estatuto -> condicion .

    ID              reduce using rule 55 (estatuto -> condicion .)
    IF              reduce using rule 55 (estatuto -> condicion .)
    PRINT           reduce using rule 55 (estatuto -> condicion .)
    READ            reduce using rule 55 (estatuto -> condicion .)
    WHILE           reduce using rule 55 (estatuto -> condicion .)
    FOR             reduce using rule 55 (estatuto -> condicion .)
    OCURLY          reduce using rule 55 (estatuto -> condicion .)
    FUNCTION        reduce using rule 55 (estatuto -> condicion .)
    CLASS           reduce using rule 55 (estatuto -> condicion .)
    VAR             reduce using rule 55 (estatuto -> condicion .)
    OPAREN          reduce using rule 55 (estatuto -> condicion .)
    CSTINT          reduce using rule 55 (estatuto -> condicion .)
    CSTFLT          reduce using rule 55 (estatuto -> condicion .)
    CSTCHAR         reduce using rule 55 (estatuto -> condicion .)
    CSTSTRING       reduce using rule 55 (estatuto -> condicion .)
    TRUE            reduce using rule 55 (estatuto -> condicion .)
    FALSE           reduce using rule 55 (estatuto -> condicion .)
    CCURLY          reduce using rule 55 (estatuto -> condicion .)


state 16

    (56) estatuto -> escritura .

    ID              reduce using rule 56 (estatuto -> escritura .)
    IF              reduce using rule 56 (estatuto -> escritura .)
    PRINT           reduce using rule 56 (estatuto -> escritura .)
    READ            reduce using rule 56 (estatuto -> escritura .)
    WHILE           reduce using rule 56 (estatuto -> escritura .)
    FOR             reduce using rule 56 (estatuto -> escritura .)
    OCURLY          reduce using rule 56 (estatuto -> escritura .)
    FUNCTION        reduce using rule 56 (estatuto -> escritura .)
    CLASS           reduce using rule 56 (estatuto -> escritura .)
    VAR             reduce using rule 56 (estatuto -> escritura .)
    OPAREN          reduce using rule 56 (estatuto -> escritura .)
    CSTINT          reduce using rule 56 (estatuto -> escritura .)
    CSTFLT          reduce using rule 56 (estatuto -> escritura .)
    CSTCHAR         reduce using rule 56 (estatuto -> escritura .)
    CSTSTRING       reduce using rule 56 (estatuto -> escritura .)
    TRUE            reduce using rule 56 (estatuto -> escritura .)
    FALSE           reduce using rule 56 (estatuto -> escritura .)
    CCURLY          reduce using rule 56 (estatuto -> escritura .)


state 17

    (57) estatuto -> leer .

    ID              reduce using rule 57 (estatuto -> leer .)
    IF              reduce using rule 57 (estatuto -> leer .)
    PRINT           reduce using rule 57 (estatuto -> leer .)
    READ            reduce using rule 57 (estatuto -> leer .)
    WHILE           reduce using rule 57 (estatuto -> leer .)
    FOR             reduce using rule 57 (estatuto -> leer .)
    OCURLY          reduce using rule 57 (estatuto -> leer .)
    FUNCTION        reduce using rule 57 (estatuto -> leer .)
    CLASS           reduce using rule 57 (estatuto -> leer .)
    VAR             reduce using rule 57 (estatuto -> leer .)
    OPAREN          reduce using rule 57 (estatuto -> leer .)
    CSTINT          reduce using rule 57 (estatuto -> leer .)
    CSTFLT          reduce using rule 57 (estatuto -> leer .)
    CSTCHAR         reduce using rule 57 (estatuto -> leer .)
    CSTSTRING       reduce using rule 57 (estatuto -> leer .)
    TRUE            reduce using rule 57 (estatuto -> leer .)
    FALSE           reduce using rule 57 (estatuto -> leer .)
    CCURLY          reduce using rule 57 (estatuto -> leer .)


state 18

    (58) estatuto -> ciclo_while .

    ID              reduce using rule 58 (estatuto -> ciclo_while .)
    IF              reduce using rule 58 (estatuto -> ciclo_while .)
    PRINT           reduce using rule 58 (estatuto -> ciclo_while .)
    READ            reduce using rule 58 (estatuto -> ciclo_while .)
    WHILE           reduce using rule 58 (estatuto -> ciclo_while .)
    FOR             reduce using rule 58 (estatuto -> ciclo_while .)
    OCURLY          reduce using rule 58 (estatuto -> ciclo_while .)
    FUNCTION        reduce using rule 58 (estatuto -> ciclo_while .)
    CLASS           reduce using rule 58 (estatuto -> ciclo_while .)
    VAR             reduce using rule 58 (estatuto -> ciclo_while .)
    OPAREN          reduce using rule 58 (estatuto -> ciclo_while .)
    CSTINT          reduce using rule 58 (estatuto -> ciclo_while .)
    CSTFLT          reduce using rule 58 (estatuto -> ciclo_while .)
    CSTCHAR         reduce using rule 58 (estatuto -> ciclo_while .)
    CSTSTRING       reduce using rule 58 (estatuto -> ciclo_while .)
    TRUE            reduce using rule 58 (estatuto -> ciclo_while .)
    FALSE           reduce using rule 58 (estatuto -> ciclo_while .)
    CCURLY          reduce using rule 58 (estatuto -> ciclo_while .)


state 19

    (59) estatuto -> ciclo_for .

    ID              reduce using rule 59 (estatuto -> ciclo_for .)
    IF              reduce using rule 59 (estatuto -> ciclo_for .)
    PRINT           reduce using rule 59 (estatuto -> ciclo_for .)
    READ            reduce using rule 59 (estatuto -> ciclo_for .)
    WHILE           reduce using rule 59 (estatuto -> ciclo_for .)
    FOR             reduce using rule 59 (estatuto -> ciclo_for .)
    OCURLY          reduce using rule 59 (estatuto -> ciclo_for .)
    FUNCTION        reduce using rule 59 (estatuto -> ciclo_for .)
    CLASS           reduce using rule 59 (estatuto -> ciclo_for .)
    VAR             reduce using rule 59 (estatuto -> ciclo_for .)
    OPAREN          reduce using rule 59 (estatuto -> ciclo_for .)
    CSTINT          reduce using rule 59 (estatuto -> ciclo_for .)
    CSTFLT          reduce using rule 59 (estatuto -> ciclo_for .)
    CSTCHAR         reduce using rule 59 (estatuto -> ciclo_for .)
    CSTSTRING       reduce using rule 59 (estatuto -> ciclo_for .)
    TRUE            reduce using rule 59 (estatuto -> ciclo_for .)
    FALSE           reduce using rule 59 (estatuto -> ciclo_for .)
    CCURLY          reduce using rule 59 (estatuto -> ciclo_for .)


state 20

    (60) estatuto -> ternaria .

    ID              reduce using rule 60 (estatuto -> ternaria .)
    IF              reduce using rule 60 (estatuto -> ternaria .)
    PRINT           reduce using rule 60 (estatuto -> ternaria .)
    READ            reduce using rule 60 (estatuto -> ternaria .)
    WHILE           reduce using rule 60 (estatuto -> ternaria .)
    FOR             reduce using rule 60 (estatuto -> ternaria .)
    OCURLY          reduce using rule 60 (estatuto -> ternaria .)
    FUNCTION        reduce using rule 60 (estatuto -> ternaria .)
    CLASS           reduce using rule 60 (estatuto -> ternaria .)
    VAR             reduce using rule 60 (estatuto -> ternaria .)
    OPAREN          reduce using rule 60 (estatuto -> ternaria .)
    CSTINT          reduce using rule 60 (estatuto -> ternaria .)
    CSTFLT          reduce using rule 60 (estatuto -> ternaria .)
    CSTCHAR         reduce using rule 60 (estatuto -> ternaria .)
    CSTSTRING       reduce using rule 60 (estatuto -> ternaria .)
    TRUE            reduce using rule 60 (estatuto -> ternaria .)
    FALSE           reduce using rule 60 (estatuto -> ternaria .)
    CCURLY          reduce using rule 60 (estatuto -> ternaria .)


state 21

    (61) estatuto -> bloque .

    ID              reduce using rule 61 (estatuto -> bloque .)
    IF              reduce using rule 61 (estatuto -> bloque .)
    PRINT           reduce using rule 61 (estatuto -> bloque .)
    READ            reduce using rule 61 (estatuto -> bloque .)
    WHILE           reduce using rule 61 (estatuto -> bloque .)
    FOR             reduce using rule 61 (estatuto -> bloque .)
    OCURLY          reduce using rule 61 (estatuto -> bloque .)
    FUNCTION        reduce using rule 61 (estatuto -> bloque .)
    CLASS           reduce using rule 61 (estatuto -> bloque .)
    VAR             reduce using rule 61 (estatuto -> bloque .)
    OPAREN          reduce using rule 61 (estatuto -> bloque .)
    CSTINT          reduce using rule 61 (estatuto -> bloque .)
    CSTFLT          reduce using rule 61 (estatuto -> bloque .)
    CSTCHAR         reduce using rule 61 (estatuto -> bloque .)
    CSTSTRING       reduce using rule 61 (estatuto -> bloque .)
    TRUE            reduce using rule 61 (estatuto -> bloque .)
    FALSE           reduce using rule 61 (estatuto -> bloque .)
    CCURLY          reduce using rule 61 (estatuto -> bloque .)


state 22

    (62) estatuto -> funcion .

    ID              reduce using rule 62 (estatuto -> funcion .)
    IF              reduce using rule 62 (estatuto -> funcion .)
    PRINT           reduce using rule 62 (estatuto -> funcion .)
    READ            reduce using rule 62 (estatuto -> funcion .)
    WHILE           reduce using rule 62 (estatuto -> funcion .)
    FOR             reduce using rule 62 (estatuto -> funcion .)
    OCURLY          reduce using rule 62 (estatuto -> funcion .)
    FUNCTION        reduce using rule 62 (estatuto -> funcion .)
    CLASS           reduce using rule 62 (estatuto -> funcion .)
    VAR             reduce using rule 62 (estatuto -> funcion .)
    OPAREN          reduce using rule 62 (estatuto -> funcion .)
    CSTINT          reduce using rule 62 (estatuto -> funcion .)
    CSTFLT          reduce using rule 62 (estatuto -> funcion .)
    CSTCHAR         reduce using rule 62 (estatuto -> funcion .)
    CSTSTRING       reduce using rule 62 (estatuto -> funcion .)
    TRUE            reduce using rule 62 (estatuto -> funcion .)
    FALSE           reduce using rule 62 (estatuto -> funcion .)
    CCURLY          reduce using rule 62 (estatuto -> funcion .)


state 23

    (63) estatuto -> clase .

    ID              reduce using rule 63 (estatuto -> clase .)
    IF              reduce using rule 63 (estatuto -> clase .)
    PRINT           reduce using rule 63 (estatuto -> clase .)
    READ            reduce using rule 63 (estatuto -> clase .)
    WHILE           reduce using rule 63 (estatuto -> clase .)
    FOR             reduce using rule 63 (estatuto -> clase .)
    OCURLY          reduce using rule 63 (estatuto -> clase .)
    FUNCTION        reduce using rule 63 (estatuto -> clase .)
    CLASS           reduce using rule 63 (estatuto -> clase .)
    VAR             reduce using rule 63 (estatuto -> clase .)
    OPAREN          reduce using rule 63 (estatuto -> clase .)
    CSTINT          reduce using rule 63 (estatuto -> clase .)
    CSTFLT          reduce using rule 63 (estatuto -> clase .)
    CSTCHAR         reduce using rule 63 (estatuto -> clase .)
    CSTSTRING       reduce using rule 63 (estatuto -> clase .)
    TRUE            reduce using rule 63 (estatuto -> clase .)
    FALSE           reduce using rule 63 (estatuto -> clase .)
    CCURLY          reduce using rule 63 (estatuto -> clase .)


state 24

    (64) estatuto -> dec .

    ID              reduce using rule 64 (estatuto -> dec .)
    IF              reduce using rule 64 (estatuto -> dec .)
    PRINT           reduce using rule 64 (estatuto -> dec .)
    READ            reduce using rule 64 (estatuto -> dec .)
    WHILE           reduce using rule 64 (estatuto -> dec .)
    FOR             reduce using rule 64 (estatuto -> dec .)
    OCURLY          reduce using rule 64 (estatuto -> dec .)
    FUNCTION        reduce using rule 64 (estatuto -> dec .)
    CLASS           reduce using rule 64 (estatuto -> dec .)
    VAR             reduce using rule 64 (estatuto -> dec .)
    OPAREN          reduce using rule 64 (estatuto -> dec .)
    CSTINT          reduce using rule 64 (estatuto -> dec .)
    CSTFLT          reduce using rule 64 (estatuto -> dec .)
    CSTCHAR         reduce using rule 64 (estatuto -> dec .)
    CSTSTRING       reduce using rule 64 (estatuto -> dec .)
    TRUE            reduce using rule 64 (estatuto -> dec .)
    FALSE           reduce using rule 64 (estatuto -> dec .)
    CCURLY          reduce using rule 64 (estatuto -> dec .)


state 25

    (77) asignacion -> variable . saw_var_factor AS saw_asig exp
    (126) factor -> variable . saw_var_factor check_multdiv_operator
    (128) saw_var_factor -> .

    AS              reduce using rule 128 (saw_var_factor -> .)
    MULT            reduce using rule 128 (saw_var_factor -> .)
    DIV             reduce using rule 128 (saw_var_factor -> .)
    PLUS            reduce using rule 128 (saw_var_factor -> .)
    MINUS           reduce using rule 128 (saw_var_factor -> .)
    LT              reduce using rule 128 (saw_var_factor -> .)
    GT              reduce using rule 128 (saw_var_factor -> .)
    GTE             reduce using rule 128 (saw_var_factor -> .)
    LTE             reduce using rule 128 (saw_var_factor -> .)
    EQ              reduce using rule 128 (saw_var_factor -> .)
    NE              reduce using rule 128 (saw_var_factor -> .)
    AND             reduce using rule 128 (saw_var_factor -> .)
    OR              reduce using rule 128 (saw_var_factor -> .)
    QUESTION        reduce using rule 128 (saw_var_factor -> .)

    saw_var_factor                 shift and go to state 68

state 26

    (82) ternaria -> exp . QUESTION estatuto_redux COLON estatuto_redux SEMICOLON

    QUESTION        shift and go to state 69


state 27

    (98) llamada -> ID . saw_id OPAREN exp llamada1 CPAREN
    (99) llamada -> ID . saw_id OPAREN CPAREN
    (91) variable -> ID . saw_id saw_called_var
    (92) variable -> ID . saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> ID . saw_id variable2
    (137) saw_id -> .

    OPAREN          reduce using rule 137 (saw_id -> .)
    OBRACKET        reduce using rule 137 (saw_id -> .)
    PERIOD          reduce using rule 137 (saw_id -> .)
    AS              reduce using rule 137 (saw_id -> .)
    MULT            reduce using rule 137 (saw_id -> .)
    DIV             reduce using rule 137 (saw_id -> .)
    PLUS            reduce using rule 137 (saw_id -> .)
    MINUS           reduce using rule 137 (saw_id -> .)
    LT              reduce using rule 137 (saw_id -> .)
    GT              reduce using rule 137 (saw_id -> .)
    GTE             reduce using rule 137 (saw_id -> .)
    LTE             reduce using rule 137 (saw_id -> .)
    EQ              reduce using rule 137 (saw_id -> .)
    NE              reduce using rule 137 (saw_id -> .)
    AND             reduce using rule 137 (saw_id -> .)
    OR              reduce using rule 137 (saw_id -> .)
    QUESTION        reduce using rule 137 (saw_id -> .)

    saw_id                         shift and go to state 70

state 28

    (124) factor -> OPAREN . saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (155) saw_oparen -> .

    OPAREN          reduce using rule 155 (saw_oparen -> .)
    CSTINT          reduce using rule 155 (saw_oparen -> .)
    CSTFLT          reduce using rule 155 (saw_oparen -> .)
    CSTCHAR         reduce using rule 155 (saw_oparen -> .)
    CSTSTRING       reduce using rule 155 (saw_oparen -> .)
    ID              reduce using rule 155 (saw_oparen -> .)
    TRUE            reduce using rule 155 (saw_oparen -> .)
    FALSE           reduce using rule 155 (saw_oparen -> .)

    saw_oparen                     shift and go to state 71

state 29

    (78) condicion -> IF . cond2 THEN bloque_ciclo cond1 SEMICOLON bc_end
    (81) cond2 -> . OPAREN exp CPAREN

    OPAREN          shift and go to state 73

    cond2                          shift and go to state 72

state 30

    (83) escritura -> PRINT . saw_print OPAREN exp e1 CPAREN saw_print_end
    (160) saw_print -> .

    OPAREN          reduce using rule 160 (saw_print -> .)

    saw_print                      shift and go to state 74

state 31

    (86) leer -> READ . saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end
    (162) saw_read -> .

    OPAREN          reduce using rule 162 (saw_read -> .)

    saw_read                       shift and go to state 75

state 32

    (18) ciclo_while -> WHILE . saw_while cond2 THEN bloque_ciclo SEMICOLON saw_while_end
    (167) saw_while -> .

    OPAREN          reduce using rule 167 (saw_while -> .)

    saw_while                      shift and go to state 76

state 33

    (19) ciclo_for -> FOR . OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON

    OPAREN          shift and go to state 77


state 34

    (3) funcion -> FUNCTION . func1 ID saw_id saw_function OPAREN param CPAREN bloque
    (4) func1 -> . simple
    (5) func1 -> . VOID saw_type
    (34) simple -> . INT saw_type
    (35) simple -> . FLOAT saw_type
    (36) simple -> . BOOL saw_type
    (37) simple -> . STRING saw_type
    (38) simple -> . CHAR saw_type

    VOID            shift and go to state 80
    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    BOOL            shift and go to state 58
    STRING          shift and go to state 59
    CHAR            shift and go to state 60

    func1                          shift and go to state 78
    simple                         shift and go to state 79

state 35

    (12) clase -> CLASS . ID saw_id saw_class COLON clase_bloque SEMICOLON

    ID              shift and go to state 81


state 36

    (102) exp -> texp . exp1 check_or_operator
    (103) exp1 -> . OR saw_or texp exp1
    (104) exp1 -> . empty
    (134) empty -> .

    OR              shift and go to state 83
    QUESTION        reduce using rule 134 (empty -> .)
    CPAREN          reduce using rule 134 (empty -> .)
    COMMA           reduce using rule 134 (empty -> .)
    CBRACKET        reduce using rule 134 (empty -> .)
    ID              reduce using rule 134 (empty -> .)
    IF              reduce using rule 134 (empty -> .)
    PRINT           reduce using rule 134 (empty -> .)
    READ            reduce using rule 134 (empty -> .)
    WHILE           reduce using rule 134 (empty -> .)
    FOR             reduce using rule 134 (empty -> .)
    OCURLY          reduce using rule 134 (empty -> .)
    FUNCTION        reduce using rule 134 (empty -> .)
    CLASS           reduce using rule 134 (empty -> .)
    VAR             reduce using rule 134 (empty -> .)
    OPAREN          reduce using rule 134 (empty -> .)
    CSTINT          reduce using rule 134 (empty -> .)
    CSTFLT          reduce using rule 134 (empty -> .)
    CSTCHAR         reduce using rule 134 (empty -> .)
    CSTSTRING       reduce using rule 134 (empty -> .)
    TRUE            reduce using rule 134 (empty -> .)
    FALSE           reduce using rule 134 (empty -> .)
    CCURLY          reduce using rule 134 (empty -> .)
    COLON           reduce using rule 134 (empty -> .)
    SEMICOLON       reduce using rule 134 (empty -> .)

    exp1                           shift and go to state 82
    empty                          shift and go to state 84

state 37

    (105) texp -> gexp . texp1 check_and_operator
    (106) texp1 -> . AND saw_and gexp texp1
    (107) texp1 -> . empty
    (134) empty -> .

    AND             shift and go to state 86
    OR              reduce using rule 134 (empty -> .)
    QUESTION        reduce using rule 134 (empty -> .)
    CPAREN          reduce using rule 134 (empty -> .)
    COMMA           reduce using rule 134 (empty -> .)
    CBRACKET        reduce using rule 134 (empty -> .)
    ID              reduce using rule 134 (empty -> .)
    IF              reduce using rule 134 (empty -> .)
    PRINT           reduce using rule 134 (empty -> .)
    READ            reduce using rule 134 (empty -> .)
    WHILE           reduce using rule 134 (empty -> .)
    FOR             reduce using rule 134 (empty -> .)
    OCURLY          reduce using rule 134 (empty -> .)
    FUNCTION        reduce using rule 134 (empty -> .)
    CLASS           reduce using rule 134 (empty -> .)
    VAR             reduce using rule 134 (empty -> .)
    OPAREN          reduce using rule 134 (empty -> .)
    CSTINT          reduce using rule 134 (empty -> .)
    CSTFLT          reduce using rule 134 (empty -> .)
    CSTCHAR         reduce using rule 134 (empty -> .)
    CSTSTRING       reduce using rule 134 (empty -> .)
    TRUE            reduce using rule 134 (empty -> .)
    FALSE           reduce using rule 134 (empty -> .)
    CCURLY          reduce using rule 134 (empty -> .)
    COLON           reduce using rule 134 (empty -> .)
    SEMICOLON       reduce using rule 134 (empty -> .)

    texp1                          shift and go to state 85
    empty                          shift and go to state 87

state 38

    (108) gexp -> mexp . gexp1 check_relational_operator
    (109) gexp1 -> . LT saw_relational_operator mexp
    (110) gexp1 -> . GT saw_relational_operator mexp
    (111) gexp1 -> . GTE saw_relational_operator mexp
    (112) gexp1 -> . LTE saw_relational_operator mexp
    (113) gexp1 -> . EQ saw_relational_operator mexp
    (114) gexp1 -> . NE saw_relational_operator mexp
    (115) gexp1 -> . empty
    (134) empty -> .

    LT              shift and go to state 89
    GT              shift and go to state 90
    GTE             shift and go to state 91
    LTE             shift and go to state 92
    EQ              shift and go to state 93
    NE              shift and go to state 94
    AND             reduce using rule 134 (empty -> .)
    OR              reduce using rule 134 (empty -> .)
    QUESTION        reduce using rule 134 (empty -> .)
    CPAREN          reduce using rule 134 (empty -> .)
    COMMA           reduce using rule 134 (empty -> .)
    CBRACKET        reduce using rule 134 (empty -> .)
    ID              reduce using rule 134 (empty -> .)
    IF              reduce using rule 134 (empty -> .)
    PRINT           reduce using rule 134 (empty -> .)
    READ            reduce using rule 134 (empty -> .)
    WHILE           reduce using rule 134 (empty -> .)
    FOR             reduce using rule 134 (empty -> .)
    OCURLY          reduce using rule 134 (empty -> .)
    FUNCTION        reduce using rule 134 (empty -> .)
    CLASS           reduce using rule 134 (empty -> .)
    VAR             reduce using rule 134 (empty -> .)
    OPAREN          reduce using rule 134 (empty -> .)
    CSTINT          reduce using rule 134 (empty -> .)
    CSTFLT          reduce using rule 134 (empty -> .)
    CSTCHAR         reduce using rule 134 (empty -> .)
    CSTSTRING       reduce using rule 134 (empty -> .)
    TRUE            reduce using rule 134 (empty -> .)
    FALSE           reduce using rule 134 (empty -> .)
    CCURLY          reduce using rule 134 (empty -> .)
    COLON           reduce using rule 134 (empty -> .)
    SEMICOLON       reduce using rule 134 (empty -> .)

    gexp1                          shift and go to state 88
    empty                          shift and go to state 95

state 39

    (116) mexp -> termino . mexp1
    (117) mexp1 -> . PLUS saw_plusminus_operator termino mexp1
    (118) mexp1 -> . MINUS saw_plusminus_operator termino mexp1
    (119) mexp1 -> . empty
    (134) empty -> .

    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    LT              reduce using rule 134 (empty -> .)
    GT              reduce using rule 134 (empty -> .)
    GTE             reduce using rule 134 (empty -> .)
    LTE             reduce using rule 134 (empty -> .)
    EQ              reduce using rule 134 (empty -> .)
    NE              reduce using rule 134 (empty -> .)
    AND             reduce using rule 134 (empty -> .)
    OR              reduce using rule 134 (empty -> .)
    QUESTION        reduce using rule 134 (empty -> .)
    CPAREN          reduce using rule 134 (empty -> .)
    COMMA           reduce using rule 134 (empty -> .)
    CBRACKET        reduce using rule 134 (empty -> .)
    ID              reduce using rule 134 (empty -> .)
    IF              reduce using rule 134 (empty -> .)
    PRINT           reduce using rule 134 (empty -> .)
    READ            reduce using rule 134 (empty -> .)
    WHILE           reduce using rule 134 (empty -> .)
    FOR             reduce using rule 134 (empty -> .)
    OCURLY          reduce using rule 134 (empty -> .)
    FUNCTION        reduce using rule 134 (empty -> .)
    CLASS           reduce using rule 134 (empty -> .)
    VAR             reduce using rule 134 (empty -> .)
    OPAREN          reduce using rule 134 (empty -> .)
    CSTINT          reduce using rule 134 (empty -> .)
    CSTFLT          reduce using rule 134 (empty -> .)
    CSTCHAR         reduce using rule 134 (empty -> .)
    CSTSTRING       reduce using rule 134 (empty -> .)
    TRUE            reduce using rule 134 (empty -> .)
    FALSE           reduce using rule 134 (empty -> .)
    CCURLY          reduce using rule 134 (empty -> .)
    COLON           reduce using rule 134 (empty -> .)
    SEMICOLON       reduce using rule 134 (empty -> .)

    mexp1                          shift and go to state 96
    empty                          shift and go to state 99

state 40

    (120) termino -> factor . term1 check_plusminus_operator
    (121) term1 -> . MULT saw_multdiv_operator factor term1
    (122) term1 -> . DIV saw_multdiv_operator factor term1
    (123) term1 -> . empty
    (134) empty -> .

    MULT            shift and go to state 101
    DIV             shift and go to state 102
    PLUS            reduce using rule 134 (empty -> .)
    MINUS           reduce using rule 134 (empty -> .)
    LT              reduce using rule 134 (empty -> .)
    GT              reduce using rule 134 (empty -> .)
    GTE             reduce using rule 134 (empty -> .)
    LTE             reduce using rule 134 (empty -> .)
    EQ              reduce using rule 134 (empty -> .)
    NE              reduce using rule 134 (empty -> .)
    AND             reduce using rule 134 (empty -> .)
    OR              reduce using rule 134 (empty -> .)
    QUESTION        reduce using rule 134 (empty -> .)
    CPAREN          reduce using rule 134 (empty -> .)
    COMMA           reduce using rule 134 (empty -> .)
    CBRACKET        reduce using rule 134 (empty -> .)
    ID              reduce using rule 134 (empty -> .)
    IF              reduce using rule 134 (empty -> .)
    PRINT           reduce using rule 134 (empty -> .)
    READ            reduce using rule 134 (empty -> .)
    WHILE           reduce using rule 134 (empty -> .)
    FOR             reduce using rule 134 (empty -> .)
    OCURLY          reduce using rule 134 (empty -> .)
    FUNCTION        reduce using rule 134 (empty -> .)
    CLASS           reduce using rule 134 (empty -> .)
    VAR             reduce using rule 134 (empty -> .)
    OPAREN          reduce using rule 134 (empty -> .)
    CSTINT          reduce using rule 134 (empty -> .)
    CSTFLT          reduce using rule 134 (empty -> .)
    CSTCHAR         reduce using rule 134 (empty -> .)
    CSTSTRING       reduce using rule 134 (empty -> .)
    TRUE            reduce using rule 134 (empty -> .)
    FALSE           reduce using rule 134 (empty -> .)
    CCURLY          reduce using rule 134 (empty -> .)
    COLON           reduce using rule 134 (empty -> .)
    SEMICOLON       reduce using rule 134 (empty -> .)

    term1                          shift and go to state 100
    empty                          shift and go to state 103

state 41

    (125) factor -> varcst . check_multdiv_operator
    (148) check_multdiv_operator -> .

    MULT            reduce using rule 148 (check_multdiv_operator -> .)
    DIV             reduce using rule 148 (check_multdiv_operator -> .)
    PLUS            reduce using rule 148 (check_multdiv_operator -> .)
    MINUS           reduce using rule 148 (check_multdiv_operator -> .)
    LT              reduce using rule 148 (check_multdiv_operator -> .)
    GT              reduce using rule 148 (check_multdiv_operator -> .)
    GTE             reduce using rule 148 (check_multdiv_operator -> .)
    LTE             reduce using rule 148 (check_multdiv_operator -> .)
    EQ              reduce using rule 148 (check_multdiv_operator -> .)
    NE              reduce using rule 148 (check_multdiv_operator -> .)
    AND             reduce using rule 148 (check_multdiv_operator -> .)
    OR              reduce using rule 148 (check_multdiv_operator -> .)
    QUESTION        reduce using rule 148 (check_multdiv_operator -> .)
    CPAREN          reduce using rule 148 (check_multdiv_operator -> .)
    COMMA           reduce using rule 148 (check_multdiv_operator -> .)
    CBRACKET        reduce using rule 148 (check_multdiv_operator -> .)
    ID              reduce using rule 148 (check_multdiv_operator -> .)
    IF              reduce using rule 148 (check_multdiv_operator -> .)
    PRINT           reduce using rule 148 (check_multdiv_operator -> .)
    READ            reduce using rule 148 (check_multdiv_operator -> .)
    WHILE           reduce using rule 148 (check_multdiv_operator -> .)
    FOR             reduce using rule 148 (check_multdiv_operator -> .)
    OCURLY          reduce using rule 148 (check_multdiv_operator -> .)
    FUNCTION        reduce using rule 148 (check_multdiv_operator -> .)
    CLASS           reduce using rule 148 (check_multdiv_operator -> .)
    VAR             reduce using rule 148 (check_multdiv_operator -> .)
    OPAREN          reduce using rule 148 (check_multdiv_operator -> .)
    CSTINT          reduce using rule 148 (check_multdiv_operator -> .)
    CSTFLT          reduce using rule 148 (check_multdiv_operator -> .)
    CSTCHAR         reduce using rule 148 (check_multdiv_operator -> .)
    CSTSTRING       reduce using rule 148 (check_multdiv_operator -> .)
    TRUE            reduce using rule 148 (check_multdiv_operator -> .)
    FALSE           reduce using rule 148 (check_multdiv_operator -> .)
    CCURLY          reduce using rule 148 (check_multdiv_operator -> .)
    COLON           reduce using rule 148 (check_multdiv_operator -> .)
    SEMICOLON       reduce using rule 148 (check_multdiv_operator -> .)

    check_multdiv_operator         shift and go to state 104

state 42

    (129) varcst -> CSTINT . saw_end_value
    (144) saw_end_value -> .

    MULT            reduce using rule 144 (saw_end_value -> .)
    DIV             reduce using rule 144 (saw_end_value -> .)
    PLUS            reduce using rule 144 (saw_end_value -> .)
    MINUS           reduce using rule 144 (saw_end_value -> .)
    LT              reduce using rule 144 (saw_end_value -> .)
    GT              reduce using rule 144 (saw_end_value -> .)
    GTE             reduce using rule 144 (saw_end_value -> .)
    LTE             reduce using rule 144 (saw_end_value -> .)
    EQ              reduce using rule 144 (saw_end_value -> .)
    NE              reduce using rule 144 (saw_end_value -> .)
    AND             reduce using rule 144 (saw_end_value -> .)
    OR              reduce using rule 144 (saw_end_value -> .)
    QUESTION        reduce using rule 144 (saw_end_value -> .)
    CPAREN          reduce using rule 144 (saw_end_value -> .)
    COMMA           reduce using rule 144 (saw_end_value -> .)
    CBRACKET        reduce using rule 144 (saw_end_value -> .)
    ID              reduce using rule 144 (saw_end_value -> .)
    IF              reduce using rule 144 (saw_end_value -> .)
    PRINT           reduce using rule 144 (saw_end_value -> .)
    READ            reduce using rule 144 (saw_end_value -> .)
    WHILE           reduce using rule 144 (saw_end_value -> .)
    FOR             reduce using rule 144 (saw_end_value -> .)
    OCURLY          reduce using rule 144 (saw_end_value -> .)
    FUNCTION        reduce using rule 144 (saw_end_value -> .)
    CLASS           reduce using rule 144 (saw_end_value -> .)
    VAR             reduce using rule 144 (saw_end_value -> .)
    OPAREN          reduce using rule 144 (saw_end_value -> .)
    CSTINT          reduce using rule 144 (saw_end_value -> .)
    CSTFLT          reduce using rule 144 (saw_end_value -> .)
    CSTCHAR         reduce using rule 144 (saw_end_value -> .)
    CSTSTRING       reduce using rule 144 (saw_end_value -> .)
    TRUE            reduce using rule 144 (saw_end_value -> .)
    FALSE           reduce using rule 144 (saw_end_value -> .)
    CCURLY          reduce using rule 144 (saw_end_value -> .)
    COLON           reduce using rule 144 (saw_end_value -> .)
    SEMICOLON       reduce using rule 144 (saw_end_value -> .)

    saw_end_value                  shift and go to state 105

state 43

    (130) varcst -> CSTFLT . saw_end_value
    (144) saw_end_value -> .

    MULT            reduce using rule 144 (saw_end_value -> .)
    DIV             reduce using rule 144 (saw_end_value -> .)
    PLUS            reduce using rule 144 (saw_end_value -> .)
    MINUS           reduce using rule 144 (saw_end_value -> .)
    LT              reduce using rule 144 (saw_end_value -> .)
    GT              reduce using rule 144 (saw_end_value -> .)
    GTE             reduce using rule 144 (saw_end_value -> .)
    LTE             reduce using rule 144 (saw_end_value -> .)
    EQ              reduce using rule 144 (saw_end_value -> .)
    NE              reduce using rule 144 (saw_end_value -> .)
    AND             reduce using rule 144 (saw_end_value -> .)
    OR              reduce using rule 144 (saw_end_value -> .)
    QUESTION        reduce using rule 144 (saw_end_value -> .)
    CPAREN          reduce using rule 144 (saw_end_value -> .)
    COMMA           reduce using rule 144 (saw_end_value -> .)
    CBRACKET        reduce using rule 144 (saw_end_value -> .)
    ID              reduce using rule 144 (saw_end_value -> .)
    IF              reduce using rule 144 (saw_end_value -> .)
    PRINT           reduce using rule 144 (saw_end_value -> .)
    READ            reduce using rule 144 (saw_end_value -> .)
    WHILE           reduce using rule 144 (saw_end_value -> .)
    FOR             reduce using rule 144 (saw_end_value -> .)
    OCURLY          reduce using rule 144 (saw_end_value -> .)
    FUNCTION        reduce using rule 144 (saw_end_value -> .)
    CLASS           reduce using rule 144 (saw_end_value -> .)
    VAR             reduce using rule 144 (saw_end_value -> .)
    OPAREN          reduce using rule 144 (saw_end_value -> .)
    CSTINT          reduce using rule 144 (saw_end_value -> .)
    CSTFLT          reduce using rule 144 (saw_end_value -> .)
    CSTCHAR         reduce using rule 144 (saw_end_value -> .)
    CSTSTRING       reduce using rule 144 (saw_end_value -> .)
    TRUE            reduce using rule 144 (saw_end_value -> .)
    FALSE           reduce using rule 144 (saw_end_value -> .)
    CCURLY          reduce using rule 144 (saw_end_value -> .)
    COLON           reduce using rule 144 (saw_end_value -> .)
    SEMICOLON       reduce using rule 144 (saw_end_value -> .)

    saw_end_value                  shift and go to state 106

state 44

    (131) varcst -> CSTCHAR . saw_end_value
    (144) saw_end_value -> .

    MULT            reduce using rule 144 (saw_end_value -> .)
    DIV             reduce using rule 144 (saw_end_value -> .)
    PLUS            reduce using rule 144 (saw_end_value -> .)
    MINUS           reduce using rule 144 (saw_end_value -> .)
    LT              reduce using rule 144 (saw_end_value -> .)
    GT              reduce using rule 144 (saw_end_value -> .)
    GTE             reduce using rule 144 (saw_end_value -> .)
    LTE             reduce using rule 144 (saw_end_value -> .)
    EQ              reduce using rule 144 (saw_end_value -> .)
    NE              reduce using rule 144 (saw_end_value -> .)
    AND             reduce using rule 144 (saw_end_value -> .)
    OR              reduce using rule 144 (saw_end_value -> .)
    QUESTION        reduce using rule 144 (saw_end_value -> .)
    CPAREN          reduce using rule 144 (saw_end_value -> .)
    COMMA           reduce using rule 144 (saw_end_value -> .)
    CBRACKET        reduce using rule 144 (saw_end_value -> .)
    ID              reduce using rule 144 (saw_end_value -> .)
    IF              reduce using rule 144 (saw_end_value -> .)
    PRINT           reduce using rule 144 (saw_end_value -> .)
    READ            reduce using rule 144 (saw_end_value -> .)
    WHILE           reduce using rule 144 (saw_end_value -> .)
    FOR             reduce using rule 144 (saw_end_value -> .)
    OCURLY          reduce using rule 144 (saw_end_value -> .)
    FUNCTION        reduce using rule 144 (saw_end_value -> .)
    CLASS           reduce using rule 144 (saw_end_value -> .)
    VAR             reduce using rule 144 (saw_end_value -> .)
    OPAREN          reduce using rule 144 (saw_end_value -> .)
    CSTINT          reduce using rule 144 (saw_end_value -> .)
    CSTFLT          reduce using rule 144 (saw_end_value -> .)
    CSTCHAR         reduce using rule 144 (saw_end_value -> .)
    CSTSTRING       reduce using rule 144 (saw_end_value -> .)
    TRUE            reduce using rule 144 (saw_end_value -> .)
    FALSE           reduce using rule 144 (saw_end_value -> .)
    CCURLY          reduce using rule 144 (saw_end_value -> .)
    COLON           reduce using rule 144 (saw_end_value -> .)
    SEMICOLON       reduce using rule 144 (saw_end_value -> .)

    saw_end_value                  shift and go to state 107

state 45

    (132) varcst -> CSTSTRING . saw_end_value
    (144) saw_end_value -> .

    MULT            reduce using rule 144 (saw_end_value -> .)
    DIV             reduce using rule 144 (saw_end_value -> .)
    PLUS            reduce using rule 144 (saw_end_value -> .)
    MINUS           reduce using rule 144 (saw_end_value -> .)
    LT              reduce using rule 144 (saw_end_value -> .)
    GT              reduce using rule 144 (saw_end_value -> .)
    GTE             reduce using rule 144 (saw_end_value -> .)
    LTE             reduce using rule 144 (saw_end_value -> .)
    EQ              reduce using rule 144 (saw_end_value -> .)
    NE              reduce using rule 144 (saw_end_value -> .)
    AND             reduce using rule 144 (saw_end_value -> .)
    OR              reduce using rule 144 (saw_end_value -> .)
    QUESTION        reduce using rule 144 (saw_end_value -> .)
    CPAREN          reduce using rule 144 (saw_end_value -> .)
    COMMA           reduce using rule 144 (saw_end_value -> .)
    CBRACKET        reduce using rule 144 (saw_end_value -> .)
    ID              reduce using rule 144 (saw_end_value -> .)
    IF              reduce using rule 144 (saw_end_value -> .)
    PRINT           reduce using rule 144 (saw_end_value -> .)
    READ            reduce using rule 144 (saw_end_value -> .)
    WHILE           reduce using rule 144 (saw_end_value -> .)
    FOR             reduce using rule 144 (saw_end_value -> .)
    OCURLY          reduce using rule 144 (saw_end_value -> .)
    FUNCTION        reduce using rule 144 (saw_end_value -> .)
    CLASS           reduce using rule 144 (saw_end_value -> .)
    VAR             reduce using rule 144 (saw_end_value -> .)
    OPAREN          reduce using rule 144 (saw_end_value -> .)
    CSTINT          reduce using rule 144 (saw_end_value -> .)
    CSTFLT          reduce using rule 144 (saw_end_value -> .)
    CSTCHAR         reduce using rule 144 (saw_end_value -> .)
    CSTSTRING       reduce using rule 144 (saw_end_value -> .)
    TRUE            reduce using rule 144 (saw_end_value -> .)
    FALSE           reduce using rule 144 (saw_end_value -> .)
    CCURLY          reduce using rule 144 (saw_end_value -> .)
    COLON           reduce using rule 144 (saw_end_value -> .)
    SEMICOLON       reduce using rule 144 (saw_end_value -> .)

    saw_end_value                  shift and go to state 108

state 46

    (133) varcst -> boolean . saw_end_value
    (144) saw_end_value -> .

    MULT            reduce using rule 144 (saw_end_value -> .)
    DIV             reduce using rule 144 (saw_end_value -> .)
    PLUS            reduce using rule 144 (saw_end_value -> .)
    MINUS           reduce using rule 144 (saw_end_value -> .)
    LT              reduce using rule 144 (saw_end_value -> .)
    GT              reduce using rule 144 (saw_end_value -> .)
    GTE             reduce using rule 144 (saw_end_value -> .)
    LTE             reduce using rule 144 (saw_end_value -> .)
    EQ              reduce using rule 144 (saw_end_value -> .)
    NE              reduce using rule 144 (saw_end_value -> .)
    AND             reduce using rule 144 (saw_end_value -> .)
    OR              reduce using rule 144 (saw_end_value -> .)
    QUESTION        reduce using rule 144 (saw_end_value -> .)
    CPAREN          reduce using rule 144 (saw_end_value -> .)
    COMMA           reduce using rule 144 (saw_end_value -> .)
    CBRACKET        reduce using rule 144 (saw_end_value -> .)
    ID              reduce using rule 144 (saw_end_value -> .)
    IF              reduce using rule 144 (saw_end_value -> .)
    PRINT           reduce using rule 144 (saw_end_value -> .)
    READ            reduce using rule 144 (saw_end_value -> .)
    WHILE           reduce using rule 144 (saw_end_value -> .)
    FOR             reduce using rule 144 (saw_end_value -> .)
    OCURLY          reduce using rule 144 (saw_end_value -> .)
    FUNCTION        reduce using rule 144 (saw_end_value -> .)
    CLASS           reduce using rule 144 (saw_end_value -> .)
    VAR             reduce using rule 144 (saw_end_value -> .)
    OPAREN          reduce using rule 144 (saw_end_value -> .)
    CSTINT          reduce using rule 144 (saw_end_value -> .)
    CSTFLT          reduce using rule 144 (saw_end_value -> .)
    CSTCHAR         reduce using rule 144 (saw_end_value -> .)
    CSTSTRING       reduce using rule 144 (saw_end_value -> .)
    TRUE            reduce using rule 144 (saw_end_value -> .)
    FALSE           reduce using rule 144 (saw_end_value -> .)
    CCURLY          reduce using rule 144 (saw_end_value -> .)
    COLON           reduce using rule 144 (saw_end_value -> .)
    SEMICOLON       reduce using rule 144 (saw_end_value -> .)

    saw_end_value                  shift and go to state 109

state 47

    (89) boolean -> TRUE .

    MULT            reduce using rule 89 (boolean -> TRUE .)
    DIV             reduce using rule 89 (boolean -> TRUE .)
    PLUS            reduce using rule 89 (boolean -> TRUE .)
    MINUS           reduce using rule 89 (boolean -> TRUE .)
    LT              reduce using rule 89 (boolean -> TRUE .)
    GT              reduce using rule 89 (boolean -> TRUE .)
    GTE             reduce using rule 89 (boolean -> TRUE .)
    LTE             reduce using rule 89 (boolean -> TRUE .)
    EQ              reduce using rule 89 (boolean -> TRUE .)
    NE              reduce using rule 89 (boolean -> TRUE .)
    AND             reduce using rule 89 (boolean -> TRUE .)
    OR              reduce using rule 89 (boolean -> TRUE .)
    QUESTION        reduce using rule 89 (boolean -> TRUE .)
    CPAREN          reduce using rule 89 (boolean -> TRUE .)
    COMMA           reduce using rule 89 (boolean -> TRUE .)
    CBRACKET        reduce using rule 89 (boolean -> TRUE .)
    ID              reduce using rule 89 (boolean -> TRUE .)
    IF              reduce using rule 89 (boolean -> TRUE .)
    PRINT           reduce using rule 89 (boolean -> TRUE .)
    READ            reduce using rule 89 (boolean -> TRUE .)
    WHILE           reduce using rule 89 (boolean -> TRUE .)
    FOR             reduce using rule 89 (boolean -> TRUE .)
    OCURLY          reduce using rule 89 (boolean -> TRUE .)
    FUNCTION        reduce using rule 89 (boolean -> TRUE .)
    CLASS           reduce using rule 89 (boolean -> TRUE .)
    VAR             reduce using rule 89 (boolean -> TRUE .)
    OPAREN          reduce using rule 89 (boolean -> TRUE .)
    CSTINT          reduce using rule 89 (boolean -> TRUE .)
    CSTFLT          reduce using rule 89 (boolean -> TRUE .)
    CSTCHAR         reduce using rule 89 (boolean -> TRUE .)
    CSTSTRING       reduce using rule 89 (boolean -> TRUE .)
    TRUE            reduce using rule 89 (boolean -> TRUE .)
    FALSE           reduce using rule 89 (boolean -> TRUE .)
    CCURLY          reduce using rule 89 (boolean -> TRUE .)
    COLON           reduce using rule 89 (boolean -> TRUE .)
    SEMICOLON       reduce using rule 89 (boolean -> TRUE .)


state 48

    (90) boolean -> FALSE .

    MULT            reduce using rule 90 (boolean -> FALSE .)
    DIV             reduce using rule 90 (boolean -> FALSE .)
    PLUS            reduce using rule 90 (boolean -> FALSE .)
    MINUS           reduce using rule 90 (boolean -> FALSE .)
    LT              reduce using rule 90 (boolean -> FALSE .)
    GT              reduce using rule 90 (boolean -> FALSE .)
    GTE             reduce using rule 90 (boolean -> FALSE .)
    LTE             reduce using rule 90 (boolean -> FALSE .)
    EQ              reduce using rule 90 (boolean -> FALSE .)
    NE              reduce using rule 90 (boolean -> FALSE .)
    AND             reduce using rule 90 (boolean -> FALSE .)
    OR              reduce using rule 90 (boolean -> FALSE .)
    QUESTION        reduce using rule 90 (boolean -> FALSE .)
    CPAREN          reduce using rule 90 (boolean -> FALSE .)
    COMMA           reduce using rule 90 (boolean -> FALSE .)
    CBRACKET        reduce using rule 90 (boolean -> FALSE .)
    ID              reduce using rule 90 (boolean -> FALSE .)
    IF              reduce using rule 90 (boolean -> FALSE .)
    PRINT           reduce using rule 90 (boolean -> FALSE .)
    READ            reduce using rule 90 (boolean -> FALSE .)
    WHILE           reduce using rule 90 (boolean -> FALSE .)
    FOR             reduce using rule 90 (boolean -> FALSE .)
    OCURLY          reduce using rule 90 (boolean -> FALSE .)
    FUNCTION        reduce using rule 90 (boolean -> FALSE .)
    CLASS           reduce using rule 90 (boolean -> FALSE .)
    VAR             reduce using rule 90 (boolean -> FALSE .)
    OPAREN          reduce using rule 90 (boolean -> FALSE .)
    CSTINT          reduce using rule 90 (boolean -> FALSE .)
    CSTFLT          reduce using rule 90 (boolean -> FALSE .)
    CSTCHAR         reduce using rule 90 (boolean -> FALSE .)
    CSTSTRING       reduce using rule 90 (boolean -> FALSE .)
    TRUE            reduce using rule 90 (boolean -> FALSE .)
    FALSE           reduce using rule 90 (boolean -> FALSE .)
    CCURLY          reduce using rule 90 (boolean -> FALSE .)
    COLON           reduce using rule 90 (boolean -> FALSE .)
    SEMICOLON       reduce using rule 90 (boolean -> FALSE .)


state 49

    (22) dec -> VAR tipo . SEMICOLON dec1

    SEMICOLON       shift and go to state 110


state 50

    (25) tipo -> compuesto . ID saw_id saw_variable tipo1

    ID              shift and go to state 111


state 51

    (44) compuesto -> ID . saw_type
    (136) saw_type -> .

    ID              reduce using rule 136 (saw_type -> .)

    saw_type                       shift and go to state 112

state 52

    (26) tipo -> simple . ID saw_id saw_variable tipo1

    ID              shift and go to state 113


state 53

    (27) tipo -> multiple . ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable tipo2

    ID              shift and go to state 114


state 54

    (45) compuesto -> DATAFRAME . saw_type
    (136) saw_type -> .

    ID              reduce using rule 136 (saw_type -> .)

    saw_type                       shift and go to state 115

state 55

    (46) compuesto -> FILE . saw_type
    (136) saw_type -> .

    ID              reduce using rule 136 (saw_type -> .)

    saw_type                       shift and go to state 116

state 56

    (34) simple -> INT . saw_type
    (136) saw_type -> .

    ID              reduce using rule 136 (saw_type -> .)

    saw_type                       shift and go to state 117

state 57

    (35) simple -> FLOAT . saw_type
    (136) saw_type -> .

    ID              reduce using rule 136 (saw_type -> .)

    saw_type                       shift and go to state 118

state 58

    (36) simple -> BOOL . saw_type
    (136) saw_type -> .

    ID              reduce using rule 136 (saw_type -> .)

    saw_type                       shift and go to state 119

state 59

    (37) simple -> STRING . saw_type
    (136) saw_type -> .

    ID              reduce using rule 136 (saw_type -> .)

    saw_type                       shift and go to state 120

state 60

    (38) simple -> CHAR . saw_type
    (136) saw_type -> .

    ID              reduce using rule 136 (saw_type -> .)

    saw_type                       shift and go to state 121

state 61

    (39) multiple -> INTS . saw_type
    (136) saw_type -> .

    ID              reduce using rule 136 (saw_type -> .)

    saw_type                       shift and go to state 122

state 62

    (40) multiple -> FLOATS . saw_type
    (136) saw_type -> .

    ID              reduce using rule 136 (saw_type -> .)

    saw_type                       shift and go to state 123

state 63

    (41) multiple -> BOOLS . saw_type
    (136) saw_type -> .

    ID              reduce using rule 136 (saw_type -> .)

    saw_type                       shift and go to state 124

state 64

    (42) multiple -> STRINGS . saw_type
    (136) saw_type -> .

    ID              reduce using rule 136 (saw_type -> .)

    saw_type                       shift and go to state 125

state 65

    (43) multiple -> CHARS . saw_type
    (136) saw_type -> .

    ID              reduce using rule 136 (saw_type -> .)

    saw_type                       shift and go to state 126

state 66

    (47) bloque -> OCURLY b1 CCURLY . scope_end
    (158) scope_end -> .

    $end            reduce using rule 158 (scope_end -> .)
    ID              reduce using rule 158 (scope_end -> .)
    IF              reduce using rule 158 (scope_end -> .)
    PRINT           reduce using rule 158 (scope_end -> .)
    READ            reduce using rule 158 (scope_end -> .)
    WHILE           reduce using rule 158 (scope_end -> .)
    FOR             reduce using rule 158 (scope_end -> .)
    OCURLY          reduce using rule 158 (scope_end -> .)
    FUNCTION        reduce using rule 158 (scope_end -> .)
    CLASS           reduce using rule 158 (scope_end -> .)
    VAR             reduce using rule 158 (scope_end -> .)
    OPAREN          reduce using rule 158 (scope_end -> .)
    CSTINT          reduce using rule 158 (scope_end -> .)
    CSTFLT          reduce using rule 158 (scope_end -> .)
    CSTCHAR         reduce using rule 158 (scope_end -> .)
    CSTSTRING       reduce using rule 158 (scope_end -> .)
    TRUE            reduce using rule 158 (scope_end -> .)
    FALSE           reduce using rule 158 (scope_end -> .)
    CCURLY          reduce using rule 158 (scope_end -> .)

    scope_end                      shift and go to state 127

state 67

    (48) b1 -> estatuto b1 .

    CCURLY          reduce using rule 48 (b1 -> estatuto b1 .)


state 68

    (77) asignacion -> variable saw_var_factor . AS saw_asig exp
    (126) factor -> variable saw_var_factor . check_multdiv_operator
    (148) check_multdiv_operator -> .

    AS              shift and go to state 128
    MULT            reduce using rule 148 (check_multdiv_operator -> .)
    DIV             reduce using rule 148 (check_multdiv_operator -> .)
    PLUS            reduce using rule 148 (check_multdiv_operator -> .)
    MINUS           reduce using rule 148 (check_multdiv_operator -> .)
    LT              reduce using rule 148 (check_multdiv_operator -> .)
    GT              reduce using rule 148 (check_multdiv_operator -> .)
    GTE             reduce using rule 148 (check_multdiv_operator -> .)
    LTE             reduce using rule 148 (check_multdiv_operator -> .)
    EQ              reduce using rule 148 (check_multdiv_operator -> .)
    NE              reduce using rule 148 (check_multdiv_operator -> .)
    AND             reduce using rule 148 (check_multdiv_operator -> .)
    OR              reduce using rule 148 (check_multdiv_operator -> .)
    QUESTION        reduce using rule 148 (check_multdiv_operator -> .)

    check_multdiv_operator         shift and go to state 129

state 69

    (82) ternaria -> exp QUESTION . estatuto_redux COLON estatuto_redux SEMICOLON
    (72) estatuto_redux -> . asignacion
    (73) estatuto_redux -> . llamada
    (74) estatuto_redux -> . escritura
    (75) estatuto_redux -> . leer
    (76) estatuto_redux -> . ternaria
    (77) asignacion -> . variable saw_var_factor AS saw_asig exp
    (98) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (99) llamada -> . ID saw_id OPAREN CPAREN
    (83) escritura -> . PRINT saw_print OPAREN exp e1 CPAREN saw_print_end
    (86) leer -> . READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end
    (82) ternaria -> . exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2
    (102) exp -> . texp exp1 check_or_operator
    (105) texp -> . gexp texp1 check_and_operator
    (108) gexp -> . mexp gexp1 check_relational_operator
    (116) mexp -> . termino mexp1
    (120) termino -> . factor term1 check_plusminus_operator
    (124) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (125) factor -> . varcst check_multdiv_operator
    (126) factor -> . variable saw_var_factor check_multdiv_operator
    (127) factor -> . llamada
    (129) varcst -> . CSTINT saw_end_value
    (130) varcst -> . CSTFLT saw_end_value
    (131) varcst -> . CSTCHAR saw_end_value
    (132) varcst -> . CSTSTRING saw_end_value
    (133) varcst -> . boolean saw_end_value
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE

    ID              shift and go to state 27
    PRINT           shift and go to state 30
    READ            shift and go to state 31
    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 26
    estatuto_redux                 shift and go to state 130
    asignacion                     shift and go to state 131
    llamada                        shift and go to state 132
    escritura                      shift and go to state 133
    leer                           shift and go to state 134
    ternaria                       shift and go to state 135
    variable                       shift and go to state 25
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    boolean                        shift and go to state 46

state 70

    (98) llamada -> ID saw_id . OPAREN exp llamada1 CPAREN
    (99) llamada -> ID saw_id . OPAREN CPAREN
    (91) variable -> ID saw_id . saw_called_var
    (92) variable -> ID saw_id . OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> ID saw_id . variable2
    (141) saw_called_var -> .
    (96) variable2 -> . PERIOD ID saw_called_var_from_class
    (97) variable2 -> . PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1

    OPAREN          shift and go to state 136
    OBRACKET        shift and go to state 138
    AS              reduce using rule 141 (saw_called_var -> .)
    MULT            reduce using rule 141 (saw_called_var -> .)
    DIV             reduce using rule 141 (saw_called_var -> .)
    PLUS            reduce using rule 141 (saw_called_var -> .)
    MINUS           reduce using rule 141 (saw_called_var -> .)
    LT              reduce using rule 141 (saw_called_var -> .)
    GT              reduce using rule 141 (saw_called_var -> .)
    GTE             reduce using rule 141 (saw_called_var -> .)
    LTE             reduce using rule 141 (saw_called_var -> .)
    EQ              reduce using rule 141 (saw_called_var -> .)
    NE              reduce using rule 141 (saw_called_var -> .)
    AND             reduce using rule 141 (saw_called_var -> .)
    OR              reduce using rule 141 (saw_called_var -> .)
    QUESTION        reduce using rule 141 (saw_called_var -> .)
    PERIOD          shift and go to state 140

    saw_called_var                 shift and go to state 137
    variable2                      shift and go to state 139

state 71

    (124) factor -> OPAREN saw_oparen . exp CPAREN saw_cparen check_multdiv_operator
    (102) exp -> . texp exp1 check_or_operator
    (105) texp -> . gexp texp1 check_and_operator
    (108) gexp -> . mexp gexp1 check_relational_operator
    (116) mexp -> . termino mexp1
    (120) termino -> . factor term1 check_plusminus_operator
    (124) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (125) factor -> . varcst check_multdiv_operator
    (126) factor -> . variable saw_var_factor check_multdiv_operator
    (127) factor -> . llamada
    (129) varcst -> . CSTINT saw_end_value
    (130) varcst -> . CSTFLT saw_end_value
    (131) varcst -> . CSTCHAR saw_end_value
    (132) varcst -> . CSTSTRING saw_end_value
    (133) varcst -> . boolean saw_end_value
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2
    (98) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (99) llamada -> . ID saw_id OPAREN CPAREN
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 144
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 141
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 142
    llamada                        shift and go to state 143
    boolean                        shift and go to state 46

state 72

    (78) condicion -> IF cond2 . THEN bloque_ciclo cond1 SEMICOLON bc_end

    THEN            shift and go to state 145


state 73

    (81) cond2 -> OPAREN . exp CPAREN
    (102) exp -> . texp exp1 check_or_operator
    (105) texp -> . gexp texp1 check_and_operator
    (108) gexp -> . mexp gexp1 check_relational_operator
    (116) mexp -> . termino mexp1
    (120) termino -> . factor term1 check_plusminus_operator
    (124) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (125) factor -> . varcst check_multdiv_operator
    (126) factor -> . variable saw_var_factor check_multdiv_operator
    (127) factor -> . llamada
    (129) varcst -> . CSTINT saw_end_value
    (130) varcst -> . CSTFLT saw_end_value
    (131) varcst -> . CSTCHAR saw_end_value
    (132) varcst -> . CSTSTRING saw_end_value
    (133) varcst -> . boolean saw_end_value
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2
    (98) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (99) llamada -> . ID saw_id OPAREN CPAREN
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 144
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 146
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 142
    llamada                        shift and go to state 143
    boolean                        shift and go to state 46

state 74

    (83) escritura -> PRINT saw_print . OPAREN exp e1 CPAREN saw_print_end

    OPAREN          shift and go to state 147


state 75

    (86) leer -> READ saw_read . OPAREN variable saw_read_exp l1 CPAREN saw_read_end

    OPAREN          shift and go to state 148


state 76

    (18) ciclo_while -> WHILE saw_while . cond2 THEN bloque_ciclo SEMICOLON saw_while_end
    (81) cond2 -> . OPAREN exp CPAREN

    OPAREN          shift and go to state 73

    cond2                          shift and go to state 149

state 77

    (19) ciclo_for -> FOR OPAREN . variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2

    ID              shift and go to state 151

    variable                       shift and go to state 150

state 78

    (3) funcion -> FUNCTION func1 . ID saw_id saw_function OPAREN param CPAREN bloque

    ID              shift and go to state 152


state 79

    (4) func1 -> simple .

    ID              reduce using rule 4 (func1 -> simple .)


state 80

    (5) func1 -> VOID . saw_type
    (136) saw_type -> .

    ID              reduce using rule 136 (saw_type -> .)

    saw_type                       shift and go to state 153

state 81

    (12) clase -> CLASS ID . saw_id saw_class COLON clase_bloque SEMICOLON
    (137) saw_id -> .

    COLON           reduce using rule 137 (saw_id -> .)

    saw_id                         shift and go to state 154

state 82

    (102) exp -> texp exp1 . check_or_operator
    (152) check_or_operator -> .

    QUESTION        reduce using rule 152 (check_or_operator -> .)
    CPAREN          reduce using rule 152 (check_or_operator -> .)
    COMMA           reduce using rule 152 (check_or_operator -> .)
    CBRACKET        reduce using rule 152 (check_or_operator -> .)
    ID              reduce using rule 152 (check_or_operator -> .)
    IF              reduce using rule 152 (check_or_operator -> .)
    PRINT           reduce using rule 152 (check_or_operator -> .)
    READ            reduce using rule 152 (check_or_operator -> .)
    WHILE           reduce using rule 152 (check_or_operator -> .)
    FOR             reduce using rule 152 (check_or_operator -> .)
    OCURLY          reduce using rule 152 (check_or_operator -> .)
    FUNCTION        reduce using rule 152 (check_or_operator -> .)
    CLASS           reduce using rule 152 (check_or_operator -> .)
    VAR             reduce using rule 152 (check_or_operator -> .)
    OPAREN          reduce using rule 152 (check_or_operator -> .)
    CSTINT          reduce using rule 152 (check_or_operator -> .)
    CSTFLT          reduce using rule 152 (check_or_operator -> .)
    CSTCHAR         reduce using rule 152 (check_or_operator -> .)
    CSTSTRING       reduce using rule 152 (check_or_operator -> .)
    TRUE            reduce using rule 152 (check_or_operator -> .)
    FALSE           reduce using rule 152 (check_or_operator -> .)
    CCURLY          reduce using rule 152 (check_or_operator -> .)
    COLON           reduce using rule 152 (check_or_operator -> .)
    SEMICOLON       reduce using rule 152 (check_or_operator -> .)

    check_or_operator              shift and go to state 155

state 83

    (103) exp1 -> OR . saw_or texp exp1
    (154) saw_or -> .

    OPAREN          reduce using rule 154 (saw_or -> .)
    CSTINT          reduce using rule 154 (saw_or -> .)
    CSTFLT          reduce using rule 154 (saw_or -> .)
    CSTCHAR         reduce using rule 154 (saw_or -> .)
    CSTSTRING       reduce using rule 154 (saw_or -> .)
    ID              reduce using rule 154 (saw_or -> .)
    TRUE            reduce using rule 154 (saw_or -> .)
    FALSE           reduce using rule 154 (saw_or -> .)

    saw_or                         shift and go to state 156

state 84

    (104) exp1 -> empty .

    QUESTION        reduce using rule 104 (exp1 -> empty .)
    CPAREN          reduce using rule 104 (exp1 -> empty .)
    COMMA           reduce using rule 104 (exp1 -> empty .)
    CBRACKET        reduce using rule 104 (exp1 -> empty .)
    ID              reduce using rule 104 (exp1 -> empty .)
    IF              reduce using rule 104 (exp1 -> empty .)
    PRINT           reduce using rule 104 (exp1 -> empty .)
    READ            reduce using rule 104 (exp1 -> empty .)
    WHILE           reduce using rule 104 (exp1 -> empty .)
    FOR             reduce using rule 104 (exp1 -> empty .)
    OCURLY          reduce using rule 104 (exp1 -> empty .)
    FUNCTION        reduce using rule 104 (exp1 -> empty .)
    CLASS           reduce using rule 104 (exp1 -> empty .)
    VAR             reduce using rule 104 (exp1 -> empty .)
    OPAREN          reduce using rule 104 (exp1 -> empty .)
    CSTINT          reduce using rule 104 (exp1 -> empty .)
    CSTFLT          reduce using rule 104 (exp1 -> empty .)
    CSTCHAR         reduce using rule 104 (exp1 -> empty .)
    CSTSTRING       reduce using rule 104 (exp1 -> empty .)
    TRUE            reduce using rule 104 (exp1 -> empty .)
    FALSE           reduce using rule 104 (exp1 -> empty .)
    CCURLY          reduce using rule 104 (exp1 -> empty .)
    COLON           reduce using rule 104 (exp1 -> empty .)
    SEMICOLON       reduce using rule 104 (exp1 -> empty .)


state 85

    (105) texp -> gexp texp1 . check_and_operator
    (151) check_and_operator -> .

    OR              reduce using rule 151 (check_and_operator -> .)
    QUESTION        reduce using rule 151 (check_and_operator -> .)
    CPAREN          reduce using rule 151 (check_and_operator -> .)
    COMMA           reduce using rule 151 (check_and_operator -> .)
    CBRACKET        reduce using rule 151 (check_and_operator -> .)
    ID              reduce using rule 151 (check_and_operator -> .)
    IF              reduce using rule 151 (check_and_operator -> .)
    PRINT           reduce using rule 151 (check_and_operator -> .)
    READ            reduce using rule 151 (check_and_operator -> .)
    WHILE           reduce using rule 151 (check_and_operator -> .)
    FOR             reduce using rule 151 (check_and_operator -> .)
    OCURLY          reduce using rule 151 (check_and_operator -> .)
    FUNCTION        reduce using rule 151 (check_and_operator -> .)
    CLASS           reduce using rule 151 (check_and_operator -> .)
    VAR             reduce using rule 151 (check_and_operator -> .)
    OPAREN          reduce using rule 151 (check_and_operator -> .)
    CSTINT          reduce using rule 151 (check_and_operator -> .)
    CSTFLT          reduce using rule 151 (check_and_operator -> .)
    CSTCHAR         reduce using rule 151 (check_and_operator -> .)
    CSTSTRING       reduce using rule 151 (check_and_operator -> .)
    TRUE            reduce using rule 151 (check_and_operator -> .)
    FALSE           reduce using rule 151 (check_and_operator -> .)
    CCURLY          reduce using rule 151 (check_and_operator -> .)
    COLON           reduce using rule 151 (check_and_operator -> .)
    SEMICOLON       reduce using rule 151 (check_and_operator -> .)

    check_and_operator             shift and go to state 157

state 86

    (106) texp1 -> AND . saw_and gexp texp1
    (153) saw_and -> .

    OPAREN          reduce using rule 153 (saw_and -> .)
    CSTINT          reduce using rule 153 (saw_and -> .)
    CSTFLT          reduce using rule 153 (saw_and -> .)
    CSTCHAR         reduce using rule 153 (saw_and -> .)
    CSTSTRING       reduce using rule 153 (saw_and -> .)
    ID              reduce using rule 153 (saw_and -> .)
    TRUE            reduce using rule 153 (saw_and -> .)
    FALSE           reduce using rule 153 (saw_and -> .)

    saw_and                        shift and go to state 158

state 87

    (107) texp1 -> empty .

    OR              reduce using rule 107 (texp1 -> empty .)
    QUESTION        reduce using rule 107 (texp1 -> empty .)
    CPAREN          reduce using rule 107 (texp1 -> empty .)
    COMMA           reduce using rule 107 (texp1 -> empty .)
    CBRACKET        reduce using rule 107 (texp1 -> empty .)
    ID              reduce using rule 107 (texp1 -> empty .)
    IF              reduce using rule 107 (texp1 -> empty .)
    PRINT           reduce using rule 107 (texp1 -> empty .)
    READ            reduce using rule 107 (texp1 -> empty .)
    WHILE           reduce using rule 107 (texp1 -> empty .)
    FOR             reduce using rule 107 (texp1 -> empty .)
    OCURLY          reduce using rule 107 (texp1 -> empty .)
    FUNCTION        reduce using rule 107 (texp1 -> empty .)
    CLASS           reduce using rule 107 (texp1 -> empty .)
    VAR             reduce using rule 107 (texp1 -> empty .)
    OPAREN          reduce using rule 107 (texp1 -> empty .)
    CSTINT          reduce using rule 107 (texp1 -> empty .)
    CSTFLT          reduce using rule 107 (texp1 -> empty .)
    CSTCHAR         reduce using rule 107 (texp1 -> empty .)
    CSTSTRING       reduce using rule 107 (texp1 -> empty .)
    TRUE            reduce using rule 107 (texp1 -> empty .)
    FALSE           reduce using rule 107 (texp1 -> empty .)
    CCURLY          reduce using rule 107 (texp1 -> empty .)
    COLON           reduce using rule 107 (texp1 -> empty .)
    SEMICOLON       reduce using rule 107 (texp1 -> empty .)


state 88

    (108) gexp -> mexp gexp1 . check_relational_operator
    (150) check_relational_operator -> .

    AND             reduce using rule 150 (check_relational_operator -> .)
    OR              reduce using rule 150 (check_relational_operator -> .)
    QUESTION        reduce using rule 150 (check_relational_operator -> .)
    CPAREN          reduce using rule 150 (check_relational_operator -> .)
    COMMA           reduce using rule 150 (check_relational_operator -> .)
    CBRACKET        reduce using rule 150 (check_relational_operator -> .)
    ID              reduce using rule 150 (check_relational_operator -> .)
    IF              reduce using rule 150 (check_relational_operator -> .)
    PRINT           reduce using rule 150 (check_relational_operator -> .)
    READ            reduce using rule 150 (check_relational_operator -> .)
    WHILE           reduce using rule 150 (check_relational_operator -> .)
    FOR             reduce using rule 150 (check_relational_operator -> .)
    OCURLY          reduce using rule 150 (check_relational_operator -> .)
    FUNCTION        reduce using rule 150 (check_relational_operator -> .)
    CLASS           reduce using rule 150 (check_relational_operator -> .)
    VAR             reduce using rule 150 (check_relational_operator -> .)
    OPAREN          reduce using rule 150 (check_relational_operator -> .)
    CSTINT          reduce using rule 150 (check_relational_operator -> .)
    CSTFLT          reduce using rule 150 (check_relational_operator -> .)
    CSTCHAR         reduce using rule 150 (check_relational_operator -> .)
    CSTSTRING       reduce using rule 150 (check_relational_operator -> .)
    TRUE            reduce using rule 150 (check_relational_operator -> .)
    FALSE           reduce using rule 150 (check_relational_operator -> .)
    CCURLY          reduce using rule 150 (check_relational_operator -> .)
    COLON           reduce using rule 150 (check_relational_operator -> .)
    SEMICOLON       reduce using rule 150 (check_relational_operator -> .)

    check_relational_operator      shift and go to state 159

state 89

    (109) gexp1 -> LT . saw_relational_operator mexp
    (149) saw_relational_operator -> .

    OPAREN          reduce using rule 149 (saw_relational_operator -> .)
    CSTINT          reduce using rule 149 (saw_relational_operator -> .)
    CSTFLT          reduce using rule 149 (saw_relational_operator -> .)
    CSTCHAR         reduce using rule 149 (saw_relational_operator -> .)
    CSTSTRING       reduce using rule 149 (saw_relational_operator -> .)
    ID              reduce using rule 149 (saw_relational_operator -> .)
    TRUE            reduce using rule 149 (saw_relational_operator -> .)
    FALSE           reduce using rule 149 (saw_relational_operator -> .)

    saw_relational_operator        shift and go to state 160

state 90

    (110) gexp1 -> GT . saw_relational_operator mexp
    (149) saw_relational_operator -> .

    OPAREN          reduce using rule 149 (saw_relational_operator -> .)
    CSTINT          reduce using rule 149 (saw_relational_operator -> .)
    CSTFLT          reduce using rule 149 (saw_relational_operator -> .)
    CSTCHAR         reduce using rule 149 (saw_relational_operator -> .)
    CSTSTRING       reduce using rule 149 (saw_relational_operator -> .)
    ID              reduce using rule 149 (saw_relational_operator -> .)
    TRUE            reduce using rule 149 (saw_relational_operator -> .)
    FALSE           reduce using rule 149 (saw_relational_operator -> .)

    saw_relational_operator        shift and go to state 161

state 91

    (111) gexp1 -> GTE . saw_relational_operator mexp
    (149) saw_relational_operator -> .

    OPAREN          reduce using rule 149 (saw_relational_operator -> .)
    CSTINT          reduce using rule 149 (saw_relational_operator -> .)
    CSTFLT          reduce using rule 149 (saw_relational_operator -> .)
    CSTCHAR         reduce using rule 149 (saw_relational_operator -> .)
    CSTSTRING       reduce using rule 149 (saw_relational_operator -> .)
    ID              reduce using rule 149 (saw_relational_operator -> .)
    TRUE            reduce using rule 149 (saw_relational_operator -> .)
    FALSE           reduce using rule 149 (saw_relational_operator -> .)

    saw_relational_operator        shift and go to state 162

state 92

    (112) gexp1 -> LTE . saw_relational_operator mexp
    (149) saw_relational_operator -> .

    OPAREN          reduce using rule 149 (saw_relational_operator -> .)
    CSTINT          reduce using rule 149 (saw_relational_operator -> .)
    CSTFLT          reduce using rule 149 (saw_relational_operator -> .)
    CSTCHAR         reduce using rule 149 (saw_relational_operator -> .)
    CSTSTRING       reduce using rule 149 (saw_relational_operator -> .)
    ID              reduce using rule 149 (saw_relational_operator -> .)
    TRUE            reduce using rule 149 (saw_relational_operator -> .)
    FALSE           reduce using rule 149 (saw_relational_operator -> .)

    saw_relational_operator        shift and go to state 163

state 93

    (113) gexp1 -> EQ . saw_relational_operator mexp
    (149) saw_relational_operator -> .

    OPAREN          reduce using rule 149 (saw_relational_operator -> .)
    CSTINT          reduce using rule 149 (saw_relational_operator -> .)
    CSTFLT          reduce using rule 149 (saw_relational_operator -> .)
    CSTCHAR         reduce using rule 149 (saw_relational_operator -> .)
    CSTSTRING       reduce using rule 149 (saw_relational_operator -> .)
    ID              reduce using rule 149 (saw_relational_operator -> .)
    TRUE            reduce using rule 149 (saw_relational_operator -> .)
    FALSE           reduce using rule 149 (saw_relational_operator -> .)

    saw_relational_operator        shift and go to state 164

state 94

    (114) gexp1 -> NE . saw_relational_operator mexp
    (149) saw_relational_operator -> .

    OPAREN          reduce using rule 149 (saw_relational_operator -> .)
    CSTINT          reduce using rule 149 (saw_relational_operator -> .)
    CSTFLT          reduce using rule 149 (saw_relational_operator -> .)
    CSTCHAR         reduce using rule 149 (saw_relational_operator -> .)
    CSTSTRING       reduce using rule 149 (saw_relational_operator -> .)
    ID              reduce using rule 149 (saw_relational_operator -> .)
    TRUE            reduce using rule 149 (saw_relational_operator -> .)
    FALSE           reduce using rule 149 (saw_relational_operator -> .)

    saw_relational_operator        shift and go to state 165

state 95

    (115) gexp1 -> empty .

    AND             reduce using rule 115 (gexp1 -> empty .)
    OR              reduce using rule 115 (gexp1 -> empty .)
    QUESTION        reduce using rule 115 (gexp1 -> empty .)
    CPAREN          reduce using rule 115 (gexp1 -> empty .)
    COMMA           reduce using rule 115 (gexp1 -> empty .)
    CBRACKET        reduce using rule 115 (gexp1 -> empty .)
    ID              reduce using rule 115 (gexp1 -> empty .)
    IF              reduce using rule 115 (gexp1 -> empty .)
    PRINT           reduce using rule 115 (gexp1 -> empty .)
    READ            reduce using rule 115 (gexp1 -> empty .)
    WHILE           reduce using rule 115 (gexp1 -> empty .)
    FOR             reduce using rule 115 (gexp1 -> empty .)
    OCURLY          reduce using rule 115 (gexp1 -> empty .)
    FUNCTION        reduce using rule 115 (gexp1 -> empty .)
    CLASS           reduce using rule 115 (gexp1 -> empty .)
    VAR             reduce using rule 115 (gexp1 -> empty .)
    OPAREN          reduce using rule 115 (gexp1 -> empty .)
    CSTINT          reduce using rule 115 (gexp1 -> empty .)
    CSTFLT          reduce using rule 115 (gexp1 -> empty .)
    CSTCHAR         reduce using rule 115 (gexp1 -> empty .)
    CSTSTRING       reduce using rule 115 (gexp1 -> empty .)
    TRUE            reduce using rule 115 (gexp1 -> empty .)
    FALSE           reduce using rule 115 (gexp1 -> empty .)
    CCURLY          reduce using rule 115 (gexp1 -> empty .)
    COLON           reduce using rule 115 (gexp1 -> empty .)
    SEMICOLON       reduce using rule 115 (gexp1 -> empty .)


state 96

    (116) mexp -> termino mexp1 .

    LT              reduce using rule 116 (mexp -> termino mexp1 .)
    GT              reduce using rule 116 (mexp -> termino mexp1 .)
    GTE             reduce using rule 116 (mexp -> termino mexp1 .)
    LTE             reduce using rule 116 (mexp -> termino mexp1 .)
    EQ              reduce using rule 116 (mexp -> termino mexp1 .)
    NE              reduce using rule 116 (mexp -> termino mexp1 .)
    AND             reduce using rule 116 (mexp -> termino mexp1 .)
    OR              reduce using rule 116 (mexp -> termino mexp1 .)
    QUESTION        reduce using rule 116 (mexp -> termino mexp1 .)
    CPAREN          reduce using rule 116 (mexp -> termino mexp1 .)
    COMMA           reduce using rule 116 (mexp -> termino mexp1 .)
    CBRACKET        reduce using rule 116 (mexp -> termino mexp1 .)
    ID              reduce using rule 116 (mexp -> termino mexp1 .)
    IF              reduce using rule 116 (mexp -> termino mexp1 .)
    PRINT           reduce using rule 116 (mexp -> termino mexp1 .)
    READ            reduce using rule 116 (mexp -> termino mexp1 .)
    WHILE           reduce using rule 116 (mexp -> termino mexp1 .)
    FOR             reduce using rule 116 (mexp -> termino mexp1 .)
    OCURLY          reduce using rule 116 (mexp -> termino mexp1 .)
    FUNCTION        reduce using rule 116 (mexp -> termino mexp1 .)
    CLASS           reduce using rule 116 (mexp -> termino mexp1 .)
    VAR             reduce using rule 116 (mexp -> termino mexp1 .)
    OPAREN          reduce using rule 116 (mexp -> termino mexp1 .)
    CSTINT          reduce using rule 116 (mexp -> termino mexp1 .)
    CSTFLT          reduce using rule 116 (mexp -> termino mexp1 .)
    CSTCHAR         reduce using rule 116 (mexp -> termino mexp1 .)
    CSTSTRING       reduce using rule 116 (mexp -> termino mexp1 .)
    TRUE            reduce using rule 116 (mexp -> termino mexp1 .)
    FALSE           reduce using rule 116 (mexp -> termino mexp1 .)
    CCURLY          reduce using rule 116 (mexp -> termino mexp1 .)
    COLON           reduce using rule 116 (mexp -> termino mexp1 .)
    SEMICOLON       reduce using rule 116 (mexp -> termino mexp1 .)


state 97

    (117) mexp1 -> PLUS . saw_plusminus_operator termino mexp1
    (145) saw_plusminus_operator -> .

    OPAREN          reduce using rule 145 (saw_plusminus_operator -> .)
    CSTINT          reduce using rule 145 (saw_plusminus_operator -> .)
    CSTFLT          reduce using rule 145 (saw_plusminus_operator -> .)
    CSTCHAR         reduce using rule 145 (saw_plusminus_operator -> .)
    CSTSTRING       reduce using rule 145 (saw_plusminus_operator -> .)
    ID              reduce using rule 145 (saw_plusminus_operator -> .)
    TRUE            reduce using rule 145 (saw_plusminus_operator -> .)
    FALSE           reduce using rule 145 (saw_plusminus_operator -> .)

    saw_plusminus_operator         shift and go to state 166

state 98

    (118) mexp1 -> MINUS . saw_plusminus_operator termino mexp1
    (145) saw_plusminus_operator -> .

    OPAREN          reduce using rule 145 (saw_plusminus_operator -> .)
    CSTINT          reduce using rule 145 (saw_plusminus_operator -> .)
    CSTFLT          reduce using rule 145 (saw_plusminus_operator -> .)
    CSTCHAR         reduce using rule 145 (saw_plusminus_operator -> .)
    CSTSTRING       reduce using rule 145 (saw_plusminus_operator -> .)
    ID              reduce using rule 145 (saw_plusminus_operator -> .)
    TRUE            reduce using rule 145 (saw_plusminus_operator -> .)
    FALSE           reduce using rule 145 (saw_plusminus_operator -> .)

    saw_plusminus_operator         shift and go to state 167

state 99

    (119) mexp1 -> empty .

    LT              reduce using rule 119 (mexp1 -> empty .)
    GT              reduce using rule 119 (mexp1 -> empty .)
    GTE             reduce using rule 119 (mexp1 -> empty .)
    LTE             reduce using rule 119 (mexp1 -> empty .)
    EQ              reduce using rule 119 (mexp1 -> empty .)
    NE              reduce using rule 119 (mexp1 -> empty .)
    AND             reduce using rule 119 (mexp1 -> empty .)
    OR              reduce using rule 119 (mexp1 -> empty .)
    QUESTION        reduce using rule 119 (mexp1 -> empty .)
    CPAREN          reduce using rule 119 (mexp1 -> empty .)
    COMMA           reduce using rule 119 (mexp1 -> empty .)
    CBRACKET        reduce using rule 119 (mexp1 -> empty .)
    ID              reduce using rule 119 (mexp1 -> empty .)
    IF              reduce using rule 119 (mexp1 -> empty .)
    PRINT           reduce using rule 119 (mexp1 -> empty .)
    READ            reduce using rule 119 (mexp1 -> empty .)
    WHILE           reduce using rule 119 (mexp1 -> empty .)
    FOR             reduce using rule 119 (mexp1 -> empty .)
    OCURLY          reduce using rule 119 (mexp1 -> empty .)
    FUNCTION        reduce using rule 119 (mexp1 -> empty .)
    CLASS           reduce using rule 119 (mexp1 -> empty .)
    VAR             reduce using rule 119 (mexp1 -> empty .)
    OPAREN          reduce using rule 119 (mexp1 -> empty .)
    CSTINT          reduce using rule 119 (mexp1 -> empty .)
    CSTFLT          reduce using rule 119 (mexp1 -> empty .)
    CSTCHAR         reduce using rule 119 (mexp1 -> empty .)
    CSTSTRING       reduce using rule 119 (mexp1 -> empty .)
    TRUE            reduce using rule 119 (mexp1 -> empty .)
    FALSE           reduce using rule 119 (mexp1 -> empty .)
    CCURLY          reduce using rule 119 (mexp1 -> empty .)
    COLON           reduce using rule 119 (mexp1 -> empty .)
    SEMICOLON       reduce using rule 119 (mexp1 -> empty .)


state 100

    (120) termino -> factor term1 . check_plusminus_operator
    (146) check_plusminus_operator -> .

    PLUS            reduce using rule 146 (check_plusminus_operator -> .)
    MINUS           reduce using rule 146 (check_plusminus_operator -> .)
    LT              reduce using rule 146 (check_plusminus_operator -> .)
    GT              reduce using rule 146 (check_plusminus_operator -> .)
    GTE             reduce using rule 146 (check_plusminus_operator -> .)
    LTE             reduce using rule 146 (check_plusminus_operator -> .)
    EQ              reduce using rule 146 (check_plusminus_operator -> .)
    NE              reduce using rule 146 (check_plusminus_operator -> .)
    AND             reduce using rule 146 (check_plusminus_operator -> .)
    OR              reduce using rule 146 (check_plusminus_operator -> .)
    QUESTION        reduce using rule 146 (check_plusminus_operator -> .)
    CPAREN          reduce using rule 146 (check_plusminus_operator -> .)
    COMMA           reduce using rule 146 (check_plusminus_operator -> .)
    CBRACKET        reduce using rule 146 (check_plusminus_operator -> .)
    ID              reduce using rule 146 (check_plusminus_operator -> .)
    IF              reduce using rule 146 (check_plusminus_operator -> .)
    PRINT           reduce using rule 146 (check_plusminus_operator -> .)
    READ            reduce using rule 146 (check_plusminus_operator -> .)
    WHILE           reduce using rule 146 (check_plusminus_operator -> .)
    FOR             reduce using rule 146 (check_plusminus_operator -> .)
    OCURLY          reduce using rule 146 (check_plusminus_operator -> .)
    FUNCTION        reduce using rule 146 (check_plusminus_operator -> .)
    CLASS           reduce using rule 146 (check_plusminus_operator -> .)
    VAR             reduce using rule 146 (check_plusminus_operator -> .)
    OPAREN          reduce using rule 146 (check_plusminus_operator -> .)
    CSTINT          reduce using rule 146 (check_plusminus_operator -> .)
    CSTFLT          reduce using rule 146 (check_plusminus_operator -> .)
    CSTCHAR         reduce using rule 146 (check_plusminus_operator -> .)
    CSTSTRING       reduce using rule 146 (check_plusminus_operator -> .)
    TRUE            reduce using rule 146 (check_plusminus_operator -> .)
    FALSE           reduce using rule 146 (check_plusminus_operator -> .)
    CCURLY          reduce using rule 146 (check_plusminus_operator -> .)
    COLON           reduce using rule 146 (check_plusminus_operator -> .)
    SEMICOLON       reduce using rule 146 (check_plusminus_operator -> .)

    check_plusminus_operator       shift and go to state 168

state 101

    (121) term1 -> MULT . saw_multdiv_operator factor term1
    (147) saw_multdiv_operator -> .

    OPAREN          reduce using rule 147 (saw_multdiv_operator -> .)
    CSTINT          reduce using rule 147 (saw_multdiv_operator -> .)
    CSTFLT          reduce using rule 147 (saw_multdiv_operator -> .)
    CSTCHAR         reduce using rule 147 (saw_multdiv_operator -> .)
    CSTSTRING       reduce using rule 147 (saw_multdiv_operator -> .)
    ID              reduce using rule 147 (saw_multdiv_operator -> .)
    TRUE            reduce using rule 147 (saw_multdiv_operator -> .)
    FALSE           reduce using rule 147 (saw_multdiv_operator -> .)

    saw_multdiv_operator           shift and go to state 169

state 102

    (122) term1 -> DIV . saw_multdiv_operator factor term1
    (147) saw_multdiv_operator -> .

    OPAREN          reduce using rule 147 (saw_multdiv_operator -> .)
    CSTINT          reduce using rule 147 (saw_multdiv_operator -> .)
    CSTFLT          reduce using rule 147 (saw_multdiv_operator -> .)
    CSTCHAR         reduce using rule 147 (saw_multdiv_operator -> .)
    CSTSTRING       reduce using rule 147 (saw_multdiv_operator -> .)
    ID              reduce using rule 147 (saw_multdiv_operator -> .)
    TRUE            reduce using rule 147 (saw_multdiv_operator -> .)
    FALSE           reduce using rule 147 (saw_multdiv_operator -> .)

    saw_multdiv_operator           shift and go to state 170

state 103

    (123) term1 -> empty .

    PLUS            reduce using rule 123 (term1 -> empty .)
    MINUS           reduce using rule 123 (term1 -> empty .)
    LT              reduce using rule 123 (term1 -> empty .)
    GT              reduce using rule 123 (term1 -> empty .)
    GTE             reduce using rule 123 (term1 -> empty .)
    LTE             reduce using rule 123 (term1 -> empty .)
    EQ              reduce using rule 123 (term1 -> empty .)
    NE              reduce using rule 123 (term1 -> empty .)
    AND             reduce using rule 123 (term1 -> empty .)
    OR              reduce using rule 123 (term1 -> empty .)
    QUESTION        reduce using rule 123 (term1 -> empty .)
    CPAREN          reduce using rule 123 (term1 -> empty .)
    COMMA           reduce using rule 123 (term1 -> empty .)
    CBRACKET        reduce using rule 123 (term1 -> empty .)
    ID              reduce using rule 123 (term1 -> empty .)
    IF              reduce using rule 123 (term1 -> empty .)
    PRINT           reduce using rule 123 (term1 -> empty .)
    READ            reduce using rule 123 (term1 -> empty .)
    WHILE           reduce using rule 123 (term1 -> empty .)
    FOR             reduce using rule 123 (term1 -> empty .)
    OCURLY          reduce using rule 123 (term1 -> empty .)
    FUNCTION        reduce using rule 123 (term1 -> empty .)
    CLASS           reduce using rule 123 (term1 -> empty .)
    VAR             reduce using rule 123 (term1 -> empty .)
    OPAREN          reduce using rule 123 (term1 -> empty .)
    CSTINT          reduce using rule 123 (term1 -> empty .)
    CSTFLT          reduce using rule 123 (term1 -> empty .)
    CSTCHAR         reduce using rule 123 (term1 -> empty .)
    CSTSTRING       reduce using rule 123 (term1 -> empty .)
    TRUE            reduce using rule 123 (term1 -> empty .)
    FALSE           reduce using rule 123 (term1 -> empty .)
    CCURLY          reduce using rule 123 (term1 -> empty .)
    COLON           reduce using rule 123 (term1 -> empty .)
    SEMICOLON       reduce using rule 123 (term1 -> empty .)


state 104

    (125) factor -> varcst check_multdiv_operator .

    MULT            reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    DIV             reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    PLUS            reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    MINUS           reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    LT              reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    GT              reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    GTE             reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    LTE             reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    EQ              reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    NE              reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    AND             reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    OR              reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    QUESTION        reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    CPAREN          reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    COMMA           reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    CBRACKET        reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    ID              reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    IF              reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    PRINT           reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    READ            reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    WHILE           reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    FOR             reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    OCURLY          reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    FUNCTION        reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    CLASS           reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    VAR             reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    OPAREN          reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    CSTINT          reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    CSTFLT          reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    CSTCHAR         reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    CSTSTRING       reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    TRUE            reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    FALSE           reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    CCURLY          reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    COLON           reduce using rule 125 (factor -> varcst check_multdiv_operator .)
    SEMICOLON       reduce using rule 125 (factor -> varcst check_multdiv_operator .)


state 105

    (129) varcst -> CSTINT saw_end_value .

    MULT            reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    DIV             reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    PLUS            reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    MINUS           reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    LT              reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    GT              reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    GTE             reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    LTE             reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    EQ              reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    NE              reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    AND             reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    OR              reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    QUESTION        reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    CPAREN          reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    COMMA           reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    CBRACKET        reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    ID              reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    IF              reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    PRINT           reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    READ            reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    WHILE           reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    FOR             reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    OCURLY          reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    FUNCTION        reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    CLASS           reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    VAR             reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    OPAREN          reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    CSTINT          reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    CSTFLT          reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    CSTCHAR         reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    CSTSTRING       reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    TRUE            reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    FALSE           reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    CCURLY          reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    COLON           reduce using rule 129 (varcst -> CSTINT saw_end_value .)
    SEMICOLON       reduce using rule 129 (varcst -> CSTINT saw_end_value .)


state 106

    (130) varcst -> CSTFLT saw_end_value .

    MULT            reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    DIV             reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    PLUS            reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    MINUS           reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    LT              reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    GT              reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    GTE             reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    LTE             reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    EQ              reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    NE              reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    AND             reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    OR              reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    QUESTION        reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    CPAREN          reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    COMMA           reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    CBRACKET        reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    ID              reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    IF              reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    PRINT           reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    READ            reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    WHILE           reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    FOR             reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    OCURLY          reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    FUNCTION        reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    CLASS           reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    VAR             reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    OPAREN          reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    CSTINT          reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    CSTFLT          reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    CSTCHAR         reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    CSTSTRING       reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    TRUE            reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    FALSE           reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    CCURLY          reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    COLON           reduce using rule 130 (varcst -> CSTFLT saw_end_value .)
    SEMICOLON       reduce using rule 130 (varcst -> CSTFLT saw_end_value .)


state 107

    (131) varcst -> CSTCHAR saw_end_value .

    MULT            reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    DIV             reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    PLUS            reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    MINUS           reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    LT              reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    GT              reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    GTE             reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    LTE             reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    EQ              reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    NE              reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    AND             reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    OR              reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    QUESTION        reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    CPAREN          reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    COMMA           reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    CBRACKET        reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    ID              reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    IF              reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    PRINT           reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    READ            reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    WHILE           reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    FOR             reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    OCURLY          reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    FUNCTION        reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    CLASS           reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    VAR             reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    OPAREN          reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    CSTINT          reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    CSTFLT          reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    CSTCHAR         reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    CSTSTRING       reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    TRUE            reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    FALSE           reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    CCURLY          reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    COLON           reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)
    SEMICOLON       reduce using rule 131 (varcst -> CSTCHAR saw_end_value .)


state 108

    (132) varcst -> CSTSTRING saw_end_value .

    MULT            reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    DIV             reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    PLUS            reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    MINUS           reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    LT              reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    GT              reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    GTE             reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    LTE             reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    EQ              reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    NE              reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    AND             reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    OR              reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    QUESTION        reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    CPAREN          reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    COMMA           reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    CBRACKET        reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    ID              reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    IF              reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    PRINT           reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    READ            reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    WHILE           reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    FOR             reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    OCURLY          reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    FUNCTION        reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    CLASS           reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    VAR             reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    OPAREN          reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    CSTINT          reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    CSTFLT          reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    CSTCHAR         reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    CSTSTRING       reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    TRUE            reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    FALSE           reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    CCURLY          reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    COLON           reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)
    SEMICOLON       reduce using rule 132 (varcst -> CSTSTRING saw_end_value .)


state 109

    (133) varcst -> boolean saw_end_value .

    MULT            reduce using rule 133 (varcst -> boolean saw_end_value .)
    DIV             reduce using rule 133 (varcst -> boolean saw_end_value .)
    PLUS            reduce using rule 133 (varcst -> boolean saw_end_value .)
    MINUS           reduce using rule 133 (varcst -> boolean saw_end_value .)
    LT              reduce using rule 133 (varcst -> boolean saw_end_value .)
    GT              reduce using rule 133 (varcst -> boolean saw_end_value .)
    GTE             reduce using rule 133 (varcst -> boolean saw_end_value .)
    LTE             reduce using rule 133 (varcst -> boolean saw_end_value .)
    EQ              reduce using rule 133 (varcst -> boolean saw_end_value .)
    NE              reduce using rule 133 (varcst -> boolean saw_end_value .)
    AND             reduce using rule 133 (varcst -> boolean saw_end_value .)
    OR              reduce using rule 133 (varcst -> boolean saw_end_value .)
    QUESTION        reduce using rule 133 (varcst -> boolean saw_end_value .)
    CPAREN          reduce using rule 133 (varcst -> boolean saw_end_value .)
    COMMA           reduce using rule 133 (varcst -> boolean saw_end_value .)
    CBRACKET        reduce using rule 133 (varcst -> boolean saw_end_value .)
    ID              reduce using rule 133 (varcst -> boolean saw_end_value .)
    IF              reduce using rule 133 (varcst -> boolean saw_end_value .)
    PRINT           reduce using rule 133 (varcst -> boolean saw_end_value .)
    READ            reduce using rule 133 (varcst -> boolean saw_end_value .)
    WHILE           reduce using rule 133 (varcst -> boolean saw_end_value .)
    FOR             reduce using rule 133 (varcst -> boolean saw_end_value .)
    OCURLY          reduce using rule 133 (varcst -> boolean saw_end_value .)
    FUNCTION        reduce using rule 133 (varcst -> boolean saw_end_value .)
    CLASS           reduce using rule 133 (varcst -> boolean saw_end_value .)
    VAR             reduce using rule 133 (varcst -> boolean saw_end_value .)
    OPAREN          reduce using rule 133 (varcst -> boolean saw_end_value .)
    CSTINT          reduce using rule 133 (varcst -> boolean saw_end_value .)
    CSTFLT          reduce using rule 133 (varcst -> boolean saw_end_value .)
    CSTCHAR         reduce using rule 133 (varcst -> boolean saw_end_value .)
    CSTSTRING       reduce using rule 133 (varcst -> boolean saw_end_value .)
    TRUE            reduce using rule 133 (varcst -> boolean saw_end_value .)
    FALSE           reduce using rule 133 (varcst -> boolean saw_end_value .)
    CCURLY          reduce using rule 133 (varcst -> boolean saw_end_value .)
    COLON           reduce using rule 133 (varcst -> boolean saw_end_value .)
    SEMICOLON       reduce using rule 133 (varcst -> boolean saw_end_value .)


state 110

    (22) dec -> VAR tipo SEMICOLON . dec1
    (23) dec1 -> . dec
    (24) dec1 -> . empty
    (22) dec -> . VAR tipo SEMICOLON dec1
    (134) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 8
    OCURLY          reduce using rule 134 (empty -> .)
    ID              reduce using rule 134 (empty -> .)
    IF              reduce using rule 134 (empty -> .)
    PRINT           reduce using rule 134 (empty -> .)
    READ            reduce using rule 134 (empty -> .)
    WHILE           reduce using rule 134 (empty -> .)
    FOR             reduce using rule 134 (empty -> .)
    FUNCTION        reduce using rule 134 (empty -> .)
    CLASS           reduce using rule 134 (empty -> .)
    OPAREN          reduce using rule 134 (empty -> .)
    CSTINT          reduce using rule 134 (empty -> .)
    CSTFLT          reduce using rule 134 (empty -> .)
    CSTCHAR         reduce using rule 134 (empty -> .)
    CSTSTRING       reduce using rule 134 (empty -> .)
    TRUE            reduce using rule 134 (empty -> .)
    FALSE           reduce using rule 134 (empty -> .)
    CCURLY          reduce using rule 134 (empty -> .)
    METHODS         reduce using rule 134 (empty -> .)

  ! VAR             [ reduce using rule 134 (empty -> .) ]

    dec1                           shift and go to state 171
    dec                            shift and go to state 172
    empty                          shift and go to state 173

state 111

    (25) tipo -> compuesto ID . saw_id saw_variable tipo1
    (137) saw_id -> .

    COMMA           reduce using rule 137 (saw_id -> .)
    SEMICOLON       reduce using rule 137 (saw_id -> .)

    saw_id                         shift and go to state 174

state 112

    (44) compuesto -> ID saw_type .

    ID              reduce using rule 44 (compuesto -> ID saw_type .)


state 113

    (26) tipo -> simple ID . saw_id saw_variable tipo1
    (137) saw_id -> .

    COMMA           reduce using rule 137 (saw_id -> .)
    SEMICOLON       reduce using rule 137 (saw_id -> .)

    saw_id                         shift and go to state 175

state 114

    (27) tipo -> multiple ID . saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable tipo2
    (137) saw_id -> .

    OBRACKET        reduce using rule 137 (saw_id -> .)

    saw_id                         shift and go to state 176

state 115

    (45) compuesto -> DATAFRAME saw_type .

    ID              reduce using rule 45 (compuesto -> DATAFRAME saw_type .)


state 116

    (46) compuesto -> FILE saw_type .

    ID              reduce using rule 46 (compuesto -> FILE saw_type .)


state 117

    (34) simple -> INT saw_type .

    ID              reduce using rule 34 (simple -> INT saw_type .)


state 118

    (35) simple -> FLOAT saw_type .

    ID              reduce using rule 35 (simple -> FLOAT saw_type .)


state 119

    (36) simple -> BOOL saw_type .

    ID              reduce using rule 36 (simple -> BOOL saw_type .)


state 120

    (37) simple -> STRING saw_type .

    ID              reduce using rule 37 (simple -> STRING saw_type .)


state 121

    (38) simple -> CHAR saw_type .

    ID              reduce using rule 38 (simple -> CHAR saw_type .)


state 122

    (39) multiple -> INTS saw_type .

    ID              reduce using rule 39 (multiple -> INTS saw_type .)


state 123

    (40) multiple -> FLOATS saw_type .

    ID              reduce using rule 40 (multiple -> FLOATS saw_type .)


state 124

    (41) multiple -> BOOLS saw_type .

    ID              reduce using rule 41 (multiple -> BOOLS saw_type .)


state 125

    (42) multiple -> STRINGS saw_type .

    ID              reduce using rule 42 (multiple -> STRINGS saw_type .)


state 126

    (43) multiple -> CHARS saw_type .

    ID              reduce using rule 43 (multiple -> CHARS saw_type .)


state 127

    (47) bloque -> OCURLY b1 CCURLY scope_end .

    $end            reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    ID              reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    IF              reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    PRINT           reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    READ            reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    WHILE           reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    FOR             reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    OCURLY          reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    FUNCTION        reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    CLASS           reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    VAR             reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    OPAREN          reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    CSTINT          reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    CSTFLT          reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    CSTCHAR         reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    CSTSTRING       reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    TRUE            reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    FALSE           reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    CCURLY          reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)


state 128

    (77) asignacion -> variable saw_var_factor AS . saw_asig exp
    (143) saw_asig -> .

    OPAREN          reduce using rule 143 (saw_asig -> .)
    CSTINT          reduce using rule 143 (saw_asig -> .)
    CSTFLT          reduce using rule 143 (saw_asig -> .)
    CSTCHAR         reduce using rule 143 (saw_asig -> .)
    CSTSTRING       reduce using rule 143 (saw_asig -> .)
    ID              reduce using rule 143 (saw_asig -> .)
    TRUE            reduce using rule 143 (saw_asig -> .)
    FALSE           reduce using rule 143 (saw_asig -> .)

    saw_asig                       shift and go to state 177

state 129

    (126) factor -> variable saw_var_factor check_multdiv_operator .

    MULT            reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    DIV             reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    PLUS            reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    MINUS           reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    LT              reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    GT              reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    GTE             reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    LTE             reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    EQ              reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    NE              reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    AND             reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    OR              reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    QUESTION        reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    CPAREN          reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    COMMA           reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    CBRACKET        reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    ID              reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    IF              reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    PRINT           reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    READ            reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    WHILE           reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    FOR             reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    OCURLY          reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    FUNCTION        reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    CLASS           reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    VAR             reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    OPAREN          reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    CSTINT          reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    CSTFLT          reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    CSTCHAR         reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    CSTSTRING       reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    TRUE            reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    FALSE           reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    CCURLY          reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    COLON           reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)
    SEMICOLON       reduce using rule 126 (factor -> variable saw_var_factor check_multdiv_operator .)


state 130

    (82) ternaria -> exp QUESTION estatuto_redux . COLON estatuto_redux SEMICOLON

    COLON           shift and go to state 178


state 131

    (72) estatuto_redux -> asignacion .

    COLON           reduce using rule 72 (estatuto_redux -> asignacion .)
    SEMICOLON       reduce using rule 72 (estatuto_redux -> asignacion .)


state 132

    (73) estatuto_redux -> llamada .
    (127) factor -> llamada .

    COLON           reduce using rule 73 (estatuto_redux -> llamada .)
    SEMICOLON       reduce using rule 73 (estatuto_redux -> llamada .)
    MULT            reduce using rule 127 (factor -> llamada .)
    DIV             reduce using rule 127 (factor -> llamada .)
    PLUS            reduce using rule 127 (factor -> llamada .)
    MINUS           reduce using rule 127 (factor -> llamada .)
    LT              reduce using rule 127 (factor -> llamada .)
    GT              reduce using rule 127 (factor -> llamada .)
    GTE             reduce using rule 127 (factor -> llamada .)
    LTE             reduce using rule 127 (factor -> llamada .)
    EQ              reduce using rule 127 (factor -> llamada .)
    NE              reduce using rule 127 (factor -> llamada .)
    AND             reduce using rule 127 (factor -> llamada .)
    OR              reduce using rule 127 (factor -> llamada .)
    QUESTION        reduce using rule 127 (factor -> llamada .)


state 133

    (74) estatuto_redux -> escritura .

    COLON           reduce using rule 74 (estatuto_redux -> escritura .)
    SEMICOLON       reduce using rule 74 (estatuto_redux -> escritura .)


state 134

    (75) estatuto_redux -> leer .

    COLON           reduce using rule 75 (estatuto_redux -> leer .)
    SEMICOLON       reduce using rule 75 (estatuto_redux -> leer .)


state 135

    (76) estatuto_redux -> ternaria .

    COLON           reduce using rule 76 (estatuto_redux -> ternaria .)
    SEMICOLON       reduce using rule 76 (estatuto_redux -> ternaria .)


state 136

    (98) llamada -> ID saw_id OPAREN . exp llamada1 CPAREN
    (99) llamada -> ID saw_id OPAREN . CPAREN
    (102) exp -> . texp exp1 check_or_operator
    (105) texp -> . gexp texp1 check_and_operator
    (108) gexp -> . mexp gexp1 check_relational_operator
    (116) mexp -> . termino mexp1
    (120) termino -> . factor term1 check_plusminus_operator
    (124) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (125) factor -> . varcst check_multdiv_operator
    (126) factor -> . variable saw_var_factor check_multdiv_operator
    (127) factor -> . llamada
    (129) varcst -> . CSTINT saw_end_value
    (130) varcst -> . CSTFLT saw_end_value
    (131) varcst -> . CSTCHAR saw_end_value
    (132) varcst -> . CSTSTRING saw_end_value
    (133) varcst -> . boolean saw_end_value
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2
    (98) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (99) llamada -> . ID saw_id OPAREN CPAREN
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE

    CPAREN          shift and go to state 180
    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 144
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 179
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 142
    llamada                        shift and go to state 143
    boolean                        shift and go to state 46

state 137

    (91) variable -> ID saw_id saw_called_var .

    AS              reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    MULT            reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    DIV             reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    PLUS            reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    MINUS           reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    LT              reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    GT              reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    GTE             reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    LTE             reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    EQ              reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    NE              reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    AND             reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    OR              reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    QUESTION        reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    CPAREN          reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    FROM            reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    COMMA           reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    CBRACKET        reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    ID              reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    IF              reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    PRINT           reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    READ            reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    WHILE           reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    FOR             reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    OCURLY          reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    FUNCTION        reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    CLASS           reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    VAR             reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    OPAREN          reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    CSTINT          reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    CSTFLT          reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    CSTCHAR         reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    CSTSTRING       reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    TRUE            reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    FALSE           reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    CCURLY          reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    COLON           reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    SEMICOLON       reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    TO              reduce using rule 91 (variable -> ID saw_id saw_called_var .)
    BY              reduce using rule 91 (variable -> ID saw_id saw_called_var .)


state 138

    (92) variable -> ID saw_id OBRACKET . exp CBRACKET saw_dimension variable1 saw_called_var
    (102) exp -> . texp exp1 check_or_operator
    (105) texp -> . gexp texp1 check_and_operator
    (108) gexp -> . mexp gexp1 check_relational_operator
    (116) mexp -> . termino mexp1
    (120) termino -> . factor term1 check_plusminus_operator
    (124) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (125) factor -> . varcst check_multdiv_operator
    (126) factor -> . variable saw_var_factor check_multdiv_operator
    (127) factor -> . llamada
    (129) varcst -> . CSTINT saw_end_value
    (130) varcst -> . CSTFLT saw_end_value
    (131) varcst -> . CSTCHAR saw_end_value
    (132) varcst -> . CSTSTRING saw_end_value
    (133) varcst -> . boolean saw_end_value
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2
    (98) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (99) llamada -> . ID saw_id OPAREN CPAREN
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 144
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 181
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 142
    llamada                        shift and go to state 143
    boolean                        shift and go to state 46

state 139

    (93) variable -> ID saw_id variable2 .

    AS              reduce using rule 93 (variable -> ID saw_id variable2 .)
    MULT            reduce using rule 93 (variable -> ID saw_id variable2 .)
    DIV             reduce using rule 93 (variable -> ID saw_id variable2 .)
    PLUS            reduce using rule 93 (variable -> ID saw_id variable2 .)
    MINUS           reduce using rule 93 (variable -> ID saw_id variable2 .)
    LT              reduce using rule 93 (variable -> ID saw_id variable2 .)
    GT              reduce using rule 93 (variable -> ID saw_id variable2 .)
    GTE             reduce using rule 93 (variable -> ID saw_id variable2 .)
    LTE             reduce using rule 93 (variable -> ID saw_id variable2 .)
    EQ              reduce using rule 93 (variable -> ID saw_id variable2 .)
    NE              reduce using rule 93 (variable -> ID saw_id variable2 .)
    AND             reduce using rule 93 (variable -> ID saw_id variable2 .)
    OR              reduce using rule 93 (variable -> ID saw_id variable2 .)
    QUESTION        reduce using rule 93 (variable -> ID saw_id variable2 .)
    CPAREN          reduce using rule 93 (variable -> ID saw_id variable2 .)
    FROM            reduce using rule 93 (variable -> ID saw_id variable2 .)
    COMMA           reduce using rule 93 (variable -> ID saw_id variable2 .)
    CBRACKET        reduce using rule 93 (variable -> ID saw_id variable2 .)
    ID              reduce using rule 93 (variable -> ID saw_id variable2 .)
    IF              reduce using rule 93 (variable -> ID saw_id variable2 .)
    PRINT           reduce using rule 93 (variable -> ID saw_id variable2 .)
    READ            reduce using rule 93 (variable -> ID saw_id variable2 .)
    WHILE           reduce using rule 93 (variable -> ID saw_id variable2 .)
    FOR             reduce using rule 93 (variable -> ID saw_id variable2 .)
    OCURLY          reduce using rule 93 (variable -> ID saw_id variable2 .)
    FUNCTION        reduce using rule 93 (variable -> ID saw_id variable2 .)
    CLASS           reduce using rule 93 (variable -> ID saw_id variable2 .)
    VAR             reduce using rule 93 (variable -> ID saw_id variable2 .)
    OPAREN          reduce using rule 93 (variable -> ID saw_id variable2 .)
    CSTINT          reduce using rule 93 (variable -> ID saw_id variable2 .)
    CSTFLT          reduce using rule 93 (variable -> ID saw_id variable2 .)
    CSTCHAR         reduce using rule 93 (variable -> ID saw_id variable2 .)
    CSTSTRING       reduce using rule 93 (variable -> ID saw_id variable2 .)
    TRUE            reduce using rule 93 (variable -> ID saw_id variable2 .)
    FALSE           reduce using rule 93 (variable -> ID saw_id variable2 .)
    CCURLY          reduce using rule 93 (variable -> ID saw_id variable2 .)
    COLON           reduce using rule 93 (variable -> ID saw_id variable2 .)
    SEMICOLON       reduce using rule 93 (variable -> ID saw_id variable2 .)
    TO              reduce using rule 93 (variable -> ID saw_id variable2 .)
    BY              reduce using rule 93 (variable -> ID saw_id variable2 .)


state 140

    (96) variable2 -> PERIOD . ID saw_called_var_from_class
    (97) variable2 -> PERIOD . ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1

    ID              shift and go to state 182


state 141

    (124) factor -> OPAREN saw_oparen exp . CPAREN saw_cparen check_multdiv_operator

    CPAREN          shift and go to state 183


state 142

    (126) factor -> variable . saw_var_factor check_multdiv_operator
    (128) saw_var_factor -> .

    MULT            reduce using rule 128 (saw_var_factor -> .)
    DIV             reduce using rule 128 (saw_var_factor -> .)
    PLUS            reduce using rule 128 (saw_var_factor -> .)
    MINUS           reduce using rule 128 (saw_var_factor -> .)
    LT              reduce using rule 128 (saw_var_factor -> .)
    GT              reduce using rule 128 (saw_var_factor -> .)
    GTE             reduce using rule 128 (saw_var_factor -> .)
    LTE             reduce using rule 128 (saw_var_factor -> .)
    EQ              reduce using rule 128 (saw_var_factor -> .)
    NE              reduce using rule 128 (saw_var_factor -> .)
    AND             reduce using rule 128 (saw_var_factor -> .)
    OR              reduce using rule 128 (saw_var_factor -> .)
    CPAREN          reduce using rule 128 (saw_var_factor -> .)
    COMMA           reduce using rule 128 (saw_var_factor -> .)
    CBRACKET        reduce using rule 128 (saw_var_factor -> .)
    QUESTION        reduce using rule 128 (saw_var_factor -> .)
    ID              reduce using rule 128 (saw_var_factor -> .)
    IF              reduce using rule 128 (saw_var_factor -> .)
    PRINT           reduce using rule 128 (saw_var_factor -> .)
    READ            reduce using rule 128 (saw_var_factor -> .)
    WHILE           reduce using rule 128 (saw_var_factor -> .)
    FOR             reduce using rule 128 (saw_var_factor -> .)
    OCURLY          reduce using rule 128 (saw_var_factor -> .)
    FUNCTION        reduce using rule 128 (saw_var_factor -> .)
    CLASS           reduce using rule 128 (saw_var_factor -> .)
    VAR             reduce using rule 128 (saw_var_factor -> .)
    OPAREN          reduce using rule 128 (saw_var_factor -> .)
    CSTINT          reduce using rule 128 (saw_var_factor -> .)
    CSTFLT          reduce using rule 128 (saw_var_factor -> .)
    CSTCHAR         reduce using rule 128 (saw_var_factor -> .)
    CSTSTRING       reduce using rule 128 (saw_var_factor -> .)
    TRUE            reduce using rule 128 (saw_var_factor -> .)
    FALSE           reduce using rule 128 (saw_var_factor -> .)
    CCURLY          reduce using rule 128 (saw_var_factor -> .)
    COLON           reduce using rule 128 (saw_var_factor -> .)
    SEMICOLON       reduce using rule 128 (saw_var_factor -> .)

    saw_var_factor                 shift and go to state 184

state 143

    (127) factor -> llamada .

    MULT            reduce using rule 127 (factor -> llamada .)
    DIV             reduce using rule 127 (factor -> llamada .)
    PLUS            reduce using rule 127 (factor -> llamada .)
    MINUS           reduce using rule 127 (factor -> llamada .)
    LT              reduce using rule 127 (factor -> llamada .)
    GT              reduce using rule 127 (factor -> llamada .)
    GTE             reduce using rule 127 (factor -> llamada .)
    LTE             reduce using rule 127 (factor -> llamada .)
    EQ              reduce using rule 127 (factor -> llamada .)
    NE              reduce using rule 127 (factor -> llamada .)
    AND             reduce using rule 127 (factor -> llamada .)
    OR              reduce using rule 127 (factor -> llamada .)
    CPAREN          reduce using rule 127 (factor -> llamada .)
    COMMA           reduce using rule 127 (factor -> llamada .)
    CBRACKET        reduce using rule 127 (factor -> llamada .)
    QUESTION        reduce using rule 127 (factor -> llamada .)
    ID              reduce using rule 127 (factor -> llamada .)
    IF              reduce using rule 127 (factor -> llamada .)
    PRINT           reduce using rule 127 (factor -> llamada .)
    READ            reduce using rule 127 (factor -> llamada .)
    WHILE           reduce using rule 127 (factor -> llamada .)
    FOR             reduce using rule 127 (factor -> llamada .)
    OCURLY          reduce using rule 127 (factor -> llamada .)
    FUNCTION        reduce using rule 127 (factor -> llamada .)
    CLASS           reduce using rule 127 (factor -> llamada .)
    VAR             reduce using rule 127 (factor -> llamada .)
    OPAREN          reduce using rule 127 (factor -> llamada .)
    CSTINT          reduce using rule 127 (factor -> llamada .)
    CSTFLT          reduce using rule 127 (factor -> llamada .)
    CSTCHAR         reduce using rule 127 (factor -> llamada .)
    CSTSTRING       reduce using rule 127 (factor -> llamada .)
    TRUE            reduce using rule 127 (factor -> llamada .)
    FALSE           reduce using rule 127 (factor -> llamada .)
    CCURLY          reduce using rule 127 (factor -> llamada .)
    COLON           reduce using rule 127 (factor -> llamada .)
    SEMICOLON       reduce using rule 127 (factor -> llamada .)


state 144

    (91) variable -> ID . saw_id saw_called_var
    (92) variable -> ID . saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> ID . saw_id variable2
    (98) llamada -> ID . saw_id OPAREN exp llamada1 CPAREN
    (99) llamada -> ID . saw_id OPAREN CPAREN
    (137) saw_id -> .

    OBRACKET        reduce using rule 137 (saw_id -> .)
    OPAREN          reduce using rule 137 (saw_id -> .)
    PERIOD          reduce using rule 137 (saw_id -> .)
    MULT            reduce using rule 137 (saw_id -> .)
    DIV             reduce using rule 137 (saw_id -> .)
    PLUS            reduce using rule 137 (saw_id -> .)
    MINUS           reduce using rule 137 (saw_id -> .)
    LT              reduce using rule 137 (saw_id -> .)
    GT              reduce using rule 137 (saw_id -> .)
    GTE             reduce using rule 137 (saw_id -> .)
    LTE             reduce using rule 137 (saw_id -> .)
    EQ              reduce using rule 137 (saw_id -> .)
    NE              reduce using rule 137 (saw_id -> .)
    AND             reduce using rule 137 (saw_id -> .)
    OR              reduce using rule 137 (saw_id -> .)
    CPAREN          reduce using rule 137 (saw_id -> .)
    COMMA           reduce using rule 137 (saw_id -> .)
    CBRACKET        reduce using rule 137 (saw_id -> .)
    QUESTION        reduce using rule 137 (saw_id -> .)
    ID              reduce using rule 137 (saw_id -> .)
    IF              reduce using rule 137 (saw_id -> .)
    PRINT           reduce using rule 137 (saw_id -> .)
    READ            reduce using rule 137 (saw_id -> .)
    WHILE           reduce using rule 137 (saw_id -> .)
    FOR             reduce using rule 137 (saw_id -> .)
    OCURLY          reduce using rule 137 (saw_id -> .)
    FUNCTION        reduce using rule 137 (saw_id -> .)
    CLASS           reduce using rule 137 (saw_id -> .)
    VAR             reduce using rule 137 (saw_id -> .)
    CSTINT          reduce using rule 137 (saw_id -> .)
    CSTFLT          reduce using rule 137 (saw_id -> .)
    CSTCHAR         reduce using rule 137 (saw_id -> .)
    CSTSTRING       reduce using rule 137 (saw_id -> .)
    TRUE            reduce using rule 137 (saw_id -> .)
    FALSE           reduce using rule 137 (saw_id -> .)
    CCURLY          reduce using rule 137 (saw_id -> .)
    COLON           reduce using rule 137 (saw_id -> .)
    SEMICOLON       reduce using rule 137 (saw_id -> .)

    saw_id                         shift and go to state 185

state 145

    (78) condicion -> IF cond2 THEN . bloque_ciclo cond1 SEMICOLON bc_end
    (50) bloque_ciclo -> . OCURLY bc1 CCURLY

    OCURLY          shift and go to state 187

    bloque_ciclo                   shift and go to state 186

state 146

    (81) cond2 -> OPAREN exp . CPAREN

    CPAREN          shift and go to state 188


state 147

    (83) escritura -> PRINT saw_print OPAREN . exp e1 CPAREN saw_print_end
    (102) exp -> . texp exp1 check_or_operator
    (105) texp -> . gexp texp1 check_and_operator
    (108) gexp -> . mexp gexp1 check_relational_operator
    (116) mexp -> . termino mexp1
    (120) termino -> . factor term1 check_plusminus_operator
    (124) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (125) factor -> . varcst check_multdiv_operator
    (126) factor -> . variable saw_var_factor check_multdiv_operator
    (127) factor -> . llamada
    (129) varcst -> . CSTINT saw_end_value
    (130) varcst -> . CSTFLT saw_end_value
    (131) varcst -> . CSTCHAR saw_end_value
    (132) varcst -> . CSTSTRING saw_end_value
    (133) varcst -> . boolean saw_end_value
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2
    (98) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (99) llamada -> . ID saw_id OPAREN CPAREN
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 144
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 189
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 142
    llamada                        shift and go to state 143
    boolean                        shift and go to state 46

state 148

    (86) leer -> READ saw_read OPAREN . variable saw_read_exp l1 CPAREN saw_read_end
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2

    ID              shift and go to state 151

    variable                       shift and go to state 190

state 149

    (18) ciclo_while -> WHILE saw_while cond2 . THEN bloque_ciclo SEMICOLON saw_while_end

    THEN            shift and go to state 191


state 150

    (19) ciclo_for -> FOR OPAREN variable . FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON

    FROM            shift and go to state 192


state 151

    (91) variable -> ID . saw_id saw_called_var
    (92) variable -> ID . saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> ID . saw_id variable2
    (137) saw_id -> .

    OBRACKET        reduce using rule 137 (saw_id -> .)
    PERIOD          reduce using rule 137 (saw_id -> .)
    FROM            reduce using rule 137 (saw_id -> .)
    COMMA           reduce using rule 137 (saw_id -> .)
    CPAREN          reduce using rule 137 (saw_id -> .)
    AS              reduce using rule 137 (saw_id -> .)
    TO              reduce using rule 137 (saw_id -> .)
    BY              reduce using rule 137 (saw_id -> .)

    saw_id                         shift and go to state 193

state 152

    (3) funcion -> FUNCTION func1 ID . saw_id saw_function OPAREN param CPAREN bloque
    (137) saw_id -> .

    OPAREN          reduce using rule 137 (saw_id -> .)

    saw_id                         shift and go to state 194

state 153

    (5) func1 -> VOID saw_type .

    ID              reduce using rule 5 (func1 -> VOID saw_type .)


state 154

    (12) clase -> CLASS ID saw_id . saw_class COLON clase_bloque SEMICOLON
    (135) saw_class -> .

    COLON           reduce using rule 135 (saw_class -> .)

    saw_class                      shift and go to state 195

state 155

    (102) exp -> texp exp1 check_or_operator .

    QUESTION        reduce using rule 102 (exp -> texp exp1 check_or_operator .)
    CPAREN          reduce using rule 102 (exp -> texp exp1 check_or_operator .)
    COMMA           reduce using rule 102 (exp -> texp exp1 check_or_operator .)
    CBRACKET        reduce using rule 102 (exp -> texp exp1 check_or_operator .)
    ID              reduce using rule 102 (exp -> texp exp1 check_or_operator .)
    IF              reduce using rule 102 (exp -> texp exp1 check_or_operator .)
    PRINT           reduce using rule 102 (exp -> texp exp1 check_or_operator .)
    READ            reduce using rule 102 (exp -> texp exp1 check_or_operator .)
    WHILE           reduce using rule 102 (exp -> texp exp1 check_or_operator .)
    FOR             reduce using rule 102 (exp -> texp exp1 check_or_operator .)
    OCURLY          reduce using rule 102 (exp -> texp exp1 check_or_operator .)
    FUNCTION        reduce using rule 102 (exp -> texp exp1 check_or_operator .)
    CLASS           reduce using rule 102 (exp -> texp exp1 check_or_operator .)
    VAR             reduce using rule 102 (exp -> texp exp1 check_or_operator .)
    OPAREN          reduce using rule 102 (exp -> texp exp1 check_or_operator .)
    CSTINT          reduce using rule 102 (exp -> texp exp1 check_or_operator .)
    CSTFLT          reduce using rule 102 (exp -> texp exp1 check_or_operator .)
    CSTCHAR         reduce using rule 102 (exp -> texp exp1 check_or_operator .)
    CSTSTRING       reduce using rule 102 (exp -> texp exp1 check_or_operator .)
    TRUE            reduce using rule 102 (exp -> texp exp1 check_or_operator .)
    FALSE           reduce using rule 102 (exp -> texp exp1 check_or_operator .)
    CCURLY          reduce using rule 102 (exp -> texp exp1 check_or_operator .)
    COLON           reduce using rule 102 (exp -> texp exp1 check_or_operator .)
    SEMICOLON       reduce using rule 102 (exp -> texp exp1 check_or_operator .)


state 156

    (103) exp1 -> OR saw_or . texp exp1
    (105) texp -> . gexp texp1 check_and_operator
    (108) gexp -> . mexp gexp1 check_relational_operator
    (116) mexp -> . termino mexp1
    (120) termino -> . factor term1 check_plusminus_operator
    (124) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (125) factor -> . varcst check_multdiv_operator
    (126) factor -> . variable saw_var_factor check_multdiv_operator
    (127) factor -> . llamada
    (129) varcst -> . CSTINT saw_end_value
    (130) varcst -> . CSTFLT saw_end_value
    (131) varcst -> . CSTCHAR saw_end_value
    (132) varcst -> . CSTSTRING saw_end_value
    (133) varcst -> . boolean saw_end_value
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2
    (98) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (99) llamada -> . ID saw_id OPAREN CPAREN
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 144
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    texp                           shift and go to state 196
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 142
    llamada                        shift and go to state 143
    boolean                        shift and go to state 46

state 157

    (105) texp -> gexp texp1 check_and_operator .

    OR              reduce using rule 105 (texp -> gexp texp1 check_and_operator .)
    QUESTION        reduce using rule 105 (texp -> gexp texp1 check_and_operator .)
    CPAREN          reduce using rule 105 (texp -> gexp texp1 check_and_operator .)
    COMMA           reduce using rule 105 (texp -> gexp texp1 check_and_operator .)
    CBRACKET        reduce using rule 105 (texp -> gexp texp1 check_and_operator .)
    ID              reduce using rule 105 (texp -> gexp texp1 check_and_operator .)
    IF              reduce using rule 105 (texp -> gexp texp1 check_and_operator .)
    PRINT           reduce using rule 105 (texp -> gexp texp1 check_and_operator .)
    READ            reduce using rule 105 (texp -> gexp texp1 check_and_operator .)
    WHILE           reduce using rule 105 (texp -> gexp texp1 check_and_operator .)
    FOR             reduce using rule 105 (texp -> gexp texp1 check_and_operator .)
    OCURLY          reduce using rule 105 (texp -> gexp texp1 check_and_operator .)
    FUNCTION        reduce using rule 105 (texp -> gexp texp1 check_and_operator .)
    CLASS           reduce using rule 105 (texp -> gexp texp1 check_and_operator .)
    VAR             reduce using rule 105 (texp -> gexp texp1 check_and_operator .)
    OPAREN          reduce using rule 105 (texp -> gexp texp1 check_and_operator .)
    CSTINT          reduce using rule 105 (texp -> gexp texp1 check_and_operator .)
    CSTFLT          reduce using rule 105 (texp -> gexp texp1 check_and_operator .)
    CSTCHAR         reduce using rule 105 (texp -> gexp texp1 check_and_operator .)
    CSTSTRING       reduce using rule 105 (texp -> gexp texp1 check_and_operator .)
    TRUE            reduce using rule 105 (texp -> gexp texp1 check_and_operator .)
    FALSE           reduce using rule 105 (texp -> gexp texp1 check_and_operator .)
    CCURLY          reduce using rule 105 (texp -> gexp texp1 check_and_operator .)
    COLON           reduce using rule 105 (texp -> gexp texp1 check_and_operator .)
    SEMICOLON       reduce using rule 105 (texp -> gexp texp1 check_and_operator .)


state 158

    (106) texp1 -> AND saw_and . gexp texp1
    (108) gexp -> . mexp gexp1 check_relational_operator
    (116) mexp -> . termino mexp1
    (120) termino -> . factor term1 check_plusminus_operator
    (124) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (125) factor -> . varcst check_multdiv_operator
    (126) factor -> . variable saw_var_factor check_multdiv_operator
    (127) factor -> . llamada
    (129) varcst -> . CSTINT saw_end_value
    (130) varcst -> . CSTFLT saw_end_value
    (131) varcst -> . CSTCHAR saw_end_value
    (132) varcst -> . CSTSTRING saw_end_value
    (133) varcst -> . boolean saw_end_value
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2
    (98) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (99) llamada -> . ID saw_id OPAREN CPAREN
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 144
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    gexp                           shift and go to state 197
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 142
    llamada                        shift and go to state 143
    boolean                        shift and go to state 46

state 159

    (108) gexp -> mexp gexp1 check_relational_operator .

    AND             reduce using rule 108 (gexp -> mexp gexp1 check_relational_operator .)
    OR              reduce using rule 108 (gexp -> mexp gexp1 check_relational_operator .)
    QUESTION        reduce using rule 108 (gexp -> mexp gexp1 check_relational_operator .)
    CPAREN          reduce using rule 108 (gexp -> mexp gexp1 check_relational_operator .)
    COMMA           reduce using rule 108 (gexp -> mexp gexp1 check_relational_operator .)
    CBRACKET        reduce using rule 108 (gexp -> mexp gexp1 check_relational_operator .)
    ID              reduce using rule 108 (gexp -> mexp gexp1 check_relational_operator .)
    IF              reduce using rule 108 (gexp -> mexp gexp1 check_relational_operator .)
    PRINT           reduce using rule 108 (gexp -> mexp gexp1 check_relational_operator .)
    READ            reduce using rule 108 (gexp -> mexp gexp1 check_relational_operator .)
    WHILE           reduce using rule 108 (gexp -> mexp gexp1 check_relational_operator .)
    FOR             reduce using rule 108 (gexp -> mexp gexp1 check_relational_operator .)
    OCURLY          reduce using rule 108 (gexp -> mexp gexp1 check_relational_operator .)
    FUNCTION        reduce using rule 108 (gexp -> mexp gexp1 check_relational_operator .)
    CLASS           reduce using rule 108 (gexp -> mexp gexp1 check_relational_operator .)
    VAR             reduce using rule 108 (gexp -> mexp gexp1 check_relational_operator .)
    OPAREN          reduce using rule 108 (gexp -> mexp gexp1 check_relational_operator .)
    CSTINT          reduce using rule 108 (gexp -> mexp gexp1 check_relational_operator .)
    CSTFLT          reduce using rule 108 (gexp -> mexp gexp1 check_relational_operator .)
    CSTCHAR         reduce using rule 108 (gexp -> mexp gexp1 check_relational_operator .)
    CSTSTRING       reduce using rule 108 (gexp -> mexp gexp1 check_relational_operator .)
    TRUE            reduce using rule 108 (gexp -> mexp gexp1 check_relational_operator .)
    FALSE           reduce using rule 108 (gexp -> mexp gexp1 check_relational_operator .)
    CCURLY          reduce using rule 108 (gexp -> mexp gexp1 check_relational_operator .)
    COLON           reduce using rule 108 (gexp -> mexp gexp1 check_relational_operator .)
    SEMICOLON       reduce using rule 108 (gexp -> mexp gexp1 check_relational_operator .)


state 160

    (109) gexp1 -> LT saw_relational_operator . mexp
    (116) mexp -> . termino mexp1
    (120) termino -> . factor term1 check_plusminus_operator
    (124) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (125) factor -> . varcst check_multdiv_operator
    (126) factor -> . variable saw_var_factor check_multdiv_operator
    (127) factor -> . llamada
    (129) varcst -> . CSTINT saw_end_value
    (130) varcst -> . CSTFLT saw_end_value
    (131) varcst -> . CSTCHAR saw_end_value
    (132) varcst -> . CSTSTRING saw_end_value
    (133) varcst -> . boolean saw_end_value
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2
    (98) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (99) llamada -> . ID saw_id OPAREN CPAREN
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 144
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    mexp                           shift and go to state 198
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 142
    llamada                        shift and go to state 143
    boolean                        shift and go to state 46

state 161

    (110) gexp1 -> GT saw_relational_operator . mexp
    (116) mexp -> . termino mexp1
    (120) termino -> . factor term1 check_plusminus_operator
    (124) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (125) factor -> . varcst check_multdiv_operator
    (126) factor -> . variable saw_var_factor check_multdiv_operator
    (127) factor -> . llamada
    (129) varcst -> . CSTINT saw_end_value
    (130) varcst -> . CSTFLT saw_end_value
    (131) varcst -> . CSTCHAR saw_end_value
    (132) varcst -> . CSTSTRING saw_end_value
    (133) varcst -> . boolean saw_end_value
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2
    (98) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (99) llamada -> . ID saw_id OPAREN CPAREN
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 144
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    mexp                           shift and go to state 199
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 142
    llamada                        shift and go to state 143
    boolean                        shift and go to state 46

state 162

    (111) gexp1 -> GTE saw_relational_operator . mexp
    (116) mexp -> . termino mexp1
    (120) termino -> . factor term1 check_plusminus_operator
    (124) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (125) factor -> . varcst check_multdiv_operator
    (126) factor -> . variable saw_var_factor check_multdiv_operator
    (127) factor -> . llamada
    (129) varcst -> . CSTINT saw_end_value
    (130) varcst -> . CSTFLT saw_end_value
    (131) varcst -> . CSTCHAR saw_end_value
    (132) varcst -> . CSTSTRING saw_end_value
    (133) varcst -> . boolean saw_end_value
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2
    (98) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (99) llamada -> . ID saw_id OPAREN CPAREN
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 144
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    mexp                           shift and go to state 200
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 142
    llamada                        shift and go to state 143
    boolean                        shift and go to state 46

state 163

    (112) gexp1 -> LTE saw_relational_operator . mexp
    (116) mexp -> . termino mexp1
    (120) termino -> . factor term1 check_plusminus_operator
    (124) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (125) factor -> . varcst check_multdiv_operator
    (126) factor -> . variable saw_var_factor check_multdiv_operator
    (127) factor -> . llamada
    (129) varcst -> . CSTINT saw_end_value
    (130) varcst -> . CSTFLT saw_end_value
    (131) varcst -> . CSTCHAR saw_end_value
    (132) varcst -> . CSTSTRING saw_end_value
    (133) varcst -> . boolean saw_end_value
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2
    (98) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (99) llamada -> . ID saw_id OPAREN CPAREN
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 144
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    mexp                           shift and go to state 201
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 142
    llamada                        shift and go to state 143
    boolean                        shift and go to state 46

state 164

    (113) gexp1 -> EQ saw_relational_operator . mexp
    (116) mexp -> . termino mexp1
    (120) termino -> . factor term1 check_plusminus_operator
    (124) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (125) factor -> . varcst check_multdiv_operator
    (126) factor -> . variable saw_var_factor check_multdiv_operator
    (127) factor -> . llamada
    (129) varcst -> . CSTINT saw_end_value
    (130) varcst -> . CSTFLT saw_end_value
    (131) varcst -> . CSTCHAR saw_end_value
    (132) varcst -> . CSTSTRING saw_end_value
    (133) varcst -> . boolean saw_end_value
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2
    (98) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (99) llamada -> . ID saw_id OPAREN CPAREN
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 144
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    mexp                           shift and go to state 202
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 142
    llamada                        shift and go to state 143
    boolean                        shift and go to state 46

state 165

    (114) gexp1 -> NE saw_relational_operator . mexp
    (116) mexp -> . termino mexp1
    (120) termino -> . factor term1 check_plusminus_operator
    (124) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (125) factor -> . varcst check_multdiv_operator
    (126) factor -> . variable saw_var_factor check_multdiv_operator
    (127) factor -> . llamada
    (129) varcst -> . CSTINT saw_end_value
    (130) varcst -> . CSTFLT saw_end_value
    (131) varcst -> . CSTCHAR saw_end_value
    (132) varcst -> . CSTSTRING saw_end_value
    (133) varcst -> . boolean saw_end_value
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2
    (98) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (99) llamada -> . ID saw_id OPAREN CPAREN
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 144
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    mexp                           shift and go to state 203
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 142
    llamada                        shift and go to state 143
    boolean                        shift and go to state 46

state 166

    (117) mexp1 -> PLUS saw_plusminus_operator . termino mexp1
    (120) termino -> . factor term1 check_plusminus_operator
    (124) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (125) factor -> . varcst check_multdiv_operator
    (126) factor -> . variable saw_var_factor check_multdiv_operator
    (127) factor -> . llamada
    (129) varcst -> . CSTINT saw_end_value
    (130) varcst -> . CSTFLT saw_end_value
    (131) varcst -> . CSTCHAR saw_end_value
    (132) varcst -> . CSTSTRING saw_end_value
    (133) varcst -> . boolean saw_end_value
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2
    (98) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (99) llamada -> . ID saw_id OPAREN CPAREN
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 144
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    termino                        shift and go to state 204
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 142
    llamada                        shift and go to state 143
    boolean                        shift and go to state 46

state 167

    (118) mexp1 -> MINUS saw_plusminus_operator . termino mexp1
    (120) termino -> . factor term1 check_plusminus_operator
    (124) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (125) factor -> . varcst check_multdiv_operator
    (126) factor -> . variable saw_var_factor check_multdiv_operator
    (127) factor -> . llamada
    (129) varcst -> . CSTINT saw_end_value
    (130) varcst -> . CSTFLT saw_end_value
    (131) varcst -> . CSTCHAR saw_end_value
    (132) varcst -> . CSTSTRING saw_end_value
    (133) varcst -> . boolean saw_end_value
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2
    (98) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (99) llamada -> . ID saw_id OPAREN CPAREN
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 144
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    termino                        shift and go to state 205
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 142
    llamada                        shift and go to state 143
    boolean                        shift and go to state 46

state 168

    (120) termino -> factor term1 check_plusminus_operator .

    PLUS            reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    MINUS           reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    LT              reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    GT              reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    GTE             reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    LTE             reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    EQ              reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    NE              reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    AND             reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    OR              reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    QUESTION        reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    CPAREN          reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    COMMA           reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    CBRACKET        reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    ID              reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    IF              reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    PRINT           reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    READ            reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    WHILE           reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    FOR             reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    OCURLY          reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    FUNCTION        reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    CLASS           reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    VAR             reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    OPAREN          reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    CSTINT          reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    CSTFLT          reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    CSTCHAR         reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    CSTSTRING       reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    TRUE            reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    FALSE           reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    CCURLY          reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    COLON           reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)
    SEMICOLON       reduce using rule 120 (termino -> factor term1 check_plusminus_operator .)


state 169

    (121) term1 -> MULT saw_multdiv_operator . factor term1
    (124) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (125) factor -> . varcst check_multdiv_operator
    (126) factor -> . variable saw_var_factor check_multdiv_operator
    (127) factor -> . llamada
    (129) varcst -> . CSTINT saw_end_value
    (130) varcst -> . CSTFLT saw_end_value
    (131) varcst -> . CSTCHAR saw_end_value
    (132) varcst -> . CSTSTRING saw_end_value
    (133) varcst -> . boolean saw_end_value
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2
    (98) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (99) llamada -> . ID saw_id OPAREN CPAREN
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 144
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    factor                         shift and go to state 206
    varcst                         shift and go to state 41
    variable                       shift and go to state 142
    llamada                        shift and go to state 143
    boolean                        shift and go to state 46

state 170

    (122) term1 -> DIV saw_multdiv_operator . factor term1
    (124) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (125) factor -> . varcst check_multdiv_operator
    (126) factor -> . variable saw_var_factor check_multdiv_operator
    (127) factor -> . llamada
    (129) varcst -> . CSTINT saw_end_value
    (130) varcst -> . CSTFLT saw_end_value
    (131) varcst -> . CSTCHAR saw_end_value
    (132) varcst -> . CSTSTRING saw_end_value
    (133) varcst -> . boolean saw_end_value
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2
    (98) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (99) llamada -> . ID saw_id OPAREN CPAREN
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 144
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    factor                         shift and go to state 207
    varcst                         shift and go to state 41
    variable                       shift and go to state 142
    llamada                        shift and go to state 143
    boolean                        shift and go to state 46

state 171

    (22) dec -> VAR tipo SEMICOLON dec1 .

    OCURLY          reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    ID              reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    IF              reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    PRINT           reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    READ            reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    WHILE           reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    FOR             reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    FUNCTION        reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    CLASS           reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    VAR             reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    OPAREN          reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    CSTINT          reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    CSTFLT          reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    CSTCHAR         reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    CSTSTRING       reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    TRUE            reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    FALSE           reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    CCURLY          reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    METHODS         reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)


state 172

    (23) dec1 -> dec .

    OCURLY          reduce using rule 23 (dec1 -> dec .)
    ID              reduce using rule 23 (dec1 -> dec .)
    IF              reduce using rule 23 (dec1 -> dec .)
    PRINT           reduce using rule 23 (dec1 -> dec .)
    READ            reduce using rule 23 (dec1 -> dec .)
    WHILE           reduce using rule 23 (dec1 -> dec .)
    FOR             reduce using rule 23 (dec1 -> dec .)
    FUNCTION        reduce using rule 23 (dec1 -> dec .)
    CLASS           reduce using rule 23 (dec1 -> dec .)
    VAR             reduce using rule 23 (dec1 -> dec .)
    OPAREN          reduce using rule 23 (dec1 -> dec .)
    CSTINT          reduce using rule 23 (dec1 -> dec .)
    CSTFLT          reduce using rule 23 (dec1 -> dec .)
    CSTCHAR         reduce using rule 23 (dec1 -> dec .)
    CSTSTRING       reduce using rule 23 (dec1 -> dec .)
    TRUE            reduce using rule 23 (dec1 -> dec .)
    FALSE           reduce using rule 23 (dec1 -> dec .)
    CCURLY          reduce using rule 23 (dec1 -> dec .)
    METHODS         reduce using rule 23 (dec1 -> dec .)


state 173

    (24) dec1 -> empty .

    OCURLY          reduce using rule 24 (dec1 -> empty .)
    ID              reduce using rule 24 (dec1 -> empty .)
    IF              reduce using rule 24 (dec1 -> empty .)
    PRINT           reduce using rule 24 (dec1 -> empty .)
    READ            reduce using rule 24 (dec1 -> empty .)
    WHILE           reduce using rule 24 (dec1 -> empty .)
    FOR             reduce using rule 24 (dec1 -> empty .)
    FUNCTION        reduce using rule 24 (dec1 -> empty .)
    CLASS           reduce using rule 24 (dec1 -> empty .)
    VAR             reduce using rule 24 (dec1 -> empty .)
    OPAREN          reduce using rule 24 (dec1 -> empty .)
    CSTINT          reduce using rule 24 (dec1 -> empty .)
    CSTFLT          reduce using rule 24 (dec1 -> empty .)
    CSTCHAR         reduce using rule 24 (dec1 -> empty .)
    CSTSTRING       reduce using rule 24 (dec1 -> empty .)
    TRUE            reduce using rule 24 (dec1 -> empty .)
    FALSE           reduce using rule 24 (dec1 -> empty .)
    CCURLY          reduce using rule 24 (dec1 -> empty .)
    METHODS         reduce using rule 24 (dec1 -> empty .)


state 174

    (25) tipo -> compuesto ID saw_id . saw_variable tipo1
    (138) saw_variable -> .

    COMMA           reduce using rule 138 (saw_variable -> .)
    SEMICOLON       reduce using rule 138 (saw_variable -> .)

    saw_variable                   shift and go to state 208

state 175

    (26) tipo -> simple ID saw_id . saw_variable tipo1
    (138) saw_variable -> .

    COMMA           reduce using rule 138 (saw_variable -> .)
    SEMICOLON       reduce using rule 138 (saw_variable -> .)

    saw_variable                   shift and go to state 209

state 176

    (27) tipo -> multiple ID saw_id . OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable tipo2

    OBRACKET        shift and go to state 210


state 177

    (77) asignacion -> variable saw_var_factor AS saw_asig . exp
    (102) exp -> . texp exp1 check_or_operator
    (105) texp -> . gexp texp1 check_and_operator
    (108) gexp -> . mexp gexp1 check_relational_operator
    (116) mexp -> . termino mexp1
    (120) termino -> . factor term1 check_plusminus_operator
    (124) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (125) factor -> . varcst check_multdiv_operator
    (126) factor -> . variable saw_var_factor check_multdiv_operator
    (127) factor -> . llamada
    (129) varcst -> . CSTINT saw_end_value
    (130) varcst -> . CSTFLT saw_end_value
    (131) varcst -> . CSTCHAR saw_end_value
    (132) varcst -> . CSTSTRING saw_end_value
    (133) varcst -> . boolean saw_end_value
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2
    (98) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (99) llamada -> . ID saw_id OPAREN CPAREN
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 144
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    variable                       shift and go to state 142
    exp                            shift and go to state 211
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    llamada                        shift and go to state 143
    boolean                        shift and go to state 46

state 178

    (82) ternaria -> exp QUESTION estatuto_redux COLON . estatuto_redux SEMICOLON
    (72) estatuto_redux -> . asignacion
    (73) estatuto_redux -> . llamada
    (74) estatuto_redux -> . escritura
    (75) estatuto_redux -> . leer
    (76) estatuto_redux -> . ternaria
    (77) asignacion -> . variable saw_var_factor AS saw_asig exp
    (98) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (99) llamada -> . ID saw_id OPAREN CPAREN
    (83) escritura -> . PRINT saw_print OPAREN exp e1 CPAREN saw_print_end
    (86) leer -> . READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end
    (82) ternaria -> . exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2
    (102) exp -> . texp exp1 check_or_operator
    (105) texp -> . gexp texp1 check_and_operator
    (108) gexp -> . mexp gexp1 check_relational_operator
    (116) mexp -> . termino mexp1
    (120) termino -> . factor term1 check_plusminus_operator
    (124) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (125) factor -> . varcst check_multdiv_operator
    (126) factor -> . variable saw_var_factor check_multdiv_operator
    (127) factor -> . llamada
    (129) varcst -> . CSTINT saw_end_value
    (130) varcst -> . CSTFLT saw_end_value
    (131) varcst -> . CSTCHAR saw_end_value
    (132) varcst -> . CSTSTRING saw_end_value
    (133) varcst -> . boolean saw_end_value
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE

    ID              shift and go to state 27
    PRINT           shift and go to state 30
    READ            shift and go to state 31
    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 26
    estatuto_redux                 shift and go to state 212
    asignacion                     shift and go to state 131
    llamada                        shift and go to state 132
    escritura                      shift and go to state 133
    leer                           shift and go to state 134
    ternaria                       shift and go to state 135
    variable                       shift and go to state 25
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    boolean                        shift and go to state 46

state 179

    (98) llamada -> ID saw_id OPAREN exp . llamada1 CPAREN
    (100) llamada1 -> . COMMA exp llamada1
    (101) llamada1 -> . empty
    (134) empty -> .

    COMMA           shift and go to state 214
    CPAREN          reduce using rule 134 (empty -> .)

    llamada1                       shift and go to state 213
    empty                          shift and go to state 215

state 180

    (99) llamada -> ID saw_id OPAREN CPAREN .

    ID              reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    IF              reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    PRINT           reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    READ            reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    WHILE           reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    FOR             reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    OCURLY          reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    FUNCTION        reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    CLASS           reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    VAR             reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    OPAREN          reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    CSTINT          reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    CSTFLT          reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    CSTCHAR         reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    CSTSTRING       reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    TRUE            reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    FALSE           reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    CCURLY          reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    MULT            reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    DIV             reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    PLUS            reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    MINUS           reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    LT              reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    GT              reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    GTE             reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    LTE             reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    EQ              reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    NE              reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    AND             reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    OR              reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    QUESTION        reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    COLON           reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    CPAREN          reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    COMMA           reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    CBRACKET        reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)
    SEMICOLON       reduce using rule 99 (llamada -> ID saw_id OPAREN CPAREN .)


state 181

    (92) variable -> ID saw_id OBRACKET exp . CBRACKET saw_dimension variable1 saw_called_var

    CBRACKET        shift and go to state 216


state 182

    (96) variable2 -> PERIOD ID . saw_called_var_from_class
    (97) variable2 -> PERIOD ID . saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1
    (142) saw_called_var_from_class -> .

    OBRACKET        reduce using rule 142 (saw_called_var_from_class -> .)
    AS              reduce using rule 142 (saw_called_var_from_class -> .)
    MULT            reduce using rule 142 (saw_called_var_from_class -> .)
    DIV             reduce using rule 142 (saw_called_var_from_class -> .)
    PLUS            reduce using rule 142 (saw_called_var_from_class -> .)
    MINUS           reduce using rule 142 (saw_called_var_from_class -> .)
    LT              reduce using rule 142 (saw_called_var_from_class -> .)
    GT              reduce using rule 142 (saw_called_var_from_class -> .)
    GTE             reduce using rule 142 (saw_called_var_from_class -> .)
    LTE             reduce using rule 142 (saw_called_var_from_class -> .)
    EQ              reduce using rule 142 (saw_called_var_from_class -> .)
    NE              reduce using rule 142 (saw_called_var_from_class -> .)
    AND             reduce using rule 142 (saw_called_var_from_class -> .)
    OR              reduce using rule 142 (saw_called_var_from_class -> .)
    QUESTION        reduce using rule 142 (saw_called_var_from_class -> .)
    CPAREN          reduce using rule 142 (saw_called_var_from_class -> .)
    COMMA           reduce using rule 142 (saw_called_var_from_class -> .)
    CBRACKET        reduce using rule 142 (saw_called_var_from_class -> .)
    ID              reduce using rule 142 (saw_called_var_from_class -> .)
    IF              reduce using rule 142 (saw_called_var_from_class -> .)
    PRINT           reduce using rule 142 (saw_called_var_from_class -> .)
    READ            reduce using rule 142 (saw_called_var_from_class -> .)
    WHILE           reduce using rule 142 (saw_called_var_from_class -> .)
    FOR             reduce using rule 142 (saw_called_var_from_class -> .)
    OCURLY          reduce using rule 142 (saw_called_var_from_class -> .)
    FUNCTION        reduce using rule 142 (saw_called_var_from_class -> .)
    CLASS           reduce using rule 142 (saw_called_var_from_class -> .)
    VAR             reduce using rule 142 (saw_called_var_from_class -> .)
    OPAREN          reduce using rule 142 (saw_called_var_from_class -> .)
    CSTINT          reduce using rule 142 (saw_called_var_from_class -> .)
    CSTFLT          reduce using rule 142 (saw_called_var_from_class -> .)
    CSTCHAR         reduce using rule 142 (saw_called_var_from_class -> .)
    CSTSTRING       reduce using rule 142 (saw_called_var_from_class -> .)
    TRUE            reduce using rule 142 (saw_called_var_from_class -> .)
    FALSE           reduce using rule 142 (saw_called_var_from_class -> .)
    CCURLY          reduce using rule 142 (saw_called_var_from_class -> .)
    COLON           reduce using rule 142 (saw_called_var_from_class -> .)
    SEMICOLON       reduce using rule 142 (saw_called_var_from_class -> .)
    FROM            reduce using rule 142 (saw_called_var_from_class -> .)
    TO              reduce using rule 142 (saw_called_var_from_class -> .)
    BY              reduce using rule 142 (saw_called_var_from_class -> .)

    saw_called_var_from_class      shift and go to state 217

state 183

    (124) factor -> OPAREN saw_oparen exp CPAREN . saw_cparen check_multdiv_operator
    (156) saw_cparen -> .

    MULT            reduce using rule 156 (saw_cparen -> .)
    DIV             reduce using rule 156 (saw_cparen -> .)
    PLUS            reduce using rule 156 (saw_cparen -> .)
    MINUS           reduce using rule 156 (saw_cparen -> .)
    LT              reduce using rule 156 (saw_cparen -> .)
    GT              reduce using rule 156 (saw_cparen -> .)
    GTE             reduce using rule 156 (saw_cparen -> .)
    LTE             reduce using rule 156 (saw_cparen -> .)
    EQ              reduce using rule 156 (saw_cparen -> .)
    NE              reduce using rule 156 (saw_cparen -> .)
    AND             reduce using rule 156 (saw_cparen -> .)
    OR              reduce using rule 156 (saw_cparen -> .)
    QUESTION        reduce using rule 156 (saw_cparen -> .)
    CPAREN          reduce using rule 156 (saw_cparen -> .)
    COMMA           reduce using rule 156 (saw_cparen -> .)
    CBRACKET        reduce using rule 156 (saw_cparen -> .)
    ID              reduce using rule 156 (saw_cparen -> .)
    IF              reduce using rule 156 (saw_cparen -> .)
    PRINT           reduce using rule 156 (saw_cparen -> .)
    READ            reduce using rule 156 (saw_cparen -> .)
    WHILE           reduce using rule 156 (saw_cparen -> .)
    FOR             reduce using rule 156 (saw_cparen -> .)
    OCURLY          reduce using rule 156 (saw_cparen -> .)
    FUNCTION        reduce using rule 156 (saw_cparen -> .)
    CLASS           reduce using rule 156 (saw_cparen -> .)
    VAR             reduce using rule 156 (saw_cparen -> .)
    OPAREN          reduce using rule 156 (saw_cparen -> .)
    CSTINT          reduce using rule 156 (saw_cparen -> .)
    CSTFLT          reduce using rule 156 (saw_cparen -> .)
    CSTCHAR         reduce using rule 156 (saw_cparen -> .)
    CSTSTRING       reduce using rule 156 (saw_cparen -> .)
    TRUE            reduce using rule 156 (saw_cparen -> .)
    FALSE           reduce using rule 156 (saw_cparen -> .)
    CCURLY          reduce using rule 156 (saw_cparen -> .)
    COLON           reduce using rule 156 (saw_cparen -> .)
    SEMICOLON       reduce using rule 156 (saw_cparen -> .)

    saw_cparen                     shift and go to state 218

state 184

    (126) factor -> variable saw_var_factor . check_multdiv_operator
    (148) check_multdiv_operator -> .

    MULT            reduce using rule 148 (check_multdiv_operator -> .)
    DIV             reduce using rule 148 (check_multdiv_operator -> .)
    PLUS            reduce using rule 148 (check_multdiv_operator -> .)
    MINUS           reduce using rule 148 (check_multdiv_operator -> .)
    LT              reduce using rule 148 (check_multdiv_operator -> .)
    GT              reduce using rule 148 (check_multdiv_operator -> .)
    GTE             reduce using rule 148 (check_multdiv_operator -> .)
    LTE             reduce using rule 148 (check_multdiv_operator -> .)
    EQ              reduce using rule 148 (check_multdiv_operator -> .)
    NE              reduce using rule 148 (check_multdiv_operator -> .)
    AND             reduce using rule 148 (check_multdiv_operator -> .)
    OR              reduce using rule 148 (check_multdiv_operator -> .)
    CPAREN          reduce using rule 148 (check_multdiv_operator -> .)
    COMMA           reduce using rule 148 (check_multdiv_operator -> .)
    CBRACKET        reduce using rule 148 (check_multdiv_operator -> .)
    QUESTION        reduce using rule 148 (check_multdiv_operator -> .)
    ID              reduce using rule 148 (check_multdiv_operator -> .)
    IF              reduce using rule 148 (check_multdiv_operator -> .)
    PRINT           reduce using rule 148 (check_multdiv_operator -> .)
    READ            reduce using rule 148 (check_multdiv_operator -> .)
    WHILE           reduce using rule 148 (check_multdiv_operator -> .)
    FOR             reduce using rule 148 (check_multdiv_operator -> .)
    OCURLY          reduce using rule 148 (check_multdiv_operator -> .)
    FUNCTION        reduce using rule 148 (check_multdiv_operator -> .)
    CLASS           reduce using rule 148 (check_multdiv_operator -> .)
    VAR             reduce using rule 148 (check_multdiv_operator -> .)
    OPAREN          reduce using rule 148 (check_multdiv_operator -> .)
    CSTINT          reduce using rule 148 (check_multdiv_operator -> .)
    CSTFLT          reduce using rule 148 (check_multdiv_operator -> .)
    CSTCHAR         reduce using rule 148 (check_multdiv_operator -> .)
    CSTSTRING       reduce using rule 148 (check_multdiv_operator -> .)
    TRUE            reduce using rule 148 (check_multdiv_operator -> .)
    FALSE           reduce using rule 148 (check_multdiv_operator -> .)
    CCURLY          reduce using rule 148 (check_multdiv_operator -> .)
    COLON           reduce using rule 148 (check_multdiv_operator -> .)
    SEMICOLON       reduce using rule 148 (check_multdiv_operator -> .)

    check_multdiv_operator         shift and go to state 129

state 185

    (91) variable -> ID saw_id . saw_called_var
    (92) variable -> ID saw_id . OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> ID saw_id . variable2
    (98) llamada -> ID saw_id . OPAREN exp llamada1 CPAREN
    (99) llamada -> ID saw_id . OPAREN CPAREN
    (141) saw_called_var -> .
    (96) variable2 -> . PERIOD ID saw_called_var_from_class
    (97) variable2 -> . PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1

  ! shift/reduce conflict for OPAREN resolved as shift
    OBRACKET        shift and go to state 138
    OPAREN          shift and go to state 136
    MULT            reduce using rule 141 (saw_called_var -> .)
    DIV             reduce using rule 141 (saw_called_var -> .)
    PLUS            reduce using rule 141 (saw_called_var -> .)
    MINUS           reduce using rule 141 (saw_called_var -> .)
    LT              reduce using rule 141 (saw_called_var -> .)
    GT              reduce using rule 141 (saw_called_var -> .)
    GTE             reduce using rule 141 (saw_called_var -> .)
    LTE             reduce using rule 141 (saw_called_var -> .)
    EQ              reduce using rule 141 (saw_called_var -> .)
    NE              reduce using rule 141 (saw_called_var -> .)
    AND             reduce using rule 141 (saw_called_var -> .)
    OR              reduce using rule 141 (saw_called_var -> .)
    CPAREN          reduce using rule 141 (saw_called_var -> .)
    COMMA           reduce using rule 141 (saw_called_var -> .)
    CBRACKET        reduce using rule 141 (saw_called_var -> .)
    QUESTION        reduce using rule 141 (saw_called_var -> .)
    ID              reduce using rule 141 (saw_called_var -> .)
    IF              reduce using rule 141 (saw_called_var -> .)
    PRINT           reduce using rule 141 (saw_called_var -> .)
    READ            reduce using rule 141 (saw_called_var -> .)
    WHILE           reduce using rule 141 (saw_called_var -> .)
    FOR             reduce using rule 141 (saw_called_var -> .)
    OCURLY          reduce using rule 141 (saw_called_var -> .)
    FUNCTION        reduce using rule 141 (saw_called_var -> .)
    CLASS           reduce using rule 141 (saw_called_var -> .)
    VAR             reduce using rule 141 (saw_called_var -> .)
    CSTINT          reduce using rule 141 (saw_called_var -> .)
    CSTFLT          reduce using rule 141 (saw_called_var -> .)
    CSTCHAR         reduce using rule 141 (saw_called_var -> .)
    CSTSTRING       reduce using rule 141 (saw_called_var -> .)
    TRUE            reduce using rule 141 (saw_called_var -> .)
    FALSE           reduce using rule 141 (saw_called_var -> .)
    CCURLY          reduce using rule 141 (saw_called_var -> .)
    COLON           reduce using rule 141 (saw_called_var -> .)
    SEMICOLON       reduce using rule 141 (saw_called_var -> .)
    PERIOD          shift and go to state 140

  ! OPAREN          [ reduce using rule 141 (saw_called_var -> .) ]

    saw_called_var                 shift and go to state 137
    variable2                      shift and go to state 139

state 186

    (78) condicion -> IF cond2 THEN bloque_ciclo . cond1 SEMICOLON bc_end
    (79) cond1 -> . ELSE saw_else bloque_ciclo
    (80) cond1 -> . empty
    (134) empty -> .

    ELSE            shift and go to state 220
    SEMICOLON       reduce using rule 134 (empty -> .)

    cond1                          shift and go to state 219
    empty                          shift and go to state 221

state 187

    (50) bloque_ciclo -> OCURLY . bc1 CCURLY
    (51) bc1 -> . estatuto_ciclo bc1
    (52) bc1 -> . empty
    (65) estatuto_ciclo -> . asignacion
    (66) estatuto_ciclo -> . condicion
    (67) estatuto_ciclo -> . escritura
    (68) estatuto_ciclo -> . leer
    (69) estatuto_ciclo -> . ciclo_while
    (70) estatuto_ciclo -> . ciclo_for
    (71) estatuto_ciclo -> . dec
    (134) empty -> .
    (77) asignacion -> . variable saw_var_factor AS saw_asig exp
    (78) condicion -> . IF cond2 THEN bloque_ciclo cond1 SEMICOLON bc_end
    (83) escritura -> . PRINT saw_print OPAREN exp e1 CPAREN saw_print_end
    (86) leer -> . READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end
    (18) ciclo_while -> . WHILE saw_while cond2 THEN bloque_ciclo SEMICOLON saw_while_end
    (19) ciclo_for -> . FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON
    (22) dec -> . VAR tipo SEMICOLON dec1
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2

    CCURLY          reduce using rule 134 (empty -> .)
    IF              shift and go to state 29
    PRINT           shift and go to state 30
    READ            shift and go to state 31
    WHILE           shift and go to state 32
    FOR             shift and go to state 33
    VAR             shift and go to state 8
    ID              shift and go to state 151

    bc1                            shift and go to state 222
    estatuto_ciclo                 shift and go to state 223
    empty                          shift and go to state 224
    asignacion                     shift and go to state 225
    condicion                      shift and go to state 226
    escritura                      shift and go to state 227
    leer                           shift and go to state 228
    ciclo_while                    shift and go to state 229
    ciclo_for                      shift and go to state 230
    dec                            shift and go to state 231
    variable                       shift and go to state 232

state 188

    (81) cond2 -> OPAREN exp CPAREN .

    THEN            reduce using rule 81 (cond2 -> OPAREN exp CPAREN .)


state 189

    (83) escritura -> PRINT saw_print OPAREN exp . e1 CPAREN saw_print_end
    (84) e1 -> . COMMA exp e1
    (85) e1 -> . empty
    (134) empty -> .

    COMMA           shift and go to state 234
    CPAREN          reduce using rule 134 (empty -> .)

    e1                             shift and go to state 233
    empty                          shift and go to state 235

state 190

    (86) leer -> READ saw_read OPAREN variable . saw_read_exp l1 CPAREN saw_read_end
    (163) saw_read_exp -> .

    COMMA           reduce using rule 163 (saw_read_exp -> .)
    CPAREN          reduce using rule 163 (saw_read_exp -> .)

    saw_read_exp                   shift and go to state 236

state 191

    (18) ciclo_while -> WHILE saw_while cond2 THEN . bloque_ciclo SEMICOLON saw_while_end
    (50) bloque_ciclo -> . OCURLY bc1 CCURLY

    OCURLY          shift and go to state 187

    bloque_ciclo                   shift and go to state 237

state 192

    (19) ciclo_for -> FOR OPAREN variable FROM . ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON
    (20) ciclo_for1 -> . CSTINT
    (21) ciclo_for1 -> . variable
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2

    CSTINT          shift and go to state 240
    ID              shift and go to state 151

    variable                       shift and go to state 238
    ciclo_for1                     shift and go to state 239

state 193

    (91) variable -> ID saw_id . saw_called_var
    (92) variable -> ID saw_id . OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> ID saw_id . variable2
    (141) saw_called_var -> .
    (96) variable2 -> . PERIOD ID saw_called_var_from_class
    (97) variable2 -> . PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1

    OBRACKET        shift and go to state 138
    FROM            reduce using rule 141 (saw_called_var -> .)
    COMMA           reduce using rule 141 (saw_called_var -> .)
    CPAREN          reduce using rule 141 (saw_called_var -> .)
    AS              reduce using rule 141 (saw_called_var -> .)
    TO              reduce using rule 141 (saw_called_var -> .)
    BY              reduce using rule 141 (saw_called_var -> .)
    PERIOD          shift and go to state 140

    saw_called_var                 shift and go to state 137
    variable2                      shift and go to state 139

state 194

    (3) funcion -> FUNCTION func1 ID saw_id . saw_function OPAREN param CPAREN bloque
    (157) saw_function -> .

    OPAREN          reduce using rule 157 (saw_function -> .)

    saw_function                   shift and go to state 241

state 195

    (12) clase -> CLASS ID saw_id saw_class . COLON clase_bloque SEMICOLON

    COLON           shift and go to state 242


state 196

    (103) exp1 -> OR saw_or texp . exp1
    (103) exp1 -> . OR saw_or texp exp1
    (104) exp1 -> . empty
    (134) empty -> .

    OR              shift and go to state 83
    QUESTION        reduce using rule 134 (empty -> .)
    CPAREN          reduce using rule 134 (empty -> .)
    COMMA           reduce using rule 134 (empty -> .)
    CBRACKET        reduce using rule 134 (empty -> .)
    ID              reduce using rule 134 (empty -> .)
    IF              reduce using rule 134 (empty -> .)
    PRINT           reduce using rule 134 (empty -> .)
    READ            reduce using rule 134 (empty -> .)
    WHILE           reduce using rule 134 (empty -> .)
    FOR             reduce using rule 134 (empty -> .)
    OCURLY          reduce using rule 134 (empty -> .)
    FUNCTION        reduce using rule 134 (empty -> .)
    CLASS           reduce using rule 134 (empty -> .)
    VAR             reduce using rule 134 (empty -> .)
    OPAREN          reduce using rule 134 (empty -> .)
    CSTINT          reduce using rule 134 (empty -> .)
    CSTFLT          reduce using rule 134 (empty -> .)
    CSTCHAR         reduce using rule 134 (empty -> .)
    CSTSTRING       reduce using rule 134 (empty -> .)
    TRUE            reduce using rule 134 (empty -> .)
    FALSE           reduce using rule 134 (empty -> .)
    CCURLY          reduce using rule 134 (empty -> .)
    COLON           reduce using rule 134 (empty -> .)
    SEMICOLON       reduce using rule 134 (empty -> .)

    exp1                           shift and go to state 243
    empty                          shift and go to state 84

state 197

    (106) texp1 -> AND saw_and gexp . texp1
    (106) texp1 -> . AND saw_and gexp texp1
    (107) texp1 -> . empty
    (134) empty -> .

    AND             shift and go to state 86
    OR              reduce using rule 134 (empty -> .)
    QUESTION        reduce using rule 134 (empty -> .)
    CPAREN          reduce using rule 134 (empty -> .)
    COMMA           reduce using rule 134 (empty -> .)
    CBRACKET        reduce using rule 134 (empty -> .)
    ID              reduce using rule 134 (empty -> .)
    IF              reduce using rule 134 (empty -> .)
    PRINT           reduce using rule 134 (empty -> .)
    READ            reduce using rule 134 (empty -> .)
    WHILE           reduce using rule 134 (empty -> .)
    FOR             reduce using rule 134 (empty -> .)
    OCURLY          reduce using rule 134 (empty -> .)
    FUNCTION        reduce using rule 134 (empty -> .)
    CLASS           reduce using rule 134 (empty -> .)
    VAR             reduce using rule 134 (empty -> .)
    OPAREN          reduce using rule 134 (empty -> .)
    CSTINT          reduce using rule 134 (empty -> .)
    CSTFLT          reduce using rule 134 (empty -> .)
    CSTCHAR         reduce using rule 134 (empty -> .)
    CSTSTRING       reduce using rule 134 (empty -> .)
    TRUE            reduce using rule 134 (empty -> .)
    FALSE           reduce using rule 134 (empty -> .)
    CCURLY          reduce using rule 134 (empty -> .)
    COLON           reduce using rule 134 (empty -> .)
    SEMICOLON       reduce using rule 134 (empty -> .)

    texp1                          shift and go to state 244
    empty                          shift and go to state 87

state 198

    (109) gexp1 -> LT saw_relational_operator mexp .

    AND             reduce using rule 109 (gexp1 -> LT saw_relational_operator mexp .)
    OR              reduce using rule 109 (gexp1 -> LT saw_relational_operator mexp .)
    QUESTION        reduce using rule 109 (gexp1 -> LT saw_relational_operator mexp .)
    CPAREN          reduce using rule 109 (gexp1 -> LT saw_relational_operator mexp .)
    COMMA           reduce using rule 109 (gexp1 -> LT saw_relational_operator mexp .)
    CBRACKET        reduce using rule 109 (gexp1 -> LT saw_relational_operator mexp .)
    ID              reduce using rule 109 (gexp1 -> LT saw_relational_operator mexp .)
    IF              reduce using rule 109 (gexp1 -> LT saw_relational_operator mexp .)
    PRINT           reduce using rule 109 (gexp1 -> LT saw_relational_operator mexp .)
    READ            reduce using rule 109 (gexp1 -> LT saw_relational_operator mexp .)
    WHILE           reduce using rule 109 (gexp1 -> LT saw_relational_operator mexp .)
    FOR             reduce using rule 109 (gexp1 -> LT saw_relational_operator mexp .)
    OCURLY          reduce using rule 109 (gexp1 -> LT saw_relational_operator mexp .)
    FUNCTION        reduce using rule 109 (gexp1 -> LT saw_relational_operator mexp .)
    CLASS           reduce using rule 109 (gexp1 -> LT saw_relational_operator mexp .)
    VAR             reduce using rule 109 (gexp1 -> LT saw_relational_operator mexp .)
    OPAREN          reduce using rule 109 (gexp1 -> LT saw_relational_operator mexp .)
    CSTINT          reduce using rule 109 (gexp1 -> LT saw_relational_operator mexp .)
    CSTFLT          reduce using rule 109 (gexp1 -> LT saw_relational_operator mexp .)
    CSTCHAR         reduce using rule 109 (gexp1 -> LT saw_relational_operator mexp .)
    CSTSTRING       reduce using rule 109 (gexp1 -> LT saw_relational_operator mexp .)
    TRUE            reduce using rule 109 (gexp1 -> LT saw_relational_operator mexp .)
    FALSE           reduce using rule 109 (gexp1 -> LT saw_relational_operator mexp .)
    CCURLY          reduce using rule 109 (gexp1 -> LT saw_relational_operator mexp .)
    COLON           reduce using rule 109 (gexp1 -> LT saw_relational_operator mexp .)
    SEMICOLON       reduce using rule 109 (gexp1 -> LT saw_relational_operator mexp .)


state 199

    (110) gexp1 -> GT saw_relational_operator mexp .

    AND             reduce using rule 110 (gexp1 -> GT saw_relational_operator mexp .)
    OR              reduce using rule 110 (gexp1 -> GT saw_relational_operator mexp .)
    QUESTION        reduce using rule 110 (gexp1 -> GT saw_relational_operator mexp .)
    CPAREN          reduce using rule 110 (gexp1 -> GT saw_relational_operator mexp .)
    COMMA           reduce using rule 110 (gexp1 -> GT saw_relational_operator mexp .)
    CBRACKET        reduce using rule 110 (gexp1 -> GT saw_relational_operator mexp .)
    ID              reduce using rule 110 (gexp1 -> GT saw_relational_operator mexp .)
    IF              reduce using rule 110 (gexp1 -> GT saw_relational_operator mexp .)
    PRINT           reduce using rule 110 (gexp1 -> GT saw_relational_operator mexp .)
    READ            reduce using rule 110 (gexp1 -> GT saw_relational_operator mexp .)
    WHILE           reduce using rule 110 (gexp1 -> GT saw_relational_operator mexp .)
    FOR             reduce using rule 110 (gexp1 -> GT saw_relational_operator mexp .)
    OCURLY          reduce using rule 110 (gexp1 -> GT saw_relational_operator mexp .)
    FUNCTION        reduce using rule 110 (gexp1 -> GT saw_relational_operator mexp .)
    CLASS           reduce using rule 110 (gexp1 -> GT saw_relational_operator mexp .)
    VAR             reduce using rule 110 (gexp1 -> GT saw_relational_operator mexp .)
    OPAREN          reduce using rule 110 (gexp1 -> GT saw_relational_operator mexp .)
    CSTINT          reduce using rule 110 (gexp1 -> GT saw_relational_operator mexp .)
    CSTFLT          reduce using rule 110 (gexp1 -> GT saw_relational_operator mexp .)
    CSTCHAR         reduce using rule 110 (gexp1 -> GT saw_relational_operator mexp .)
    CSTSTRING       reduce using rule 110 (gexp1 -> GT saw_relational_operator mexp .)
    TRUE            reduce using rule 110 (gexp1 -> GT saw_relational_operator mexp .)
    FALSE           reduce using rule 110 (gexp1 -> GT saw_relational_operator mexp .)
    CCURLY          reduce using rule 110 (gexp1 -> GT saw_relational_operator mexp .)
    COLON           reduce using rule 110 (gexp1 -> GT saw_relational_operator mexp .)
    SEMICOLON       reduce using rule 110 (gexp1 -> GT saw_relational_operator mexp .)


state 200

    (111) gexp1 -> GTE saw_relational_operator mexp .

    AND             reduce using rule 111 (gexp1 -> GTE saw_relational_operator mexp .)
    OR              reduce using rule 111 (gexp1 -> GTE saw_relational_operator mexp .)
    QUESTION        reduce using rule 111 (gexp1 -> GTE saw_relational_operator mexp .)
    CPAREN          reduce using rule 111 (gexp1 -> GTE saw_relational_operator mexp .)
    COMMA           reduce using rule 111 (gexp1 -> GTE saw_relational_operator mexp .)
    CBRACKET        reduce using rule 111 (gexp1 -> GTE saw_relational_operator mexp .)
    ID              reduce using rule 111 (gexp1 -> GTE saw_relational_operator mexp .)
    IF              reduce using rule 111 (gexp1 -> GTE saw_relational_operator mexp .)
    PRINT           reduce using rule 111 (gexp1 -> GTE saw_relational_operator mexp .)
    READ            reduce using rule 111 (gexp1 -> GTE saw_relational_operator mexp .)
    WHILE           reduce using rule 111 (gexp1 -> GTE saw_relational_operator mexp .)
    FOR             reduce using rule 111 (gexp1 -> GTE saw_relational_operator mexp .)
    OCURLY          reduce using rule 111 (gexp1 -> GTE saw_relational_operator mexp .)
    FUNCTION        reduce using rule 111 (gexp1 -> GTE saw_relational_operator mexp .)
    CLASS           reduce using rule 111 (gexp1 -> GTE saw_relational_operator mexp .)
    VAR             reduce using rule 111 (gexp1 -> GTE saw_relational_operator mexp .)
    OPAREN          reduce using rule 111 (gexp1 -> GTE saw_relational_operator mexp .)
    CSTINT          reduce using rule 111 (gexp1 -> GTE saw_relational_operator mexp .)
    CSTFLT          reduce using rule 111 (gexp1 -> GTE saw_relational_operator mexp .)
    CSTCHAR         reduce using rule 111 (gexp1 -> GTE saw_relational_operator mexp .)
    CSTSTRING       reduce using rule 111 (gexp1 -> GTE saw_relational_operator mexp .)
    TRUE            reduce using rule 111 (gexp1 -> GTE saw_relational_operator mexp .)
    FALSE           reduce using rule 111 (gexp1 -> GTE saw_relational_operator mexp .)
    CCURLY          reduce using rule 111 (gexp1 -> GTE saw_relational_operator mexp .)
    COLON           reduce using rule 111 (gexp1 -> GTE saw_relational_operator mexp .)
    SEMICOLON       reduce using rule 111 (gexp1 -> GTE saw_relational_operator mexp .)


state 201

    (112) gexp1 -> LTE saw_relational_operator mexp .

    AND             reduce using rule 112 (gexp1 -> LTE saw_relational_operator mexp .)
    OR              reduce using rule 112 (gexp1 -> LTE saw_relational_operator mexp .)
    QUESTION        reduce using rule 112 (gexp1 -> LTE saw_relational_operator mexp .)
    CPAREN          reduce using rule 112 (gexp1 -> LTE saw_relational_operator mexp .)
    COMMA           reduce using rule 112 (gexp1 -> LTE saw_relational_operator mexp .)
    CBRACKET        reduce using rule 112 (gexp1 -> LTE saw_relational_operator mexp .)
    ID              reduce using rule 112 (gexp1 -> LTE saw_relational_operator mexp .)
    IF              reduce using rule 112 (gexp1 -> LTE saw_relational_operator mexp .)
    PRINT           reduce using rule 112 (gexp1 -> LTE saw_relational_operator mexp .)
    READ            reduce using rule 112 (gexp1 -> LTE saw_relational_operator mexp .)
    WHILE           reduce using rule 112 (gexp1 -> LTE saw_relational_operator mexp .)
    FOR             reduce using rule 112 (gexp1 -> LTE saw_relational_operator mexp .)
    OCURLY          reduce using rule 112 (gexp1 -> LTE saw_relational_operator mexp .)
    FUNCTION        reduce using rule 112 (gexp1 -> LTE saw_relational_operator mexp .)
    CLASS           reduce using rule 112 (gexp1 -> LTE saw_relational_operator mexp .)
    VAR             reduce using rule 112 (gexp1 -> LTE saw_relational_operator mexp .)
    OPAREN          reduce using rule 112 (gexp1 -> LTE saw_relational_operator mexp .)
    CSTINT          reduce using rule 112 (gexp1 -> LTE saw_relational_operator mexp .)
    CSTFLT          reduce using rule 112 (gexp1 -> LTE saw_relational_operator mexp .)
    CSTCHAR         reduce using rule 112 (gexp1 -> LTE saw_relational_operator mexp .)
    CSTSTRING       reduce using rule 112 (gexp1 -> LTE saw_relational_operator mexp .)
    TRUE            reduce using rule 112 (gexp1 -> LTE saw_relational_operator mexp .)
    FALSE           reduce using rule 112 (gexp1 -> LTE saw_relational_operator mexp .)
    CCURLY          reduce using rule 112 (gexp1 -> LTE saw_relational_operator mexp .)
    COLON           reduce using rule 112 (gexp1 -> LTE saw_relational_operator mexp .)
    SEMICOLON       reduce using rule 112 (gexp1 -> LTE saw_relational_operator mexp .)


state 202

    (113) gexp1 -> EQ saw_relational_operator mexp .

    AND             reduce using rule 113 (gexp1 -> EQ saw_relational_operator mexp .)
    OR              reduce using rule 113 (gexp1 -> EQ saw_relational_operator mexp .)
    QUESTION        reduce using rule 113 (gexp1 -> EQ saw_relational_operator mexp .)
    CPAREN          reduce using rule 113 (gexp1 -> EQ saw_relational_operator mexp .)
    COMMA           reduce using rule 113 (gexp1 -> EQ saw_relational_operator mexp .)
    CBRACKET        reduce using rule 113 (gexp1 -> EQ saw_relational_operator mexp .)
    ID              reduce using rule 113 (gexp1 -> EQ saw_relational_operator mexp .)
    IF              reduce using rule 113 (gexp1 -> EQ saw_relational_operator mexp .)
    PRINT           reduce using rule 113 (gexp1 -> EQ saw_relational_operator mexp .)
    READ            reduce using rule 113 (gexp1 -> EQ saw_relational_operator mexp .)
    WHILE           reduce using rule 113 (gexp1 -> EQ saw_relational_operator mexp .)
    FOR             reduce using rule 113 (gexp1 -> EQ saw_relational_operator mexp .)
    OCURLY          reduce using rule 113 (gexp1 -> EQ saw_relational_operator mexp .)
    FUNCTION        reduce using rule 113 (gexp1 -> EQ saw_relational_operator mexp .)
    CLASS           reduce using rule 113 (gexp1 -> EQ saw_relational_operator mexp .)
    VAR             reduce using rule 113 (gexp1 -> EQ saw_relational_operator mexp .)
    OPAREN          reduce using rule 113 (gexp1 -> EQ saw_relational_operator mexp .)
    CSTINT          reduce using rule 113 (gexp1 -> EQ saw_relational_operator mexp .)
    CSTFLT          reduce using rule 113 (gexp1 -> EQ saw_relational_operator mexp .)
    CSTCHAR         reduce using rule 113 (gexp1 -> EQ saw_relational_operator mexp .)
    CSTSTRING       reduce using rule 113 (gexp1 -> EQ saw_relational_operator mexp .)
    TRUE            reduce using rule 113 (gexp1 -> EQ saw_relational_operator mexp .)
    FALSE           reduce using rule 113 (gexp1 -> EQ saw_relational_operator mexp .)
    CCURLY          reduce using rule 113 (gexp1 -> EQ saw_relational_operator mexp .)
    COLON           reduce using rule 113 (gexp1 -> EQ saw_relational_operator mexp .)
    SEMICOLON       reduce using rule 113 (gexp1 -> EQ saw_relational_operator mexp .)


state 203

    (114) gexp1 -> NE saw_relational_operator mexp .

    AND             reduce using rule 114 (gexp1 -> NE saw_relational_operator mexp .)
    OR              reduce using rule 114 (gexp1 -> NE saw_relational_operator mexp .)
    QUESTION        reduce using rule 114 (gexp1 -> NE saw_relational_operator mexp .)
    CPAREN          reduce using rule 114 (gexp1 -> NE saw_relational_operator mexp .)
    COMMA           reduce using rule 114 (gexp1 -> NE saw_relational_operator mexp .)
    CBRACKET        reduce using rule 114 (gexp1 -> NE saw_relational_operator mexp .)
    ID              reduce using rule 114 (gexp1 -> NE saw_relational_operator mexp .)
    IF              reduce using rule 114 (gexp1 -> NE saw_relational_operator mexp .)
    PRINT           reduce using rule 114 (gexp1 -> NE saw_relational_operator mexp .)
    READ            reduce using rule 114 (gexp1 -> NE saw_relational_operator mexp .)
    WHILE           reduce using rule 114 (gexp1 -> NE saw_relational_operator mexp .)
    FOR             reduce using rule 114 (gexp1 -> NE saw_relational_operator mexp .)
    OCURLY          reduce using rule 114 (gexp1 -> NE saw_relational_operator mexp .)
    FUNCTION        reduce using rule 114 (gexp1 -> NE saw_relational_operator mexp .)
    CLASS           reduce using rule 114 (gexp1 -> NE saw_relational_operator mexp .)
    VAR             reduce using rule 114 (gexp1 -> NE saw_relational_operator mexp .)
    OPAREN          reduce using rule 114 (gexp1 -> NE saw_relational_operator mexp .)
    CSTINT          reduce using rule 114 (gexp1 -> NE saw_relational_operator mexp .)
    CSTFLT          reduce using rule 114 (gexp1 -> NE saw_relational_operator mexp .)
    CSTCHAR         reduce using rule 114 (gexp1 -> NE saw_relational_operator mexp .)
    CSTSTRING       reduce using rule 114 (gexp1 -> NE saw_relational_operator mexp .)
    TRUE            reduce using rule 114 (gexp1 -> NE saw_relational_operator mexp .)
    FALSE           reduce using rule 114 (gexp1 -> NE saw_relational_operator mexp .)
    CCURLY          reduce using rule 114 (gexp1 -> NE saw_relational_operator mexp .)
    COLON           reduce using rule 114 (gexp1 -> NE saw_relational_operator mexp .)
    SEMICOLON       reduce using rule 114 (gexp1 -> NE saw_relational_operator mexp .)


state 204

    (117) mexp1 -> PLUS saw_plusminus_operator termino . mexp1
    (117) mexp1 -> . PLUS saw_plusminus_operator termino mexp1
    (118) mexp1 -> . MINUS saw_plusminus_operator termino mexp1
    (119) mexp1 -> . empty
    (134) empty -> .

    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    LT              reduce using rule 134 (empty -> .)
    GT              reduce using rule 134 (empty -> .)
    GTE             reduce using rule 134 (empty -> .)
    LTE             reduce using rule 134 (empty -> .)
    EQ              reduce using rule 134 (empty -> .)
    NE              reduce using rule 134 (empty -> .)
    AND             reduce using rule 134 (empty -> .)
    OR              reduce using rule 134 (empty -> .)
    QUESTION        reduce using rule 134 (empty -> .)
    CPAREN          reduce using rule 134 (empty -> .)
    COMMA           reduce using rule 134 (empty -> .)
    CBRACKET        reduce using rule 134 (empty -> .)
    ID              reduce using rule 134 (empty -> .)
    IF              reduce using rule 134 (empty -> .)
    PRINT           reduce using rule 134 (empty -> .)
    READ            reduce using rule 134 (empty -> .)
    WHILE           reduce using rule 134 (empty -> .)
    FOR             reduce using rule 134 (empty -> .)
    OCURLY          reduce using rule 134 (empty -> .)
    FUNCTION        reduce using rule 134 (empty -> .)
    CLASS           reduce using rule 134 (empty -> .)
    VAR             reduce using rule 134 (empty -> .)
    OPAREN          reduce using rule 134 (empty -> .)
    CSTINT          reduce using rule 134 (empty -> .)
    CSTFLT          reduce using rule 134 (empty -> .)
    CSTCHAR         reduce using rule 134 (empty -> .)
    CSTSTRING       reduce using rule 134 (empty -> .)
    TRUE            reduce using rule 134 (empty -> .)
    FALSE           reduce using rule 134 (empty -> .)
    CCURLY          reduce using rule 134 (empty -> .)
    COLON           reduce using rule 134 (empty -> .)
    SEMICOLON       reduce using rule 134 (empty -> .)

    mexp1                          shift and go to state 245
    empty                          shift and go to state 99

state 205

    (118) mexp1 -> MINUS saw_plusminus_operator termino . mexp1
    (117) mexp1 -> . PLUS saw_plusminus_operator termino mexp1
    (118) mexp1 -> . MINUS saw_plusminus_operator termino mexp1
    (119) mexp1 -> . empty
    (134) empty -> .

    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    LT              reduce using rule 134 (empty -> .)
    GT              reduce using rule 134 (empty -> .)
    GTE             reduce using rule 134 (empty -> .)
    LTE             reduce using rule 134 (empty -> .)
    EQ              reduce using rule 134 (empty -> .)
    NE              reduce using rule 134 (empty -> .)
    AND             reduce using rule 134 (empty -> .)
    OR              reduce using rule 134 (empty -> .)
    QUESTION        reduce using rule 134 (empty -> .)
    CPAREN          reduce using rule 134 (empty -> .)
    COMMA           reduce using rule 134 (empty -> .)
    CBRACKET        reduce using rule 134 (empty -> .)
    ID              reduce using rule 134 (empty -> .)
    IF              reduce using rule 134 (empty -> .)
    PRINT           reduce using rule 134 (empty -> .)
    READ            reduce using rule 134 (empty -> .)
    WHILE           reduce using rule 134 (empty -> .)
    FOR             reduce using rule 134 (empty -> .)
    OCURLY          reduce using rule 134 (empty -> .)
    FUNCTION        reduce using rule 134 (empty -> .)
    CLASS           reduce using rule 134 (empty -> .)
    VAR             reduce using rule 134 (empty -> .)
    OPAREN          reduce using rule 134 (empty -> .)
    CSTINT          reduce using rule 134 (empty -> .)
    CSTFLT          reduce using rule 134 (empty -> .)
    CSTCHAR         reduce using rule 134 (empty -> .)
    CSTSTRING       reduce using rule 134 (empty -> .)
    TRUE            reduce using rule 134 (empty -> .)
    FALSE           reduce using rule 134 (empty -> .)
    CCURLY          reduce using rule 134 (empty -> .)
    COLON           reduce using rule 134 (empty -> .)
    SEMICOLON       reduce using rule 134 (empty -> .)

    mexp1                          shift and go to state 246
    empty                          shift and go to state 99

state 206

    (121) term1 -> MULT saw_multdiv_operator factor . term1
    (121) term1 -> . MULT saw_multdiv_operator factor term1
    (122) term1 -> . DIV saw_multdiv_operator factor term1
    (123) term1 -> . empty
    (134) empty -> .

    MULT            shift and go to state 101
    DIV             shift and go to state 102
    PLUS            reduce using rule 134 (empty -> .)
    MINUS           reduce using rule 134 (empty -> .)
    LT              reduce using rule 134 (empty -> .)
    GT              reduce using rule 134 (empty -> .)
    GTE             reduce using rule 134 (empty -> .)
    LTE             reduce using rule 134 (empty -> .)
    EQ              reduce using rule 134 (empty -> .)
    NE              reduce using rule 134 (empty -> .)
    AND             reduce using rule 134 (empty -> .)
    OR              reduce using rule 134 (empty -> .)
    QUESTION        reduce using rule 134 (empty -> .)
    CPAREN          reduce using rule 134 (empty -> .)
    COMMA           reduce using rule 134 (empty -> .)
    CBRACKET        reduce using rule 134 (empty -> .)
    ID              reduce using rule 134 (empty -> .)
    IF              reduce using rule 134 (empty -> .)
    PRINT           reduce using rule 134 (empty -> .)
    READ            reduce using rule 134 (empty -> .)
    WHILE           reduce using rule 134 (empty -> .)
    FOR             reduce using rule 134 (empty -> .)
    OCURLY          reduce using rule 134 (empty -> .)
    FUNCTION        reduce using rule 134 (empty -> .)
    CLASS           reduce using rule 134 (empty -> .)
    VAR             reduce using rule 134 (empty -> .)
    OPAREN          reduce using rule 134 (empty -> .)
    CSTINT          reduce using rule 134 (empty -> .)
    CSTFLT          reduce using rule 134 (empty -> .)
    CSTCHAR         reduce using rule 134 (empty -> .)
    CSTSTRING       reduce using rule 134 (empty -> .)
    TRUE            reduce using rule 134 (empty -> .)
    FALSE           reduce using rule 134 (empty -> .)
    CCURLY          reduce using rule 134 (empty -> .)
    COLON           reduce using rule 134 (empty -> .)
    SEMICOLON       reduce using rule 134 (empty -> .)

    term1                          shift and go to state 247
    empty                          shift and go to state 103

state 207

    (122) term1 -> DIV saw_multdiv_operator factor . term1
    (121) term1 -> . MULT saw_multdiv_operator factor term1
    (122) term1 -> . DIV saw_multdiv_operator factor term1
    (123) term1 -> . empty
    (134) empty -> .

    MULT            shift and go to state 101
    DIV             shift and go to state 102
    PLUS            reduce using rule 134 (empty -> .)
    MINUS           reduce using rule 134 (empty -> .)
    LT              reduce using rule 134 (empty -> .)
    GT              reduce using rule 134 (empty -> .)
    GTE             reduce using rule 134 (empty -> .)
    LTE             reduce using rule 134 (empty -> .)
    EQ              reduce using rule 134 (empty -> .)
    NE              reduce using rule 134 (empty -> .)
    AND             reduce using rule 134 (empty -> .)
    OR              reduce using rule 134 (empty -> .)
    QUESTION        reduce using rule 134 (empty -> .)
    CPAREN          reduce using rule 134 (empty -> .)
    COMMA           reduce using rule 134 (empty -> .)
    CBRACKET        reduce using rule 134 (empty -> .)
    ID              reduce using rule 134 (empty -> .)
    IF              reduce using rule 134 (empty -> .)
    PRINT           reduce using rule 134 (empty -> .)
    READ            reduce using rule 134 (empty -> .)
    WHILE           reduce using rule 134 (empty -> .)
    FOR             reduce using rule 134 (empty -> .)
    OCURLY          reduce using rule 134 (empty -> .)
    FUNCTION        reduce using rule 134 (empty -> .)
    CLASS           reduce using rule 134 (empty -> .)
    VAR             reduce using rule 134 (empty -> .)
    OPAREN          reduce using rule 134 (empty -> .)
    CSTINT          reduce using rule 134 (empty -> .)
    CSTFLT          reduce using rule 134 (empty -> .)
    CSTCHAR         reduce using rule 134 (empty -> .)
    CSTSTRING       reduce using rule 134 (empty -> .)
    TRUE            reduce using rule 134 (empty -> .)
    FALSE           reduce using rule 134 (empty -> .)
    CCURLY          reduce using rule 134 (empty -> .)
    COLON           reduce using rule 134 (empty -> .)
    SEMICOLON       reduce using rule 134 (empty -> .)

    term1                          shift and go to state 248
    empty                          shift and go to state 103

state 208

    (25) tipo -> compuesto ID saw_id saw_variable . tipo1
    (28) tipo1 -> . COMMA ID saw_id saw_variable tipo1
    (29) tipo1 -> . empty
    (134) empty -> .

    COMMA           shift and go to state 250
    SEMICOLON       reduce using rule 134 (empty -> .)

    tipo1                          shift and go to state 249
    empty                          shift and go to state 251

state 209

    (26) tipo -> simple ID saw_id saw_variable . tipo1
    (28) tipo1 -> . COMMA ID saw_id saw_variable tipo1
    (29) tipo1 -> . empty
    (134) empty -> .

    COMMA           shift and go to state 250
    SEMICOLON       reduce using rule 134 (empty -> .)

    tipo1                          shift and go to state 252
    empty                          shift and go to state 251

state 210

    (27) tipo -> multiple ID saw_id OBRACKET . CSTINT CBRACKET saw_dimension tipo3 saw_variable tipo2

    CSTINT          shift and go to state 253


state 211

    (77) asignacion -> variable saw_var_factor AS saw_asig exp .

    ID              reduce using rule 77 (asignacion -> variable saw_var_factor AS saw_asig exp .)
    IF              reduce using rule 77 (asignacion -> variable saw_var_factor AS saw_asig exp .)
    PRINT           reduce using rule 77 (asignacion -> variable saw_var_factor AS saw_asig exp .)
    READ            reduce using rule 77 (asignacion -> variable saw_var_factor AS saw_asig exp .)
    WHILE           reduce using rule 77 (asignacion -> variable saw_var_factor AS saw_asig exp .)
    FOR             reduce using rule 77 (asignacion -> variable saw_var_factor AS saw_asig exp .)
    OCURLY          reduce using rule 77 (asignacion -> variable saw_var_factor AS saw_asig exp .)
    FUNCTION        reduce using rule 77 (asignacion -> variable saw_var_factor AS saw_asig exp .)
    CLASS           reduce using rule 77 (asignacion -> variable saw_var_factor AS saw_asig exp .)
    VAR             reduce using rule 77 (asignacion -> variable saw_var_factor AS saw_asig exp .)
    OPAREN          reduce using rule 77 (asignacion -> variable saw_var_factor AS saw_asig exp .)
    CSTINT          reduce using rule 77 (asignacion -> variable saw_var_factor AS saw_asig exp .)
    CSTFLT          reduce using rule 77 (asignacion -> variable saw_var_factor AS saw_asig exp .)
    CSTCHAR         reduce using rule 77 (asignacion -> variable saw_var_factor AS saw_asig exp .)
    CSTSTRING       reduce using rule 77 (asignacion -> variable saw_var_factor AS saw_asig exp .)
    TRUE            reduce using rule 77 (asignacion -> variable saw_var_factor AS saw_asig exp .)
    FALSE           reduce using rule 77 (asignacion -> variable saw_var_factor AS saw_asig exp .)
    CCURLY          reduce using rule 77 (asignacion -> variable saw_var_factor AS saw_asig exp .)
    COLON           reduce using rule 77 (asignacion -> variable saw_var_factor AS saw_asig exp .)
    SEMICOLON       reduce using rule 77 (asignacion -> variable saw_var_factor AS saw_asig exp .)


state 212

    (82) ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux . SEMICOLON

    SEMICOLON       shift and go to state 254


state 213

    (98) llamada -> ID saw_id OPAREN exp llamada1 . CPAREN

    CPAREN          shift and go to state 255


state 214

    (100) llamada1 -> COMMA . exp llamada1
    (102) exp -> . texp exp1 check_or_operator
    (105) texp -> . gexp texp1 check_and_operator
    (108) gexp -> . mexp gexp1 check_relational_operator
    (116) mexp -> . termino mexp1
    (120) termino -> . factor term1 check_plusminus_operator
    (124) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (125) factor -> . varcst check_multdiv_operator
    (126) factor -> . variable saw_var_factor check_multdiv_operator
    (127) factor -> . llamada
    (129) varcst -> . CSTINT saw_end_value
    (130) varcst -> . CSTFLT saw_end_value
    (131) varcst -> . CSTCHAR saw_end_value
    (132) varcst -> . CSTSTRING saw_end_value
    (133) varcst -> . boolean saw_end_value
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2
    (98) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (99) llamada -> . ID saw_id OPAREN CPAREN
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 144
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 256
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 142
    llamada                        shift and go to state 143
    boolean                        shift and go to state 46

state 215

    (101) llamada1 -> empty .

    CPAREN          reduce using rule 101 (llamada1 -> empty .)


state 216

    (92) variable -> ID saw_id OBRACKET exp CBRACKET . saw_dimension variable1 saw_called_var
    (140) saw_dimension -> .

    OBRACKET        reduce using rule 140 (saw_dimension -> .)
    AS              reduce using rule 140 (saw_dimension -> .)
    MULT            reduce using rule 140 (saw_dimension -> .)
    DIV             reduce using rule 140 (saw_dimension -> .)
    PLUS            reduce using rule 140 (saw_dimension -> .)
    MINUS           reduce using rule 140 (saw_dimension -> .)
    LT              reduce using rule 140 (saw_dimension -> .)
    GT              reduce using rule 140 (saw_dimension -> .)
    GTE             reduce using rule 140 (saw_dimension -> .)
    LTE             reduce using rule 140 (saw_dimension -> .)
    EQ              reduce using rule 140 (saw_dimension -> .)
    NE              reduce using rule 140 (saw_dimension -> .)
    AND             reduce using rule 140 (saw_dimension -> .)
    OR              reduce using rule 140 (saw_dimension -> .)
    QUESTION        reduce using rule 140 (saw_dimension -> .)
    CPAREN          reduce using rule 140 (saw_dimension -> .)
    FROM            reduce using rule 140 (saw_dimension -> .)
    COMMA           reduce using rule 140 (saw_dimension -> .)
    CBRACKET        reduce using rule 140 (saw_dimension -> .)
    ID              reduce using rule 140 (saw_dimension -> .)
    IF              reduce using rule 140 (saw_dimension -> .)
    PRINT           reduce using rule 140 (saw_dimension -> .)
    READ            reduce using rule 140 (saw_dimension -> .)
    WHILE           reduce using rule 140 (saw_dimension -> .)
    FOR             reduce using rule 140 (saw_dimension -> .)
    OCURLY          reduce using rule 140 (saw_dimension -> .)
    FUNCTION        reduce using rule 140 (saw_dimension -> .)
    CLASS           reduce using rule 140 (saw_dimension -> .)
    VAR             reduce using rule 140 (saw_dimension -> .)
    OPAREN          reduce using rule 140 (saw_dimension -> .)
    CSTINT          reduce using rule 140 (saw_dimension -> .)
    CSTFLT          reduce using rule 140 (saw_dimension -> .)
    CSTCHAR         reduce using rule 140 (saw_dimension -> .)
    CSTSTRING       reduce using rule 140 (saw_dimension -> .)
    TRUE            reduce using rule 140 (saw_dimension -> .)
    FALSE           reduce using rule 140 (saw_dimension -> .)
    CCURLY          reduce using rule 140 (saw_dimension -> .)
    COLON           reduce using rule 140 (saw_dimension -> .)
    SEMICOLON       reduce using rule 140 (saw_dimension -> .)
    TO              reduce using rule 140 (saw_dimension -> .)
    BY              reduce using rule 140 (saw_dimension -> .)

    saw_dimension                  shift and go to state 257

state 217

    (96) variable2 -> PERIOD ID saw_called_var_from_class .
    (97) variable2 -> PERIOD ID saw_called_var_from_class . OBRACKET exp CBRACKET saw_dimension variable1

    AS              reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    MULT            reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    DIV             reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    PLUS            reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    MINUS           reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    LT              reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    GT              reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    GTE             reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    LTE             reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    EQ              reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    NE              reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    AND             reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    OR              reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    QUESTION        reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    CPAREN          reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    COMMA           reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    CBRACKET        reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    ID              reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    IF              reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    PRINT           reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    READ            reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    WHILE           reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    FOR             reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    OCURLY          reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    FUNCTION        reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    CLASS           reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    VAR             reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    OPAREN          reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    CSTINT          reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    CSTFLT          reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    CSTCHAR         reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    CSTSTRING       reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    TRUE            reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    FALSE           reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    CCURLY          reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    COLON           reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    SEMICOLON       reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    FROM            reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    TO              reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    BY              reduce using rule 96 (variable2 -> PERIOD ID saw_called_var_from_class .)
    OBRACKET        shift and go to state 258


state 218

    (124) factor -> OPAREN saw_oparen exp CPAREN saw_cparen . check_multdiv_operator
    (148) check_multdiv_operator -> .

    MULT            reduce using rule 148 (check_multdiv_operator -> .)
    DIV             reduce using rule 148 (check_multdiv_operator -> .)
    PLUS            reduce using rule 148 (check_multdiv_operator -> .)
    MINUS           reduce using rule 148 (check_multdiv_operator -> .)
    LT              reduce using rule 148 (check_multdiv_operator -> .)
    GT              reduce using rule 148 (check_multdiv_operator -> .)
    GTE             reduce using rule 148 (check_multdiv_operator -> .)
    LTE             reduce using rule 148 (check_multdiv_operator -> .)
    EQ              reduce using rule 148 (check_multdiv_operator -> .)
    NE              reduce using rule 148 (check_multdiv_operator -> .)
    AND             reduce using rule 148 (check_multdiv_operator -> .)
    OR              reduce using rule 148 (check_multdiv_operator -> .)
    QUESTION        reduce using rule 148 (check_multdiv_operator -> .)
    CPAREN          reduce using rule 148 (check_multdiv_operator -> .)
    COMMA           reduce using rule 148 (check_multdiv_operator -> .)
    CBRACKET        reduce using rule 148 (check_multdiv_operator -> .)
    ID              reduce using rule 148 (check_multdiv_operator -> .)
    IF              reduce using rule 148 (check_multdiv_operator -> .)
    PRINT           reduce using rule 148 (check_multdiv_operator -> .)
    READ            reduce using rule 148 (check_multdiv_operator -> .)
    WHILE           reduce using rule 148 (check_multdiv_operator -> .)
    FOR             reduce using rule 148 (check_multdiv_operator -> .)
    OCURLY          reduce using rule 148 (check_multdiv_operator -> .)
    FUNCTION        reduce using rule 148 (check_multdiv_operator -> .)
    CLASS           reduce using rule 148 (check_multdiv_operator -> .)
    VAR             reduce using rule 148 (check_multdiv_operator -> .)
    OPAREN          reduce using rule 148 (check_multdiv_operator -> .)
    CSTINT          reduce using rule 148 (check_multdiv_operator -> .)
    CSTFLT          reduce using rule 148 (check_multdiv_operator -> .)
    CSTCHAR         reduce using rule 148 (check_multdiv_operator -> .)
    CSTSTRING       reduce using rule 148 (check_multdiv_operator -> .)
    TRUE            reduce using rule 148 (check_multdiv_operator -> .)
    FALSE           reduce using rule 148 (check_multdiv_operator -> .)
    CCURLY          reduce using rule 148 (check_multdiv_operator -> .)
    COLON           reduce using rule 148 (check_multdiv_operator -> .)
    SEMICOLON       reduce using rule 148 (check_multdiv_operator -> .)

    check_multdiv_operator         shift and go to state 259

state 219

    (78) condicion -> IF cond2 THEN bloque_ciclo cond1 . SEMICOLON bc_end

    SEMICOLON       shift and go to state 260


state 220

    (79) cond1 -> ELSE . saw_else bloque_ciclo
    (166) saw_else -> .

    OCURLY          reduce using rule 166 (saw_else -> .)

    saw_else                       shift and go to state 261

state 221

    (80) cond1 -> empty .

    SEMICOLON       reduce using rule 80 (cond1 -> empty .)


state 222

    (50) bloque_ciclo -> OCURLY bc1 . CCURLY

    CCURLY          shift and go to state 262


state 223

    (51) bc1 -> estatuto_ciclo . bc1
    (51) bc1 -> . estatuto_ciclo bc1
    (52) bc1 -> . empty
    (65) estatuto_ciclo -> . asignacion
    (66) estatuto_ciclo -> . condicion
    (67) estatuto_ciclo -> . escritura
    (68) estatuto_ciclo -> . leer
    (69) estatuto_ciclo -> . ciclo_while
    (70) estatuto_ciclo -> . ciclo_for
    (71) estatuto_ciclo -> . dec
    (134) empty -> .
    (77) asignacion -> . variable saw_var_factor AS saw_asig exp
    (78) condicion -> . IF cond2 THEN bloque_ciclo cond1 SEMICOLON bc_end
    (83) escritura -> . PRINT saw_print OPAREN exp e1 CPAREN saw_print_end
    (86) leer -> . READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end
    (18) ciclo_while -> . WHILE saw_while cond2 THEN bloque_ciclo SEMICOLON saw_while_end
    (19) ciclo_for -> . FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON
    (22) dec -> . VAR tipo SEMICOLON dec1
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2

    CCURLY          reduce using rule 134 (empty -> .)
    IF              shift and go to state 29
    PRINT           shift and go to state 30
    READ            shift and go to state 31
    WHILE           shift and go to state 32
    FOR             shift and go to state 33
    VAR             shift and go to state 8
    ID              shift and go to state 151

    estatuto_ciclo                 shift and go to state 223
    bc1                            shift and go to state 263
    empty                          shift and go to state 224
    asignacion                     shift and go to state 225
    condicion                      shift and go to state 226
    escritura                      shift and go to state 227
    leer                           shift and go to state 228
    ciclo_while                    shift and go to state 229
    ciclo_for                      shift and go to state 230
    dec                            shift and go to state 231
    variable                       shift and go to state 232

state 224

    (52) bc1 -> empty .

    CCURLY          reduce using rule 52 (bc1 -> empty .)


state 225

    (65) estatuto_ciclo -> asignacion .

    IF              reduce using rule 65 (estatuto_ciclo -> asignacion .)
    PRINT           reduce using rule 65 (estatuto_ciclo -> asignacion .)
    READ            reduce using rule 65 (estatuto_ciclo -> asignacion .)
    WHILE           reduce using rule 65 (estatuto_ciclo -> asignacion .)
    FOR             reduce using rule 65 (estatuto_ciclo -> asignacion .)
    VAR             reduce using rule 65 (estatuto_ciclo -> asignacion .)
    ID              reduce using rule 65 (estatuto_ciclo -> asignacion .)
    CCURLY          reduce using rule 65 (estatuto_ciclo -> asignacion .)


state 226

    (66) estatuto_ciclo -> condicion .

    IF              reduce using rule 66 (estatuto_ciclo -> condicion .)
    PRINT           reduce using rule 66 (estatuto_ciclo -> condicion .)
    READ            reduce using rule 66 (estatuto_ciclo -> condicion .)
    WHILE           reduce using rule 66 (estatuto_ciclo -> condicion .)
    FOR             reduce using rule 66 (estatuto_ciclo -> condicion .)
    VAR             reduce using rule 66 (estatuto_ciclo -> condicion .)
    ID              reduce using rule 66 (estatuto_ciclo -> condicion .)
    CCURLY          reduce using rule 66 (estatuto_ciclo -> condicion .)


state 227

    (67) estatuto_ciclo -> escritura .

    IF              reduce using rule 67 (estatuto_ciclo -> escritura .)
    PRINT           reduce using rule 67 (estatuto_ciclo -> escritura .)
    READ            reduce using rule 67 (estatuto_ciclo -> escritura .)
    WHILE           reduce using rule 67 (estatuto_ciclo -> escritura .)
    FOR             reduce using rule 67 (estatuto_ciclo -> escritura .)
    VAR             reduce using rule 67 (estatuto_ciclo -> escritura .)
    ID              reduce using rule 67 (estatuto_ciclo -> escritura .)
    CCURLY          reduce using rule 67 (estatuto_ciclo -> escritura .)


state 228

    (68) estatuto_ciclo -> leer .

    IF              reduce using rule 68 (estatuto_ciclo -> leer .)
    PRINT           reduce using rule 68 (estatuto_ciclo -> leer .)
    READ            reduce using rule 68 (estatuto_ciclo -> leer .)
    WHILE           reduce using rule 68 (estatuto_ciclo -> leer .)
    FOR             reduce using rule 68 (estatuto_ciclo -> leer .)
    VAR             reduce using rule 68 (estatuto_ciclo -> leer .)
    ID              reduce using rule 68 (estatuto_ciclo -> leer .)
    CCURLY          reduce using rule 68 (estatuto_ciclo -> leer .)


state 229

    (69) estatuto_ciclo -> ciclo_while .

    IF              reduce using rule 69 (estatuto_ciclo -> ciclo_while .)
    PRINT           reduce using rule 69 (estatuto_ciclo -> ciclo_while .)
    READ            reduce using rule 69 (estatuto_ciclo -> ciclo_while .)
    WHILE           reduce using rule 69 (estatuto_ciclo -> ciclo_while .)
    FOR             reduce using rule 69 (estatuto_ciclo -> ciclo_while .)
    VAR             reduce using rule 69 (estatuto_ciclo -> ciclo_while .)
    ID              reduce using rule 69 (estatuto_ciclo -> ciclo_while .)
    CCURLY          reduce using rule 69 (estatuto_ciclo -> ciclo_while .)


state 230

    (70) estatuto_ciclo -> ciclo_for .

    IF              reduce using rule 70 (estatuto_ciclo -> ciclo_for .)
    PRINT           reduce using rule 70 (estatuto_ciclo -> ciclo_for .)
    READ            reduce using rule 70 (estatuto_ciclo -> ciclo_for .)
    WHILE           reduce using rule 70 (estatuto_ciclo -> ciclo_for .)
    FOR             reduce using rule 70 (estatuto_ciclo -> ciclo_for .)
    VAR             reduce using rule 70 (estatuto_ciclo -> ciclo_for .)
    ID              reduce using rule 70 (estatuto_ciclo -> ciclo_for .)
    CCURLY          reduce using rule 70 (estatuto_ciclo -> ciclo_for .)


state 231

    (71) estatuto_ciclo -> dec .

    IF              reduce using rule 71 (estatuto_ciclo -> dec .)
    PRINT           reduce using rule 71 (estatuto_ciclo -> dec .)
    READ            reduce using rule 71 (estatuto_ciclo -> dec .)
    WHILE           reduce using rule 71 (estatuto_ciclo -> dec .)
    FOR             reduce using rule 71 (estatuto_ciclo -> dec .)
    VAR             reduce using rule 71 (estatuto_ciclo -> dec .)
    ID              reduce using rule 71 (estatuto_ciclo -> dec .)
    CCURLY          reduce using rule 71 (estatuto_ciclo -> dec .)


state 232

    (77) asignacion -> variable . saw_var_factor AS saw_asig exp
    (128) saw_var_factor -> .

    AS              reduce using rule 128 (saw_var_factor -> .)

    saw_var_factor                 shift and go to state 264

state 233

    (83) escritura -> PRINT saw_print OPAREN exp e1 . CPAREN saw_print_end

    CPAREN          shift and go to state 265


state 234

    (84) e1 -> COMMA . exp e1
    (102) exp -> . texp exp1 check_or_operator
    (105) texp -> . gexp texp1 check_and_operator
    (108) gexp -> . mexp gexp1 check_relational_operator
    (116) mexp -> . termino mexp1
    (120) termino -> . factor term1 check_plusminus_operator
    (124) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (125) factor -> . varcst check_multdiv_operator
    (126) factor -> . variable saw_var_factor check_multdiv_operator
    (127) factor -> . llamada
    (129) varcst -> . CSTINT saw_end_value
    (130) varcst -> . CSTFLT saw_end_value
    (131) varcst -> . CSTCHAR saw_end_value
    (132) varcst -> . CSTSTRING saw_end_value
    (133) varcst -> . boolean saw_end_value
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2
    (98) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (99) llamada -> . ID saw_id OPAREN CPAREN
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 144
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 266
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 142
    llamada                        shift and go to state 143
    boolean                        shift and go to state 46

state 235

    (85) e1 -> empty .

    CPAREN          reduce using rule 85 (e1 -> empty .)


state 236

    (86) leer -> READ saw_read OPAREN variable saw_read_exp . l1 CPAREN saw_read_end
    (87) l1 -> . COMMA variable saw_read_exp e1
    (88) l1 -> . empty
    (134) empty -> .

    COMMA           shift and go to state 268
    CPAREN          reduce using rule 134 (empty -> .)

    l1                             shift and go to state 267
    empty                          shift and go to state 269

state 237

    (18) ciclo_while -> WHILE saw_while cond2 THEN bloque_ciclo . SEMICOLON saw_while_end

    SEMICOLON       shift and go to state 270


state 238

    (21) ciclo_for1 -> variable .

    TO              reduce using rule 21 (ciclo_for1 -> variable .)
    BY              reduce using rule 21 (ciclo_for1 -> variable .)
    CPAREN          reduce using rule 21 (ciclo_for1 -> variable .)


state 239

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 . TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON

    TO              shift and go to state 271


state 240

    (20) ciclo_for1 -> CSTINT .

    TO              reduce using rule 20 (ciclo_for1 -> CSTINT .)
    BY              reduce using rule 20 (ciclo_for1 -> CSTINT .)
    CPAREN          reduce using rule 20 (ciclo_for1 -> CSTINT .)


state 241

    (3) funcion -> FUNCTION func1 ID saw_id saw_function . OPAREN param CPAREN bloque

    OPAREN          shift and go to state 272


state 242

    (12) clase -> CLASS ID saw_id saw_class COLON . clase_bloque SEMICOLON
    (13) clase_bloque -> . OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY

    OCURLY          shift and go to state 274

    clase_bloque                   shift and go to state 273

state 243

    (103) exp1 -> OR saw_or texp exp1 .

    QUESTION        reduce using rule 103 (exp1 -> OR saw_or texp exp1 .)
    CPAREN          reduce using rule 103 (exp1 -> OR saw_or texp exp1 .)
    COMMA           reduce using rule 103 (exp1 -> OR saw_or texp exp1 .)
    CBRACKET        reduce using rule 103 (exp1 -> OR saw_or texp exp1 .)
    ID              reduce using rule 103 (exp1 -> OR saw_or texp exp1 .)
    IF              reduce using rule 103 (exp1 -> OR saw_or texp exp1 .)
    PRINT           reduce using rule 103 (exp1 -> OR saw_or texp exp1 .)
    READ            reduce using rule 103 (exp1 -> OR saw_or texp exp1 .)
    WHILE           reduce using rule 103 (exp1 -> OR saw_or texp exp1 .)
    FOR             reduce using rule 103 (exp1 -> OR saw_or texp exp1 .)
    OCURLY          reduce using rule 103 (exp1 -> OR saw_or texp exp1 .)
    FUNCTION        reduce using rule 103 (exp1 -> OR saw_or texp exp1 .)
    CLASS           reduce using rule 103 (exp1 -> OR saw_or texp exp1 .)
    VAR             reduce using rule 103 (exp1 -> OR saw_or texp exp1 .)
    OPAREN          reduce using rule 103 (exp1 -> OR saw_or texp exp1 .)
    CSTINT          reduce using rule 103 (exp1 -> OR saw_or texp exp1 .)
    CSTFLT          reduce using rule 103 (exp1 -> OR saw_or texp exp1 .)
    CSTCHAR         reduce using rule 103 (exp1 -> OR saw_or texp exp1 .)
    CSTSTRING       reduce using rule 103 (exp1 -> OR saw_or texp exp1 .)
    TRUE            reduce using rule 103 (exp1 -> OR saw_or texp exp1 .)
    FALSE           reduce using rule 103 (exp1 -> OR saw_or texp exp1 .)
    CCURLY          reduce using rule 103 (exp1 -> OR saw_or texp exp1 .)
    COLON           reduce using rule 103 (exp1 -> OR saw_or texp exp1 .)
    SEMICOLON       reduce using rule 103 (exp1 -> OR saw_or texp exp1 .)


state 244

    (106) texp1 -> AND saw_and gexp texp1 .

    OR              reduce using rule 106 (texp1 -> AND saw_and gexp texp1 .)
    QUESTION        reduce using rule 106 (texp1 -> AND saw_and gexp texp1 .)
    CPAREN          reduce using rule 106 (texp1 -> AND saw_and gexp texp1 .)
    COMMA           reduce using rule 106 (texp1 -> AND saw_and gexp texp1 .)
    CBRACKET        reduce using rule 106 (texp1 -> AND saw_and gexp texp1 .)
    ID              reduce using rule 106 (texp1 -> AND saw_and gexp texp1 .)
    IF              reduce using rule 106 (texp1 -> AND saw_and gexp texp1 .)
    PRINT           reduce using rule 106 (texp1 -> AND saw_and gexp texp1 .)
    READ            reduce using rule 106 (texp1 -> AND saw_and gexp texp1 .)
    WHILE           reduce using rule 106 (texp1 -> AND saw_and gexp texp1 .)
    FOR             reduce using rule 106 (texp1 -> AND saw_and gexp texp1 .)
    OCURLY          reduce using rule 106 (texp1 -> AND saw_and gexp texp1 .)
    FUNCTION        reduce using rule 106 (texp1 -> AND saw_and gexp texp1 .)
    CLASS           reduce using rule 106 (texp1 -> AND saw_and gexp texp1 .)
    VAR             reduce using rule 106 (texp1 -> AND saw_and gexp texp1 .)
    OPAREN          reduce using rule 106 (texp1 -> AND saw_and gexp texp1 .)
    CSTINT          reduce using rule 106 (texp1 -> AND saw_and gexp texp1 .)
    CSTFLT          reduce using rule 106 (texp1 -> AND saw_and gexp texp1 .)
    CSTCHAR         reduce using rule 106 (texp1 -> AND saw_and gexp texp1 .)
    CSTSTRING       reduce using rule 106 (texp1 -> AND saw_and gexp texp1 .)
    TRUE            reduce using rule 106 (texp1 -> AND saw_and gexp texp1 .)
    FALSE           reduce using rule 106 (texp1 -> AND saw_and gexp texp1 .)
    CCURLY          reduce using rule 106 (texp1 -> AND saw_and gexp texp1 .)
    COLON           reduce using rule 106 (texp1 -> AND saw_and gexp texp1 .)
    SEMICOLON       reduce using rule 106 (texp1 -> AND saw_and gexp texp1 .)


state 245

    (117) mexp1 -> PLUS saw_plusminus_operator termino mexp1 .

    LT              reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    GT              reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    GTE             reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    LTE             reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    EQ              reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    NE              reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    AND             reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    OR              reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    QUESTION        reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    CPAREN          reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    COMMA           reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    CBRACKET        reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    ID              reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    IF              reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    PRINT           reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    READ            reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    WHILE           reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    FOR             reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    OCURLY          reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    FUNCTION        reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    CLASS           reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    VAR             reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    OPAREN          reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    CSTINT          reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    CSTFLT          reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    CSTCHAR         reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    CSTSTRING       reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    TRUE            reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    FALSE           reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    CCURLY          reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    COLON           reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    SEMICOLON       reduce using rule 117 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)


state 246

    (118) mexp1 -> MINUS saw_plusminus_operator termino mexp1 .

    LT              reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    GT              reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    GTE             reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    LTE             reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    EQ              reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    NE              reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    AND             reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    OR              reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    QUESTION        reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    CPAREN          reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    COMMA           reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    CBRACKET        reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    ID              reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    IF              reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    PRINT           reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    READ            reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    WHILE           reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    FOR             reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    OCURLY          reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    FUNCTION        reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    CLASS           reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    VAR             reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    OPAREN          reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    CSTINT          reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    CSTFLT          reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    CSTCHAR         reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    CSTSTRING       reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    TRUE            reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    FALSE           reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    CCURLY          reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    COLON           reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    SEMICOLON       reduce using rule 118 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)


state 247

    (121) term1 -> MULT saw_multdiv_operator factor term1 .

    PLUS            reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    MINUS           reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    LT              reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    GT              reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    GTE             reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    LTE             reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    EQ              reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    NE              reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    AND             reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    OR              reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    QUESTION        reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    CPAREN          reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    COMMA           reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    CBRACKET        reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    ID              reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    IF              reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    PRINT           reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    READ            reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    WHILE           reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    FOR             reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    OCURLY          reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    FUNCTION        reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    CLASS           reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    VAR             reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    OPAREN          reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    CSTINT          reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    CSTFLT          reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    CSTCHAR         reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    CSTSTRING       reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    TRUE            reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    FALSE           reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    CCURLY          reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    COLON           reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)
    SEMICOLON       reduce using rule 121 (term1 -> MULT saw_multdiv_operator factor term1 .)


state 248

    (122) term1 -> DIV saw_multdiv_operator factor term1 .

    PLUS            reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    MINUS           reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    LT              reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    GT              reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    GTE             reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    LTE             reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    EQ              reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    NE              reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    AND             reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    OR              reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    QUESTION        reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    CPAREN          reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    COMMA           reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    CBRACKET        reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    ID              reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    IF              reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    PRINT           reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    READ            reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    WHILE           reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    FOR             reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    OCURLY          reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    FUNCTION        reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    CLASS           reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    VAR             reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    OPAREN          reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    CSTINT          reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    CSTFLT          reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    CSTCHAR         reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    CSTSTRING       reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    TRUE            reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    FALSE           reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    CCURLY          reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    COLON           reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)
    SEMICOLON       reduce using rule 122 (term1 -> DIV saw_multdiv_operator factor term1 .)


state 249

    (25) tipo -> compuesto ID saw_id saw_variable tipo1 .

    SEMICOLON       reduce using rule 25 (tipo -> compuesto ID saw_id saw_variable tipo1 .)


state 250

    (28) tipo1 -> COMMA . ID saw_id saw_variable tipo1

    ID              shift and go to state 275


state 251

    (29) tipo1 -> empty .

    SEMICOLON       reduce using rule 29 (tipo1 -> empty .)


state 252

    (26) tipo -> simple ID saw_id saw_variable tipo1 .

    SEMICOLON       reduce using rule 26 (tipo -> simple ID saw_id saw_variable tipo1 .)


state 253

    (27) tipo -> multiple ID saw_id OBRACKET CSTINT . CBRACKET saw_dimension tipo3 saw_variable tipo2

    CBRACKET        shift and go to state 276


state 254

    (82) ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .

    ID              reduce using rule 82 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    IF              reduce using rule 82 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    PRINT           reduce using rule 82 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    READ            reduce using rule 82 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    WHILE           reduce using rule 82 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    FOR             reduce using rule 82 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    OCURLY          reduce using rule 82 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    FUNCTION        reduce using rule 82 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CLASS           reduce using rule 82 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    VAR             reduce using rule 82 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    OPAREN          reduce using rule 82 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CSTINT          reduce using rule 82 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CSTFLT          reduce using rule 82 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CSTCHAR         reduce using rule 82 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CSTSTRING       reduce using rule 82 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    TRUE            reduce using rule 82 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    FALSE           reduce using rule 82 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CCURLY          reduce using rule 82 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    COLON           reduce using rule 82 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    SEMICOLON       reduce using rule 82 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)


state 255

    (98) llamada -> ID saw_id OPAREN exp llamada1 CPAREN .

    ID              reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    IF              reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    PRINT           reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    READ            reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    WHILE           reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    FOR             reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    OCURLY          reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    FUNCTION        reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    CLASS           reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    VAR             reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    OPAREN          reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    CSTINT          reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    CSTFLT          reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    CSTCHAR         reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    CSTSTRING       reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    TRUE            reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    FALSE           reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    CCURLY          reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    MULT            reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    DIV             reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    PLUS            reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    MINUS           reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    LT              reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    GT              reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    GTE             reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    LTE             reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    EQ              reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    NE              reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    AND             reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    OR              reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    QUESTION        reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    COLON           reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    CPAREN          reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    COMMA           reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    CBRACKET        reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    SEMICOLON       reduce using rule 98 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)


state 256

    (100) llamada1 -> COMMA exp . llamada1
    (100) llamada1 -> . COMMA exp llamada1
    (101) llamada1 -> . empty
    (134) empty -> .

    COMMA           shift and go to state 214
    CPAREN          reduce using rule 134 (empty -> .)

    llamada1                       shift and go to state 277
    empty                          shift and go to state 215

state 257

    (92) variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension . variable1 saw_called_var
    (94) variable1 -> . OBRACKET exp CBRACKET saw_dimension
    (95) variable1 -> . empty
    (134) empty -> .

    OBRACKET        shift and go to state 278
    AS              reduce using rule 134 (empty -> .)
    MULT            reduce using rule 134 (empty -> .)
    DIV             reduce using rule 134 (empty -> .)
    PLUS            reduce using rule 134 (empty -> .)
    MINUS           reduce using rule 134 (empty -> .)
    LT              reduce using rule 134 (empty -> .)
    GT              reduce using rule 134 (empty -> .)
    GTE             reduce using rule 134 (empty -> .)
    LTE             reduce using rule 134 (empty -> .)
    EQ              reduce using rule 134 (empty -> .)
    NE              reduce using rule 134 (empty -> .)
    AND             reduce using rule 134 (empty -> .)
    OR              reduce using rule 134 (empty -> .)
    QUESTION        reduce using rule 134 (empty -> .)
    CPAREN          reduce using rule 134 (empty -> .)
    FROM            reduce using rule 134 (empty -> .)
    COMMA           reduce using rule 134 (empty -> .)
    CBRACKET        reduce using rule 134 (empty -> .)
    ID              reduce using rule 134 (empty -> .)
    IF              reduce using rule 134 (empty -> .)
    PRINT           reduce using rule 134 (empty -> .)
    READ            reduce using rule 134 (empty -> .)
    WHILE           reduce using rule 134 (empty -> .)
    FOR             reduce using rule 134 (empty -> .)
    OCURLY          reduce using rule 134 (empty -> .)
    FUNCTION        reduce using rule 134 (empty -> .)
    CLASS           reduce using rule 134 (empty -> .)
    VAR             reduce using rule 134 (empty -> .)
    OPAREN          reduce using rule 134 (empty -> .)
    CSTINT          reduce using rule 134 (empty -> .)
    CSTFLT          reduce using rule 134 (empty -> .)
    CSTCHAR         reduce using rule 134 (empty -> .)
    CSTSTRING       reduce using rule 134 (empty -> .)
    TRUE            reduce using rule 134 (empty -> .)
    FALSE           reduce using rule 134 (empty -> .)
    CCURLY          reduce using rule 134 (empty -> .)
    COLON           reduce using rule 134 (empty -> .)
    SEMICOLON       reduce using rule 134 (empty -> .)
    TO              reduce using rule 134 (empty -> .)
    BY              reduce using rule 134 (empty -> .)

    variable1                      shift and go to state 279
    empty                          shift and go to state 280

state 258

    (97) variable2 -> PERIOD ID saw_called_var_from_class OBRACKET . exp CBRACKET saw_dimension variable1
    (102) exp -> . texp exp1 check_or_operator
    (105) texp -> . gexp texp1 check_and_operator
    (108) gexp -> . mexp gexp1 check_relational_operator
    (116) mexp -> . termino mexp1
    (120) termino -> . factor term1 check_plusminus_operator
    (124) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (125) factor -> . varcst check_multdiv_operator
    (126) factor -> . variable saw_var_factor check_multdiv_operator
    (127) factor -> . llamada
    (129) varcst -> . CSTINT saw_end_value
    (130) varcst -> . CSTFLT saw_end_value
    (131) varcst -> . CSTCHAR saw_end_value
    (132) varcst -> . CSTSTRING saw_end_value
    (133) varcst -> . boolean saw_end_value
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2
    (98) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (99) llamada -> . ID saw_id OPAREN CPAREN
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 144
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 281
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 142
    llamada                        shift and go to state 143
    boolean                        shift and go to state 46

state 259

    (124) factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .

    MULT            reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    DIV             reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    PLUS            reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    MINUS           reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    LT              reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    GT              reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    GTE             reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    LTE             reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    EQ              reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    NE              reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    AND             reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    OR              reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    QUESTION        reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    CPAREN          reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    COMMA           reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    CBRACKET        reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    ID              reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    IF              reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    PRINT           reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    READ            reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    WHILE           reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    FOR             reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    OCURLY          reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    FUNCTION        reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    CLASS           reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    VAR             reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    OPAREN          reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    CSTINT          reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    CSTFLT          reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    CSTCHAR         reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    CSTSTRING       reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    TRUE            reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    FALSE           reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    CCURLY          reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    COLON           reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    SEMICOLON       reduce using rule 124 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)


state 260

    (78) condicion -> IF cond2 THEN bloque_ciclo cond1 SEMICOLON . bc_end
    (165) bc_end -> .

    ID              reduce using rule 165 (bc_end -> .)
    IF              reduce using rule 165 (bc_end -> .)
    PRINT           reduce using rule 165 (bc_end -> .)
    READ            reduce using rule 165 (bc_end -> .)
    WHILE           reduce using rule 165 (bc_end -> .)
    FOR             reduce using rule 165 (bc_end -> .)
    OCURLY          reduce using rule 165 (bc_end -> .)
    FUNCTION        reduce using rule 165 (bc_end -> .)
    CLASS           reduce using rule 165 (bc_end -> .)
    VAR             reduce using rule 165 (bc_end -> .)
    OPAREN          reduce using rule 165 (bc_end -> .)
    CSTINT          reduce using rule 165 (bc_end -> .)
    CSTFLT          reduce using rule 165 (bc_end -> .)
    CSTCHAR         reduce using rule 165 (bc_end -> .)
    CSTSTRING       reduce using rule 165 (bc_end -> .)
    TRUE            reduce using rule 165 (bc_end -> .)
    FALSE           reduce using rule 165 (bc_end -> .)
    CCURLY          reduce using rule 165 (bc_end -> .)

    bc_end                         shift and go to state 282

state 261

    (79) cond1 -> ELSE saw_else . bloque_ciclo
    (50) bloque_ciclo -> . OCURLY bc1 CCURLY

    OCURLY          shift and go to state 187

    bloque_ciclo                   shift and go to state 283

state 262

    (50) bloque_ciclo -> OCURLY bc1 CCURLY .

    ELSE            reduce using rule 50 (bloque_ciclo -> OCURLY bc1 CCURLY .)
    SEMICOLON       reduce using rule 50 (bloque_ciclo -> OCURLY bc1 CCURLY .)


state 263

    (51) bc1 -> estatuto_ciclo bc1 .

    CCURLY          reduce using rule 51 (bc1 -> estatuto_ciclo bc1 .)


state 264

    (77) asignacion -> variable saw_var_factor . AS saw_asig exp

    AS              shift and go to state 128


state 265

    (83) escritura -> PRINT saw_print OPAREN exp e1 CPAREN . saw_print_end
    (161) saw_print_end -> .

    ID              reduce using rule 161 (saw_print_end -> .)
    IF              reduce using rule 161 (saw_print_end -> .)
    PRINT           reduce using rule 161 (saw_print_end -> .)
    READ            reduce using rule 161 (saw_print_end -> .)
    WHILE           reduce using rule 161 (saw_print_end -> .)
    FOR             reduce using rule 161 (saw_print_end -> .)
    OCURLY          reduce using rule 161 (saw_print_end -> .)
    FUNCTION        reduce using rule 161 (saw_print_end -> .)
    CLASS           reduce using rule 161 (saw_print_end -> .)
    VAR             reduce using rule 161 (saw_print_end -> .)
    OPAREN          reduce using rule 161 (saw_print_end -> .)
    CSTINT          reduce using rule 161 (saw_print_end -> .)
    CSTFLT          reduce using rule 161 (saw_print_end -> .)
    CSTCHAR         reduce using rule 161 (saw_print_end -> .)
    CSTSTRING       reduce using rule 161 (saw_print_end -> .)
    TRUE            reduce using rule 161 (saw_print_end -> .)
    FALSE           reduce using rule 161 (saw_print_end -> .)
    CCURLY          reduce using rule 161 (saw_print_end -> .)
    COLON           reduce using rule 161 (saw_print_end -> .)
    SEMICOLON       reduce using rule 161 (saw_print_end -> .)

    saw_print_end                  shift and go to state 284

state 266

    (84) e1 -> COMMA exp . e1
    (84) e1 -> . COMMA exp e1
    (85) e1 -> . empty
    (134) empty -> .

    COMMA           shift and go to state 234
    CPAREN          reduce using rule 134 (empty -> .)

    e1                             shift and go to state 285
    empty                          shift and go to state 235

state 267

    (86) leer -> READ saw_read OPAREN variable saw_read_exp l1 . CPAREN saw_read_end

    CPAREN          shift and go to state 286


state 268

    (87) l1 -> COMMA . variable saw_read_exp e1
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2

    ID              shift and go to state 151

    variable                       shift and go to state 287

state 269

    (88) l1 -> empty .

    CPAREN          reduce using rule 88 (l1 -> empty .)


state 270

    (18) ciclo_while -> WHILE saw_while cond2 THEN bloque_ciclo SEMICOLON . saw_while_end
    (168) saw_while_end -> .

    ID              reduce using rule 168 (saw_while_end -> .)
    IF              reduce using rule 168 (saw_while_end -> .)
    PRINT           reduce using rule 168 (saw_while_end -> .)
    READ            reduce using rule 168 (saw_while_end -> .)
    WHILE           reduce using rule 168 (saw_while_end -> .)
    FOR             reduce using rule 168 (saw_while_end -> .)
    OCURLY          reduce using rule 168 (saw_while_end -> .)
    FUNCTION        reduce using rule 168 (saw_while_end -> .)
    CLASS           reduce using rule 168 (saw_while_end -> .)
    VAR             reduce using rule 168 (saw_while_end -> .)
    OPAREN          reduce using rule 168 (saw_while_end -> .)
    CSTINT          reduce using rule 168 (saw_while_end -> .)
    CSTFLT          reduce using rule 168 (saw_while_end -> .)
    CSTCHAR         reduce using rule 168 (saw_while_end -> .)
    CSTSTRING       reduce using rule 168 (saw_while_end -> .)
    TRUE            reduce using rule 168 (saw_while_end -> .)
    FALSE           reduce using rule 168 (saw_while_end -> .)
    CCURLY          reduce using rule 168 (saw_while_end -> .)

    saw_while_end                  shift and go to state 288

state 271

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO . ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON
    (20) ciclo_for1 -> . CSTINT
    (21) ciclo_for1 -> . variable
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2

    CSTINT          shift and go to state 240
    ID              shift and go to state 151

    variable                       shift and go to state 238
    ciclo_for1                     shift and go to state 289

state 272

    (3) funcion -> FUNCTION func1 ID saw_id saw_function OPAREN . param CPAREN bloque
    (6) param -> . param2 param1
    (7) param -> . empty
    (10) param2 -> . simple ID saw_id saw_variable_param
    (11) param2 -> . multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable_param
    (134) empty -> .
    (34) simple -> . INT saw_type
    (35) simple -> . FLOAT saw_type
    (36) simple -> . BOOL saw_type
    (37) simple -> . STRING saw_type
    (38) simple -> . CHAR saw_type
    (39) multiple -> . INTS saw_type
    (40) multiple -> . FLOATS saw_type
    (41) multiple -> . BOOLS saw_type
    (42) multiple -> . STRINGS saw_type
    (43) multiple -> . CHARS saw_type

    CPAREN          reduce using rule 134 (empty -> .)
    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    BOOL            shift and go to state 58
    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    INTS            shift and go to state 61
    FLOATS          shift and go to state 62
    BOOLS           shift and go to state 63
    STRINGS         shift and go to state 64
    CHARS           shift and go to state 65

    param                          shift and go to state 290
    param2                         shift and go to state 291
    empty                          shift and go to state 292
    simple                         shift and go to state 293
    multiple                       shift and go to state 294

state 273

    (12) clase -> CLASS ID saw_id saw_class COLON clase_bloque . SEMICOLON

    SEMICOLON       shift and go to state 295


state 274

    (13) clase_bloque -> OCURLY . ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY

    ATTRIBUTES      shift and go to state 296


state 275

    (28) tipo1 -> COMMA ID . saw_id saw_variable tipo1
    (137) saw_id -> .

    COMMA           reduce using rule 137 (saw_id -> .)
    SEMICOLON       reduce using rule 137 (saw_id -> .)

    saw_id                         shift and go to state 297

state 276

    (27) tipo -> multiple ID saw_id OBRACKET CSTINT CBRACKET . saw_dimension tipo3 saw_variable tipo2
    (140) saw_dimension -> .

    OBRACKET        reduce using rule 140 (saw_dimension -> .)
    COMMA           reduce using rule 140 (saw_dimension -> .)
    SEMICOLON       reduce using rule 140 (saw_dimension -> .)

    saw_dimension                  shift and go to state 298

state 277

    (100) llamada1 -> COMMA exp llamada1 .

    CPAREN          reduce using rule 100 (llamada1 -> COMMA exp llamada1 .)


state 278

    (94) variable1 -> OBRACKET . exp CBRACKET saw_dimension
    (102) exp -> . texp exp1 check_or_operator
    (105) texp -> . gexp texp1 check_and_operator
    (108) gexp -> . mexp gexp1 check_relational_operator
    (116) mexp -> . termino mexp1
    (120) termino -> . factor term1 check_plusminus_operator
    (124) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (125) factor -> . varcst check_multdiv_operator
    (126) factor -> . variable saw_var_factor check_multdiv_operator
    (127) factor -> . llamada
    (129) varcst -> . CSTINT saw_end_value
    (130) varcst -> . CSTFLT saw_end_value
    (131) varcst -> . CSTCHAR saw_end_value
    (132) varcst -> . CSTSTRING saw_end_value
    (133) varcst -> . boolean saw_end_value
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2
    (98) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (99) llamada -> . ID saw_id OPAREN CPAREN
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 144
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 299
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 142
    llamada                        shift and go to state 143
    boolean                        shift and go to state 46

state 279

    (92) variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 . saw_called_var
    (141) saw_called_var -> .

    AS              reduce using rule 141 (saw_called_var -> .)
    MULT            reduce using rule 141 (saw_called_var -> .)
    DIV             reduce using rule 141 (saw_called_var -> .)
    PLUS            reduce using rule 141 (saw_called_var -> .)
    MINUS           reduce using rule 141 (saw_called_var -> .)
    LT              reduce using rule 141 (saw_called_var -> .)
    GT              reduce using rule 141 (saw_called_var -> .)
    GTE             reduce using rule 141 (saw_called_var -> .)
    LTE             reduce using rule 141 (saw_called_var -> .)
    EQ              reduce using rule 141 (saw_called_var -> .)
    NE              reduce using rule 141 (saw_called_var -> .)
    AND             reduce using rule 141 (saw_called_var -> .)
    OR              reduce using rule 141 (saw_called_var -> .)
    QUESTION        reduce using rule 141 (saw_called_var -> .)
    CPAREN          reduce using rule 141 (saw_called_var -> .)
    FROM            reduce using rule 141 (saw_called_var -> .)
    COMMA           reduce using rule 141 (saw_called_var -> .)
    CBRACKET        reduce using rule 141 (saw_called_var -> .)
    ID              reduce using rule 141 (saw_called_var -> .)
    IF              reduce using rule 141 (saw_called_var -> .)
    PRINT           reduce using rule 141 (saw_called_var -> .)
    READ            reduce using rule 141 (saw_called_var -> .)
    WHILE           reduce using rule 141 (saw_called_var -> .)
    FOR             reduce using rule 141 (saw_called_var -> .)
    OCURLY          reduce using rule 141 (saw_called_var -> .)
    FUNCTION        reduce using rule 141 (saw_called_var -> .)
    CLASS           reduce using rule 141 (saw_called_var -> .)
    VAR             reduce using rule 141 (saw_called_var -> .)
    OPAREN          reduce using rule 141 (saw_called_var -> .)
    CSTINT          reduce using rule 141 (saw_called_var -> .)
    CSTFLT          reduce using rule 141 (saw_called_var -> .)
    CSTCHAR         reduce using rule 141 (saw_called_var -> .)
    CSTSTRING       reduce using rule 141 (saw_called_var -> .)
    TRUE            reduce using rule 141 (saw_called_var -> .)
    FALSE           reduce using rule 141 (saw_called_var -> .)
    CCURLY          reduce using rule 141 (saw_called_var -> .)
    COLON           reduce using rule 141 (saw_called_var -> .)
    SEMICOLON       reduce using rule 141 (saw_called_var -> .)
    TO              reduce using rule 141 (saw_called_var -> .)
    BY              reduce using rule 141 (saw_called_var -> .)

    saw_called_var                 shift and go to state 300

state 280

    (95) variable1 -> empty .

    AS              reduce using rule 95 (variable1 -> empty .)
    MULT            reduce using rule 95 (variable1 -> empty .)
    DIV             reduce using rule 95 (variable1 -> empty .)
    PLUS            reduce using rule 95 (variable1 -> empty .)
    MINUS           reduce using rule 95 (variable1 -> empty .)
    LT              reduce using rule 95 (variable1 -> empty .)
    GT              reduce using rule 95 (variable1 -> empty .)
    GTE             reduce using rule 95 (variable1 -> empty .)
    LTE             reduce using rule 95 (variable1 -> empty .)
    EQ              reduce using rule 95 (variable1 -> empty .)
    NE              reduce using rule 95 (variable1 -> empty .)
    AND             reduce using rule 95 (variable1 -> empty .)
    OR              reduce using rule 95 (variable1 -> empty .)
    QUESTION        reduce using rule 95 (variable1 -> empty .)
    CPAREN          reduce using rule 95 (variable1 -> empty .)
    FROM            reduce using rule 95 (variable1 -> empty .)
    COMMA           reduce using rule 95 (variable1 -> empty .)
    CBRACKET        reduce using rule 95 (variable1 -> empty .)
    ID              reduce using rule 95 (variable1 -> empty .)
    IF              reduce using rule 95 (variable1 -> empty .)
    PRINT           reduce using rule 95 (variable1 -> empty .)
    READ            reduce using rule 95 (variable1 -> empty .)
    WHILE           reduce using rule 95 (variable1 -> empty .)
    FOR             reduce using rule 95 (variable1 -> empty .)
    OCURLY          reduce using rule 95 (variable1 -> empty .)
    FUNCTION        reduce using rule 95 (variable1 -> empty .)
    CLASS           reduce using rule 95 (variable1 -> empty .)
    VAR             reduce using rule 95 (variable1 -> empty .)
    OPAREN          reduce using rule 95 (variable1 -> empty .)
    CSTINT          reduce using rule 95 (variable1 -> empty .)
    CSTFLT          reduce using rule 95 (variable1 -> empty .)
    CSTCHAR         reduce using rule 95 (variable1 -> empty .)
    CSTSTRING       reduce using rule 95 (variable1 -> empty .)
    TRUE            reduce using rule 95 (variable1 -> empty .)
    FALSE           reduce using rule 95 (variable1 -> empty .)
    CCURLY          reduce using rule 95 (variable1 -> empty .)
    COLON           reduce using rule 95 (variable1 -> empty .)
    SEMICOLON       reduce using rule 95 (variable1 -> empty .)
    TO              reduce using rule 95 (variable1 -> empty .)
    BY              reduce using rule 95 (variable1 -> empty .)


state 281

    (97) variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp . CBRACKET saw_dimension variable1

    CBRACKET        shift and go to state 301


state 282

    (78) condicion -> IF cond2 THEN bloque_ciclo cond1 SEMICOLON bc_end .

    ID              reduce using rule 78 (condicion -> IF cond2 THEN bloque_ciclo cond1 SEMICOLON bc_end .)
    IF              reduce using rule 78 (condicion -> IF cond2 THEN bloque_ciclo cond1 SEMICOLON bc_end .)
    PRINT           reduce using rule 78 (condicion -> IF cond2 THEN bloque_ciclo cond1 SEMICOLON bc_end .)
    READ            reduce using rule 78 (condicion -> IF cond2 THEN bloque_ciclo cond1 SEMICOLON bc_end .)
    WHILE           reduce using rule 78 (condicion -> IF cond2 THEN bloque_ciclo cond1 SEMICOLON bc_end .)
    FOR             reduce using rule 78 (condicion -> IF cond2 THEN bloque_ciclo cond1 SEMICOLON bc_end .)
    OCURLY          reduce using rule 78 (condicion -> IF cond2 THEN bloque_ciclo cond1 SEMICOLON bc_end .)
    FUNCTION        reduce using rule 78 (condicion -> IF cond2 THEN bloque_ciclo cond1 SEMICOLON bc_end .)
    CLASS           reduce using rule 78 (condicion -> IF cond2 THEN bloque_ciclo cond1 SEMICOLON bc_end .)
    VAR             reduce using rule 78 (condicion -> IF cond2 THEN bloque_ciclo cond1 SEMICOLON bc_end .)
    OPAREN          reduce using rule 78 (condicion -> IF cond2 THEN bloque_ciclo cond1 SEMICOLON bc_end .)
    CSTINT          reduce using rule 78 (condicion -> IF cond2 THEN bloque_ciclo cond1 SEMICOLON bc_end .)
    CSTFLT          reduce using rule 78 (condicion -> IF cond2 THEN bloque_ciclo cond1 SEMICOLON bc_end .)
    CSTCHAR         reduce using rule 78 (condicion -> IF cond2 THEN bloque_ciclo cond1 SEMICOLON bc_end .)
    CSTSTRING       reduce using rule 78 (condicion -> IF cond2 THEN bloque_ciclo cond1 SEMICOLON bc_end .)
    TRUE            reduce using rule 78 (condicion -> IF cond2 THEN bloque_ciclo cond1 SEMICOLON bc_end .)
    FALSE           reduce using rule 78 (condicion -> IF cond2 THEN bloque_ciclo cond1 SEMICOLON bc_end .)
    CCURLY          reduce using rule 78 (condicion -> IF cond2 THEN bloque_ciclo cond1 SEMICOLON bc_end .)


state 283

    (79) cond1 -> ELSE saw_else bloque_ciclo .

    SEMICOLON       reduce using rule 79 (cond1 -> ELSE saw_else bloque_ciclo .)


state 284

    (83) escritura -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .

    ID              reduce using rule 83 (escritura -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    IF              reduce using rule 83 (escritura -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    PRINT           reduce using rule 83 (escritura -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    READ            reduce using rule 83 (escritura -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    WHILE           reduce using rule 83 (escritura -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    FOR             reduce using rule 83 (escritura -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    OCURLY          reduce using rule 83 (escritura -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    FUNCTION        reduce using rule 83 (escritura -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    CLASS           reduce using rule 83 (escritura -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    VAR             reduce using rule 83 (escritura -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    OPAREN          reduce using rule 83 (escritura -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    CSTINT          reduce using rule 83 (escritura -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    CSTFLT          reduce using rule 83 (escritura -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    CSTCHAR         reduce using rule 83 (escritura -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    CSTSTRING       reduce using rule 83 (escritura -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    TRUE            reduce using rule 83 (escritura -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    FALSE           reduce using rule 83 (escritura -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    CCURLY          reduce using rule 83 (escritura -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    COLON           reduce using rule 83 (escritura -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    SEMICOLON       reduce using rule 83 (escritura -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)


state 285

    (84) e1 -> COMMA exp e1 .

    CPAREN          reduce using rule 84 (e1 -> COMMA exp e1 .)


state 286

    (86) leer -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN . saw_read_end
    (164) saw_read_end -> .

    ID              reduce using rule 164 (saw_read_end -> .)
    IF              reduce using rule 164 (saw_read_end -> .)
    PRINT           reduce using rule 164 (saw_read_end -> .)
    READ            reduce using rule 164 (saw_read_end -> .)
    WHILE           reduce using rule 164 (saw_read_end -> .)
    FOR             reduce using rule 164 (saw_read_end -> .)
    OCURLY          reduce using rule 164 (saw_read_end -> .)
    FUNCTION        reduce using rule 164 (saw_read_end -> .)
    CLASS           reduce using rule 164 (saw_read_end -> .)
    VAR             reduce using rule 164 (saw_read_end -> .)
    OPAREN          reduce using rule 164 (saw_read_end -> .)
    CSTINT          reduce using rule 164 (saw_read_end -> .)
    CSTFLT          reduce using rule 164 (saw_read_end -> .)
    CSTCHAR         reduce using rule 164 (saw_read_end -> .)
    CSTSTRING       reduce using rule 164 (saw_read_end -> .)
    TRUE            reduce using rule 164 (saw_read_end -> .)
    FALSE           reduce using rule 164 (saw_read_end -> .)
    CCURLY          reduce using rule 164 (saw_read_end -> .)
    COLON           reduce using rule 164 (saw_read_end -> .)
    SEMICOLON       reduce using rule 164 (saw_read_end -> .)

    saw_read_end                   shift and go to state 302

state 287

    (87) l1 -> COMMA variable . saw_read_exp e1
    (163) saw_read_exp -> .

    COMMA           reduce using rule 163 (saw_read_exp -> .)
    CPAREN          reduce using rule 163 (saw_read_exp -> .)

    saw_read_exp                   shift and go to state 303

state 288

    (18) ciclo_while -> WHILE saw_while cond2 THEN bloque_ciclo SEMICOLON saw_while_end .

    ID              reduce using rule 18 (ciclo_while -> WHILE saw_while cond2 THEN bloque_ciclo SEMICOLON saw_while_end .)
    IF              reduce using rule 18 (ciclo_while -> WHILE saw_while cond2 THEN bloque_ciclo SEMICOLON saw_while_end .)
    PRINT           reduce using rule 18 (ciclo_while -> WHILE saw_while cond2 THEN bloque_ciclo SEMICOLON saw_while_end .)
    READ            reduce using rule 18 (ciclo_while -> WHILE saw_while cond2 THEN bloque_ciclo SEMICOLON saw_while_end .)
    WHILE           reduce using rule 18 (ciclo_while -> WHILE saw_while cond2 THEN bloque_ciclo SEMICOLON saw_while_end .)
    FOR             reduce using rule 18 (ciclo_while -> WHILE saw_while cond2 THEN bloque_ciclo SEMICOLON saw_while_end .)
    OCURLY          reduce using rule 18 (ciclo_while -> WHILE saw_while cond2 THEN bloque_ciclo SEMICOLON saw_while_end .)
    FUNCTION        reduce using rule 18 (ciclo_while -> WHILE saw_while cond2 THEN bloque_ciclo SEMICOLON saw_while_end .)
    CLASS           reduce using rule 18 (ciclo_while -> WHILE saw_while cond2 THEN bloque_ciclo SEMICOLON saw_while_end .)
    VAR             reduce using rule 18 (ciclo_while -> WHILE saw_while cond2 THEN bloque_ciclo SEMICOLON saw_while_end .)
    OPAREN          reduce using rule 18 (ciclo_while -> WHILE saw_while cond2 THEN bloque_ciclo SEMICOLON saw_while_end .)
    CSTINT          reduce using rule 18 (ciclo_while -> WHILE saw_while cond2 THEN bloque_ciclo SEMICOLON saw_while_end .)
    CSTFLT          reduce using rule 18 (ciclo_while -> WHILE saw_while cond2 THEN bloque_ciclo SEMICOLON saw_while_end .)
    CSTCHAR         reduce using rule 18 (ciclo_while -> WHILE saw_while cond2 THEN bloque_ciclo SEMICOLON saw_while_end .)
    CSTSTRING       reduce using rule 18 (ciclo_while -> WHILE saw_while cond2 THEN bloque_ciclo SEMICOLON saw_while_end .)
    TRUE            reduce using rule 18 (ciclo_while -> WHILE saw_while cond2 THEN bloque_ciclo SEMICOLON saw_while_end .)
    FALSE           reduce using rule 18 (ciclo_while -> WHILE saw_while cond2 THEN bloque_ciclo SEMICOLON saw_while_end .)
    CCURLY          reduce using rule 18 (ciclo_while -> WHILE saw_while cond2 THEN bloque_ciclo SEMICOLON saw_while_end .)


state 289

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 . BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON

    BY              shift and go to state 304


state 290

    (3) funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param . CPAREN bloque

    CPAREN          shift and go to state 305


state 291

    (6) param -> param2 . param1
    (8) param1 -> . COMMA param2 param1
    (9) param1 -> . empty
    (134) empty -> .

    COMMA           shift and go to state 307
    CPAREN          reduce using rule 134 (empty -> .)

    param1                         shift and go to state 306
    empty                          shift and go to state 308

state 292

    (7) param -> empty .

    CPAREN          reduce using rule 7 (param -> empty .)


state 293

    (10) param2 -> simple . ID saw_id saw_variable_param

    ID              shift and go to state 309


state 294

    (11) param2 -> multiple . ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable_param

    ID              shift and go to state 310


state 295

    (12) clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .

    ID              reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    IF              reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    PRINT           reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    READ            reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    WHILE           reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    FOR             reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    OCURLY          reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    FUNCTION        reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    CLASS           reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    VAR             reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    OPAREN          reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    CSTINT          reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    CSTFLT          reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    CSTCHAR         reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    CSTSTRING       reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    TRUE            reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    FALSE           reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    CCURLY          reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)


state 296

    (13) clase_bloque -> OCURLY ATTRIBUTES . COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY

    COLON           shift and go to state 311


state 297

    (28) tipo1 -> COMMA ID saw_id . saw_variable tipo1
    (138) saw_variable -> .

    COMMA           reduce using rule 138 (saw_variable -> .)
    SEMICOLON       reduce using rule 138 (saw_variable -> .)

    saw_variable                   shift and go to state 312

state 298

    (27) tipo -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension . tipo3 saw_variable tipo2
    (32) tipo3 -> . OBRACKET CSTINT CBRACKET saw_dimension
    (33) tipo3 -> . empty
    (134) empty -> .

    OBRACKET        shift and go to state 313
    COMMA           reduce using rule 134 (empty -> .)
    SEMICOLON       reduce using rule 134 (empty -> .)

    tipo3                          shift and go to state 314
    empty                          shift and go to state 315

state 299

    (94) variable1 -> OBRACKET exp . CBRACKET saw_dimension

    CBRACKET        shift and go to state 316


state 300

    (92) variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .

    AS              reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    MULT            reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    DIV             reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    PLUS            reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    MINUS           reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    LT              reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    GT              reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    GTE             reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    LTE             reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    EQ              reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    NE              reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    AND             reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    OR              reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    QUESTION        reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    CPAREN          reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    FROM            reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    COMMA           reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    CBRACKET        reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    ID              reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    IF              reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    PRINT           reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    READ            reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    WHILE           reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    FOR             reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    OCURLY          reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    FUNCTION        reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    CLASS           reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    VAR             reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    OPAREN          reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    CSTINT          reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    CSTFLT          reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    CSTCHAR         reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    CSTSTRING       reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    TRUE            reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    FALSE           reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    CCURLY          reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    COLON           reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    SEMICOLON       reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    TO              reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    BY              reduce using rule 92 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)


state 301

    (97) variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET . saw_dimension variable1
    (140) saw_dimension -> .

    OBRACKET        reduce using rule 140 (saw_dimension -> .)
    AS              reduce using rule 140 (saw_dimension -> .)
    MULT            reduce using rule 140 (saw_dimension -> .)
    DIV             reduce using rule 140 (saw_dimension -> .)
    PLUS            reduce using rule 140 (saw_dimension -> .)
    MINUS           reduce using rule 140 (saw_dimension -> .)
    LT              reduce using rule 140 (saw_dimension -> .)
    GT              reduce using rule 140 (saw_dimension -> .)
    GTE             reduce using rule 140 (saw_dimension -> .)
    LTE             reduce using rule 140 (saw_dimension -> .)
    EQ              reduce using rule 140 (saw_dimension -> .)
    NE              reduce using rule 140 (saw_dimension -> .)
    AND             reduce using rule 140 (saw_dimension -> .)
    OR              reduce using rule 140 (saw_dimension -> .)
    QUESTION        reduce using rule 140 (saw_dimension -> .)
    CPAREN          reduce using rule 140 (saw_dimension -> .)
    COMMA           reduce using rule 140 (saw_dimension -> .)
    CBRACKET        reduce using rule 140 (saw_dimension -> .)
    ID              reduce using rule 140 (saw_dimension -> .)
    IF              reduce using rule 140 (saw_dimension -> .)
    PRINT           reduce using rule 140 (saw_dimension -> .)
    READ            reduce using rule 140 (saw_dimension -> .)
    WHILE           reduce using rule 140 (saw_dimension -> .)
    FOR             reduce using rule 140 (saw_dimension -> .)
    OCURLY          reduce using rule 140 (saw_dimension -> .)
    FUNCTION        reduce using rule 140 (saw_dimension -> .)
    CLASS           reduce using rule 140 (saw_dimension -> .)
    VAR             reduce using rule 140 (saw_dimension -> .)
    OPAREN          reduce using rule 140 (saw_dimension -> .)
    CSTINT          reduce using rule 140 (saw_dimension -> .)
    CSTFLT          reduce using rule 140 (saw_dimension -> .)
    CSTCHAR         reduce using rule 140 (saw_dimension -> .)
    CSTSTRING       reduce using rule 140 (saw_dimension -> .)
    TRUE            reduce using rule 140 (saw_dimension -> .)
    FALSE           reduce using rule 140 (saw_dimension -> .)
    CCURLY          reduce using rule 140 (saw_dimension -> .)
    COLON           reduce using rule 140 (saw_dimension -> .)
    SEMICOLON       reduce using rule 140 (saw_dimension -> .)
    FROM            reduce using rule 140 (saw_dimension -> .)
    TO              reduce using rule 140 (saw_dimension -> .)
    BY              reduce using rule 140 (saw_dimension -> .)

    saw_dimension                  shift and go to state 317

state 302

    (86) leer -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .

    ID              reduce using rule 86 (leer -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    IF              reduce using rule 86 (leer -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    PRINT           reduce using rule 86 (leer -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    READ            reduce using rule 86 (leer -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    WHILE           reduce using rule 86 (leer -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    FOR             reduce using rule 86 (leer -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    OCURLY          reduce using rule 86 (leer -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    FUNCTION        reduce using rule 86 (leer -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    CLASS           reduce using rule 86 (leer -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    VAR             reduce using rule 86 (leer -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    OPAREN          reduce using rule 86 (leer -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    CSTINT          reduce using rule 86 (leer -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    CSTFLT          reduce using rule 86 (leer -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    CSTCHAR         reduce using rule 86 (leer -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    CSTSTRING       reduce using rule 86 (leer -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    TRUE            reduce using rule 86 (leer -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    FALSE           reduce using rule 86 (leer -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    CCURLY          reduce using rule 86 (leer -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    COLON           reduce using rule 86 (leer -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    SEMICOLON       reduce using rule 86 (leer -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)


state 303

    (87) l1 -> COMMA variable saw_read_exp . e1
    (84) e1 -> . COMMA exp e1
    (85) e1 -> . empty
    (134) empty -> .

    COMMA           shift and go to state 234
    CPAREN          reduce using rule 134 (empty -> .)

    e1                             shift and go to state 318
    empty                          shift and go to state 235

state 304

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY . ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON
    (20) ciclo_for1 -> . CSTINT
    (21) ciclo_for1 -> . variable
    (91) variable -> . ID saw_id saw_called_var
    (92) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (93) variable -> . ID saw_id variable2

    CSTINT          shift and go to state 240
    ID              shift and go to state 151

    variable                       shift and go to state 238
    ciclo_for1                     shift and go to state 319

state 305

    (3) funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN . bloque
    (47) bloque -> . OCURLY b1 CCURLY scope_end

    OCURLY          shift and go to state 7

    bloque                         shift and go to state 320

state 306

    (6) param -> param2 param1 .

    CPAREN          reduce using rule 6 (param -> param2 param1 .)


state 307

    (8) param1 -> COMMA . param2 param1
    (10) param2 -> . simple ID saw_id saw_variable_param
    (11) param2 -> . multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable_param
    (34) simple -> . INT saw_type
    (35) simple -> . FLOAT saw_type
    (36) simple -> . BOOL saw_type
    (37) simple -> . STRING saw_type
    (38) simple -> . CHAR saw_type
    (39) multiple -> . INTS saw_type
    (40) multiple -> . FLOATS saw_type
    (41) multiple -> . BOOLS saw_type
    (42) multiple -> . STRINGS saw_type
    (43) multiple -> . CHARS saw_type

    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    BOOL            shift and go to state 58
    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    INTS            shift and go to state 61
    FLOATS          shift and go to state 62
    BOOLS           shift and go to state 63
    STRINGS         shift and go to state 64
    CHARS           shift and go to state 65

    param2                         shift and go to state 321
    simple                         shift and go to state 293
    multiple                       shift and go to state 294

state 308

    (9) param1 -> empty .

    CPAREN          reduce using rule 9 (param1 -> empty .)


state 309

    (10) param2 -> simple ID . saw_id saw_variable_param
    (137) saw_id -> .

    COMMA           reduce using rule 137 (saw_id -> .)
    CPAREN          reduce using rule 137 (saw_id -> .)

    saw_id                         shift and go to state 322

state 310

    (11) param2 -> multiple ID . saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable_param
    (137) saw_id -> .

    OBRACKET        reduce using rule 137 (saw_id -> .)

    saw_id                         shift and go to state 323

state 311

    (13) clase_bloque -> OCURLY ATTRIBUTES COLON . clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY
    (14) clase_bloque1 -> . dec
    (15) clase_bloque1 -> . empty
    (22) dec -> . VAR tipo SEMICOLON dec1
    (134) empty -> .

    VAR             shift and go to state 8
    METHODS         reduce using rule 134 (empty -> .)

    clase_bloque1                  shift and go to state 324
    dec                            shift and go to state 325
    empty                          shift and go to state 326

state 312

    (28) tipo1 -> COMMA ID saw_id saw_variable . tipo1
    (28) tipo1 -> . COMMA ID saw_id saw_variable tipo1
    (29) tipo1 -> . empty
    (134) empty -> .

    COMMA           shift and go to state 250
    SEMICOLON       reduce using rule 134 (empty -> .)

    tipo1                          shift and go to state 327
    empty                          shift and go to state 251

state 313

    (32) tipo3 -> OBRACKET . CSTINT CBRACKET saw_dimension

    CSTINT          shift and go to state 328


state 314

    (27) tipo -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 . saw_variable tipo2
    (138) saw_variable -> .

    COMMA           reduce using rule 138 (saw_variable -> .)
    SEMICOLON       reduce using rule 138 (saw_variable -> .)

    saw_variable                   shift and go to state 329

state 315

    (33) tipo3 -> empty .

    COMMA           reduce using rule 33 (tipo3 -> empty .)
    SEMICOLON       reduce using rule 33 (tipo3 -> empty .)
    CPAREN          reduce using rule 33 (tipo3 -> empty .)


state 316

    (94) variable1 -> OBRACKET exp CBRACKET . saw_dimension
    (140) saw_dimension -> .

    AS              reduce using rule 140 (saw_dimension -> .)
    MULT            reduce using rule 140 (saw_dimension -> .)
    DIV             reduce using rule 140 (saw_dimension -> .)
    PLUS            reduce using rule 140 (saw_dimension -> .)
    MINUS           reduce using rule 140 (saw_dimension -> .)
    LT              reduce using rule 140 (saw_dimension -> .)
    GT              reduce using rule 140 (saw_dimension -> .)
    GTE             reduce using rule 140 (saw_dimension -> .)
    LTE             reduce using rule 140 (saw_dimension -> .)
    EQ              reduce using rule 140 (saw_dimension -> .)
    NE              reduce using rule 140 (saw_dimension -> .)
    AND             reduce using rule 140 (saw_dimension -> .)
    OR              reduce using rule 140 (saw_dimension -> .)
    QUESTION        reduce using rule 140 (saw_dimension -> .)
    CPAREN          reduce using rule 140 (saw_dimension -> .)
    FROM            reduce using rule 140 (saw_dimension -> .)
    COMMA           reduce using rule 140 (saw_dimension -> .)
    CBRACKET        reduce using rule 140 (saw_dimension -> .)
    ID              reduce using rule 140 (saw_dimension -> .)
    IF              reduce using rule 140 (saw_dimension -> .)
    PRINT           reduce using rule 140 (saw_dimension -> .)
    READ            reduce using rule 140 (saw_dimension -> .)
    WHILE           reduce using rule 140 (saw_dimension -> .)
    FOR             reduce using rule 140 (saw_dimension -> .)
    OCURLY          reduce using rule 140 (saw_dimension -> .)
    FUNCTION        reduce using rule 140 (saw_dimension -> .)
    CLASS           reduce using rule 140 (saw_dimension -> .)
    VAR             reduce using rule 140 (saw_dimension -> .)
    OPAREN          reduce using rule 140 (saw_dimension -> .)
    CSTINT          reduce using rule 140 (saw_dimension -> .)
    CSTFLT          reduce using rule 140 (saw_dimension -> .)
    CSTCHAR         reduce using rule 140 (saw_dimension -> .)
    CSTSTRING       reduce using rule 140 (saw_dimension -> .)
    TRUE            reduce using rule 140 (saw_dimension -> .)
    FALSE           reduce using rule 140 (saw_dimension -> .)
    CCURLY          reduce using rule 140 (saw_dimension -> .)
    COLON           reduce using rule 140 (saw_dimension -> .)
    SEMICOLON       reduce using rule 140 (saw_dimension -> .)
    TO              reduce using rule 140 (saw_dimension -> .)
    BY              reduce using rule 140 (saw_dimension -> .)

    saw_dimension                  shift and go to state 330

state 317

    (97) variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension . variable1
    (94) variable1 -> . OBRACKET exp CBRACKET saw_dimension
    (95) variable1 -> . empty
    (134) empty -> .

    OBRACKET        shift and go to state 278
    AS              reduce using rule 134 (empty -> .)
    MULT            reduce using rule 134 (empty -> .)
    DIV             reduce using rule 134 (empty -> .)
    PLUS            reduce using rule 134 (empty -> .)
    MINUS           reduce using rule 134 (empty -> .)
    LT              reduce using rule 134 (empty -> .)
    GT              reduce using rule 134 (empty -> .)
    GTE             reduce using rule 134 (empty -> .)
    LTE             reduce using rule 134 (empty -> .)
    EQ              reduce using rule 134 (empty -> .)
    NE              reduce using rule 134 (empty -> .)
    AND             reduce using rule 134 (empty -> .)
    OR              reduce using rule 134 (empty -> .)
    QUESTION        reduce using rule 134 (empty -> .)
    CPAREN          reduce using rule 134 (empty -> .)
    COMMA           reduce using rule 134 (empty -> .)
    CBRACKET        reduce using rule 134 (empty -> .)
    ID              reduce using rule 134 (empty -> .)
    IF              reduce using rule 134 (empty -> .)
    PRINT           reduce using rule 134 (empty -> .)
    READ            reduce using rule 134 (empty -> .)
    WHILE           reduce using rule 134 (empty -> .)
    FOR             reduce using rule 134 (empty -> .)
    OCURLY          reduce using rule 134 (empty -> .)
    FUNCTION        reduce using rule 134 (empty -> .)
    CLASS           reduce using rule 134 (empty -> .)
    VAR             reduce using rule 134 (empty -> .)
    OPAREN          reduce using rule 134 (empty -> .)
    CSTINT          reduce using rule 134 (empty -> .)
    CSTFLT          reduce using rule 134 (empty -> .)
    CSTCHAR         reduce using rule 134 (empty -> .)
    CSTSTRING       reduce using rule 134 (empty -> .)
    TRUE            reduce using rule 134 (empty -> .)
    FALSE           reduce using rule 134 (empty -> .)
    CCURLY          reduce using rule 134 (empty -> .)
    COLON           reduce using rule 134 (empty -> .)
    SEMICOLON       reduce using rule 134 (empty -> .)
    FROM            reduce using rule 134 (empty -> .)
    TO              reduce using rule 134 (empty -> .)
    BY              reduce using rule 134 (empty -> .)

    variable1                      shift and go to state 331
    empty                          shift and go to state 280

state 318

    (87) l1 -> COMMA variable saw_read_exp e1 .

    CPAREN          reduce using rule 87 (l1 -> COMMA variable saw_read_exp e1 .)


state 319

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 . CPAREN THEN bloque_ciclo SEMICOLON

    CPAREN          shift and go to state 332


state 320

    (3) funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .

    ID              reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    IF              reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    PRINT           reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    READ            reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    WHILE           reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    FOR             reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    OCURLY          reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    FUNCTION        reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    CLASS           reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    VAR             reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    OPAREN          reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    CSTINT          reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    CSTFLT          reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    CSTCHAR         reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    CSTSTRING       reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    TRUE            reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    FALSE           reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    CCURLY          reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)


state 321

    (8) param1 -> COMMA param2 . param1
    (8) param1 -> . COMMA param2 param1
    (9) param1 -> . empty
    (134) empty -> .

    COMMA           shift and go to state 307
    CPAREN          reduce using rule 134 (empty -> .)

    param1                         shift and go to state 333
    empty                          shift and go to state 308

state 322

    (10) param2 -> simple ID saw_id . saw_variable_param
    (139) saw_variable_param -> .

    COMMA           reduce using rule 139 (saw_variable_param -> .)
    CPAREN          reduce using rule 139 (saw_variable_param -> .)

    saw_variable_param             shift and go to state 334

state 323

    (11) param2 -> multiple ID saw_id . OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable_param

    OBRACKET        shift and go to state 335


state 324

    (13) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 . METHODS COLON clase_metodos_bloque class_scope_end CCURLY

    METHODS         shift and go to state 336


state 325

    (14) clase_bloque1 -> dec .

    METHODS         reduce using rule 14 (clase_bloque1 -> dec .)


state 326

    (15) clase_bloque1 -> empty .

    METHODS         reduce using rule 15 (clase_bloque1 -> empty .)


state 327

    (28) tipo1 -> COMMA ID saw_id saw_variable tipo1 .

    SEMICOLON       reduce using rule 28 (tipo1 -> COMMA ID saw_id saw_variable tipo1 .)


state 328

    (32) tipo3 -> OBRACKET CSTINT . CBRACKET saw_dimension

    CBRACKET        shift and go to state 337


state 329

    (27) tipo -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable . tipo2
    (30) tipo2 -> . COMMA ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable
    (31) tipo2 -> . empty
    (134) empty -> .

    COMMA           shift and go to state 339
    SEMICOLON       reduce using rule 134 (empty -> .)

    tipo2                          shift and go to state 338
    empty                          shift and go to state 340

state 330

    (94) variable1 -> OBRACKET exp CBRACKET saw_dimension .

    AS              reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    MULT            reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    DIV             reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    PLUS            reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    MINUS           reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    LT              reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    GT              reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    GTE             reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    LTE             reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    EQ              reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    NE              reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    AND             reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    OR              reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    QUESTION        reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    CPAREN          reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    FROM            reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    COMMA           reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    CBRACKET        reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    ID              reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    IF              reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    PRINT           reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    READ            reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    WHILE           reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    FOR             reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    OCURLY          reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    FUNCTION        reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    CLASS           reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    VAR             reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    OPAREN          reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    CSTINT          reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    CSTFLT          reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    CSTCHAR         reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    CSTSTRING       reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    TRUE            reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    FALSE           reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    CCURLY          reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    COLON           reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    SEMICOLON       reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    TO              reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    BY              reduce using rule 94 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)


state 331

    (97) variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .

    AS              reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    MULT            reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    DIV             reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    PLUS            reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    MINUS           reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    LT              reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    GT              reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    GTE             reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    LTE             reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    EQ              reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    NE              reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    AND             reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    OR              reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    QUESTION        reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    CPAREN          reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    COMMA           reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    CBRACKET        reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    ID              reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    IF              reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    PRINT           reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    READ            reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    WHILE           reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    FOR             reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    OCURLY          reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    FUNCTION        reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    CLASS           reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    VAR             reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    OPAREN          reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    CSTINT          reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    CSTFLT          reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    CSTCHAR         reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    CSTSTRING       reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    TRUE            reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    FALSE           reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    CCURLY          reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    COLON           reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    SEMICOLON       reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    FROM            reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    TO              reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    BY              reduce using rule 97 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)


state 332

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN . THEN bloque_ciclo SEMICOLON

    THEN            shift and go to state 341


state 333

    (8) param1 -> COMMA param2 param1 .

    CPAREN          reduce using rule 8 (param1 -> COMMA param2 param1 .)


state 334

    (10) param2 -> simple ID saw_id saw_variable_param .

    COMMA           reduce using rule 10 (param2 -> simple ID saw_id saw_variable_param .)
    CPAREN          reduce using rule 10 (param2 -> simple ID saw_id saw_variable_param .)


state 335

    (11) param2 -> multiple ID saw_id OBRACKET . CSTINT CBRACKET saw_dimension tipo3 saw_variable_param

    CSTINT          shift and go to state 342


state 336

    (13) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS . COLON clase_metodos_bloque class_scope_end CCURLY

    COLON           shift and go to state 343


state 337

    (32) tipo3 -> OBRACKET CSTINT CBRACKET . saw_dimension
    (140) saw_dimension -> .

    COMMA           reduce using rule 140 (saw_dimension -> .)
    SEMICOLON       reduce using rule 140 (saw_dimension -> .)
    CPAREN          reduce using rule 140 (saw_dimension -> .)

    saw_dimension                  shift and go to state 344

state 338

    (27) tipo -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable tipo2 .

    SEMICOLON       reduce using rule 27 (tipo -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable tipo2 .)


state 339

    (30) tipo2 -> COMMA . ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable

    ID              shift and go to state 345


state 340

    (31) tipo2 -> empty .

    SEMICOLON       reduce using rule 31 (tipo2 -> empty .)


state 341

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN . bloque_ciclo SEMICOLON
    (50) bloque_ciclo -> . OCURLY bc1 CCURLY

    OCURLY          shift and go to state 187

    bloque_ciclo                   shift and go to state 346

state 342

    (11) param2 -> multiple ID saw_id OBRACKET CSTINT . CBRACKET saw_dimension tipo3 saw_variable_param

    CBRACKET        shift and go to state 347


state 343

    (13) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON . clase_metodos_bloque class_scope_end CCURLY
    (16) clase_metodos_bloque -> . funcion clase_metodos_bloque
    (17) clase_metodos_bloque -> . empty
    (3) funcion -> . FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque
    (134) empty -> .

    FUNCTION        shift and go to state 34
    CCURLY          reduce using rule 134 (empty -> .)

    clase_metodos_bloque           shift and go to state 348
    funcion                        shift and go to state 349
    empty                          shift and go to state 350

state 344

    (32) tipo3 -> OBRACKET CSTINT CBRACKET saw_dimension .

    COMMA           reduce using rule 32 (tipo3 -> OBRACKET CSTINT CBRACKET saw_dimension .)
    SEMICOLON       reduce using rule 32 (tipo3 -> OBRACKET CSTINT CBRACKET saw_dimension .)
    CPAREN          reduce using rule 32 (tipo3 -> OBRACKET CSTINT CBRACKET saw_dimension .)


state 345

    (30) tipo2 -> COMMA ID . saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable
    (137) saw_id -> .

    OBRACKET        reduce using rule 137 (saw_id -> .)

    saw_id                         shift and go to state 351

state 346

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo . SEMICOLON

    SEMICOLON       shift and go to state 352


state 347

    (11) param2 -> multiple ID saw_id OBRACKET CSTINT CBRACKET . saw_dimension tipo3 saw_variable_param
    (140) saw_dimension -> .

    OBRACKET        reduce using rule 140 (saw_dimension -> .)
    COMMA           reduce using rule 140 (saw_dimension -> .)
    CPAREN          reduce using rule 140 (saw_dimension -> .)

    saw_dimension                  shift and go to state 353

state 348

    (13) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque . class_scope_end CCURLY
    (159) class_scope_end -> .

    CCURLY          reduce using rule 159 (class_scope_end -> .)

    class_scope_end                shift and go to state 354

state 349

    (16) clase_metodos_bloque -> funcion . clase_metodos_bloque
    (16) clase_metodos_bloque -> . funcion clase_metodos_bloque
    (17) clase_metodos_bloque -> . empty
    (3) funcion -> . FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque
    (134) empty -> .

    FUNCTION        shift and go to state 34
    CCURLY          reduce using rule 134 (empty -> .)

    funcion                        shift and go to state 349
    clase_metodos_bloque           shift and go to state 355
    empty                          shift and go to state 350

state 350

    (17) clase_metodos_bloque -> empty .

    CCURLY          reduce using rule 17 (clase_metodos_bloque -> empty .)


state 351

    (30) tipo2 -> COMMA ID saw_id . OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable

    OBRACKET        shift and go to state 356


state 352

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON .

    ID              reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON .)
    IF              reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON .)
    PRINT           reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON .)
    READ            reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON .)
    WHILE           reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON .)
    FOR             reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON .)
    OCURLY          reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON .)
    FUNCTION        reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON .)
    CLASS           reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON .)
    VAR             reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON .)
    OPAREN          reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON .)
    CSTINT          reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON .)
    CSTFLT          reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON .)
    CSTCHAR         reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON .)
    CSTSTRING       reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON .)
    TRUE            reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON .)
    FALSE           reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON .)
    CCURLY          reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON .)


state 353

    (11) param2 -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension . tipo3 saw_variable_param
    (32) tipo3 -> . OBRACKET CSTINT CBRACKET saw_dimension
    (33) tipo3 -> . empty
    (134) empty -> .

    OBRACKET        shift and go to state 313
    COMMA           reduce using rule 134 (empty -> .)
    CPAREN          reduce using rule 134 (empty -> .)

    tipo3                          shift and go to state 357
    empty                          shift and go to state 315

state 354

    (13) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end . CCURLY

    CCURLY          shift and go to state 358


state 355

    (16) clase_metodos_bloque -> funcion clase_metodos_bloque .

    CCURLY          reduce using rule 16 (clase_metodos_bloque -> funcion clase_metodos_bloque .)


state 356

    (30) tipo2 -> COMMA ID saw_id OBRACKET . CSTINT CBRACKET saw_dimension tipo3 saw_variable

    CSTINT          shift and go to state 359


state 357

    (11) param2 -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 . saw_variable_param
    (139) saw_variable_param -> .

    COMMA           reduce using rule 139 (saw_variable_param -> .)
    CPAREN          reduce using rule 139 (saw_variable_param -> .)

    saw_variable_param             shift and go to state 360

state 358

    (13) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY .

    SEMICOLON       reduce using rule 13 (clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY .)


state 359

    (30) tipo2 -> COMMA ID saw_id OBRACKET CSTINT . CBRACKET saw_dimension tipo3 saw_variable

    CBRACKET        shift and go to state 361


state 360

    (11) param2 -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable_param .

    COMMA           reduce using rule 11 (param2 -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable_param .)
    CPAREN          reduce using rule 11 (param2 -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable_param .)


state 361

    (30) tipo2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET . saw_dimension tipo3 saw_variable
    (140) saw_dimension -> .

    OBRACKET        reduce using rule 140 (saw_dimension -> .)
    SEMICOLON       reduce using rule 140 (saw_dimension -> .)

    saw_dimension                  shift and go to state 362

state 362

    (30) tipo2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET saw_dimension . tipo3 saw_variable
    (32) tipo3 -> . OBRACKET CSTINT CBRACKET saw_dimension
    (33) tipo3 -> . empty
    (134) empty -> .

    OBRACKET        shift and go to state 313
    SEMICOLON       reduce using rule 134 (empty -> .)

    tipo3                          shift and go to state 363
    empty                          shift and go to state 315

state 363

    (30) tipo2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 . saw_variable
    (138) saw_variable -> .

    SEMICOLON       reduce using rule 138 (saw_variable -> .)

    saw_variable                   shift and go to state 364

state 364

    (30) tipo2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable .

    SEMICOLON       reduce using rule 30 (tipo2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 110 resolved as shift
WARNING: shift/reduce conflict for OPAREN in state 185 resolved as shift
