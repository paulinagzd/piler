Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID saw_id saw_program SEMICOLON bloque
Rule 2     programa -> PROGRAM ID saw_id saw_program SEMICOLON dec bloque
Rule 3     funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque
Rule 4     func1 -> simple
Rule 5     func1 -> VOID saw_type
Rule 6     param -> param2 param1
Rule 7     param -> empty
Rule 8     param1 -> COMMA param2 param1
Rule 9     param1 -> empty
Rule 10    param2 -> simple ID saw_id_param
Rule 11    param2 -> multiple ID saw_id_param variable1 variable1
Rule 12    clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON
Rule 13    clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY
Rule 14    clase_bloque1 -> dec
Rule 15    clase_bloque1 -> empty
Rule 16    clase_metodos_bloque -> funcion clase_metodos_bloque
Rule 17    clase_metodos_bloque -> empty
Rule 18    ciclo_while -> WHILE cond2 THEN bloque SEMICOLON
Rule 19    ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
Rule 20    ciclo_for1 -> CSTINT
Rule 21    ciclo_for1 -> variable
Rule 22    dec -> VAR tipo SEMICOLON dec1
Rule 23    dec1 -> dec
Rule 24    dec1 -> empty
Rule 25    tipo -> compuesto ID saw_id saw_variable tipo1
Rule 26    tipo -> simple ID saw_id saw_variable tipo1
Rule 27    tipo -> multiple ID saw_id saw_variable OBRACKET CSTINT CBRACKET tipo3 tipo2
Rule 28    tipo1 -> COMMA ID saw_id saw_variable tipo1
Rule 29    tipo1 -> empty
Rule 30    tipo2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET tipo3
Rule 31    tipo2 -> empty
Rule 32    tipo3 -> OBRACKET CSTINT CBRACKET
Rule 33    tipo3 -> empty
Rule 34    simple -> INT saw_type
Rule 35    simple -> FLOAT saw_type
Rule 36    simple -> BOOL saw_type
Rule 37    simple -> STRING saw_type
Rule 38    simple -> CHAR saw_type
Rule 39    multiple -> INTS saw_type
Rule 40    multiple -> FLOATS saw_type
Rule 41    multiple -> BOOLS saw_type
Rule 42    multiple -> STRINGS saw_type
Rule 43    multiple -> CHARS saw_type
Rule 44    compuesto -> ID saw_type
Rule 45    compuesto -> DATAFRAME saw_type
Rule 46    compuesto -> FILE saw_type
Rule 47    bloque -> OCURLY b1 CCURLY scope_end
Rule 48    b1 -> estatuto b1
Rule 49    b1 -> empty
Rule 50    estatuto -> asignacion
Rule 51    estatuto -> llamada
Rule 52    estatuto -> condicion
Rule 53    estatuto -> escritura
Rule 54    estatuto -> leer
Rule 55    estatuto -> ciclo_while
Rule 56    estatuto -> ciclo_for
Rule 57    estatuto -> ternaria
Rule 58    estatuto -> bloque
Rule 59    estatuto -> funcion
Rule 60    estatuto -> clase
Rule 61    estatuto -> dec
Rule 62    estatuto -> RETURN exp
Rule 63    estatuto_redux -> asignacion
Rule 64    estatuto_redux -> llamada
Rule 65    estatuto_redux -> escritura
Rule 66    estatuto_redux -> leer
Rule 67    estatuto_redux -> ternaria
Rule 68    asignacion -> variable AS exp saw_asig
Rule 69    condicion -> IF cond2 THEN bloque cond1 SEMICOLON
Rule 70    cond1 -> ELSE bloque
Rule 71    cond1 -> ELSE IF cond2 THEN bloque cond1
Rule 72    cond1 -> empty
Rule 73    cond2 -> OPAREN exp CPAREN
Rule 74    ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON
Rule 75    escritura -> PRINT OPAREN exp e1 CPAREN
Rule 76    e1 -> COMMA exp e1
Rule 77    e1 -> empty
Rule 78    leer -> READ OPAREN exp e1 CPAREN
Rule 79    boolean -> TRUE
Rule 80    boolean -> FALSE
Rule 81    variable -> ID saw_id variable1 variable1 variable2
Rule 82    variable1 -> OBRACKET exp CBRACKET
Rule 83    variable1 -> empty
Rule 84    variable2 -> PERIOD ID saw_id variable1 variable1 variable2
Rule 85    variable2 -> empty
Rule 86    llamada -> ID saw_id OPAREN exp llamada1 CPAREN
Rule 87    llamada -> ID saw_id OPAREN CPAREN
Rule 88    llamada1 -> COMMA exp llamada1
Rule 89    llamada1 -> empty
Rule 90    exp -> texp exp1
Rule 91    exp1 -> OR texp exp1
Rule 92    exp1 -> empty
Rule 93    texp -> gexp texp1
Rule 94    texp1 -> AND gexp texp1
Rule 95    texp1 -> empty
Rule 96    gexp -> mexp gexp1
Rule 97    gexp1 -> LT mexp
Rule 98    gexp1 -> GT mexp
Rule 99    gexp1 -> GTE mexp
Rule 100   gexp1 -> LTE mexp
Rule 101   gexp1 -> EQ mexp
Rule 102   gexp1 -> NE mexp
Rule 103   gexp1 -> empty
Rule 104   mexp -> termino mexp1
Rule 105   mexp1 -> PLUS termino mexp1
Rule 106   mexp1 -> MINUS termino mexp1
Rule 107   mexp1 -> empty
Rule 108   termino -> factor term1
Rule 109   term1 -> MULT factor term1
Rule 110   term1 -> DIV factor term1
Rule 111   term1 -> empty
Rule 112   factor -> OPAREN exp CPAREN
Rule 113   factor -> varcst
Rule 114   factor -> variable
Rule 115   factor -> llamada
Rule 116   varcst -> CSTINT
Rule 117   varcst -> CSTFLT
Rule 118   varcst -> CSTCHAR
Rule 119   varcst -> CSTSTRING
Rule 120   varcst -> boolean
Rule 121   empty -> <empty>
Rule 122   saw_program -> <empty>
Rule 123   saw_class -> <empty>
Rule 124   saw_type -> <empty>
Rule 125   saw_id -> <empty>
Rule 126   saw_id_param -> <empty>
Rule 127   saw_variable -> <empty>
Rule 128   saw_asig -> <empty>
Rule 129   saw_function -> <empty>
Rule 130   scope_start -> <empty>
Rule 131   scope_end -> <empty>
Rule 132   class_scope_start -> <empty>
Rule 133   class_scope_end -> <empty>

Terminals, with rules where they appear

AND                  : 94
AS                   : 68
ATTRIBUTES           : 13
BOOL                 : 36
BOOLS                : 41
BY                   : 19
CBRACKET             : 27 30 32 82
CCURLY               : 13 47
CHAR                 : 38
CHARS                : 43
CLASS                : 12
COLON                : 12 13 13 74
COMMA                : 8 28 30 76 88
COMMENT              : 
CPAREN               : 3 19 73 75 78 86 87 112
CSTCHAR              : 118
CSTFLT               : 117
CSTINT               : 20 27 30 32 116
CSTSTRING            : 119
DATAFRAME            : 45
DIV                  : 110
ELSE                 : 70 71
EQ                   : 101
FALSE                : 80
FILE                 : 46
FLOAT                : 35
FLOATS               : 40
FOR                  : 19
FROM                 : 19
FUNCTION             : 3
GT                   : 98
GTE                  : 99
ID                   : 1 2 3 10 11 12 25 26 27 28 30 44 81 84 86 87
IF                   : 69 71
INT                  : 34
INTS                 : 39
LT                   : 97
LTE                  : 100
METHODS              : 13
MINUS                : 106
MULT                 : 109
NE                   : 102
OBRACKET             : 27 30 32 82
OCURLY               : 13 47
OPAREN               : 3 19 73 75 78 86 87 112
OR                   : 91
PERIOD               : 84
PLUS                 : 105
PRINT                : 75
PROGRAM              : 1 2
QUESTION             : 74
READ                 : 78
RETURN               : 62
SEMICOLON            : 1 2 12 18 19 22 69 74
STRING               : 37
STRINGS              : 42
THEN                 : 18 19 69 71
TO                   : 19
TRUE                 : 79
VAR                  : 22
VOID                 : 5
WHILE                : 18
error                : 

Nonterminals, with rules where they appear

asignacion           : 50 63
b1                   : 47 48
bloque               : 1 2 3 18 19 58 69 70 71
boolean              : 120
ciclo_for            : 56
ciclo_for1           : 19 19 19
ciclo_while          : 55
clase                : 60
clase_bloque         : 12
clase_bloque1        : 13
clase_metodos_bloque : 13 16
class_scope_end      : 13
class_scope_start    : 
compuesto            : 25
cond1                : 69 71
cond2                : 18 69 71
condicion            : 52
dec                  : 2 14 23 61
dec1                 : 22
e1                   : 75 76 78
empty                : 7 9 15 17 24 29 31 33 49 72 77 83 85 89 92 95 103 107 111
escritura            : 53 65
estatuto             : 48
estatuto_redux       : 74 74
exp                  : 62 68 73 74 75 76 78 82 86 88 112
exp1                 : 90 91
factor               : 108 109 110
func1                : 3
funcion              : 16 59
gexp                 : 93 94
gexp1                : 96
leer                 : 54 66
llamada              : 51 64 115
llamada1             : 86 88
mexp                 : 96 97 98 99 100 101 102
mexp1                : 104 105 106
multiple             : 11 27
param                : 3
param1               : 6 8
param2               : 6 8
programa             : 0
saw_asig             : 68
saw_class            : 12
saw_function         : 3
saw_id               : 1 2 3 12 25 26 27 28 30 81 84 86 87
saw_id_param         : 10 11
saw_program          : 1 2
saw_type             : 5 34 35 36 37 38 39 40 41 42 43 44 45 46
saw_variable         : 25 26 27 28
scope_end            : 47
scope_start          : 
simple               : 4 10 26
term1                : 108 109 110
termino              : 104 105 106
ternaria             : 57 67
texp                 : 90 91
texp1                : 93 94
tipo                 : 22
tipo1                : 25 26 28
tipo2                : 27
tipo3                : 27 30
varcst               : 113
variable             : 19 21 68 114
variable1            : 11 11 81 81 84 84
variable2            : 81 84

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID saw_id saw_program SEMICOLON bloque
    (2) programa -> . PROGRAM ID saw_id saw_program SEMICOLON dec bloque

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID saw_id saw_program SEMICOLON bloque
    (2) programa -> PROGRAM . ID saw_id saw_program SEMICOLON dec bloque

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . saw_id saw_program SEMICOLON bloque
    (2) programa -> PROGRAM ID . saw_id saw_program SEMICOLON dec bloque
    (125) saw_id -> .

    SEMICOLON       reduce using rule 125 (saw_id -> .)

    saw_id                         shift and go to state 4

state 4

    (1) programa -> PROGRAM ID saw_id . saw_program SEMICOLON bloque
    (2) programa -> PROGRAM ID saw_id . saw_program SEMICOLON dec bloque
    (122) saw_program -> .

    SEMICOLON       reduce using rule 122 (saw_program -> .)

    saw_program                    shift and go to state 5

state 5

    (1) programa -> PROGRAM ID saw_id saw_program . SEMICOLON bloque
    (2) programa -> PROGRAM ID saw_id saw_program . SEMICOLON dec bloque

    SEMICOLON       shift and go to state 6


state 6

    (1) programa -> PROGRAM ID saw_id saw_program SEMICOLON . bloque
    (2) programa -> PROGRAM ID saw_id saw_program SEMICOLON . dec bloque
    (47) bloque -> . OCURLY b1 CCURLY scope_end
    (22) dec -> . VAR tipo SEMICOLON dec1

    OCURLY          shift and go to state 9
    VAR             shift and go to state 10

    bloque                         shift and go to state 7
    dec                            shift and go to state 8

state 7

    (1) programa -> PROGRAM ID saw_id saw_program SEMICOLON bloque .

    $end            reduce using rule 1 (programa -> PROGRAM ID saw_id saw_program SEMICOLON bloque .)


state 8

    (2) programa -> PROGRAM ID saw_id saw_program SEMICOLON dec . bloque
    (47) bloque -> . OCURLY b1 CCURLY scope_end

    OCURLY          shift and go to state 9

    bloque                         shift and go to state 11

state 9

    (47) bloque -> OCURLY . b1 CCURLY scope_end
    (48) b1 -> . estatuto b1
    (49) b1 -> . empty
    (50) estatuto -> . asignacion
    (51) estatuto -> . llamada
    (52) estatuto -> . condicion
    (53) estatuto -> . escritura
    (54) estatuto -> . leer
    (55) estatuto -> . ciclo_while
    (56) estatuto -> . ciclo_for
    (57) estatuto -> . ternaria
    (58) estatuto -> . bloque
    (59) estatuto -> . funcion
    (60) estatuto -> . clase
    (61) estatuto -> . dec
    (62) estatuto -> . RETURN exp
    (121) empty -> .
    (68) asignacion -> . variable AS exp saw_asig
    (86) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (87) llamada -> . ID saw_id OPAREN CPAREN
    (69) condicion -> . IF cond2 THEN bloque cond1 SEMICOLON
    (75) escritura -> . PRINT OPAREN exp e1 CPAREN
    (78) leer -> . READ OPAREN exp e1 CPAREN
    (18) ciclo_while -> . WHILE cond2 THEN bloque SEMICOLON
    (19) ciclo_for -> . FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
    (74) ternaria -> . exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON
    (47) bloque -> . OCURLY b1 CCURLY scope_end
    (3) funcion -> . FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque
    (12) clase -> . CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON
    (22) dec -> . VAR tipo SEMICOLON dec1
    (81) variable -> . ID saw_id variable1 variable1 variable2
    (90) exp -> . texp exp1
    (93) texp -> . gexp texp1
    (96) gexp -> . mexp gexp1
    (104) mexp -> . termino mexp1
    (108) termino -> . factor term1
    (112) factor -> . OPAREN exp CPAREN
    (113) factor -> . varcst
    (114) factor -> . variable
    (115) factor -> . llamada
    (116) varcst -> . CSTINT
    (117) varcst -> . CSTFLT
    (118) varcst -> . CSTCHAR
    (119) varcst -> . CSTSTRING
    (120) varcst -> . boolean
    (79) boolean -> . TRUE
    (80) boolean -> . FALSE

    RETURN          shift and go to state 27
    CCURLY          reduce using rule 121 (empty -> .)
    ID              shift and go to state 30
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    READ            shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    OCURLY          shift and go to state 9
    FUNCTION        shift and go to state 37
    CLASS           shift and go to state 38
    VAR             shift and go to state 10
    OPAREN          shift and go to state 31
    CSTINT          shift and go to state 45
    CSTFLT          shift and go to state 46
    CSTCHAR         shift and go to state 47
    CSTSTRING       shift and go to state 48
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    b1                             shift and go to state 12
    estatuto                       shift and go to state 13
    empty                          shift and go to state 14
    asignacion                     shift and go to state 15
    llamada                        shift and go to state 16
    condicion                      shift and go to state 17
    escritura                      shift and go to state 18
    leer                           shift and go to state 19
    ciclo_while                    shift and go to state 20
    ciclo_for                      shift and go to state 21
    ternaria                       shift and go to state 22
    bloque                         shift and go to state 23
    funcion                        shift and go to state 24
    clase                          shift and go to state 25
    dec                            shift and go to state 26
    exp                            shift and go to state 28
    variable                       shift and go to state 29
    texp                           shift and go to state 39
    gexp                           shift and go to state 40
    mexp                           shift and go to state 41
    termino                        shift and go to state 42
    factor                         shift and go to state 43
    varcst                         shift and go to state 44
    boolean                        shift and go to state 49

state 10

    (22) dec -> VAR . tipo SEMICOLON dec1
    (25) tipo -> . compuesto ID saw_id saw_variable tipo1
    (26) tipo -> . simple ID saw_id saw_variable tipo1
    (27) tipo -> . multiple ID saw_id saw_variable OBRACKET CSTINT CBRACKET tipo3 tipo2
    (44) compuesto -> . ID saw_type
    (45) compuesto -> . DATAFRAME saw_type
    (46) compuesto -> . FILE saw_type
    (34) simple -> . INT saw_type
    (35) simple -> . FLOAT saw_type
    (36) simple -> . BOOL saw_type
    (37) simple -> . STRING saw_type
    (38) simple -> . CHAR saw_type
    (39) multiple -> . INTS saw_type
    (40) multiple -> . FLOATS saw_type
    (41) multiple -> . BOOLS saw_type
    (42) multiple -> . STRINGS saw_type
    (43) multiple -> . CHARS saw_type

    ID              shift and go to state 54
    DATAFRAME       shift and go to state 57
    FILE            shift and go to state 58
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    BOOL            shift and go to state 61
    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    INTS            shift and go to state 64
    FLOATS          shift and go to state 65
    BOOLS           shift and go to state 66
    STRINGS         shift and go to state 67
    CHARS           shift and go to state 68

    tipo                           shift and go to state 52
    compuesto                      shift and go to state 53
    simple                         shift and go to state 55
    multiple                       shift and go to state 56

state 11

    (2) programa -> PROGRAM ID saw_id saw_program SEMICOLON dec bloque .

    $end            reduce using rule 2 (programa -> PROGRAM ID saw_id saw_program SEMICOLON dec bloque .)


state 12

    (47) bloque -> OCURLY b1 . CCURLY scope_end

    CCURLY          shift and go to state 69


state 13

    (48) b1 -> estatuto . b1
    (48) b1 -> . estatuto b1
    (49) b1 -> . empty
    (50) estatuto -> . asignacion
    (51) estatuto -> . llamada
    (52) estatuto -> . condicion
    (53) estatuto -> . escritura
    (54) estatuto -> . leer
    (55) estatuto -> . ciclo_while
    (56) estatuto -> . ciclo_for
    (57) estatuto -> . ternaria
    (58) estatuto -> . bloque
    (59) estatuto -> . funcion
    (60) estatuto -> . clase
    (61) estatuto -> . dec
    (62) estatuto -> . RETURN exp
    (121) empty -> .
    (68) asignacion -> . variable AS exp saw_asig
    (86) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (87) llamada -> . ID saw_id OPAREN CPAREN
    (69) condicion -> . IF cond2 THEN bloque cond1 SEMICOLON
    (75) escritura -> . PRINT OPAREN exp e1 CPAREN
    (78) leer -> . READ OPAREN exp e1 CPAREN
    (18) ciclo_while -> . WHILE cond2 THEN bloque SEMICOLON
    (19) ciclo_for -> . FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
    (74) ternaria -> . exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON
    (47) bloque -> . OCURLY b1 CCURLY scope_end
    (3) funcion -> . FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque
    (12) clase -> . CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON
    (22) dec -> . VAR tipo SEMICOLON dec1
    (81) variable -> . ID saw_id variable1 variable1 variable2
    (90) exp -> . texp exp1
    (93) texp -> . gexp texp1
    (96) gexp -> . mexp gexp1
    (104) mexp -> . termino mexp1
    (108) termino -> . factor term1
    (112) factor -> . OPAREN exp CPAREN
    (113) factor -> . varcst
    (114) factor -> . variable
    (115) factor -> . llamada
    (116) varcst -> . CSTINT
    (117) varcst -> . CSTFLT
    (118) varcst -> . CSTCHAR
    (119) varcst -> . CSTSTRING
    (120) varcst -> . boolean
    (79) boolean -> . TRUE
    (80) boolean -> . FALSE

    RETURN          shift and go to state 27
    CCURLY          reduce using rule 121 (empty -> .)
    ID              shift and go to state 30
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    READ            shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    OCURLY          shift and go to state 9
    FUNCTION        shift and go to state 37
    CLASS           shift and go to state 38
    VAR             shift and go to state 10
    OPAREN          shift and go to state 31
    CSTINT          shift and go to state 45
    CSTFLT          shift and go to state 46
    CSTCHAR         shift and go to state 47
    CSTSTRING       shift and go to state 48
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    estatuto                       shift and go to state 13
    b1                             shift and go to state 70
    empty                          shift and go to state 14
    asignacion                     shift and go to state 15
    llamada                        shift and go to state 16
    condicion                      shift and go to state 17
    escritura                      shift and go to state 18
    leer                           shift and go to state 19
    ciclo_while                    shift and go to state 20
    ciclo_for                      shift and go to state 21
    ternaria                       shift and go to state 22
    bloque                         shift and go to state 23
    funcion                        shift and go to state 24
    clase                          shift and go to state 25
    dec                            shift and go to state 26
    exp                            shift and go to state 28
    variable                       shift and go to state 29
    texp                           shift and go to state 39
    gexp                           shift and go to state 40
    mexp                           shift and go to state 41
    termino                        shift and go to state 42
    factor                         shift and go to state 43
    varcst                         shift and go to state 44
    boolean                        shift and go to state 49

state 14

    (49) b1 -> empty .

    CCURLY          reduce using rule 49 (b1 -> empty .)


state 15

    (50) estatuto -> asignacion .

    RETURN          reduce using rule 50 (estatuto -> asignacion .)
    ID              reduce using rule 50 (estatuto -> asignacion .)
    IF              reduce using rule 50 (estatuto -> asignacion .)
    PRINT           reduce using rule 50 (estatuto -> asignacion .)
    READ            reduce using rule 50 (estatuto -> asignacion .)
    WHILE           reduce using rule 50 (estatuto -> asignacion .)
    FOR             reduce using rule 50 (estatuto -> asignacion .)
    OCURLY          reduce using rule 50 (estatuto -> asignacion .)
    FUNCTION        reduce using rule 50 (estatuto -> asignacion .)
    CLASS           reduce using rule 50 (estatuto -> asignacion .)
    VAR             reduce using rule 50 (estatuto -> asignacion .)
    OPAREN          reduce using rule 50 (estatuto -> asignacion .)
    CSTINT          reduce using rule 50 (estatuto -> asignacion .)
    CSTFLT          reduce using rule 50 (estatuto -> asignacion .)
    CSTCHAR         reduce using rule 50 (estatuto -> asignacion .)
    CSTSTRING       reduce using rule 50 (estatuto -> asignacion .)
    TRUE            reduce using rule 50 (estatuto -> asignacion .)
    FALSE           reduce using rule 50 (estatuto -> asignacion .)
    CCURLY          reduce using rule 50 (estatuto -> asignacion .)


state 16

    (51) estatuto -> llamada .
    (115) factor -> llamada .

    RETURN          reduce using rule 51 (estatuto -> llamada .)
    ID              reduce using rule 51 (estatuto -> llamada .)
    IF              reduce using rule 51 (estatuto -> llamada .)
    PRINT           reduce using rule 51 (estatuto -> llamada .)
    READ            reduce using rule 51 (estatuto -> llamada .)
    WHILE           reduce using rule 51 (estatuto -> llamada .)
    FOR             reduce using rule 51 (estatuto -> llamada .)
    OCURLY          reduce using rule 51 (estatuto -> llamada .)
    FUNCTION        reduce using rule 51 (estatuto -> llamada .)
    CLASS           reduce using rule 51 (estatuto -> llamada .)
    VAR             reduce using rule 51 (estatuto -> llamada .)
    OPAREN          reduce using rule 51 (estatuto -> llamada .)
    CSTINT          reduce using rule 51 (estatuto -> llamada .)
    CSTFLT          reduce using rule 51 (estatuto -> llamada .)
    CSTCHAR         reduce using rule 51 (estatuto -> llamada .)
    CSTSTRING       reduce using rule 51 (estatuto -> llamada .)
    TRUE            reduce using rule 51 (estatuto -> llamada .)
    FALSE           reduce using rule 51 (estatuto -> llamada .)
    CCURLY          reduce using rule 51 (estatuto -> llamada .)
    MULT            reduce using rule 115 (factor -> llamada .)
    DIV             reduce using rule 115 (factor -> llamada .)
    PLUS            reduce using rule 115 (factor -> llamada .)
    MINUS           reduce using rule 115 (factor -> llamada .)
    LT              reduce using rule 115 (factor -> llamada .)
    GT              reduce using rule 115 (factor -> llamada .)
    GTE             reduce using rule 115 (factor -> llamada .)
    LTE             reduce using rule 115 (factor -> llamada .)
    EQ              reduce using rule 115 (factor -> llamada .)
    NE              reduce using rule 115 (factor -> llamada .)
    AND             reduce using rule 115 (factor -> llamada .)
    OR              reduce using rule 115 (factor -> llamada .)
    QUESTION        reduce using rule 115 (factor -> llamada .)


state 17

    (52) estatuto -> condicion .

    RETURN          reduce using rule 52 (estatuto -> condicion .)
    ID              reduce using rule 52 (estatuto -> condicion .)
    IF              reduce using rule 52 (estatuto -> condicion .)
    PRINT           reduce using rule 52 (estatuto -> condicion .)
    READ            reduce using rule 52 (estatuto -> condicion .)
    WHILE           reduce using rule 52 (estatuto -> condicion .)
    FOR             reduce using rule 52 (estatuto -> condicion .)
    OCURLY          reduce using rule 52 (estatuto -> condicion .)
    FUNCTION        reduce using rule 52 (estatuto -> condicion .)
    CLASS           reduce using rule 52 (estatuto -> condicion .)
    VAR             reduce using rule 52 (estatuto -> condicion .)
    OPAREN          reduce using rule 52 (estatuto -> condicion .)
    CSTINT          reduce using rule 52 (estatuto -> condicion .)
    CSTFLT          reduce using rule 52 (estatuto -> condicion .)
    CSTCHAR         reduce using rule 52 (estatuto -> condicion .)
    CSTSTRING       reduce using rule 52 (estatuto -> condicion .)
    TRUE            reduce using rule 52 (estatuto -> condicion .)
    FALSE           reduce using rule 52 (estatuto -> condicion .)
    CCURLY          reduce using rule 52 (estatuto -> condicion .)


state 18

    (53) estatuto -> escritura .

    RETURN          reduce using rule 53 (estatuto -> escritura .)
    ID              reduce using rule 53 (estatuto -> escritura .)
    IF              reduce using rule 53 (estatuto -> escritura .)
    PRINT           reduce using rule 53 (estatuto -> escritura .)
    READ            reduce using rule 53 (estatuto -> escritura .)
    WHILE           reduce using rule 53 (estatuto -> escritura .)
    FOR             reduce using rule 53 (estatuto -> escritura .)
    OCURLY          reduce using rule 53 (estatuto -> escritura .)
    FUNCTION        reduce using rule 53 (estatuto -> escritura .)
    CLASS           reduce using rule 53 (estatuto -> escritura .)
    VAR             reduce using rule 53 (estatuto -> escritura .)
    OPAREN          reduce using rule 53 (estatuto -> escritura .)
    CSTINT          reduce using rule 53 (estatuto -> escritura .)
    CSTFLT          reduce using rule 53 (estatuto -> escritura .)
    CSTCHAR         reduce using rule 53 (estatuto -> escritura .)
    CSTSTRING       reduce using rule 53 (estatuto -> escritura .)
    TRUE            reduce using rule 53 (estatuto -> escritura .)
    FALSE           reduce using rule 53 (estatuto -> escritura .)
    CCURLY          reduce using rule 53 (estatuto -> escritura .)


state 19

    (54) estatuto -> leer .

    RETURN          reduce using rule 54 (estatuto -> leer .)
    ID              reduce using rule 54 (estatuto -> leer .)
    IF              reduce using rule 54 (estatuto -> leer .)
    PRINT           reduce using rule 54 (estatuto -> leer .)
    READ            reduce using rule 54 (estatuto -> leer .)
    WHILE           reduce using rule 54 (estatuto -> leer .)
    FOR             reduce using rule 54 (estatuto -> leer .)
    OCURLY          reduce using rule 54 (estatuto -> leer .)
    FUNCTION        reduce using rule 54 (estatuto -> leer .)
    CLASS           reduce using rule 54 (estatuto -> leer .)
    VAR             reduce using rule 54 (estatuto -> leer .)
    OPAREN          reduce using rule 54 (estatuto -> leer .)
    CSTINT          reduce using rule 54 (estatuto -> leer .)
    CSTFLT          reduce using rule 54 (estatuto -> leer .)
    CSTCHAR         reduce using rule 54 (estatuto -> leer .)
    CSTSTRING       reduce using rule 54 (estatuto -> leer .)
    TRUE            reduce using rule 54 (estatuto -> leer .)
    FALSE           reduce using rule 54 (estatuto -> leer .)
    CCURLY          reduce using rule 54 (estatuto -> leer .)


state 20

    (55) estatuto -> ciclo_while .

    RETURN          reduce using rule 55 (estatuto -> ciclo_while .)
    ID              reduce using rule 55 (estatuto -> ciclo_while .)
    IF              reduce using rule 55 (estatuto -> ciclo_while .)
    PRINT           reduce using rule 55 (estatuto -> ciclo_while .)
    READ            reduce using rule 55 (estatuto -> ciclo_while .)
    WHILE           reduce using rule 55 (estatuto -> ciclo_while .)
    FOR             reduce using rule 55 (estatuto -> ciclo_while .)
    OCURLY          reduce using rule 55 (estatuto -> ciclo_while .)
    FUNCTION        reduce using rule 55 (estatuto -> ciclo_while .)
    CLASS           reduce using rule 55 (estatuto -> ciclo_while .)
    VAR             reduce using rule 55 (estatuto -> ciclo_while .)
    OPAREN          reduce using rule 55 (estatuto -> ciclo_while .)
    CSTINT          reduce using rule 55 (estatuto -> ciclo_while .)
    CSTFLT          reduce using rule 55 (estatuto -> ciclo_while .)
    CSTCHAR         reduce using rule 55 (estatuto -> ciclo_while .)
    CSTSTRING       reduce using rule 55 (estatuto -> ciclo_while .)
    TRUE            reduce using rule 55 (estatuto -> ciclo_while .)
    FALSE           reduce using rule 55 (estatuto -> ciclo_while .)
    CCURLY          reduce using rule 55 (estatuto -> ciclo_while .)


state 21

    (56) estatuto -> ciclo_for .

    RETURN          reduce using rule 56 (estatuto -> ciclo_for .)
    ID              reduce using rule 56 (estatuto -> ciclo_for .)
    IF              reduce using rule 56 (estatuto -> ciclo_for .)
    PRINT           reduce using rule 56 (estatuto -> ciclo_for .)
    READ            reduce using rule 56 (estatuto -> ciclo_for .)
    WHILE           reduce using rule 56 (estatuto -> ciclo_for .)
    FOR             reduce using rule 56 (estatuto -> ciclo_for .)
    OCURLY          reduce using rule 56 (estatuto -> ciclo_for .)
    FUNCTION        reduce using rule 56 (estatuto -> ciclo_for .)
    CLASS           reduce using rule 56 (estatuto -> ciclo_for .)
    VAR             reduce using rule 56 (estatuto -> ciclo_for .)
    OPAREN          reduce using rule 56 (estatuto -> ciclo_for .)
    CSTINT          reduce using rule 56 (estatuto -> ciclo_for .)
    CSTFLT          reduce using rule 56 (estatuto -> ciclo_for .)
    CSTCHAR         reduce using rule 56 (estatuto -> ciclo_for .)
    CSTSTRING       reduce using rule 56 (estatuto -> ciclo_for .)
    TRUE            reduce using rule 56 (estatuto -> ciclo_for .)
    FALSE           reduce using rule 56 (estatuto -> ciclo_for .)
    CCURLY          reduce using rule 56 (estatuto -> ciclo_for .)


state 22

    (57) estatuto -> ternaria .

    RETURN          reduce using rule 57 (estatuto -> ternaria .)
    ID              reduce using rule 57 (estatuto -> ternaria .)
    IF              reduce using rule 57 (estatuto -> ternaria .)
    PRINT           reduce using rule 57 (estatuto -> ternaria .)
    READ            reduce using rule 57 (estatuto -> ternaria .)
    WHILE           reduce using rule 57 (estatuto -> ternaria .)
    FOR             reduce using rule 57 (estatuto -> ternaria .)
    OCURLY          reduce using rule 57 (estatuto -> ternaria .)
    FUNCTION        reduce using rule 57 (estatuto -> ternaria .)
    CLASS           reduce using rule 57 (estatuto -> ternaria .)
    VAR             reduce using rule 57 (estatuto -> ternaria .)
    OPAREN          reduce using rule 57 (estatuto -> ternaria .)
    CSTINT          reduce using rule 57 (estatuto -> ternaria .)
    CSTFLT          reduce using rule 57 (estatuto -> ternaria .)
    CSTCHAR         reduce using rule 57 (estatuto -> ternaria .)
    CSTSTRING       reduce using rule 57 (estatuto -> ternaria .)
    TRUE            reduce using rule 57 (estatuto -> ternaria .)
    FALSE           reduce using rule 57 (estatuto -> ternaria .)
    CCURLY          reduce using rule 57 (estatuto -> ternaria .)


state 23

    (58) estatuto -> bloque .

    RETURN          reduce using rule 58 (estatuto -> bloque .)
    ID              reduce using rule 58 (estatuto -> bloque .)
    IF              reduce using rule 58 (estatuto -> bloque .)
    PRINT           reduce using rule 58 (estatuto -> bloque .)
    READ            reduce using rule 58 (estatuto -> bloque .)
    WHILE           reduce using rule 58 (estatuto -> bloque .)
    FOR             reduce using rule 58 (estatuto -> bloque .)
    OCURLY          reduce using rule 58 (estatuto -> bloque .)
    FUNCTION        reduce using rule 58 (estatuto -> bloque .)
    CLASS           reduce using rule 58 (estatuto -> bloque .)
    VAR             reduce using rule 58 (estatuto -> bloque .)
    OPAREN          reduce using rule 58 (estatuto -> bloque .)
    CSTINT          reduce using rule 58 (estatuto -> bloque .)
    CSTFLT          reduce using rule 58 (estatuto -> bloque .)
    CSTCHAR         reduce using rule 58 (estatuto -> bloque .)
    CSTSTRING       reduce using rule 58 (estatuto -> bloque .)
    TRUE            reduce using rule 58 (estatuto -> bloque .)
    FALSE           reduce using rule 58 (estatuto -> bloque .)
    CCURLY          reduce using rule 58 (estatuto -> bloque .)


state 24

    (59) estatuto -> funcion .

    RETURN          reduce using rule 59 (estatuto -> funcion .)
    ID              reduce using rule 59 (estatuto -> funcion .)
    IF              reduce using rule 59 (estatuto -> funcion .)
    PRINT           reduce using rule 59 (estatuto -> funcion .)
    READ            reduce using rule 59 (estatuto -> funcion .)
    WHILE           reduce using rule 59 (estatuto -> funcion .)
    FOR             reduce using rule 59 (estatuto -> funcion .)
    OCURLY          reduce using rule 59 (estatuto -> funcion .)
    FUNCTION        reduce using rule 59 (estatuto -> funcion .)
    CLASS           reduce using rule 59 (estatuto -> funcion .)
    VAR             reduce using rule 59 (estatuto -> funcion .)
    OPAREN          reduce using rule 59 (estatuto -> funcion .)
    CSTINT          reduce using rule 59 (estatuto -> funcion .)
    CSTFLT          reduce using rule 59 (estatuto -> funcion .)
    CSTCHAR         reduce using rule 59 (estatuto -> funcion .)
    CSTSTRING       reduce using rule 59 (estatuto -> funcion .)
    TRUE            reduce using rule 59 (estatuto -> funcion .)
    FALSE           reduce using rule 59 (estatuto -> funcion .)
    CCURLY          reduce using rule 59 (estatuto -> funcion .)


state 25

    (60) estatuto -> clase .

    RETURN          reduce using rule 60 (estatuto -> clase .)
    ID              reduce using rule 60 (estatuto -> clase .)
    IF              reduce using rule 60 (estatuto -> clase .)
    PRINT           reduce using rule 60 (estatuto -> clase .)
    READ            reduce using rule 60 (estatuto -> clase .)
    WHILE           reduce using rule 60 (estatuto -> clase .)
    FOR             reduce using rule 60 (estatuto -> clase .)
    OCURLY          reduce using rule 60 (estatuto -> clase .)
    FUNCTION        reduce using rule 60 (estatuto -> clase .)
    CLASS           reduce using rule 60 (estatuto -> clase .)
    VAR             reduce using rule 60 (estatuto -> clase .)
    OPAREN          reduce using rule 60 (estatuto -> clase .)
    CSTINT          reduce using rule 60 (estatuto -> clase .)
    CSTFLT          reduce using rule 60 (estatuto -> clase .)
    CSTCHAR         reduce using rule 60 (estatuto -> clase .)
    CSTSTRING       reduce using rule 60 (estatuto -> clase .)
    TRUE            reduce using rule 60 (estatuto -> clase .)
    FALSE           reduce using rule 60 (estatuto -> clase .)
    CCURLY          reduce using rule 60 (estatuto -> clase .)


state 26

    (61) estatuto -> dec .

    RETURN          reduce using rule 61 (estatuto -> dec .)
    ID              reduce using rule 61 (estatuto -> dec .)
    IF              reduce using rule 61 (estatuto -> dec .)
    PRINT           reduce using rule 61 (estatuto -> dec .)
    READ            reduce using rule 61 (estatuto -> dec .)
    WHILE           reduce using rule 61 (estatuto -> dec .)
    FOR             reduce using rule 61 (estatuto -> dec .)
    OCURLY          reduce using rule 61 (estatuto -> dec .)
    FUNCTION        reduce using rule 61 (estatuto -> dec .)
    CLASS           reduce using rule 61 (estatuto -> dec .)
    VAR             reduce using rule 61 (estatuto -> dec .)
    OPAREN          reduce using rule 61 (estatuto -> dec .)
    CSTINT          reduce using rule 61 (estatuto -> dec .)
    CSTFLT          reduce using rule 61 (estatuto -> dec .)
    CSTCHAR         reduce using rule 61 (estatuto -> dec .)
    CSTSTRING       reduce using rule 61 (estatuto -> dec .)
    TRUE            reduce using rule 61 (estatuto -> dec .)
    FALSE           reduce using rule 61 (estatuto -> dec .)
    CCURLY          reduce using rule 61 (estatuto -> dec .)


state 27

    (62) estatuto -> RETURN . exp
    (90) exp -> . texp exp1
    (93) texp -> . gexp texp1
    (96) gexp -> . mexp gexp1
    (104) mexp -> . termino mexp1
    (108) termino -> . factor term1
    (112) factor -> . OPAREN exp CPAREN
    (113) factor -> . varcst
    (114) factor -> . variable
    (115) factor -> . llamada
    (116) varcst -> . CSTINT
    (117) varcst -> . CSTFLT
    (118) varcst -> . CSTCHAR
    (119) varcst -> . CSTSTRING
    (120) varcst -> . boolean
    (81) variable -> . ID saw_id variable1 variable1 variable2
    (86) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (87) llamada -> . ID saw_id OPAREN CPAREN
    (79) boolean -> . TRUE
    (80) boolean -> . FALSE

    OPAREN          shift and go to state 31
    CSTINT          shift and go to state 45
    CSTFLT          shift and go to state 46
    CSTCHAR         shift and go to state 47
    CSTSTRING       shift and go to state 48
    ID              shift and go to state 74
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    exp                            shift and go to state 71
    texp                           shift and go to state 39
    gexp                           shift and go to state 40
    mexp                           shift and go to state 41
    termino                        shift and go to state 42
    factor                         shift and go to state 43
    varcst                         shift and go to state 44
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 49

state 28

    (74) ternaria -> exp . QUESTION estatuto_redux COLON estatuto_redux SEMICOLON

    QUESTION        shift and go to state 75


state 29

    (68) asignacion -> variable . AS exp saw_asig
    (114) factor -> variable .

    AS              shift and go to state 76
    MULT            reduce using rule 114 (factor -> variable .)
    DIV             reduce using rule 114 (factor -> variable .)
    PLUS            reduce using rule 114 (factor -> variable .)
    MINUS           reduce using rule 114 (factor -> variable .)
    LT              reduce using rule 114 (factor -> variable .)
    GT              reduce using rule 114 (factor -> variable .)
    GTE             reduce using rule 114 (factor -> variable .)
    LTE             reduce using rule 114 (factor -> variable .)
    EQ              reduce using rule 114 (factor -> variable .)
    NE              reduce using rule 114 (factor -> variable .)
    AND             reduce using rule 114 (factor -> variable .)
    OR              reduce using rule 114 (factor -> variable .)
    QUESTION        reduce using rule 114 (factor -> variable .)


state 30

    (86) llamada -> ID . saw_id OPAREN exp llamada1 CPAREN
    (87) llamada -> ID . saw_id OPAREN CPAREN
    (81) variable -> ID . saw_id variable1 variable1 variable2
    (125) saw_id -> .

    OPAREN          reduce using rule 125 (saw_id -> .)
    OBRACKET        reduce using rule 125 (saw_id -> .)
    PERIOD          reduce using rule 125 (saw_id -> .)
    AS              reduce using rule 125 (saw_id -> .)
    MULT            reduce using rule 125 (saw_id -> .)
    DIV             reduce using rule 125 (saw_id -> .)
    PLUS            reduce using rule 125 (saw_id -> .)
    MINUS           reduce using rule 125 (saw_id -> .)
    LT              reduce using rule 125 (saw_id -> .)
    GT              reduce using rule 125 (saw_id -> .)
    GTE             reduce using rule 125 (saw_id -> .)
    LTE             reduce using rule 125 (saw_id -> .)
    EQ              reduce using rule 125 (saw_id -> .)
    NE              reduce using rule 125 (saw_id -> .)
    AND             reduce using rule 125 (saw_id -> .)
    OR              reduce using rule 125 (saw_id -> .)
    QUESTION        reduce using rule 125 (saw_id -> .)

    saw_id                         shift and go to state 77

state 31

    (112) factor -> OPAREN . exp CPAREN
    (90) exp -> . texp exp1
    (93) texp -> . gexp texp1
    (96) gexp -> . mexp gexp1
    (104) mexp -> . termino mexp1
    (108) termino -> . factor term1
    (112) factor -> . OPAREN exp CPAREN
    (113) factor -> . varcst
    (114) factor -> . variable
    (115) factor -> . llamada
    (116) varcst -> . CSTINT
    (117) varcst -> . CSTFLT
    (118) varcst -> . CSTCHAR
    (119) varcst -> . CSTSTRING
    (120) varcst -> . boolean
    (81) variable -> . ID saw_id variable1 variable1 variable2
    (86) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (87) llamada -> . ID saw_id OPAREN CPAREN
    (79) boolean -> . TRUE
    (80) boolean -> . FALSE

    OPAREN          shift and go to state 31
    CSTINT          shift and go to state 45
    CSTFLT          shift and go to state 46
    CSTCHAR         shift and go to state 47
    CSTSTRING       shift and go to state 48
    ID              shift and go to state 74
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    exp                            shift and go to state 78
    texp                           shift and go to state 39
    gexp                           shift and go to state 40
    mexp                           shift and go to state 41
    termino                        shift and go to state 42
    factor                         shift and go to state 43
    varcst                         shift and go to state 44
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 49

state 32

    (69) condicion -> IF . cond2 THEN bloque cond1 SEMICOLON
    (73) cond2 -> . OPAREN exp CPAREN

    OPAREN          shift and go to state 80

    cond2                          shift and go to state 79

state 33

    (75) escritura -> PRINT . OPAREN exp e1 CPAREN

    OPAREN          shift and go to state 81


state 34

    (78) leer -> READ . OPAREN exp e1 CPAREN

    OPAREN          shift and go to state 82


state 35

    (18) ciclo_while -> WHILE . cond2 THEN bloque SEMICOLON
    (73) cond2 -> . OPAREN exp CPAREN

    OPAREN          shift and go to state 80

    cond2                          shift and go to state 83

state 36

    (19) ciclo_for -> FOR . OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON

    OPAREN          shift and go to state 84


state 37

    (3) funcion -> FUNCTION . func1 ID saw_id saw_function OPAREN param CPAREN bloque
    (4) func1 -> . simple
    (5) func1 -> . VOID saw_type
    (34) simple -> . INT saw_type
    (35) simple -> . FLOAT saw_type
    (36) simple -> . BOOL saw_type
    (37) simple -> . STRING saw_type
    (38) simple -> . CHAR saw_type

    VOID            shift and go to state 87
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    BOOL            shift and go to state 61
    STRING          shift and go to state 62
    CHAR            shift and go to state 63

    func1                          shift and go to state 85
    simple                         shift and go to state 86

state 38

    (12) clase -> CLASS . ID saw_id saw_class COLON clase_bloque SEMICOLON

    ID              shift and go to state 88


state 39

    (90) exp -> texp . exp1
    (91) exp1 -> . OR texp exp1
    (92) exp1 -> . empty
    (121) empty -> .

    OR              shift and go to state 90
    QUESTION        reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    WHILE           reduce using rule 121 (empty -> .)
    FOR             reduce using rule 121 (empty -> .)
    OCURLY          reduce using rule 121 (empty -> .)
    FUNCTION        reduce using rule 121 (empty -> .)
    CLASS           reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    OPAREN          reduce using rule 121 (empty -> .)
    CSTINT          reduce using rule 121 (empty -> .)
    CSTFLT          reduce using rule 121 (empty -> .)
    CSTCHAR         reduce using rule 121 (empty -> .)
    CSTSTRING       reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    CCURLY          reduce using rule 121 (empty -> .)
    CPAREN          reduce using rule 121 (empty -> .)
    COLON           reduce using rule 121 (empty -> .)
    SEMICOLON       reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    CBRACKET        reduce using rule 121 (empty -> .)

    exp1                           shift and go to state 89
    empty                          shift and go to state 91

state 40

    (93) texp -> gexp . texp1
    (94) texp1 -> . AND gexp texp1
    (95) texp1 -> . empty
    (121) empty -> .

    AND             shift and go to state 93
    OR              reduce using rule 121 (empty -> .)
    QUESTION        reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    WHILE           reduce using rule 121 (empty -> .)
    FOR             reduce using rule 121 (empty -> .)
    OCURLY          reduce using rule 121 (empty -> .)
    FUNCTION        reduce using rule 121 (empty -> .)
    CLASS           reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    OPAREN          reduce using rule 121 (empty -> .)
    CSTINT          reduce using rule 121 (empty -> .)
    CSTFLT          reduce using rule 121 (empty -> .)
    CSTCHAR         reduce using rule 121 (empty -> .)
    CSTSTRING       reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    CCURLY          reduce using rule 121 (empty -> .)
    CPAREN          reduce using rule 121 (empty -> .)
    COLON           reduce using rule 121 (empty -> .)
    SEMICOLON       reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    CBRACKET        reduce using rule 121 (empty -> .)

    texp1                          shift and go to state 92
    empty                          shift and go to state 94

state 41

    (96) gexp -> mexp . gexp1
    (97) gexp1 -> . LT mexp
    (98) gexp1 -> . GT mexp
    (99) gexp1 -> . GTE mexp
    (100) gexp1 -> . LTE mexp
    (101) gexp1 -> . EQ mexp
    (102) gexp1 -> . NE mexp
    (103) gexp1 -> . empty
    (121) empty -> .

    LT              shift and go to state 96
    GT              shift and go to state 97
    GTE             shift and go to state 98
    LTE             shift and go to state 99
    EQ              shift and go to state 100
    NE              shift and go to state 101
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    QUESTION        reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    WHILE           reduce using rule 121 (empty -> .)
    FOR             reduce using rule 121 (empty -> .)
    OCURLY          reduce using rule 121 (empty -> .)
    FUNCTION        reduce using rule 121 (empty -> .)
    CLASS           reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    OPAREN          reduce using rule 121 (empty -> .)
    CSTINT          reduce using rule 121 (empty -> .)
    CSTFLT          reduce using rule 121 (empty -> .)
    CSTCHAR         reduce using rule 121 (empty -> .)
    CSTSTRING       reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    CCURLY          reduce using rule 121 (empty -> .)
    CPAREN          reduce using rule 121 (empty -> .)
    COLON           reduce using rule 121 (empty -> .)
    SEMICOLON       reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    CBRACKET        reduce using rule 121 (empty -> .)

    gexp1                          shift and go to state 95
    empty                          shift and go to state 102

state 42

    (104) mexp -> termino . mexp1
    (105) mexp1 -> . PLUS termino mexp1
    (106) mexp1 -> . MINUS termino mexp1
    (107) mexp1 -> . empty
    (121) empty -> .

    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    LT              reduce using rule 121 (empty -> .)
    GT              reduce using rule 121 (empty -> .)
    GTE             reduce using rule 121 (empty -> .)
    LTE             reduce using rule 121 (empty -> .)
    EQ              reduce using rule 121 (empty -> .)
    NE              reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    QUESTION        reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    WHILE           reduce using rule 121 (empty -> .)
    FOR             reduce using rule 121 (empty -> .)
    OCURLY          reduce using rule 121 (empty -> .)
    FUNCTION        reduce using rule 121 (empty -> .)
    CLASS           reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    OPAREN          reduce using rule 121 (empty -> .)
    CSTINT          reduce using rule 121 (empty -> .)
    CSTFLT          reduce using rule 121 (empty -> .)
    CSTCHAR         reduce using rule 121 (empty -> .)
    CSTSTRING       reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    CCURLY          reduce using rule 121 (empty -> .)
    CPAREN          reduce using rule 121 (empty -> .)
    COLON           reduce using rule 121 (empty -> .)
    SEMICOLON       reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    CBRACKET        reduce using rule 121 (empty -> .)

    mexp1                          shift and go to state 103
    empty                          shift and go to state 106

state 43

    (108) termino -> factor . term1
    (109) term1 -> . MULT factor term1
    (110) term1 -> . DIV factor term1
    (111) term1 -> . empty
    (121) empty -> .

    MULT            shift and go to state 108
    DIV             shift and go to state 109
    PLUS            reduce using rule 121 (empty -> .)
    MINUS           reduce using rule 121 (empty -> .)
    LT              reduce using rule 121 (empty -> .)
    GT              reduce using rule 121 (empty -> .)
    GTE             reduce using rule 121 (empty -> .)
    LTE             reduce using rule 121 (empty -> .)
    EQ              reduce using rule 121 (empty -> .)
    NE              reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    QUESTION        reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    WHILE           reduce using rule 121 (empty -> .)
    FOR             reduce using rule 121 (empty -> .)
    OCURLY          reduce using rule 121 (empty -> .)
    FUNCTION        reduce using rule 121 (empty -> .)
    CLASS           reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    OPAREN          reduce using rule 121 (empty -> .)
    CSTINT          reduce using rule 121 (empty -> .)
    CSTFLT          reduce using rule 121 (empty -> .)
    CSTCHAR         reduce using rule 121 (empty -> .)
    CSTSTRING       reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    CCURLY          reduce using rule 121 (empty -> .)
    CPAREN          reduce using rule 121 (empty -> .)
    COLON           reduce using rule 121 (empty -> .)
    SEMICOLON       reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    CBRACKET        reduce using rule 121 (empty -> .)

    term1                          shift and go to state 107
    empty                          shift and go to state 110

state 44

    (113) factor -> varcst .

    MULT            reduce using rule 113 (factor -> varcst .)
    DIV             reduce using rule 113 (factor -> varcst .)
    PLUS            reduce using rule 113 (factor -> varcst .)
    MINUS           reduce using rule 113 (factor -> varcst .)
    LT              reduce using rule 113 (factor -> varcst .)
    GT              reduce using rule 113 (factor -> varcst .)
    GTE             reduce using rule 113 (factor -> varcst .)
    LTE             reduce using rule 113 (factor -> varcst .)
    EQ              reduce using rule 113 (factor -> varcst .)
    NE              reduce using rule 113 (factor -> varcst .)
    AND             reduce using rule 113 (factor -> varcst .)
    OR              reduce using rule 113 (factor -> varcst .)
    QUESTION        reduce using rule 113 (factor -> varcst .)
    RETURN          reduce using rule 113 (factor -> varcst .)
    ID              reduce using rule 113 (factor -> varcst .)
    IF              reduce using rule 113 (factor -> varcst .)
    PRINT           reduce using rule 113 (factor -> varcst .)
    READ            reduce using rule 113 (factor -> varcst .)
    WHILE           reduce using rule 113 (factor -> varcst .)
    FOR             reduce using rule 113 (factor -> varcst .)
    OCURLY          reduce using rule 113 (factor -> varcst .)
    FUNCTION        reduce using rule 113 (factor -> varcst .)
    CLASS           reduce using rule 113 (factor -> varcst .)
    VAR             reduce using rule 113 (factor -> varcst .)
    OPAREN          reduce using rule 113 (factor -> varcst .)
    CSTINT          reduce using rule 113 (factor -> varcst .)
    CSTFLT          reduce using rule 113 (factor -> varcst .)
    CSTCHAR         reduce using rule 113 (factor -> varcst .)
    CSTSTRING       reduce using rule 113 (factor -> varcst .)
    TRUE            reduce using rule 113 (factor -> varcst .)
    FALSE           reduce using rule 113 (factor -> varcst .)
    CCURLY          reduce using rule 113 (factor -> varcst .)
    CPAREN          reduce using rule 113 (factor -> varcst .)
    COLON           reduce using rule 113 (factor -> varcst .)
    SEMICOLON       reduce using rule 113 (factor -> varcst .)
    COMMA           reduce using rule 113 (factor -> varcst .)
    CBRACKET        reduce using rule 113 (factor -> varcst .)


state 45

    (116) varcst -> CSTINT .

    MULT            reduce using rule 116 (varcst -> CSTINT .)
    DIV             reduce using rule 116 (varcst -> CSTINT .)
    PLUS            reduce using rule 116 (varcst -> CSTINT .)
    MINUS           reduce using rule 116 (varcst -> CSTINT .)
    LT              reduce using rule 116 (varcst -> CSTINT .)
    GT              reduce using rule 116 (varcst -> CSTINT .)
    GTE             reduce using rule 116 (varcst -> CSTINT .)
    LTE             reduce using rule 116 (varcst -> CSTINT .)
    EQ              reduce using rule 116 (varcst -> CSTINT .)
    NE              reduce using rule 116 (varcst -> CSTINT .)
    AND             reduce using rule 116 (varcst -> CSTINT .)
    OR              reduce using rule 116 (varcst -> CSTINT .)
    QUESTION        reduce using rule 116 (varcst -> CSTINT .)
    RETURN          reduce using rule 116 (varcst -> CSTINT .)
    ID              reduce using rule 116 (varcst -> CSTINT .)
    IF              reduce using rule 116 (varcst -> CSTINT .)
    PRINT           reduce using rule 116 (varcst -> CSTINT .)
    READ            reduce using rule 116 (varcst -> CSTINT .)
    WHILE           reduce using rule 116 (varcst -> CSTINT .)
    FOR             reduce using rule 116 (varcst -> CSTINT .)
    OCURLY          reduce using rule 116 (varcst -> CSTINT .)
    FUNCTION        reduce using rule 116 (varcst -> CSTINT .)
    CLASS           reduce using rule 116 (varcst -> CSTINT .)
    VAR             reduce using rule 116 (varcst -> CSTINT .)
    OPAREN          reduce using rule 116 (varcst -> CSTINT .)
    CSTINT          reduce using rule 116 (varcst -> CSTINT .)
    CSTFLT          reduce using rule 116 (varcst -> CSTINT .)
    CSTCHAR         reduce using rule 116 (varcst -> CSTINT .)
    CSTSTRING       reduce using rule 116 (varcst -> CSTINT .)
    TRUE            reduce using rule 116 (varcst -> CSTINT .)
    FALSE           reduce using rule 116 (varcst -> CSTINT .)
    CCURLY          reduce using rule 116 (varcst -> CSTINT .)
    CPAREN          reduce using rule 116 (varcst -> CSTINT .)
    COLON           reduce using rule 116 (varcst -> CSTINT .)
    SEMICOLON       reduce using rule 116 (varcst -> CSTINT .)
    COMMA           reduce using rule 116 (varcst -> CSTINT .)
    CBRACKET        reduce using rule 116 (varcst -> CSTINT .)


state 46

    (117) varcst -> CSTFLT .

    MULT            reduce using rule 117 (varcst -> CSTFLT .)
    DIV             reduce using rule 117 (varcst -> CSTFLT .)
    PLUS            reduce using rule 117 (varcst -> CSTFLT .)
    MINUS           reduce using rule 117 (varcst -> CSTFLT .)
    LT              reduce using rule 117 (varcst -> CSTFLT .)
    GT              reduce using rule 117 (varcst -> CSTFLT .)
    GTE             reduce using rule 117 (varcst -> CSTFLT .)
    LTE             reduce using rule 117 (varcst -> CSTFLT .)
    EQ              reduce using rule 117 (varcst -> CSTFLT .)
    NE              reduce using rule 117 (varcst -> CSTFLT .)
    AND             reduce using rule 117 (varcst -> CSTFLT .)
    OR              reduce using rule 117 (varcst -> CSTFLT .)
    QUESTION        reduce using rule 117 (varcst -> CSTFLT .)
    RETURN          reduce using rule 117 (varcst -> CSTFLT .)
    ID              reduce using rule 117 (varcst -> CSTFLT .)
    IF              reduce using rule 117 (varcst -> CSTFLT .)
    PRINT           reduce using rule 117 (varcst -> CSTFLT .)
    READ            reduce using rule 117 (varcst -> CSTFLT .)
    WHILE           reduce using rule 117 (varcst -> CSTFLT .)
    FOR             reduce using rule 117 (varcst -> CSTFLT .)
    OCURLY          reduce using rule 117 (varcst -> CSTFLT .)
    FUNCTION        reduce using rule 117 (varcst -> CSTFLT .)
    CLASS           reduce using rule 117 (varcst -> CSTFLT .)
    VAR             reduce using rule 117 (varcst -> CSTFLT .)
    OPAREN          reduce using rule 117 (varcst -> CSTFLT .)
    CSTINT          reduce using rule 117 (varcst -> CSTFLT .)
    CSTFLT          reduce using rule 117 (varcst -> CSTFLT .)
    CSTCHAR         reduce using rule 117 (varcst -> CSTFLT .)
    CSTSTRING       reduce using rule 117 (varcst -> CSTFLT .)
    TRUE            reduce using rule 117 (varcst -> CSTFLT .)
    FALSE           reduce using rule 117 (varcst -> CSTFLT .)
    CCURLY          reduce using rule 117 (varcst -> CSTFLT .)
    CPAREN          reduce using rule 117 (varcst -> CSTFLT .)
    COLON           reduce using rule 117 (varcst -> CSTFLT .)
    SEMICOLON       reduce using rule 117 (varcst -> CSTFLT .)
    COMMA           reduce using rule 117 (varcst -> CSTFLT .)
    CBRACKET        reduce using rule 117 (varcst -> CSTFLT .)


state 47

    (118) varcst -> CSTCHAR .

    MULT            reduce using rule 118 (varcst -> CSTCHAR .)
    DIV             reduce using rule 118 (varcst -> CSTCHAR .)
    PLUS            reduce using rule 118 (varcst -> CSTCHAR .)
    MINUS           reduce using rule 118 (varcst -> CSTCHAR .)
    LT              reduce using rule 118 (varcst -> CSTCHAR .)
    GT              reduce using rule 118 (varcst -> CSTCHAR .)
    GTE             reduce using rule 118 (varcst -> CSTCHAR .)
    LTE             reduce using rule 118 (varcst -> CSTCHAR .)
    EQ              reduce using rule 118 (varcst -> CSTCHAR .)
    NE              reduce using rule 118 (varcst -> CSTCHAR .)
    AND             reduce using rule 118 (varcst -> CSTCHAR .)
    OR              reduce using rule 118 (varcst -> CSTCHAR .)
    QUESTION        reduce using rule 118 (varcst -> CSTCHAR .)
    RETURN          reduce using rule 118 (varcst -> CSTCHAR .)
    ID              reduce using rule 118 (varcst -> CSTCHAR .)
    IF              reduce using rule 118 (varcst -> CSTCHAR .)
    PRINT           reduce using rule 118 (varcst -> CSTCHAR .)
    READ            reduce using rule 118 (varcst -> CSTCHAR .)
    WHILE           reduce using rule 118 (varcst -> CSTCHAR .)
    FOR             reduce using rule 118 (varcst -> CSTCHAR .)
    OCURLY          reduce using rule 118 (varcst -> CSTCHAR .)
    FUNCTION        reduce using rule 118 (varcst -> CSTCHAR .)
    CLASS           reduce using rule 118 (varcst -> CSTCHAR .)
    VAR             reduce using rule 118 (varcst -> CSTCHAR .)
    OPAREN          reduce using rule 118 (varcst -> CSTCHAR .)
    CSTINT          reduce using rule 118 (varcst -> CSTCHAR .)
    CSTFLT          reduce using rule 118 (varcst -> CSTCHAR .)
    CSTCHAR         reduce using rule 118 (varcst -> CSTCHAR .)
    CSTSTRING       reduce using rule 118 (varcst -> CSTCHAR .)
    TRUE            reduce using rule 118 (varcst -> CSTCHAR .)
    FALSE           reduce using rule 118 (varcst -> CSTCHAR .)
    CCURLY          reduce using rule 118 (varcst -> CSTCHAR .)
    CPAREN          reduce using rule 118 (varcst -> CSTCHAR .)
    COLON           reduce using rule 118 (varcst -> CSTCHAR .)
    SEMICOLON       reduce using rule 118 (varcst -> CSTCHAR .)
    COMMA           reduce using rule 118 (varcst -> CSTCHAR .)
    CBRACKET        reduce using rule 118 (varcst -> CSTCHAR .)


state 48

    (119) varcst -> CSTSTRING .

    MULT            reduce using rule 119 (varcst -> CSTSTRING .)
    DIV             reduce using rule 119 (varcst -> CSTSTRING .)
    PLUS            reduce using rule 119 (varcst -> CSTSTRING .)
    MINUS           reduce using rule 119 (varcst -> CSTSTRING .)
    LT              reduce using rule 119 (varcst -> CSTSTRING .)
    GT              reduce using rule 119 (varcst -> CSTSTRING .)
    GTE             reduce using rule 119 (varcst -> CSTSTRING .)
    LTE             reduce using rule 119 (varcst -> CSTSTRING .)
    EQ              reduce using rule 119 (varcst -> CSTSTRING .)
    NE              reduce using rule 119 (varcst -> CSTSTRING .)
    AND             reduce using rule 119 (varcst -> CSTSTRING .)
    OR              reduce using rule 119 (varcst -> CSTSTRING .)
    QUESTION        reduce using rule 119 (varcst -> CSTSTRING .)
    RETURN          reduce using rule 119 (varcst -> CSTSTRING .)
    ID              reduce using rule 119 (varcst -> CSTSTRING .)
    IF              reduce using rule 119 (varcst -> CSTSTRING .)
    PRINT           reduce using rule 119 (varcst -> CSTSTRING .)
    READ            reduce using rule 119 (varcst -> CSTSTRING .)
    WHILE           reduce using rule 119 (varcst -> CSTSTRING .)
    FOR             reduce using rule 119 (varcst -> CSTSTRING .)
    OCURLY          reduce using rule 119 (varcst -> CSTSTRING .)
    FUNCTION        reduce using rule 119 (varcst -> CSTSTRING .)
    CLASS           reduce using rule 119 (varcst -> CSTSTRING .)
    VAR             reduce using rule 119 (varcst -> CSTSTRING .)
    OPAREN          reduce using rule 119 (varcst -> CSTSTRING .)
    CSTINT          reduce using rule 119 (varcst -> CSTSTRING .)
    CSTFLT          reduce using rule 119 (varcst -> CSTSTRING .)
    CSTCHAR         reduce using rule 119 (varcst -> CSTSTRING .)
    CSTSTRING       reduce using rule 119 (varcst -> CSTSTRING .)
    TRUE            reduce using rule 119 (varcst -> CSTSTRING .)
    FALSE           reduce using rule 119 (varcst -> CSTSTRING .)
    CCURLY          reduce using rule 119 (varcst -> CSTSTRING .)
    CPAREN          reduce using rule 119 (varcst -> CSTSTRING .)
    COLON           reduce using rule 119 (varcst -> CSTSTRING .)
    SEMICOLON       reduce using rule 119 (varcst -> CSTSTRING .)
    COMMA           reduce using rule 119 (varcst -> CSTSTRING .)
    CBRACKET        reduce using rule 119 (varcst -> CSTSTRING .)


state 49

    (120) varcst -> boolean .

    MULT            reduce using rule 120 (varcst -> boolean .)
    DIV             reduce using rule 120 (varcst -> boolean .)
    PLUS            reduce using rule 120 (varcst -> boolean .)
    MINUS           reduce using rule 120 (varcst -> boolean .)
    LT              reduce using rule 120 (varcst -> boolean .)
    GT              reduce using rule 120 (varcst -> boolean .)
    GTE             reduce using rule 120 (varcst -> boolean .)
    LTE             reduce using rule 120 (varcst -> boolean .)
    EQ              reduce using rule 120 (varcst -> boolean .)
    NE              reduce using rule 120 (varcst -> boolean .)
    AND             reduce using rule 120 (varcst -> boolean .)
    OR              reduce using rule 120 (varcst -> boolean .)
    QUESTION        reduce using rule 120 (varcst -> boolean .)
    RETURN          reduce using rule 120 (varcst -> boolean .)
    ID              reduce using rule 120 (varcst -> boolean .)
    IF              reduce using rule 120 (varcst -> boolean .)
    PRINT           reduce using rule 120 (varcst -> boolean .)
    READ            reduce using rule 120 (varcst -> boolean .)
    WHILE           reduce using rule 120 (varcst -> boolean .)
    FOR             reduce using rule 120 (varcst -> boolean .)
    OCURLY          reduce using rule 120 (varcst -> boolean .)
    FUNCTION        reduce using rule 120 (varcst -> boolean .)
    CLASS           reduce using rule 120 (varcst -> boolean .)
    VAR             reduce using rule 120 (varcst -> boolean .)
    OPAREN          reduce using rule 120 (varcst -> boolean .)
    CSTINT          reduce using rule 120 (varcst -> boolean .)
    CSTFLT          reduce using rule 120 (varcst -> boolean .)
    CSTCHAR         reduce using rule 120 (varcst -> boolean .)
    CSTSTRING       reduce using rule 120 (varcst -> boolean .)
    TRUE            reduce using rule 120 (varcst -> boolean .)
    FALSE           reduce using rule 120 (varcst -> boolean .)
    CCURLY          reduce using rule 120 (varcst -> boolean .)
    CPAREN          reduce using rule 120 (varcst -> boolean .)
    COLON           reduce using rule 120 (varcst -> boolean .)
    SEMICOLON       reduce using rule 120 (varcst -> boolean .)
    COMMA           reduce using rule 120 (varcst -> boolean .)
    CBRACKET        reduce using rule 120 (varcst -> boolean .)


state 50

    (79) boolean -> TRUE .

    MULT            reduce using rule 79 (boolean -> TRUE .)
    DIV             reduce using rule 79 (boolean -> TRUE .)
    PLUS            reduce using rule 79 (boolean -> TRUE .)
    MINUS           reduce using rule 79 (boolean -> TRUE .)
    LT              reduce using rule 79 (boolean -> TRUE .)
    GT              reduce using rule 79 (boolean -> TRUE .)
    GTE             reduce using rule 79 (boolean -> TRUE .)
    LTE             reduce using rule 79 (boolean -> TRUE .)
    EQ              reduce using rule 79 (boolean -> TRUE .)
    NE              reduce using rule 79 (boolean -> TRUE .)
    AND             reduce using rule 79 (boolean -> TRUE .)
    OR              reduce using rule 79 (boolean -> TRUE .)
    QUESTION        reduce using rule 79 (boolean -> TRUE .)
    RETURN          reduce using rule 79 (boolean -> TRUE .)
    ID              reduce using rule 79 (boolean -> TRUE .)
    IF              reduce using rule 79 (boolean -> TRUE .)
    PRINT           reduce using rule 79 (boolean -> TRUE .)
    READ            reduce using rule 79 (boolean -> TRUE .)
    WHILE           reduce using rule 79 (boolean -> TRUE .)
    FOR             reduce using rule 79 (boolean -> TRUE .)
    OCURLY          reduce using rule 79 (boolean -> TRUE .)
    FUNCTION        reduce using rule 79 (boolean -> TRUE .)
    CLASS           reduce using rule 79 (boolean -> TRUE .)
    VAR             reduce using rule 79 (boolean -> TRUE .)
    OPAREN          reduce using rule 79 (boolean -> TRUE .)
    CSTINT          reduce using rule 79 (boolean -> TRUE .)
    CSTFLT          reduce using rule 79 (boolean -> TRUE .)
    CSTCHAR         reduce using rule 79 (boolean -> TRUE .)
    CSTSTRING       reduce using rule 79 (boolean -> TRUE .)
    TRUE            reduce using rule 79 (boolean -> TRUE .)
    FALSE           reduce using rule 79 (boolean -> TRUE .)
    CCURLY          reduce using rule 79 (boolean -> TRUE .)
    CPAREN          reduce using rule 79 (boolean -> TRUE .)
    COLON           reduce using rule 79 (boolean -> TRUE .)
    SEMICOLON       reduce using rule 79 (boolean -> TRUE .)
    COMMA           reduce using rule 79 (boolean -> TRUE .)
    CBRACKET        reduce using rule 79 (boolean -> TRUE .)


state 51

    (80) boolean -> FALSE .

    MULT            reduce using rule 80 (boolean -> FALSE .)
    DIV             reduce using rule 80 (boolean -> FALSE .)
    PLUS            reduce using rule 80 (boolean -> FALSE .)
    MINUS           reduce using rule 80 (boolean -> FALSE .)
    LT              reduce using rule 80 (boolean -> FALSE .)
    GT              reduce using rule 80 (boolean -> FALSE .)
    GTE             reduce using rule 80 (boolean -> FALSE .)
    LTE             reduce using rule 80 (boolean -> FALSE .)
    EQ              reduce using rule 80 (boolean -> FALSE .)
    NE              reduce using rule 80 (boolean -> FALSE .)
    AND             reduce using rule 80 (boolean -> FALSE .)
    OR              reduce using rule 80 (boolean -> FALSE .)
    QUESTION        reduce using rule 80 (boolean -> FALSE .)
    RETURN          reduce using rule 80 (boolean -> FALSE .)
    ID              reduce using rule 80 (boolean -> FALSE .)
    IF              reduce using rule 80 (boolean -> FALSE .)
    PRINT           reduce using rule 80 (boolean -> FALSE .)
    READ            reduce using rule 80 (boolean -> FALSE .)
    WHILE           reduce using rule 80 (boolean -> FALSE .)
    FOR             reduce using rule 80 (boolean -> FALSE .)
    OCURLY          reduce using rule 80 (boolean -> FALSE .)
    FUNCTION        reduce using rule 80 (boolean -> FALSE .)
    CLASS           reduce using rule 80 (boolean -> FALSE .)
    VAR             reduce using rule 80 (boolean -> FALSE .)
    OPAREN          reduce using rule 80 (boolean -> FALSE .)
    CSTINT          reduce using rule 80 (boolean -> FALSE .)
    CSTFLT          reduce using rule 80 (boolean -> FALSE .)
    CSTCHAR         reduce using rule 80 (boolean -> FALSE .)
    CSTSTRING       reduce using rule 80 (boolean -> FALSE .)
    TRUE            reduce using rule 80 (boolean -> FALSE .)
    FALSE           reduce using rule 80 (boolean -> FALSE .)
    CCURLY          reduce using rule 80 (boolean -> FALSE .)
    CPAREN          reduce using rule 80 (boolean -> FALSE .)
    COLON           reduce using rule 80 (boolean -> FALSE .)
    SEMICOLON       reduce using rule 80 (boolean -> FALSE .)
    COMMA           reduce using rule 80 (boolean -> FALSE .)
    CBRACKET        reduce using rule 80 (boolean -> FALSE .)


state 52

    (22) dec -> VAR tipo . SEMICOLON dec1

    SEMICOLON       shift and go to state 111


state 53

    (25) tipo -> compuesto . ID saw_id saw_variable tipo1

    ID              shift and go to state 112


state 54

    (44) compuesto -> ID . saw_type
    (124) saw_type -> .

    ID              reduce using rule 124 (saw_type -> .)

    saw_type                       shift and go to state 113

state 55

    (26) tipo -> simple . ID saw_id saw_variable tipo1

    ID              shift and go to state 114


state 56

    (27) tipo -> multiple . ID saw_id saw_variable OBRACKET CSTINT CBRACKET tipo3 tipo2

    ID              shift and go to state 115


state 57

    (45) compuesto -> DATAFRAME . saw_type
    (124) saw_type -> .

    ID              reduce using rule 124 (saw_type -> .)

    saw_type                       shift and go to state 116

state 58

    (46) compuesto -> FILE . saw_type
    (124) saw_type -> .

    ID              reduce using rule 124 (saw_type -> .)

    saw_type                       shift and go to state 117

state 59

    (34) simple -> INT . saw_type
    (124) saw_type -> .

    ID              reduce using rule 124 (saw_type -> .)

    saw_type                       shift and go to state 118

state 60

    (35) simple -> FLOAT . saw_type
    (124) saw_type -> .

    ID              reduce using rule 124 (saw_type -> .)

    saw_type                       shift and go to state 119

state 61

    (36) simple -> BOOL . saw_type
    (124) saw_type -> .

    ID              reduce using rule 124 (saw_type -> .)

    saw_type                       shift and go to state 120

state 62

    (37) simple -> STRING . saw_type
    (124) saw_type -> .

    ID              reduce using rule 124 (saw_type -> .)

    saw_type                       shift and go to state 121

state 63

    (38) simple -> CHAR . saw_type
    (124) saw_type -> .

    ID              reduce using rule 124 (saw_type -> .)

    saw_type                       shift and go to state 122

state 64

    (39) multiple -> INTS . saw_type
    (124) saw_type -> .

    ID              reduce using rule 124 (saw_type -> .)

    saw_type                       shift and go to state 123

state 65

    (40) multiple -> FLOATS . saw_type
    (124) saw_type -> .

    ID              reduce using rule 124 (saw_type -> .)

    saw_type                       shift and go to state 124

state 66

    (41) multiple -> BOOLS . saw_type
    (124) saw_type -> .

    ID              reduce using rule 124 (saw_type -> .)

    saw_type                       shift and go to state 125

state 67

    (42) multiple -> STRINGS . saw_type
    (124) saw_type -> .

    ID              reduce using rule 124 (saw_type -> .)

    saw_type                       shift and go to state 126

state 68

    (43) multiple -> CHARS . saw_type
    (124) saw_type -> .

    ID              reduce using rule 124 (saw_type -> .)

    saw_type                       shift and go to state 127

state 69

    (47) bloque -> OCURLY b1 CCURLY . scope_end
    (131) scope_end -> .

    $end            reduce using rule 131 (scope_end -> .)
    RETURN          reduce using rule 131 (scope_end -> .)
    ID              reduce using rule 131 (scope_end -> .)
    IF              reduce using rule 131 (scope_end -> .)
    PRINT           reduce using rule 131 (scope_end -> .)
    READ            reduce using rule 131 (scope_end -> .)
    WHILE           reduce using rule 131 (scope_end -> .)
    FOR             reduce using rule 131 (scope_end -> .)
    OCURLY          reduce using rule 131 (scope_end -> .)
    FUNCTION        reduce using rule 131 (scope_end -> .)
    CLASS           reduce using rule 131 (scope_end -> .)
    VAR             reduce using rule 131 (scope_end -> .)
    OPAREN          reduce using rule 131 (scope_end -> .)
    CSTINT          reduce using rule 131 (scope_end -> .)
    CSTFLT          reduce using rule 131 (scope_end -> .)
    CSTCHAR         reduce using rule 131 (scope_end -> .)
    CSTSTRING       reduce using rule 131 (scope_end -> .)
    TRUE            reduce using rule 131 (scope_end -> .)
    FALSE           reduce using rule 131 (scope_end -> .)
    CCURLY          reduce using rule 131 (scope_end -> .)
    ELSE            reduce using rule 131 (scope_end -> .)
    SEMICOLON       reduce using rule 131 (scope_end -> .)

    scope_end                      shift and go to state 128

state 70

    (48) b1 -> estatuto b1 .

    CCURLY          reduce using rule 48 (b1 -> estatuto b1 .)


state 71

    (62) estatuto -> RETURN exp .

    RETURN          reduce using rule 62 (estatuto -> RETURN exp .)
    ID              reduce using rule 62 (estatuto -> RETURN exp .)
    IF              reduce using rule 62 (estatuto -> RETURN exp .)
    PRINT           reduce using rule 62 (estatuto -> RETURN exp .)
    READ            reduce using rule 62 (estatuto -> RETURN exp .)
    WHILE           reduce using rule 62 (estatuto -> RETURN exp .)
    FOR             reduce using rule 62 (estatuto -> RETURN exp .)
    OCURLY          reduce using rule 62 (estatuto -> RETURN exp .)
    FUNCTION        reduce using rule 62 (estatuto -> RETURN exp .)
    CLASS           reduce using rule 62 (estatuto -> RETURN exp .)
    VAR             reduce using rule 62 (estatuto -> RETURN exp .)
    OPAREN          reduce using rule 62 (estatuto -> RETURN exp .)
    CSTINT          reduce using rule 62 (estatuto -> RETURN exp .)
    CSTFLT          reduce using rule 62 (estatuto -> RETURN exp .)
    CSTCHAR         reduce using rule 62 (estatuto -> RETURN exp .)
    CSTSTRING       reduce using rule 62 (estatuto -> RETURN exp .)
    TRUE            reduce using rule 62 (estatuto -> RETURN exp .)
    FALSE           reduce using rule 62 (estatuto -> RETURN exp .)
    CCURLY          reduce using rule 62 (estatuto -> RETURN exp .)


state 72

    (114) factor -> variable .

    MULT            reduce using rule 114 (factor -> variable .)
    DIV             reduce using rule 114 (factor -> variable .)
    PLUS            reduce using rule 114 (factor -> variable .)
    MINUS           reduce using rule 114 (factor -> variable .)
    LT              reduce using rule 114 (factor -> variable .)
    GT              reduce using rule 114 (factor -> variable .)
    GTE             reduce using rule 114 (factor -> variable .)
    LTE             reduce using rule 114 (factor -> variable .)
    EQ              reduce using rule 114 (factor -> variable .)
    NE              reduce using rule 114 (factor -> variable .)
    AND             reduce using rule 114 (factor -> variable .)
    OR              reduce using rule 114 (factor -> variable .)
    RETURN          reduce using rule 114 (factor -> variable .)
    ID              reduce using rule 114 (factor -> variable .)
    IF              reduce using rule 114 (factor -> variable .)
    PRINT           reduce using rule 114 (factor -> variable .)
    READ            reduce using rule 114 (factor -> variable .)
    WHILE           reduce using rule 114 (factor -> variable .)
    FOR             reduce using rule 114 (factor -> variable .)
    OCURLY          reduce using rule 114 (factor -> variable .)
    FUNCTION        reduce using rule 114 (factor -> variable .)
    CLASS           reduce using rule 114 (factor -> variable .)
    VAR             reduce using rule 114 (factor -> variable .)
    OPAREN          reduce using rule 114 (factor -> variable .)
    CSTINT          reduce using rule 114 (factor -> variable .)
    CSTFLT          reduce using rule 114 (factor -> variable .)
    CSTCHAR         reduce using rule 114 (factor -> variable .)
    CSTSTRING       reduce using rule 114 (factor -> variable .)
    TRUE            reduce using rule 114 (factor -> variable .)
    FALSE           reduce using rule 114 (factor -> variable .)
    CCURLY          reduce using rule 114 (factor -> variable .)
    CPAREN          reduce using rule 114 (factor -> variable .)
    COLON           reduce using rule 114 (factor -> variable .)
    SEMICOLON       reduce using rule 114 (factor -> variable .)
    COMMA           reduce using rule 114 (factor -> variable .)
    QUESTION        reduce using rule 114 (factor -> variable .)
    CBRACKET        reduce using rule 114 (factor -> variable .)


state 73

    (115) factor -> llamada .

    MULT            reduce using rule 115 (factor -> llamada .)
    DIV             reduce using rule 115 (factor -> llamada .)
    PLUS            reduce using rule 115 (factor -> llamada .)
    MINUS           reduce using rule 115 (factor -> llamada .)
    LT              reduce using rule 115 (factor -> llamada .)
    GT              reduce using rule 115 (factor -> llamada .)
    GTE             reduce using rule 115 (factor -> llamada .)
    LTE             reduce using rule 115 (factor -> llamada .)
    EQ              reduce using rule 115 (factor -> llamada .)
    NE              reduce using rule 115 (factor -> llamada .)
    AND             reduce using rule 115 (factor -> llamada .)
    OR              reduce using rule 115 (factor -> llamada .)
    RETURN          reduce using rule 115 (factor -> llamada .)
    ID              reduce using rule 115 (factor -> llamada .)
    IF              reduce using rule 115 (factor -> llamada .)
    PRINT           reduce using rule 115 (factor -> llamada .)
    READ            reduce using rule 115 (factor -> llamada .)
    WHILE           reduce using rule 115 (factor -> llamada .)
    FOR             reduce using rule 115 (factor -> llamada .)
    OCURLY          reduce using rule 115 (factor -> llamada .)
    FUNCTION        reduce using rule 115 (factor -> llamada .)
    CLASS           reduce using rule 115 (factor -> llamada .)
    VAR             reduce using rule 115 (factor -> llamada .)
    OPAREN          reduce using rule 115 (factor -> llamada .)
    CSTINT          reduce using rule 115 (factor -> llamada .)
    CSTFLT          reduce using rule 115 (factor -> llamada .)
    CSTCHAR         reduce using rule 115 (factor -> llamada .)
    CSTSTRING       reduce using rule 115 (factor -> llamada .)
    TRUE            reduce using rule 115 (factor -> llamada .)
    FALSE           reduce using rule 115 (factor -> llamada .)
    CCURLY          reduce using rule 115 (factor -> llamada .)
    CPAREN          reduce using rule 115 (factor -> llamada .)
    COLON           reduce using rule 115 (factor -> llamada .)
    SEMICOLON       reduce using rule 115 (factor -> llamada .)
    COMMA           reduce using rule 115 (factor -> llamada .)
    QUESTION        reduce using rule 115 (factor -> llamada .)
    CBRACKET        reduce using rule 115 (factor -> llamada .)


state 74

    (81) variable -> ID . saw_id variable1 variable1 variable2
    (86) llamada -> ID . saw_id OPAREN exp llamada1 CPAREN
    (87) llamada -> ID . saw_id OPAREN CPAREN
    (125) saw_id -> .

    OPAREN          reduce using rule 125 (saw_id -> .)
    OBRACKET        reduce using rule 125 (saw_id -> .)
    PERIOD          reduce using rule 125 (saw_id -> .)
    MULT            reduce using rule 125 (saw_id -> .)
    DIV             reduce using rule 125 (saw_id -> .)
    PLUS            reduce using rule 125 (saw_id -> .)
    MINUS           reduce using rule 125 (saw_id -> .)
    LT              reduce using rule 125 (saw_id -> .)
    GT              reduce using rule 125 (saw_id -> .)
    GTE             reduce using rule 125 (saw_id -> .)
    LTE             reduce using rule 125 (saw_id -> .)
    EQ              reduce using rule 125 (saw_id -> .)
    NE              reduce using rule 125 (saw_id -> .)
    AND             reduce using rule 125 (saw_id -> .)
    OR              reduce using rule 125 (saw_id -> .)
    RETURN          reduce using rule 125 (saw_id -> .)
    ID              reduce using rule 125 (saw_id -> .)
    IF              reduce using rule 125 (saw_id -> .)
    PRINT           reduce using rule 125 (saw_id -> .)
    READ            reduce using rule 125 (saw_id -> .)
    WHILE           reduce using rule 125 (saw_id -> .)
    FOR             reduce using rule 125 (saw_id -> .)
    OCURLY          reduce using rule 125 (saw_id -> .)
    FUNCTION        reduce using rule 125 (saw_id -> .)
    CLASS           reduce using rule 125 (saw_id -> .)
    VAR             reduce using rule 125 (saw_id -> .)
    CSTINT          reduce using rule 125 (saw_id -> .)
    CSTFLT          reduce using rule 125 (saw_id -> .)
    CSTCHAR         reduce using rule 125 (saw_id -> .)
    CSTSTRING       reduce using rule 125 (saw_id -> .)
    TRUE            reduce using rule 125 (saw_id -> .)
    FALSE           reduce using rule 125 (saw_id -> .)
    CCURLY          reduce using rule 125 (saw_id -> .)
    CPAREN          reduce using rule 125 (saw_id -> .)
    COLON           reduce using rule 125 (saw_id -> .)
    SEMICOLON       reduce using rule 125 (saw_id -> .)
    COMMA           reduce using rule 125 (saw_id -> .)
    QUESTION        reduce using rule 125 (saw_id -> .)
    CBRACKET        reduce using rule 125 (saw_id -> .)

    saw_id                         shift and go to state 129

state 75

    (74) ternaria -> exp QUESTION . estatuto_redux COLON estatuto_redux SEMICOLON
    (63) estatuto_redux -> . asignacion
    (64) estatuto_redux -> . llamada
    (65) estatuto_redux -> . escritura
    (66) estatuto_redux -> . leer
    (67) estatuto_redux -> . ternaria
    (68) asignacion -> . variable AS exp saw_asig
    (86) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (87) llamada -> . ID saw_id OPAREN CPAREN
    (75) escritura -> . PRINT OPAREN exp e1 CPAREN
    (78) leer -> . READ OPAREN exp e1 CPAREN
    (74) ternaria -> . exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON
    (81) variable -> . ID saw_id variable1 variable1 variable2
    (90) exp -> . texp exp1
    (93) texp -> . gexp texp1
    (96) gexp -> . mexp gexp1
    (104) mexp -> . termino mexp1
    (108) termino -> . factor term1
    (112) factor -> . OPAREN exp CPAREN
    (113) factor -> . varcst
    (114) factor -> . variable
    (115) factor -> . llamada
    (116) varcst -> . CSTINT
    (117) varcst -> . CSTFLT
    (118) varcst -> . CSTCHAR
    (119) varcst -> . CSTSTRING
    (120) varcst -> . boolean
    (79) boolean -> . TRUE
    (80) boolean -> . FALSE

    ID              shift and go to state 30
    PRINT           shift and go to state 33
    READ            shift and go to state 34
    OPAREN          shift and go to state 31
    CSTINT          shift and go to state 45
    CSTFLT          shift and go to state 46
    CSTCHAR         shift and go to state 47
    CSTSTRING       shift and go to state 48
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    exp                            shift and go to state 28
    estatuto_redux                 shift and go to state 130
    asignacion                     shift and go to state 131
    llamada                        shift and go to state 132
    escritura                      shift and go to state 133
    leer                           shift and go to state 134
    ternaria                       shift and go to state 135
    variable                       shift and go to state 29
    texp                           shift and go to state 39
    gexp                           shift and go to state 40
    mexp                           shift and go to state 41
    termino                        shift and go to state 42
    factor                         shift and go to state 43
    varcst                         shift and go to state 44
    boolean                        shift and go to state 49

state 76

    (68) asignacion -> variable AS . exp saw_asig
    (90) exp -> . texp exp1
    (93) texp -> . gexp texp1
    (96) gexp -> . mexp gexp1
    (104) mexp -> . termino mexp1
    (108) termino -> . factor term1
    (112) factor -> . OPAREN exp CPAREN
    (113) factor -> . varcst
    (114) factor -> . variable
    (115) factor -> . llamada
    (116) varcst -> . CSTINT
    (117) varcst -> . CSTFLT
    (118) varcst -> . CSTCHAR
    (119) varcst -> . CSTSTRING
    (120) varcst -> . boolean
    (81) variable -> . ID saw_id variable1 variable1 variable2
    (86) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (87) llamada -> . ID saw_id OPAREN CPAREN
    (79) boolean -> . TRUE
    (80) boolean -> . FALSE

    OPAREN          shift and go to state 31
    CSTINT          shift and go to state 45
    CSTFLT          shift and go to state 46
    CSTCHAR         shift and go to state 47
    CSTSTRING       shift and go to state 48
    ID              shift and go to state 74
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    variable                       shift and go to state 72
    exp                            shift and go to state 136
    texp                           shift and go to state 39
    gexp                           shift and go to state 40
    mexp                           shift and go to state 41
    termino                        shift and go to state 42
    factor                         shift and go to state 43
    varcst                         shift and go to state 44
    llamada                        shift and go to state 73
    boolean                        shift and go to state 49

state 77

    (86) llamada -> ID saw_id . OPAREN exp llamada1 CPAREN
    (87) llamada -> ID saw_id . OPAREN CPAREN
    (81) variable -> ID saw_id . variable1 variable1 variable2
    (82) variable1 -> . OBRACKET exp CBRACKET
    (83) variable1 -> . empty
    (121) empty -> .

  ! shift/reduce conflict for OBRACKET resolved as shift
    OPAREN          shift and go to state 137
    OBRACKET        shift and go to state 139
    PERIOD          reduce using rule 121 (empty -> .)
    AS              reduce using rule 121 (empty -> .)
    MULT            reduce using rule 121 (empty -> .)
    DIV             reduce using rule 121 (empty -> .)
    PLUS            reduce using rule 121 (empty -> .)
    MINUS           reduce using rule 121 (empty -> .)
    LT              reduce using rule 121 (empty -> .)
    GT              reduce using rule 121 (empty -> .)
    GTE             reduce using rule 121 (empty -> .)
    LTE             reduce using rule 121 (empty -> .)
    EQ              reduce using rule 121 (empty -> .)
    NE              reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    QUESTION        reduce using rule 121 (empty -> .)

  ! OBRACKET        [ reduce using rule 121 (empty -> .) ]

    variable1                      shift and go to state 138
    empty                          shift and go to state 140

state 78

    (112) factor -> OPAREN exp . CPAREN

    CPAREN          shift and go to state 141


state 79

    (69) condicion -> IF cond2 . THEN bloque cond1 SEMICOLON

    THEN            shift and go to state 142


state 80

    (73) cond2 -> OPAREN . exp CPAREN
    (90) exp -> . texp exp1
    (93) texp -> . gexp texp1
    (96) gexp -> . mexp gexp1
    (104) mexp -> . termino mexp1
    (108) termino -> . factor term1
    (112) factor -> . OPAREN exp CPAREN
    (113) factor -> . varcst
    (114) factor -> . variable
    (115) factor -> . llamada
    (116) varcst -> . CSTINT
    (117) varcst -> . CSTFLT
    (118) varcst -> . CSTCHAR
    (119) varcst -> . CSTSTRING
    (120) varcst -> . boolean
    (81) variable -> . ID saw_id variable1 variable1 variable2
    (86) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (87) llamada -> . ID saw_id OPAREN CPAREN
    (79) boolean -> . TRUE
    (80) boolean -> . FALSE

    OPAREN          shift and go to state 31
    CSTINT          shift and go to state 45
    CSTFLT          shift and go to state 46
    CSTCHAR         shift and go to state 47
    CSTSTRING       shift and go to state 48
    ID              shift and go to state 74
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    exp                            shift and go to state 143
    texp                           shift and go to state 39
    gexp                           shift and go to state 40
    mexp                           shift and go to state 41
    termino                        shift and go to state 42
    factor                         shift and go to state 43
    varcst                         shift and go to state 44
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 49

state 81

    (75) escritura -> PRINT OPAREN . exp e1 CPAREN
    (90) exp -> . texp exp1
    (93) texp -> . gexp texp1
    (96) gexp -> . mexp gexp1
    (104) mexp -> . termino mexp1
    (108) termino -> . factor term1
    (112) factor -> . OPAREN exp CPAREN
    (113) factor -> . varcst
    (114) factor -> . variable
    (115) factor -> . llamada
    (116) varcst -> . CSTINT
    (117) varcst -> . CSTFLT
    (118) varcst -> . CSTCHAR
    (119) varcst -> . CSTSTRING
    (120) varcst -> . boolean
    (81) variable -> . ID saw_id variable1 variable1 variable2
    (86) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (87) llamada -> . ID saw_id OPAREN CPAREN
    (79) boolean -> . TRUE
    (80) boolean -> . FALSE

    OPAREN          shift and go to state 31
    CSTINT          shift and go to state 45
    CSTFLT          shift and go to state 46
    CSTCHAR         shift and go to state 47
    CSTSTRING       shift and go to state 48
    ID              shift and go to state 74
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    exp                            shift and go to state 144
    texp                           shift and go to state 39
    gexp                           shift and go to state 40
    mexp                           shift and go to state 41
    termino                        shift and go to state 42
    factor                         shift and go to state 43
    varcst                         shift and go to state 44
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 49

state 82

    (78) leer -> READ OPAREN . exp e1 CPAREN
    (90) exp -> . texp exp1
    (93) texp -> . gexp texp1
    (96) gexp -> . mexp gexp1
    (104) mexp -> . termino mexp1
    (108) termino -> . factor term1
    (112) factor -> . OPAREN exp CPAREN
    (113) factor -> . varcst
    (114) factor -> . variable
    (115) factor -> . llamada
    (116) varcst -> . CSTINT
    (117) varcst -> . CSTFLT
    (118) varcst -> . CSTCHAR
    (119) varcst -> . CSTSTRING
    (120) varcst -> . boolean
    (81) variable -> . ID saw_id variable1 variable1 variable2
    (86) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (87) llamada -> . ID saw_id OPAREN CPAREN
    (79) boolean -> . TRUE
    (80) boolean -> . FALSE

    OPAREN          shift and go to state 31
    CSTINT          shift and go to state 45
    CSTFLT          shift and go to state 46
    CSTCHAR         shift and go to state 47
    CSTSTRING       shift and go to state 48
    ID              shift and go to state 74
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    exp                            shift and go to state 145
    texp                           shift and go to state 39
    gexp                           shift and go to state 40
    mexp                           shift and go to state 41
    termino                        shift and go to state 42
    factor                         shift and go to state 43
    varcst                         shift and go to state 44
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 49

state 83

    (18) ciclo_while -> WHILE cond2 . THEN bloque SEMICOLON

    THEN            shift and go to state 146


state 84

    (19) ciclo_for -> FOR OPAREN . variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
    (81) variable -> . ID saw_id variable1 variable1 variable2

    ID              shift and go to state 148

    variable                       shift and go to state 147

state 85

    (3) funcion -> FUNCTION func1 . ID saw_id saw_function OPAREN param CPAREN bloque

    ID              shift and go to state 149


state 86

    (4) func1 -> simple .

    ID              reduce using rule 4 (func1 -> simple .)


state 87

    (5) func1 -> VOID . saw_type
    (124) saw_type -> .

    ID              reduce using rule 124 (saw_type -> .)

    saw_type                       shift and go to state 150

state 88

    (12) clase -> CLASS ID . saw_id saw_class COLON clase_bloque SEMICOLON
    (125) saw_id -> .

    COLON           reduce using rule 125 (saw_id -> .)

    saw_id                         shift and go to state 151

state 89

    (90) exp -> texp exp1 .

    QUESTION        reduce using rule 90 (exp -> texp exp1 .)
    RETURN          reduce using rule 90 (exp -> texp exp1 .)
    ID              reduce using rule 90 (exp -> texp exp1 .)
    IF              reduce using rule 90 (exp -> texp exp1 .)
    PRINT           reduce using rule 90 (exp -> texp exp1 .)
    READ            reduce using rule 90 (exp -> texp exp1 .)
    WHILE           reduce using rule 90 (exp -> texp exp1 .)
    FOR             reduce using rule 90 (exp -> texp exp1 .)
    OCURLY          reduce using rule 90 (exp -> texp exp1 .)
    FUNCTION        reduce using rule 90 (exp -> texp exp1 .)
    CLASS           reduce using rule 90 (exp -> texp exp1 .)
    VAR             reduce using rule 90 (exp -> texp exp1 .)
    OPAREN          reduce using rule 90 (exp -> texp exp1 .)
    CSTINT          reduce using rule 90 (exp -> texp exp1 .)
    CSTFLT          reduce using rule 90 (exp -> texp exp1 .)
    CSTCHAR         reduce using rule 90 (exp -> texp exp1 .)
    CSTSTRING       reduce using rule 90 (exp -> texp exp1 .)
    TRUE            reduce using rule 90 (exp -> texp exp1 .)
    FALSE           reduce using rule 90 (exp -> texp exp1 .)
    CCURLY          reduce using rule 90 (exp -> texp exp1 .)
    CPAREN          reduce using rule 90 (exp -> texp exp1 .)
    COLON           reduce using rule 90 (exp -> texp exp1 .)
    SEMICOLON       reduce using rule 90 (exp -> texp exp1 .)
    COMMA           reduce using rule 90 (exp -> texp exp1 .)
    CBRACKET        reduce using rule 90 (exp -> texp exp1 .)


state 90

    (91) exp1 -> OR . texp exp1
    (93) texp -> . gexp texp1
    (96) gexp -> . mexp gexp1
    (104) mexp -> . termino mexp1
    (108) termino -> . factor term1
    (112) factor -> . OPAREN exp CPAREN
    (113) factor -> . varcst
    (114) factor -> . variable
    (115) factor -> . llamada
    (116) varcst -> . CSTINT
    (117) varcst -> . CSTFLT
    (118) varcst -> . CSTCHAR
    (119) varcst -> . CSTSTRING
    (120) varcst -> . boolean
    (81) variable -> . ID saw_id variable1 variable1 variable2
    (86) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (87) llamada -> . ID saw_id OPAREN CPAREN
    (79) boolean -> . TRUE
    (80) boolean -> . FALSE

    OPAREN          shift and go to state 31
    CSTINT          shift and go to state 45
    CSTFLT          shift and go to state 46
    CSTCHAR         shift and go to state 47
    CSTSTRING       shift and go to state 48
    ID              shift and go to state 74
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    texp                           shift and go to state 152
    gexp                           shift and go to state 40
    mexp                           shift and go to state 41
    termino                        shift and go to state 42
    factor                         shift and go to state 43
    varcst                         shift and go to state 44
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 49

state 91

    (92) exp1 -> empty .

    QUESTION        reduce using rule 92 (exp1 -> empty .)
    RETURN          reduce using rule 92 (exp1 -> empty .)
    ID              reduce using rule 92 (exp1 -> empty .)
    IF              reduce using rule 92 (exp1 -> empty .)
    PRINT           reduce using rule 92 (exp1 -> empty .)
    READ            reduce using rule 92 (exp1 -> empty .)
    WHILE           reduce using rule 92 (exp1 -> empty .)
    FOR             reduce using rule 92 (exp1 -> empty .)
    OCURLY          reduce using rule 92 (exp1 -> empty .)
    FUNCTION        reduce using rule 92 (exp1 -> empty .)
    CLASS           reduce using rule 92 (exp1 -> empty .)
    VAR             reduce using rule 92 (exp1 -> empty .)
    OPAREN          reduce using rule 92 (exp1 -> empty .)
    CSTINT          reduce using rule 92 (exp1 -> empty .)
    CSTFLT          reduce using rule 92 (exp1 -> empty .)
    CSTCHAR         reduce using rule 92 (exp1 -> empty .)
    CSTSTRING       reduce using rule 92 (exp1 -> empty .)
    TRUE            reduce using rule 92 (exp1 -> empty .)
    FALSE           reduce using rule 92 (exp1 -> empty .)
    CCURLY          reduce using rule 92 (exp1 -> empty .)
    CPAREN          reduce using rule 92 (exp1 -> empty .)
    COLON           reduce using rule 92 (exp1 -> empty .)
    SEMICOLON       reduce using rule 92 (exp1 -> empty .)
    COMMA           reduce using rule 92 (exp1 -> empty .)
    CBRACKET        reduce using rule 92 (exp1 -> empty .)


state 92

    (93) texp -> gexp texp1 .

    OR              reduce using rule 93 (texp -> gexp texp1 .)
    QUESTION        reduce using rule 93 (texp -> gexp texp1 .)
    RETURN          reduce using rule 93 (texp -> gexp texp1 .)
    ID              reduce using rule 93 (texp -> gexp texp1 .)
    IF              reduce using rule 93 (texp -> gexp texp1 .)
    PRINT           reduce using rule 93 (texp -> gexp texp1 .)
    READ            reduce using rule 93 (texp -> gexp texp1 .)
    WHILE           reduce using rule 93 (texp -> gexp texp1 .)
    FOR             reduce using rule 93 (texp -> gexp texp1 .)
    OCURLY          reduce using rule 93 (texp -> gexp texp1 .)
    FUNCTION        reduce using rule 93 (texp -> gexp texp1 .)
    CLASS           reduce using rule 93 (texp -> gexp texp1 .)
    VAR             reduce using rule 93 (texp -> gexp texp1 .)
    OPAREN          reduce using rule 93 (texp -> gexp texp1 .)
    CSTINT          reduce using rule 93 (texp -> gexp texp1 .)
    CSTFLT          reduce using rule 93 (texp -> gexp texp1 .)
    CSTCHAR         reduce using rule 93 (texp -> gexp texp1 .)
    CSTSTRING       reduce using rule 93 (texp -> gexp texp1 .)
    TRUE            reduce using rule 93 (texp -> gexp texp1 .)
    FALSE           reduce using rule 93 (texp -> gexp texp1 .)
    CCURLY          reduce using rule 93 (texp -> gexp texp1 .)
    CPAREN          reduce using rule 93 (texp -> gexp texp1 .)
    COLON           reduce using rule 93 (texp -> gexp texp1 .)
    SEMICOLON       reduce using rule 93 (texp -> gexp texp1 .)
    COMMA           reduce using rule 93 (texp -> gexp texp1 .)
    CBRACKET        reduce using rule 93 (texp -> gexp texp1 .)


state 93

    (94) texp1 -> AND . gexp texp1
    (96) gexp -> . mexp gexp1
    (104) mexp -> . termino mexp1
    (108) termino -> . factor term1
    (112) factor -> . OPAREN exp CPAREN
    (113) factor -> . varcst
    (114) factor -> . variable
    (115) factor -> . llamada
    (116) varcst -> . CSTINT
    (117) varcst -> . CSTFLT
    (118) varcst -> . CSTCHAR
    (119) varcst -> . CSTSTRING
    (120) varcst -> . boolean
    (81) variable -> . ID saw_id variable1 variable1 variable2
    (86) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (87) llamada -> . ID saw_id OPAREN CPAREN
    (79) boolean -> . TRUE
    (80) boolean -> . FALSE

    OPAREN          shift and go to state 31
    CSTINT          shift and go to state 45
    CSTFLT          shift and go to state 46
    CSTCHAR         shift and go to state 47
    CSTSTRING       shift and go to state 48
    ID              shift and go to state 74
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    gexp                           shift and go to state 153
    mexp                           shift and go to state 41
    termino                        shift and go to state 42
    factor                         shift and go to state 43
    varcst                         shift and go to state 44
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 49

state 94

    (95) texp1 -> empty .

    OR              reduce using rule 95 (texp1 -> empty .)
    QUESTION        reduce using rule 95 (texp1 -> empty .)
    RETURN          reduce using rule 95 (texp1 -> empty .)
    ID              reduce using rule 95 (texp1 -> empty .)
    IF              reduce using rule 95 (texp1 -> empty .)
    PRINT           reduce using rule 95 (texp1 -> empty .)
    READ            reduce using rule 95 (texp1 -> empty .)
    WHILE           reduce using rule 95 (texp1 -> empty .)
    FOR             reduce using rule 95 (texp1 -> empty .)
    OCURLY          reduce using rule 95 (texp1 -> empty .)
    FUNCTION        reduce using rule 95 (texp1 -> empty .)
    CLASS           reduce using rule 95 (texp1 -> empty .)
    VAR             reduce using rule 95 (texp1 -> empty .)
    OPAREN          reduce using rule 95 (texp1 -> empty .)
    CSTINT          reduce using rule 95 (texp1 -> empty .)
    CSTFLT          reduce using rule 95 (texp1 -> empty .)
    CSTCHAR         reduce using rule 95 (texp1 -> empty .)
    CSTSTRING       reduce using rule 95 (texp1 -> empty .)
    TRUE            reduce using rule 95 (texp1 -> empty .)
    FALSE           reduce using rule 95 (texp1 -> empty .)
    CCURLY          reduce using rule 95 (texp1 -> empty .)
    CPAREN          reduce using rule 95 (texp1 -> empty .)
    COLON           reduce using rule 95 (texp1 -> empty .)
    SEMICOLON       reduce using rule 95 (texp1 -> empty .)
    COMMA           reduce using rule 95 (texp1 -> empty .)
    CBRACKET        reduce using rule 95 (texp1 -> empty .)


state 95

    (96) gexp -> mexp gexp1 .

    AND             reduce using rule 96 (gexp -> mexp gexp1 .)
    OR              reduce using rule 96 (gexp -> mexp gexp1 .)
    QUESTION        reduce using rule 96 (gexp -> mexp gexp1 .)
    RETURN          reduce using rule 96 (gexp -> mexp gexp1 .)
    ID              reduce using rule 96 (gexp -> mexp gexp1 .)
    IF              reduce using rule 96 (gexp -> mexp gexp1 .)
    PRINT           reduce using rule 96 (gexp -> mexp gexp1 .)
    READ            reduce using rule 96 (gexp -> mexp gexp1 .)
    WHILE           reduce using rule 96 (gexp -> mexp gexp1 .)
    FOR             reduce using rule 96 (gexp -> mexp gexp1 .)
    OCURLY          reduce using rule 96 (gexp -> mexp gexp1 .)
    FUNCTION        reduce using rule 96 (gexp -> mexp gexp1 .)
    CLASS           reduce using rule 96 (gexp -> mexp gexp1 .)
    VAR             reduce using rule 96 (gexp -> mexp gexp1 .)
    OPAREN          reduce using rule 96 (gexp -> mexp gexp1 .)
    CSTINT          reduce using rule 96 (gexp -> mexp gexp1 .)
    CSTFLT          reduce using rule 96 (gexp -> mexp gexp1 .)
    CSTCHAR         reduce using rule 96 (gexp -> mexp gexp1 .)
    CSTSTRING       reduce using rule 96 (gexp -> mexp gexp1 .)
    TRUE            reduce using rule 96 (gexp -> mexp gexp1 .)
    FALSE           reduce using rule 96 (gexp -> mexp gexp1 .)
    CCURLY          reduce using rule 96 (gexp -> mexp gexp1 .)
    CPAREN          reduce using rule 96 (gexp -> mexp gexp1 .)
    COLON           reduce using rule 96 (gexp -> mexp gexp1 .)
    SEMICOLON       reduce using rule 96 (gexp -> mexp gexp1 .)
    COMMA           reduce using rule 96 (gexp -> mexp gexp1 .)
    CBRACKET        reduce using rule 96 (gexp -> mexp gexp1 .)


state 96

    (97) gexp1 -> LT . mexp
    (104) mexp -> . termino mexp1
    (108) termino -> . factor term1
    (112) factor -> . OPAREN exp CPAREN
    (113) factor -> . varcst
    (114) factor -> . variable
    (115) factor -> . llamada
    (116) varcst -> . CSTINT
    (117) varcst -> . CSTFLT
    (118) varcst -> . CSTCHAR
    (119) varcst -> . CSTSTRING
    (120) varcst -> . boolean
    (81) variable -> . ID saw_id variable1 variable1 variable2
    (86) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (87) llamada -> . ID saw_id OPAREN CPAREN
    (79) boolean -> . TRUE
    (80) boolean -> . FALSE

    OPAREN          shift and go to state 31
    CSTINT          shift and go to state 45
    CSTFLT          shift and go to state 46
    CSTCHAR         shift and go to state 47
    CSTSTRING       shift and go to state 48
    ID              shift and go to state 74
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    mexp                           shift and go to state 154
    termino                        shift and go to state 42
    factor                         shift and go to state 43
    varcst                         shift and go to state 44
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 49

state 97

    (98) gexp1 -> GT . mexp
    (104) mexp -> . termino mexp1
    (108) termino -> . factor term1
    (112) factor -> . OPAREN exp CPAREN
    (113) factor -> . varcst
    (114) factor -> . variable
    (115) factor -> . llamada
    (116) varcst -> . CSTINT
    (117) varcst -> . CSTFLT
    (118) varcst -> . CSTCHAR
    (119) varcst -> . CSTSTRING
    (120) varcst -> . boolean
    (81) variable -> . ID saw_id variable1 variable1 variable2
    (86) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (87) llamada -> . ID saw_id OPAREN CPAREN
    (79) boolean -> . TRUE
    (80) boolean -> . FALSE

    OPAREN          shift and go to state 31
    CSTINT          shift and go to state 45
    CSTFLT          shift and go to state 46
    CSTCHAR         shift and go to state 47
    CSTSTRING       shift and go to state 48
    ID              shift and go to state 74
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    mexp                           shift and go to state 155
    termino                        shift and go to state 42
    factor                         shift and go to state 43
    varcst                         shift and go to state 44
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 49

state 98

    (99) gexp1 -> GTE . mexp
    (104) mexp -> . termino mexp1
    (108) termino -> . factor term1
    (112) factor -> . OPAREN exp CPAREN
    (113) factor -> . varcst
    (114) factor -> . variable
    (115) factor -> . llamada
    (116) varcst -> . CSTINT
    (117) varcst -> . CSTFLT
    (118) varcst -> . CSTCHAR
    (119) varcst -> . CSTSTRING
    (120) varcst -> . boolean
    (81) variable -> . ID saw_id variable1 variable1 variable2
    (86) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (87) llamada -> . ID saw_id OPAREN CPAREN
    (79) boolean -> . TRUE
    (80) boolean -> . FALSE

    OPAREN          shift and go to state 31
    CSTINT          shift and go to state 45
    CSTFLT          shift and go to state 46
    CSTCHAR         shift and go to state 47
    CSTSTRING       shift and go to state 48
    ID              shift and go to state 74
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    mexp                           shift and go to state 156
    termino                        shift and go to state 42
    factor                         shift and go to state 43
    varcst                         shift and go to state 44
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 49

state 99

    (100) gexp1 -> LTE . mexp
    (104) mexp -> . termino mexp1
    (108) termino -> . factor term1
    (112) factor -> . OPAREN exp CPAREN
    (113) factor -> . varcst
    (114) factor -> . variable
    (115) factor -> . llamada
    (116) varcst -> . CSTINT
    (117) varcst -> . CSTFLT
    (118) varcst -> . CSTCHAR
    (119) varcst -> . CSTSTRING
    (120) varcst -> . boolean
    (81) variable -> . ID saw_id variable1 variable1 variable2
    (86) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (87) llamada -> . ID saw_id OPAREN CPAREN
    (79) boolean -> . TRUE
    (80) boolean -> . FALSE

    OPAREN          shift and go to state 31
    CSTINT          shift and go to state 45
    CSTFLT          shift and go to state 46
    CSTCHAR         shift and go to state 47
    CSTSTRING       shift and go to state 48
    ID              shift and go to state 74
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    mexp                           shift and go to state 157
    termino                        shift and go to state 42
    factor                         shift and go to state 43
    varcst                         shift and go to state 44
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 49

state 100

    (101) gexp1 -> EQ . mexp
    (104) mexp -> . termino mexp1
    (108) termino -> . factor term1
    (112) factor -> . OPAREN exp CPAREN
    (113) factor -> . varcst
    (114) factor -> . variable
    (115) factor -> . llamada
    (116) varcst -> . CSTINT
    (117) varcst -> . CSTFLT
    (118) varcst -> . CSTCHAR
    (119) varcst -> . CSTSTRING
    (120) varcst -> . boolean
    (81) variable -> . ID saw_id variable1 variable1 variable2
    (86) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (87) llamada -> . ID saw_id OPAREN CPAREN
    (79) boolean -> . TRUE
    (80) boolean -> . FALSE

    OPAREN          shift and go to state 31
    CSTINT          shift and go to state 45
    CSTFLT          shift and go to state 46
    CSTCHAR         shift and go to state 47
    CSTSTRING       shift and go to state 48
    ID              shift and go to state 74
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    mexp                           shift and go to state 158
    termino                        shift and go to state 42
    factor                         shift and go to state 43
    varcst                         shift and go to state 44
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 49

state 101

    (102) gexp1 -> NE . mexp
    (104) mexp -> . termino mexp1
    (108) termino -> . factor term1
    (112) factor -> . OPAREN exp CPAREN
    (113) factor -> . varcst
    (114) factor -> . variable
    (115) factor -> . llamada
    (116) varcst -> . CSTINT
    (117) varcst -> . CSTFLT
    (118) varcst -> . CSTCHAR
    (119) varcst -> . CSTSTRING
    (120) varcst -> . boolean
    (81) variable -> . ID saw_id variable1 variable1 variable2
    (86) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (87) llamada -> . ID saw_id OPAREN CPAREN
    (79) boolean -> . TRUE
    (80) boolean -> . FALSE

    OPAREN          shift and go to state 31
    CSTINT          shift and go to state 45
    CSTFLT          shift and go to state 46
    CSTCHAR         shift and go to state 47
    CSTSTRING       shift and go to state 48
    ID              shift and go to state 74
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    mexp                           shift and go to state 159
    termino                        shift and go to state 42
    factor                         shift and go to state 43
    varcst                         shift and go to state 44
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 49

state 102

    (103) gexp1 -> empty .

    AND             reduce using rule 103 (gexp1 -> empty .)
    OR              reduce using rule 103 (gexp1 -> empty .)
    QUESTION        reduce using rule 103 (gexp1 -> empty .)
    RETURN          reduce using rule 103 (gexp1 -> empty .)
    ID              reduce using rule 103 (gexp1 -> empty .)
    IF              reduce using rule 103 (gexp1 -> empty .)
    PRINT           reduce using rule 103 (gexp1 -> empty .)
    READ            reduce using rule 103 (gexp1 -> empty .)
    WHILE           reduce using rule 103 (gexp1 -> empty .)
    FOR             reduce using rule 103 (gexp1 -> empty .)
    OCURLY          reduce using rule 103 (gexp1 -> empty .)
    FUNCTION        reduce using rule 103 (gexp1 -> empty .)
    CLASS           reduce using rule 103 (gexp1 -> empty .)
    VAR             reduce using rule 103 (gexp1 -> empty .)
    OPAREN          reduce using rule 103 (gexp1 -> empty .)
    CSTINT          reduce using rule 103 (gexp1 -> empty .)
    CSTFLT          reduce using rule 103 (gexp1 -> empty .)
    CSTCHAR         reduce using rule 103 (gexp1 -> empty .)
    CSTSTRING       reduce using rule 103 (gexp1 -> empty .)
    TRUE            reduce using rule 103 (gexp1 -> empty .)
    FALSE           reduce using rule 103 (gexp1 -> empty .)
    CCURLY          reduce using rule 103 (gexp1 -> empty .)
    CPAREN          reduce using rule 103 (gexp1 -> empty .)
    COLON           reduce using rule 103 (gexp1 -> empty .)
    SEMICOLON       reduce using rule 103 (gexp1 -> empty .)
    COMMA           reduce using rule 103 (gexp1 -> empty .)
    CBRACKET        reduce using rule 103 (gexp1 -> empty .)


state 103

    (104) mexp -> termino mexp1 .

    LT              reduce using rule 104 (mexp -> termino mexp1 .)
    GT              reduce using rule 104 (mexp -> termino mexp1 .)
    GTE             reduce using rule 104 (mexp -> termino mexp1 .)
    LTE             reduce using rule 104 (mexp -> termino mexp1 .)
    EQ              reduce using rule 104 (mexp -> termino mexp1 .)
    NE              reduce using rule 104 (mexp -> termino mexp1 .)
    AND             reduce using rule 104 (mexp -> termino mexp1 .)
    OR              reduce using rule 104 (mexp -> termino mexp1 .)
    QUESTION        reduce using rule 104 (mexp -> termino mexp1 .)
    RETURN          reduce using rule 104 (mexp -> termino mexp1 .)
    ID              reduce using rule 104 (mexp -> termino mexp1 .)
    IF              reduce using rule 104 (mexp -> termino mexp1 .)
    PRINT           reduce using rule 104 (mexp -> termino mexp1 .)
    READ            reduce using rule 104 (mexp -> termino mexp1 .)
    WHILE           reduce using rule 104 (mexp -> termino mexp1 .)
    FOR             reduce using rule 104 (mexp -> termino mexp1 .)
    OCURLY          reduce using rule 104 (mexp -> termino mexp1 .)
    FUNCTION        reduce using rule 104 (mexp -> termino mexp1 .)
    CLASS           reduce using rule 104 (mexp -> termino mexp1 .)
    VAR             reduce using rule 104 (mexp -> termino mexp1 .)
    OPAREN          reduce using rule 104 (mexp -> termino mexp1 .)
    CSTINT          reduce using rule 104 (mexp -> termino mexp1 .)
    CSTFLT          reduce using rule 104 (mexp -> termino mexp1 .)
    CSTCHAR         reduce using rule 104 (mexp -> termino mexp1 .)
    CSTSTRING       reduce using rule 104 (mexp -> termino mexp1 .)
    TRUE            reduce using rule 104 (mexp -> termino mexp1 .)
    FALSE           reduce using rule 104 (mexp -> termino mexp1 .)
    CCURLY          reduce using rule 104 (mexp -> termino mexp1 .)
    CPAREN          reduce using rule 104 (mexp -> termino mexp1 .)
    COLON           reduce using rule 104 (mexp -> termino mexp1 .)
    SEMICOLON       reduce using rule 104 (mexp -> termino mexp1 .)
    COMMA           reduce using rule 104 (mexp -> termino mexp1 .)
    CBRACKET        reduce using rule 104 (mexp -> termino mexp1 .)


state 104

    (105) mexp1 -> PLUS . termino mexp1
    (108) termino -> . factor term1
    (112) factor -> . OPAREN exp CPAREN
    (113) factor -> . varcst
    (114) factor -> . variable
    (115) factor -> . llamada
    (116) varcst -> . CSTINT
    (117) varcst -> . CSTFLT
    (118) varcst -> . CSTCHAR
    (119) varcst -> . CSTSTRING
    (120) varcst -> . boolean
    (81) variable -> . ID saw_id variable1 variable1 variable2
    (86) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (87) llamada -> . ID saw_id OPAREN CPAREN
    (79) boolean -> . TRUE
    (80) boolean -> . FALSE

    OPAREN          shift and go to state 31
    CSTINT          shift and go to state 45
    CSTFLT          shift and go to state 46
    CSTCHAR         shift and go to state 47
    CSTSTRING       shift and go to state 48
    ID              shift and go to state 74
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    termino                        shift and go to state 160
    factor                         shift and go to state 43
    varcst                         shift and go to state 44
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 49

state 105

    (106) mexp1 -> MINUS . termino mexp1
    (108) termino -> . factor term1
    (112) factor -> . OPAREN exp CPAREN
    (113) factor -> . varcst
    (114) factor -> . variable
    (115) factor -> . llamada
    (116) varcst -> . CSTINT
    (117) varcst -> . CSTFLT
    (118) varcst -> . CSTCHAR
    (119) varcst -> . CSTSTRING
    (120) varcst -> . boolean
    (81) variable -> . ID saw_id variable1 variable1 variable2
    (86) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (87) llamada -> . ID saw_id OPAREN CPAREN
    (79) boolean -> . TRUE
    (80) boolean -> . FALSE

    OPAREN          shift and go to state 31
    CSTINT          shift and go to state 45
    CSTFLT          shift and go to state 46
    CSTCHAR         shift and go to state 47
    CSTSTRING       shift and go to state 48
    ID              shift and go to state 74
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    termino                        shift and go to state 161
    factor                         shift and go to state 43
    varcst                         shift and go to state 44
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 49

state 106

    (107) mexp1 -> empty .

    LT              reduce using rule 107 (mexp1 -> empty .)
    GT              reduce using rule 107 (mexp1 -> empty .)
    GTE             reduce using rule 107 (mexp1 -> empty .)
    LTE             reduce using rule 107 (mexp1 -> empty .)
    EQ              reduce using rule 107 (mexp1 -> empty .)
    NE              reduce using rule 107 (mexp1 -> empty .)
    AND             reduce using rule 107 (mexp1 -> empty .)
    OR              reduce using rule 107 (mexp1 -> empty .)
    QUESTION        reduce using rule 107 (mexp1 -> empty .)
    RETURN          reduce using rule 107 (mexp1 -> empty .)
    ID              reduce using rule 107 (mexp1 -> empty .)
    IF              reduce using rule 107 (mexp1 -> empty .)
    PRINT           reduce using rule 107 (mexp1 -> empty .)
    READ            reduce using rule 107 (mexp1 -> empty .)
    WHILE           reduce using rule 107 (mexp1 -> empty .)
    FOR             reduce using rule 107 (mexp1 -> empty .)
    OCURLY          reduce using rule 107 (mexp1 -> empty .)
    FUNCTION        reduce using rule 107 (mexp1 -> empty .)
    CLASS           reduce using rule 107 (mexp1 -> empty .)
    VAR             reduce using rule 107 (mexp1 -> empty .)
    OPAREN          reduce using rule 107 (mexp1 -> empty .)
    CSTINT          reduce using rule 107 (mexp1 -> empty .)
    CSTFLT          reduce using rule 107 (mexp1 -> empty .)
    CSTCHAR         reduce using rule 107 (mexp1 -> empty .)
    CSTSTRING       reduce using rule 107 (mexp1 -> empty .)
    TRUE            reduce using rule 107 (mexp1 -> empty .)
    FALSE           reduce using rule 107 (mexp1 -> empty .)
    CCURLY          reduce using rule 107 (mexp1 -> empty .)
    CPAREN          reduce using rule 107 (mexp1 -> empty .)
    COLON           reduce using rule 107 (mexp1 -> empty .)
    SEMICOLON       reduce using rule 107 (mexp1 -> empty .)
    COMMA           reduce using rule 107 (mexp1 -> empty .)
    CBRACKET        reduce using rule 107 (mexp1 -> empty .)


state 107

    (108) termino -> factor term1 .

    PLUS            reduce using rule 108 (termino -> factor term1 .)
    MINUS           reduce using rule 108 (termino -> factor term1 .)
    LT              reduce using rule 108 (termino -> factor term1 .)
    GT              reduce using rule 108 (termino -> factor term1 .)
    GTE             reduce using rule 108 (termino -> factor term1 .)
    LTE             reduce using rule 108 (termino -> factor term1 .)
    EQ              reduce using rule 108 (termino -> factor term1 .)
    NE              reduce using rule 108 (termino -> factor term1 .)
    AND             reduce using rule 108 (termino -> factor term1 .)
    OR              reduce using rule 108 (termino -> factor term1 .)
    QUESTION        reduce using rule 108 (termino -> factor term1 .)
    RETURN          reduce using rule 108 (termino -> factor term1 .)
    ID              reduce using rule 108 (termino -> factor term1 .)
    IF              reduce using rule 108 (termino -> factor term1 .)
    PRINT           reduce using rule 108 (termino -> factor term1 .)
    READ            reduce using rule 108 (termino -> factor term1 .)
    WHILE           reduce using rule 108 (termino -> factor term1 .)
    FOR             reduce using rule 108 (termino -> factor term1 .)
    OCURLY          reduce using rule 108 (termino -> factor term1 .)
    FUNCTION        reduce using rule 108 (termino -> factor term1 .)
    CLASS           reduce using rule 108 (termino -> factor term1 .)
    VAR             reduce using rule 108 (termino -> factor term1 .)
    OPAREN          reduce using rule 108 (termino -> factor term1 .)
    CSTINT          reduce using rule 108 (termino -> factor term1 .)
    CSTFLT          reduce using rule 108 (termino -> factor term1 .)
    CSTCHAR         reduce using rule 108 (termino -> factor term1 .)
    CSTSTRING       reduce using rule 108 (termino -> factor term1 .)
    TRUE            reduce using rule 108 (termino -> factor term1 .)
    FALSE           reduce using rule 108 (termino -> factor term1 .)
    CCURLY          reduce using rule 108 (termino -> factor term1 .)
    CPAREN          reduce using rule 108 (termino -> factor term1 .)
    COLON           reduce using rule 108 (termino -> factor term1 .)
    SEMICOLON       reduce using rule 108 (termino -> factor term1 .)
    COMMA           reduce using rule 108 (termino -> factor term1 .)
    CBRACKET        reduce using rule 108 (termino -> factor term1 .)


state 108

    (109) term1 -> MULT . factor term1
    (112) factor -> . OPAREN exp CPAREN
    (113) factor -> . varcst
    (114) factor -> . variable
    (115) factor -> . llamada
    (116) varcst -> . CSTINT
    (117) varcst -> . CSTFLT
    (118) varcst -> . CSTCHAR
    (119) varcst -> . CSTSTRING
    (120) varcst -> . boolean
    (81) variable -> . ID saw_id variable1 variable1 variable2
    (86) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (87) llamada -> . ID saw_id OPAREN CPAREN
    (79) boolean -> . TRUE
    (80) boolean -> . FALSE

    OPAREN          shift and go to state 31
    CSTINT          shift and go to state 45
    CSTFLT          shift and go to state 46
    CSTCHAR         shift and go to state 47
    CSTSTRING       shift and go to state 48
    ID              shift and go to state 74
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    factor                         shift and go to state 162
    varcst                         shift and go to state 44
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 49

state 109

    (110) term1 -> DIV . factor term1
    (112) factor -> . OPAREN exp CPAREN
    (113) factor -> . varcst
    (114) factor -> . variable
    (115) factor -> . llamada
    (116) varcst -> . CSTINT
    (117) varcst -> . CSTFLT
    (118) varcst -> . CSTCHAR
    (119) varcst -> . CSTSTRING
    (120) varcst -> . boolean
    (81) variable -> . ID saw_id variable1 variable1 variable2
    (86) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (87) llamada -> . ID saw_id OPAREN CPAREN
    (79) boolean -> . TRUE
    (80) boolean -> . FALSE

    OPAREN          shift and go to state 31
    CSTINT          shift and go to state 45
    CSTFLT          shift and go to state 46
    CSTCHAR         shift and go to state 47
    CSTSTRING       shift and go to state 48
    ID              shift and go to state 74
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    factor                         shift and go to state 163
    varcst                         shift and go to state 44
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 49

state 110

    (111) term1 -> empty .

    PLUS            reduce using rule 111 (term1 -> empty .)
    MINUS           reduce using rule 111 (term1 -> empty .)
    LT              reduce using rule 111 (term1 -> empty .)
    GT              reduce using rule 111 (term1 -> empty .)
    GTE             reduce using rule 111 (term1 -> empty .)
    LTE             reduce using rule 111 (term1 -> empty .)
    EQ              reduce using rule 111 (term1 -> empty .)
    NE              reduce using rule 111 (term1 -> empty .)
    AND             reduce using rule 111 (term1 -> empty .)
    OR              reduce using rule 111 (term1 -> empty .)
    QUESTION        reduce using rule 111 (term1 -> empty .)
    RETURN          reduce using rule 111 (term1 -> empty .)
    ID              reduce using rule 111 (term1 -> empty .)
    IF              reduce using rule 111 (term1 -> empty .)
    PRINT           reduce using rule 111 (term1 -> empty .)
    READ            reduce using rule 111 (term1 -> empty .)
    WHILE           reduce using rule 111 (term1 -> empty .)
    FOR             reduce using rule 111 (term1 -> empty .)
    OCURLY          reduce using rule 111 (term1 -> empty .)
    FUNCTION        reduce using rule 111 (term1 -> empty .)
    CLASS           reduce using rule 111 (term1 -> empty .)
    VAR             reduce using rule 111 (term1 -> empty .)
    OPAREN          reduce using rule 111 (term1 -> empty .)
    CSTINT          reduce using rule 111 (term1 -> empty .)
    CSTFLT          reduce using rule 111 (term1 -> empty .)
    CSTCHAR         reduce using rule 111 (term1 -> empty .)
    CSTSTRING       reduce using rule 111 (term1 -> empty .)
    TRUE            reduce using rule 111 (term1 -> empty .)
    FALSE           reduce using rule 111 (term1 -> empty .)
    CCURLY          reduce using rule 111 (term1 -> empty .)
    CPAREN          reduce using rule 111 (term1 -> empty .)
    COLON           reduce using rule 111 (term1 -> empty .)
    SEMICOLON       reduce using rule 111 (term1 -> empty .)
    COMMA           reduce using rule 111 (term1 -> empty .)
    CBRACKET        reduce using rule 111 (term1 -> empty .)


state 111

    (22) dec -> VAR tipo SEMICOLON . dec1
    (23) dec1 -> . dec
    (24) dec1 -> . empty
    (22) dec -> . VAR tipo SEMICOLON dec1
    (121) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 10
    OCURLY          reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    WHILE           reduce using rule 121 (empty -> .)
    FOR             reduce using rule 121 (empty -> .)
    FUNCTION        reduce using rule 121 (empty -> .)
    CLASS           reduce using rule 121 (empty -> .)
    OPAREN          reduce using rule 121 (empty -> .)
    CSTINT          reduce using rule 121 (empty -> .)
    CSTFLT          reduce using rule 121 (empty -> .)
    CSTCHAR         reduce using rule 121 (empty -> .)
    CSTSTRING       reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    CCURLY          reduce using rule 121 (empty -> .)
    METHODS         reduce using rule 121 (empty -> .)

  ! VAR             [ reduce using rule 121 (empty -> .) ]

    dec1                           shift and go to state 164
    dec                            shift and go to state 165
    empty                          shift and go to state 166

state 112

    (25) tipo -> compuesto ID . saw_id saw_variable tipo1
    (125) saw_id -> .

    COMMA           reduce using rule 125 (saw_id -> .)
    SEMICOLON       reduce using rule 125 (saw_id -> .)

    saw_id                         shift and go to state 167

state 113

    (44) compuesto -> ID saw_type .

    ID              reduce using rule 44 (compuesto -> ID saw_type .)


state 114

    (26) tipo -> simple ID . saw_id saw_variable tipo1
    (125) saw_id -> .

    COMMA           reduce using rule 125 (saw_id -> .)
    SEMICOLON       reduce using rule 125 (saw_id -> .)

    saw_id                         shift and go to state 168

state 115

    (27) tipo -> multiple ID . saw_id saw_variable OBRACKET CSTINT CBRACKET tipo3 tipo2
    (125) saw_id -> .

    OBRACKET        reduce using rule 125 (saw_id -> .)

    saw_id                         shift and go to state 169

state 116

    (45) compuesto -> DATAFRAME saw_type .

    ID              reduce using rule 45 (compuesto -> DATAFRAME saw_type .)


state 117

    (46) compuesto -> FILE saw_type .

    ID              reduce using rule 46 (compuesto -> FILE saw_type .)


state 118

    (34) simple -> INT saw_type .

    ID              reduce using rule 34 (simple -> INT saw_type .)


state 119

    (35) simple -> FLOAT saw_type .

    ID              reduce using rule 35 (simple -> FLOAT saw_type .)


state 120

    (36) simple -> BOOL saw_type .

    ID              reduce using rule 36 (simple -> BOOL saw_type .)


state 121

    (37) simple -> STRING saw_type .

    ID              reduce using rule 37 (simple -> STRING saw_type .)


state 122

    (38) simple -> CHAR saw_type .

    ID              reduce using rule 38 (simple -> CHAR saw_type .)


state 123

    (39) multiple -> INTS saw_type .

    ID              reduce using rule 39 (multiple -> INTS saw_type .)


state 124

    (40) multiple -> FLOATS saw_type .

    ID              reduce using rule 40 (multiple -> FLOATS saw_type .)


state 125

    (41) multiple -> BOOLS saw_type .

    ID              reduce using rule 41 (multiple -> BOOLS saw_type .)


state 126

    (42) multiple -> STRINGS saw_type .

    ID              reduce using rule 42 (multiple -> STRINGS saw_type .)


state 127

    (43) multiple -> CHARS saw_type .

    ID              reduce using rule 43 (multiple -> CHARS saw_type .)


state 128

    (47) bloque -> OCURLY b1 CCURLY scope_end .

    $end            reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    RETURN          reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    ID              reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    IF              reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    PRINT           reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    READ            reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    WHILE           reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    FOR             reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    OCURLY          reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    FUNCTION        reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    CLASS           reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    VAR             reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    OPAREN          reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    CSTINT          reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    CSTFLT          reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    CSTCHAR         reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    CSTSTRING       reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    TRUE            reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    FALSE           reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    CCURLY          reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    ELSE            reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)
    SEMICOLON       reduce using rule 47 (bloque -> OCURLY b1 CCURLY scope_end .)


state 129

    (81) variable -> ID saw_id . variable1 variable1 variable2
    (86) llamada -> ID saw_id . OPAREN exp llamada1 CPAREN
    (87) llamada -> ID saw_id . OPAREN CPAREN
    (82) variable1 -> . OBRACKET exp CBRACKET
    (83) variable1 -> . empty
    (121) empty -> .

  ! shift/reduce conflict for OBRACKET resolved as shift
  ! shift/reduce conflict for OPAREN resolved as shift
    OPAREN          shift and go to state 137
    OBRACKET        shift and go to state 139
    PERIOD          reduce using rule 121 (empty -> .)
    MULT            reduce using rule 121 (empty -> .)
    DIV             reduce using rule 121 (empty -> .)
    PLUS            reduce using rule 121 (empty -> .)
    MINUS           reduce using rule 121 (empty -> .)
    LT              reduce using rule 121 (empty -> .)
    GT              reduce using rule 121 (empty -> .)
    GTE             reduce using rule 121 (empty -> .)
    LTE             reduce using rule 121 (empty -> .)
    EQ              reduce using rule 121 (empty -> .)
    NE              reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    WHILE           reduce using rule 121 (empty -> .)
    FOR             reduce using rule 121 (empty -> .)
    OCURLY          reduce using rule 121 (empty -> .)
    FUNCTION        reduce using rule 121 (empty -> .)
    CLASS           reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    CSTINT          reduce using rule 121 (empty -> .)
    CSTFLT          reduce using rule 121 (empty -> .)
    CSTCHAR         reduce using rule 121 (empty -> .)
    CSTSTRING       reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    CCURLY          reduce using rule 121 (empty -> .)
    CPAREN          reduce using rule 121 (empty -> .)
    COLON           reduce using rule 121 (empty -> .)
    SEMICOLON       reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    QUESTION        reduce using rule 121 (empty -> .)
    CBRACKET        reduce using rule 121 (empty -> .)

  ! OBRACKET        [ reduce using rule 121 (empty -> .) ]
  ! OPAREN          [ reduce using rule 121 (empty -> .) ]

    variable1                      shift and go to state 138
    empty                          shift and go to state 140

state 130

    (74) ternaria -> exp QUESTION estatuto_redux . COLON estatuto_redux SEMICOLON

    COLON           shift and go to state 170


state 131

    (63) estatuto_redux -> asignacion .

    COLON           reduce using rule 63 (estatuto_redux -> asignacion .)
    SEMICOLON       reduce using rule 63 (estatuto_redux -> asignacion .)


state 132

    (64) estatuto_redux -> llamada .
    (115) factor -> llamada .

    COLON           reduce using rule 64 (estatuto_redux -> llamada .)
    SEMICOLON       reduce using rule 64 (estatuto_redux -> llamada .)
    MULT            reduce using rule 115 (factor -> llamada .)
    DIV             reduce using rule 115 (factor -> llamada .)
    PLUS            reduce using rule 115 (factor -> llamada .)
    MINUS           reduce using rule 115 (factor -> llamada .)
    LT              reduce using rule 115 (factor -> llamada .)
    GT              reduce using rule 115 (factor -> llamada .)
    GTE             reduce using rule 115 (factor -> llamada .)
    LTE             reduce using rule 115 (factor -> llamada .)
    EQ              reduce using rule 115 (factor -> llamada .)
    NE              reduce using rule 115 (factor -> llamada .)
    AND             reduce using rule 115 (factor -> llamada .)
    OR              reduce using rule 115 (factor -> llamada .)
    QUESTION        reduce using rule 115 (factor -> llamada .)


state 133

    (65) estatuto_redux -> escritura .

    COLON           reduce using rule 65 (estatuto_redux -> escritura .)
    SEMICOLON       reduce using rule 65 (estatuto_redux -> escritura .)


state 134

    (66) estatuto_redux -> leer .

    COLON           reduce using rule 66 (estatuto_redux -> leer .)
    SEMICOLON       reduce using rule 66 (estatuto_redux -> leer .)


state 135

    (67) estatuto_redux -> ternaria .

    COLON           reduce using rule 67 (estatuto_redux -> ternaria .)
    SEMICOLON       reduce using rule 67 (estatuto_redux -> ternaria .)


state 136

    (68) asignacion -> variable AS exp . saw_asig
    (128) saw_asig -> .

    RETURN          reduce using rule 128 (saw_asig -> .)
    ID              reduce using rule 128 (saw_asig -> .)
    IF              reduce using rule 128 (saw_asig -> .)
    PRINT           reduce using rule 128 (saw_asig -> .)
    READ            reduce using rule 128 (saw_asig -> .)
    WHILE           reduce using rule 128 (saw_asig -> .)
    FOR             reduce using rule 128 (saw_asig -> .)
    OCURLY          reduce using rule 128 (saw_asig -> .)
    FUNCTION        reduce using rule 128 (saw_asig -> .)
    CLASS           reduce using rule 128 (saw_asig -> .)
    VAR             reduce using rule 128 (saw_asig -> .)
    OPAREN          reduce using rule 128 (saw_asig -> .)
    CSTINT          reduce using rule 128 (saw_asig -> .)
    CSTFLT          reduce using rule 128 (saw_asig -> .)
    CSTCHAR         reduce using rule 128 (saw_asig -> .)
    CSTSTRING       reduce using rule 128 (saw_asig -> .)
    TRUE            reduce using rule 128 (saw_asig -> .)
    FALSE           reduce using rule 128 (saw_asig -> .)
    CCURLY          reduce using rule 128 (saw_asig -> .)
    COLON           reduce using rule 128 (saw_asig -> .)
    SEMICOLON       reduce using rule 128 (saw_asig -> .)

    saw_asig                       shift and go to state 171

state 137

    (86) llamada -> ID saw_id OPAREN . exp llamada1 CPAREN
    (87) llamada -> ID saw_id OPAREN . CPAREN
    (90) exp -> . texp exp1
    (93) texp -> . gexp texp1
    (96) gexp -> . mexp gexp1
    (104) mexp -> . termino mexp1
    (108) termino -> . factor term1
    (112) factor -> . OPAREN exp CPAREN
    (113) factor -> . varcst
    (114) factor -> . variable
    (115) factor -> . llamada
    (116) varcst -> . CSTINT
    (117) varcst -> . CSTFLT
    (118) varcst -> . CSTCHAR
    (119) varcst -> . CSTSTRING
    (120) varcst -> . boolean
    (81) variable -> . ID saw_id variable1 variable1 variable2
    (86) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (87) llamada -> . ID saw_id OPAREN CPAREN
    (79) boolean -> . TRUE
    (80) boolean -> . FALSE

    CPAREN          shift and go to state 173
    OPAREN          shift and go to state 31
    CSTINT          shift and go to state 45
    CSTFLT          shift and go to state 46
    CSTCHAR         shift and go to state 47
    CSTSTRING       shift and go to state 48
    ID              shift and go to state 74
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    exp                            shift and go to state 172
    texp                           shift and go to state 39
    gexp                           shift and go to state 40
    mexp                           shift and go to state 41
    termino                        shift and go to state 42
    factor                         shift and go to state 43
    varcst                         shift and go to state 44
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 49

state 138

    (81) variable -> ID saw_id variable1 . variable1 variable2
    (82) variable1 -> . OBRACKET exp CBRACKET
    (83) variable1 -> . empty
    (121) empty -> .

    OBRACKET        shift and go to state 139
    PERIOD          reduce using rule 121 (empty -> .)
    AS              reduce using rule 121 (empty -> .)
    MULT            reduce using rule 121 (empty -> .)
    DIV             reduce using rule 121 (empty -> .)
    PLUS            reduce using rule 121 (empty -> .)
    MINUS           reduce using rule 121 (empty -> .)
    LT              reduce using rule 121 (empty -> .)
    GT              reduce using rule 121 (empty -> .)
    GTE             reduce using rule 121 (empty -> .)
    LTE             reduce using rule 121 (empty -> .)
    EQ              reduce using rule 121 (empty -> .)
    NE              reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    QUESTION        reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    WHILE           reduce using rule 121 (empty -> .)
    FOR             reduce using rule 121 (empty -> .)
    OCURLY          reduce using rule 121 (empty -> .)
    FUNCTION        reduce using rule 121 (empty -> .)
    CLASS           reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    OPAREN          reduce using rule 121 (empty -> .)
    CSTINT          reduce using rule 121 (empty -> .)
    CSTFLT          reduce using rule 121 (empty -> .)
    CSTCHAR         reduce using rule 121 (empty -> .)
    CSTSTRING       reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    CCURLY          reduce using rule 121 (empty -> .)
    CPAREN          reduce using rule 121 (empty -> .)
    COLON           reduce using rule 121 (empty -> .)
    SEMICOLON       reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    FROM            reduce using rule 121 (empty -> .)
    CBRACKET        reduce using rule 121 (empty -> .)
    TO              reduce using rule 121 (empty -> .)
    BY              reduce using rule 121 (empty -> .)

    variable1                      shift and go to state 174
    empty                          shift and go to state 140

state 139

    (82) variable1 -> OBRACKET . exp CBRACKET
    (90) exp -> . texp exp1
    (93) texp -> . gexp texp1
    (96) gexp -> . mexp gexp1
    (104) mexp -> . termino mexp1
    (108) termino -> . factor term1
    (112) factor -> . OPAREN exp CPAREN
    (113) factor -> . varcst
    (114) factor -> . variable
    (115) factor -> . llamada
    (116) varcst -> . CSTINT
    (117) varcst -> . CSTFLT
    (118) varcst -> . CSTCHAR
    (119) varcst -> . CSTSTRING
    (120) varcst -> . boolean
    (81) variable -> . ID saw_id variable1 variable1 variable2
    (86) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (87) llamada -> . ID saw_id OPAREN CPAREN
    (79) boolean -> . TRUE
    (80) boolean -> . FALSE

    OPAREN          shift and go to state 31
    CSTINT          shift and go to state 45
    CSTFLT          shift and go to state 46
    CSTCHAR         shift and go to state 47
    CSTSTRING       shift and go to state 48
    ID              shift and go to state 74
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    exp                            shift and go to state 175
    texp                           shift and go to state 39
    gexp                           shift and go to state 40
    mexp                           shift and go to state 41
    termino                        shift and go to state 42
    factor                         shift and go to state 43
    varcst                         shift and go to state 44
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 49

state 140

    (83) variable1 -> empty .

    OBRACKET        reduce using rule 83 (variable1 -> empty .)
    PERIOD          reduce using rule 83 (variable1 -> empty .)
    AS              reduce using rule 83 (variable1 -> empty .)
    MULT            reduce using rule 83 (variable1 -> empty .)
    DIV             reduce using rule 83 (variable1 -> empty .)
    PLUS            reduce using rule 83 (variable1 -> empty .)
    MINUS           reduce using rule 83 (variable1 -> empty .)
    LT              reduce using rule 83 (variable1 -> empty .)
    GT              reduce using rule 83 (variable1 -> empty .)
    GTE             reduce using rule 83 (variable1 -> empty .)
    LTE             reduce using rule 83 (variable1 -> empty .)
    EQ              reduce using rule 83 (variable1 -> empty .)
    NE              reduce using rule 83 (variable1 -> empty .)
    AND             reduce using rule 83 (variable1 -> empty .)
    OR              reduce using rule 83 (variable1 -> empty .)
    QUESTION        reduce using rule 83 (variable1 -> empty .)
    RETURN          reduce using rule 83 (variable1 -> empty .)
    ID              reduce using rule 83 (variable1 -> empty .)
    IF              reduce using rule 83 (variable1 -> empty .)
    PRINT           reduce using rule 83 (variable1 -> empty .)
    READ            reduce using rule 83 (variable1 -> empty .)
    WHILE           reduce using rule 83 (variable1 -> empty .)
    FOR             reduce using rule 83 (variable1 -> empty .)
    OCURLY          reduce using rule 83 (variable1 -> empty .)
    FUNCTION        reduce using rule 83 (variable1 -> empty .)
    CLASS           reduce using rule 83 (variable1 -> empty .)
    VAR             reduce using rule 83 (variable1 -> empty .)
    OPAREN          reduce using rule 83 (variable1 -> empty .)
    CSTINT          reduce using rule 83 (variable1 -> empty .)
    CSTFLT          reduce using rule 83 (variable1 -> empty .)
    CSTCHAR         reduce using rule 83 (variable1 -> empty .)
    CSTSTRING       reduce using rule 83 (variable1 -> empty .)
    TRUE            reduce using rule 83 (variable1 -> empty .)
    FALSE           reduce using rule 83 (variable1 -> empty .)
    CCURLY          reduce using rule 83 (variable1 -> empty .)
    CPAREN          reduce using rule 83 (variable1 -> empty .)
    COLON           reduce using rule 83 (variable1 -> empty .)
    SEMICOLON       reduce using rule 83 (variable1 -> empty .)
    COMMA           reduce using rule 83 (variable1 -> empty .)
    CBRACKET        reduce using rule 83 (variable1 -> empty .)
    FROM            reduce using rule 83 (variable1 -> empty .)
    TO              reduce using rule 83 (variable1 -> empty .)
    BY              reduce using rule 83 (variable1 -> empty .)


state 141

    (112) factor -> OPAREN exp CPAREN .

    MULT            reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    DIV             reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    PLUS            reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    MINUS           reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    LT              reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    GT              reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    GTE             reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    LTE             reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    EQ              reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    NE              reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    AND             reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    OR              reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    QUESTION        reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    RETURN          reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    ID              reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    IF              reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    PRINT           reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    READ            reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    WHILE           reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    FOR             reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    OCURLY          reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    FUNCTION        reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    CLASS           reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    VAR             reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    OPAREN          reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    CSTINT          reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    CSTFLT          reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    CSTCHAR         reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    CSTSTRING       reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    TRUE            reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    FALSE           reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    CCURLY          reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    CPAREN          reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    COLON           reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    SEMICOLON       reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    COMMA           reduce using rule 112 (factor -> OPAREN exp CPAREN .)
    CBRACKET        reduce using rule 112 (factor -> OPAREN exp CPAREN .)


state 142

    (69) condicion -> IF cond2 THEN . bloque cond1 SEMICOLON
    (47) bloque -> . OCURLY b1 CCURLY scope_end

    OCURLY          shift and go to state 9

    bloque                         shift and go to state 176

state 143

    (73) cond2 -> OPAREN exp . CPAREN

    CPAREN          shift and go to state 177


state 144

    (75) escritura -> PRINT OPAREN exp . e1 CPAREN
    (76) e1 -> . COMMA exp e1
    (77) e1 -> . empty
    (121) empty -> .

    COMMA           shift and go to state 179
    CPAREN          reduce using rule 121 (empty -> .)

    e1                             shift and go to state 178
    empty                          shift and go to state 180

state 145

    (78) leer -> READ OPAREN exp . e1 CPAREN
    (76) e1 -> . COMMA exp e1
    (77) e1 -> . empty
    (121) empty -> .

    COMMA           shift and go to state 179
    CPAREN          reduce using rule 121 (empty -> .)

    e1                             shift and go to state 181
    empty                          shift and go to state 180

state 146

    (18) ciclo_while -> WHILE cond2 THEN . bloque SEMICOLON
    (47) bloque -> . OCURLY b1 CCURLY scope_end

    OCURLY          shift and go to state 9

    bloque                         shift and go to state 182

state 147

    (19) ciclo_for -> FOR OPAREN variable . FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON

    FROM            shift and go to state 183


state 148

    (81) variable -> ID . saw_id variable1 variable1 variable2
    (125) saw_id -> .

    OBRACKET        reduce using rule 125 (saw_id -> .)
    PERIOD          reduce using rule 125 (saw_id -> .)
    FROM            reduce using rule 125 (saw_id -> .)
    TO              reduce using rule 125 (saw_id -> .)
    BY              reduce using rule 125 (saw_id -> .)
    CPAREN          reduce using rule 125 (saw_id -> .)

    saw_id                         shift and go to state 184

state 149

    (3) funcion -> FUNCTION func1 ID . saw_id saw_function OPAREN param CPAREN bloque
    (125) saw_id -> .

    OPAREN          reduce using rule 125 (saw_id -> .)

    saw_id                         shift and go to state 185

state 150

    (5) func1 -> VOID saw_type .

    ID              reduce using rule 5 (func1 -> VOID saw_type .)


state 151

    (12) clase -> CLASS ID saw_id . saw_class COLON clase_bloque SEMICOLON
    (123) saw_class -> .

    COLON           reduce using rule 123 (saw_class -> .)

    saw_class                      shift and go to state 186

state 152

    (91) exp1 -> OR texp . exp1
    (91) exp1 -> . OR texp exp1
    (92) exp1 -> . empty
    (121) empty -> .

    OR              shift and go to state 90
    QUESTION        reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    WHILE           reduce using rule 121 (empty -> .)
    FOR             reduce using rule 121 (empty -> .)
    OCURLY          reduce using rule 121 (empty -> .)
    FUNCTION        reduce using rule 121 (empty -> .)
    CLASS           reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    OPAREN          reduce using rule 121 (empty -> .)
    CSTINT          reduce using rule 121 (empty -> .)
    CSTFLT          reduce using rule 121 (empty -> .)
    CSTCHAR         reduce using rule 121 (empty -> .)
    CSTSTRING       reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    CCURLY          reduce using rule 121 (empty -> .)
    CPAREN          reduce using rule 121 (empty -> .)
    COLON           reduce using rule 121 (empty -> .)
    SEMICOLON       reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    CBRACKET        reduce using rule 121 (empty -> .)

    exp1                           shift and go to state 187
    empty                          shift and go to state 91

state 153

    (94) texp1 -> AND gexp . texp1
    (94) texp1 -> . AND gexp texp1
    (95) texp1 -> . empty
    (121) empty -> .

    AND             shift and go to state 93
    OR              reduce using rule 121 (empty -> .)
    QUESTION        reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    WHILE           reduce using rule 121 (empty -> .)
    FOR             reduce using rule 121 (empty -> .)
    OCURLY          reduce using rule 121 (empty -> .)
    FUNCTION        reduce using rule 121 (empty -> .)
    CLASS           reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    OPAREN          reduce using rule 121 (empty -> .)
    CSTINT          reduce using rule 121 (empty -> .)
    CSTFLT          reduce using rule 121 (empty -> .)
    CSTCHAR         reduce using rule 121 (empty -> .)
    CSTSTRING       reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    CCURLY          reduce using rule 121 (empty -> .)
    CPAREN          reduce using rule 121 (empty -> .)
    COLON           reduce using rule 121 (empty -> .)
    SEMICOLON       reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    CBRACKET        reduce using rule 121 (empty -> .)

    texp1                          shift and go to state 188
    empty                          shift and go to state 94

state 154

    (97) gexp1 -> LT mexp .

    AND             reduce using rule 97 (gexp1 -> LT mexp .)
    OR              reduce using rule 97 (gexp1 -> LT mexp .)
    QUESTION        reduce using rule 97 (gexp1 -> LT mexp .)
    RETURN          reduce using rule 97 (gexp1 -> LT mexp .)
    ID              reduce using rule 97 (gexp1 -> LT mexp .)
    IF              reduce using rule 97 (gexp1 -> LT mexp .)
    PRINT           reduce using rule 97 (gexp1 -> LT mexp .)
    READ            reduce using rule 97 (gexp1 -> LT mexp .)
    WHILE           reduce using rule 97 (gexp1 -> LT mexp .)
    FOR             reduce using rule 97 (gexp1 -> LT mexp .)
    OCURLY          reduce using rule 97 (gexp1 -> LT mexp .)
    FUNCTION        reduce using rule 97 (gexp1 -> LT mexp .)
    CLASS           reduce using rule 97 (gexp1 -> LT mexp .)
    VAR             reduce using rule 97 (gexp1 -> LT mexp .)
    OPAREN          reduce using rule 97 (gexp1 -> LT mexp .)
    CSTINT          reduce using rule 97 (gexp1 -> LT mexp .)
    CSTFLT          reduce using rule 97 (gexp1 -> LT mexp .)
    CSTCHAR         reduce using rule 97 (gexp1 -> LT mexp .)
    CSTSTRING       reduce using rule 97 (gexp1 -> LT mexp .)
    TRUE            reduce using rule 97 (gexp1 -> LT mexp .)
    FALSE           reduce using rule 97 (gexp1 -> LT mexp .)
    CCURLY          reduce using rule 97 (gexp1 -> LT mexp .)
    CPAREN          reduce using rule 97 (gexp1 -> LT mexp .)
    COLON           reduce using rule 97 (gexp1 -> LT mexp .)
    SEMICOLON       reduce using rule 97 (gexp1 -> LT mexp .)
    COMMA           reduce using rule 97 (gexp1 -> LT mexp .)
    CBRACKET        reduce using rule 97 (gexp1 -> LT mexp .)


state 155

    (98) gexp1 -> GT mexp .

    AND             reduce using rule 98 (gexp1 -> GT mexp .)
    OR              reduce using rule 98 (gexp1 -> GT mexp .)
    QUESTION        reduce using rule 98 (gexp1 -> GT mexp .)
    RETURN          reduce using rule 98 (gexp1 -> GT mexp .)
    ID              reduce using rule 98 (gexp1 -> GT mexp .)
    IF              reduce using rule 98 (gexp1 -> GT mexp .)
    PRINT           reduce using rule 98 (gexp1 -> GT mexp .)
    READ            reduce using rule 98 (gexp1 -> GT mexp .)
    WHILE           reduce using rule 98 (gexp1 -> GT mexp .)
    FOR             reduce using rule 98 (gexp1 -> GT mexp .)
    OCURLY          reduce using rule 98 (gexp1 -> GT mexp .)
    FUNCTION        reduce using rule 98 (gexp1 -> GT mexp .)
    CLASS           reduce using rule 98 (gexp1 -> GT mexp .)
    VAR             reduce using rule 98 (gexp1 -> GT mexp .)
    OPAREN          reduce using rule 98 (gexp1 -> GT mexp .)
    CSTINT          reduce using rule 98 (gexp1 -> GT mexp .)
    CSTFLT          reduce using rule 98 (gexp1 -> GT mexp .)
    CSTCHAR         reduce using rule 98 (gexp1 -> GT mexp .)
    CSTSTRING       reduce using rule 98 (gexp1 -> GT mexp .)
    TRUE            reduce using rule 98 (gexp1 -> GT mexp .)
    FALSE           reduce using rule 98 (gexp1 -> GT mexp .)
    CCURLY          reduce using rule 98 (gexp1 -> GT mexp .)
    CPAREN          reduce using rule 98 (gexp1 -> GT mexp .)
    COLON           reduce using rule 98 (gexp1 -> GT mexp .)
    SEMICOLON       reduce using rule 98 (gexp1 -> GT mexp .)
    COMMA           reduce using rule 98 (gexp1 -> GT mexp .)
    CBRACKET        reduce using rule 98 (gexp1 -> GT mexp .)


state 156

    (99) gexp1 -> GTE mexp .

    AND             reduce using rule 99 (gexp1 -> GTE mexp .)
    OR              reduce using rule 99 (gexp1 -> GTE mexp .)
    QUESTION        reduce using rule 99 (gexp1 -> GTE mexp .)
    RETURN          reduce using rule 99 (gexp1 -> GTE mexp .)
    ID              reduce using rule 99 (gexp1 -> GTE mexp .)
    IF              reduce using rule 99 (gexp1 -> GTE mexp .)
    PRINT           reduce using rule 99 (gexp1 -> GTE mexp .)
    READ            reduce using rule 99 (gexp1 -> GTE mexp .)
    WHILE           reduce using rule 99 (gexp1 -> GTE mexp .)
    FOR             reduce using rule 99 (gexp1 -> GTE mexp .)
    OCURLY          reduce using rule 99 (gexp1 -> GTE mexp .)
    FUNCTION        reduce using rule 99 (gexp1 -> GTE mexp .)
    CLASS           reduce using rule 99 (gexp1 -> GTE mexp .)
    VAR             reduce using rule 99 (gexp1 -> GTE mexp .)
    OPAREN          reduce using rule 99 (gexp1 -> GTE mexp .)
    CSTINT          reduce using rule 99 (gexp1 -> GTE mexp .)
    CSTFLT          reduce using rule 99 (gexp1 -> GTE mexp .)
    CSTCHAR         reduce using rule 99 (gexp1 -> GTE mexp .)
    CSTSTRING       reduce using rule 99 (gexp1 -> GTE mexp .)
    TRUE            reduce using rule 99 (gexp1 -> GTE mexp .)
    FALSE           reduce using rule 99 (gexp1 -> GTE mexp .)
    CCURLY          reduce using rule 99 (gexp1 -> GTE mexp .)
    CPAREN          reduce using rule 99 (gexp1 -> GTE mexp .)
    COLON           reduce using rule 99 (gexp1 -> GTE mexp .)
    SEMICOLON       reduce using rule 99 (gexp1 -> GTE mexp .)
    COMMA           reduce using rule 99 (gexp1 -> GTE mexp .)
    CBRACKET        reduce using rule 99 (gexp1 -> GTE mexp .)


state 157

    (100) gexp1 -> LTE mexp .

    AND             reduce using rule 100 (gexp1 -> LTE mexp .)
    OR              reduce using rule 100 (gexp1 -> LTE mexp .)
    QUESTION        reduce using rule 100 (gexp1 -> LTE mexp .)
    RETURN          reduce using rule 100 (gexp1 -> LTE mexp .)
    ID              reduce using rule 100 (gexp1 -> LTE mexp .)
    IF              reduce using rule 100 (gexp1 -> LTE mexp .)
    PRINT           reduce using rule 100 (gexp1 -> LTE mexp .)
    READ            reduce using rule 100 (gexp1 -> LTE mexp .)
    WHILE           reduce using rule 100 (gexp1 -> LTE mexp .)
    FOR             reduce using rule 100 (gexp1 -> LTE mexp .)
    OCURLY          reduce using rule 100 (gexp1 -> LTE mexp .)
    FUNCTION        reduce using rule 100 (gexp1 -> LTE mexp .)
    CLASS           reduce using rule 100 (gexp1 -> LTE mexp .)
    VAR             reduce using rule 100 (gexp1 -> LTE mexp .)
    OPAREN          reduce using rule 100 (gexp1 -> LTE mexp .)
    CSTINT          reduce using rule 100 (gexp1 -> LTE mexp .)
    CSTFLT          reduce using rule 100 (gexp1 -> LTE mexp .)
    CSTCHAR         reduce using rule 100 (gexp1 -> LTE mexp .)
    CSTSTRING       reduce using rule 100 (gexp1 -> LTE mexp .)
    TRUE            reduce using rule 100 (gexp1 -> LTE mexp .)
    FALSE           reduce using rule 100 (gexp1 -> LTE mexp .)
    CCURLY          reduce using rule 100 (gexp1 -> LTE mexp .)
    CPAREN          reduce using rule 100 (gexp1 -> LTE mexp .)
    COLON           reduce using rule 100 (gexp1 -> LTE mexp .)
    SEMICOLON       reduce using rule 100 (gexp1 -> LTE mexp .)
    COMMA           reduce using rule 100 (gexp1 -> LTE mexp .)
    CBRACKET        reduce using rule 100 (gexp1 -> LTE mexp .)


state 158

    (101) gexp1 -> EQ mexp .

    AND             reduce using rule 101 (gexp1 -> EQ mexp .)
    OR              reduce using rule 101 (gexp1 -> EQ mexp .)
    QUESTION        reduce using rule 101 (gexp1 -> EQ mexp .)
    RETURN          reduce using rule 101 (gexp1 -> EQ mexp .)
    ID              reduce using rule 101 (gexp1 -> EQ mexp .)
    IF              reduce using rule 101 (gexp1 -> EQ mexp .)
    PRINT           reduce using rule 101 (gexp1 -> EQ mexp .)
    READ            reduce using rule 101 (gexp1 -> EQ mexp .)
    WHILE           reduce using rule 101 (gexp1 -> EQ mexp .)
    FOR             reduce using rule 101 (gexp1 -> EQ mexp .)
    OCURLY          reduce using rule 101 (gexp1 -> EQ mexp .)
    FUNCTION        reduce using rule 101 (gexp1 -> EQ mexp .)
    CLASS           reduce using rule 101 (gexp1 -> EQ mexp .)
    VAR             reduce using rule 101 (gexp1 -> EQ mexp .)
    OPAREN          reduce using rule 101 (gexp1 -> EQ mexp .)
    CSTINT          reduce using rule 101 (gexp1 -> EQ mexp .)
    CSTFLT          reduce using rule 101 (gexp1 -> EQ mexp .)
    CSTCHAR         reduce using rule 101 (gexp1 -> EQ mexp .)
    CSTSTRING       reduce using rule 101 (gexp1 -> EQ mexp .)
    TRUE            reduce using rule 101 (gexp1 -> EQ mexp .)
    FALSE           reduce using rule 101 (gexp1 -> EQ mexp .)
    CCURLY          reduce using rule 101 (gexp1 -> EQ mexp .)
    CPAREN          reduce using rule 101 (gexp1 -> EQ mexp .)
    COLON           reduce using rule 101 (gexp1 -> EQ mexp .)
    SEMICOLON       reduce using rule 101 (gexp1 -> EQ mexp .)
    COMMA           reduce using rule 101 (gexp1 -> EQ mexp .)
    CBRACKET        reduce using rule 101 (gexp1 -> EQ mexp .)


state 159

    (102) gexp1 -> NE mexp .

    AND             reduce using rule 102 (gexp1 -> NE mexp .)
    OR              reduce using rule 102 (gexp1 -> NE mexp .)
    QUESTION        reduce using rule 102 (gexp1 -> NE mexp .)
    RETURN          reduce using rule 102 (gexp1 -> NE mexp .)
    ID              reduce using rule 102 (gexp1 -> NE mexp .)
    IF              reduce using rule 102 (gexp1 -> NE mexp .)
    PRINT           reduce using rule 102 (gexp1 -> NE mexp .)
    READ            reduce using rule 102 (gexp1 -> NE mexp .)
    WHILE           reduce using rule 102 (gexp1 -> NE mexp .)
    FOR             reduce using rule 102 (gexp1 -> NE mexp .)
    OCURLY          reduce using rule 102 (gexp1 -> NE mexp .)
    FUNCTION        reduce using rule 102 (gexp1 -> NE mexp .)
    CLASS           reduce using rule 102 (gexp1 -> NE mexp .)
    VAR             reduce using rule 102 (gexp1 -> NE mexp .)
    OPAREN          reduce using rule 102 (gexp1 -> NE mexp .)
    CSTINT          reduce using rule 102 (gexp1 -> NE mexp .)
    CSTFLT          reduce using rule 102 (gexp1 -> NE mexp .)
    CSTCHAR         reduce using rule 102 (gexp1 -> NE mexp .)
    CSTSTRING       reduce using rule 102 (gexp1 -> NE mexp .)
    TRUE            reduce using rule 102 (gexp1 -> NE mexp .)
    FALSE           reduce using rule 102 (gexp1 -> NE mexp .)
    CCURLY          reduce using rule 102 (gexp1 -> NE mexp .)
    CPAREN          reduce using rule 102 (gexp1 -> NE mexp .)
    COLON           reduce using rule 102 (gexp1 -> NE mexp .)
    SEMICOLON       reduce using rule 102 (gexp1 -> NE mexp .)
    COMMA           reduce using rule 102 (gexp1 -> NE mexp .)
    CBRACKET        reduce using rule 102 (gexp1 -> NE mexp .)


state 160

    (105) mexp1 -> PLUS termino . mexp1
    (105) mexp1 -> . PLUS termino mexp1
    (106) mexp1 -> . MINUS termino mexp1
    (107) mexp1 -> . empty
    (121) empty -> .

    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    LT              reduce using rule 121 (empty -> .)
    GT              reduce using rule 121 (empty -> .)
    GTE             reduce using rule 121 (empty -> .)
    LTE             reduce using rule 121 (empty -> .)
    EQ              reduce using rule 121 (empty -> .)
    NE              reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    QUESTION        reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    WHILE           reduce using rule 121 (empty -> .)
    FOR             reduce using rule 121 (empty -> .)
    OCURLY          reduce using rule 121 (empty -> .)
    FUNCTION        reduce using rule 121 (empty -> .)
    CLASS           reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    OPAREN          reduce using rule 121 (empty -> .)
    CSTINT          reduce using rule 121 (empty -> .)
    CSTFLT          reduce using rule 121 (empty -> .)
    CSTCHAR         reduce using rule 121 (empty -> .)
    CSTSTRING       reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    CCURLY          reduce using rule 121 (empty -> .)
    CPAREN          reduce using rule 121 (empty -> .)
    COLON           reduce using rule 121 (empty -> .)
    SEMICOLON       reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    CBRACKET        reduce using rule 121 (empty -> .)

    mexp1                          shift and go to state 189
    empty                          shift and go to state 106

state 161

    (106) mexp1 -> MINUS termino . mexp1
    (105) mexp1 -> . PLUS termino mexp1
    (106) mexp1 -> . MINUS termino mexp1
    (107) mexp1 -> . empty
    (121) empty -> .

    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    LT              reduce using rule 121 (empty -> .)
    GT              reduce using rule 121 (empty -> .)
    GTE             reduce using rule 121 (empty -> .)
    LTE             reduce using rule 121 (empty -> .)
    EQ              reduce using rule 121 (empty -> .)
    NE              reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    QUESTION        reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    WHILE           reduce using rule 121 (empty -> .)
    FOR             reduce using rule 121 (empty -> .)
    OCURLY          reduce using rule 121 (empty -> .)
    FUNCTION        reduce using rule 121 (empty -> .)
    CLASS           reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    OPAREN          reduce using rule 121 (empty -> .)
    CSTINT          reduce using rule 121 (empty -> .)
    CSTFLT          reduce using rule 121 (empty -> .)
    CSTCHAR         reduce using rule 121 (empty -> .)
    CSTSTRING       reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    CCURLY          reduce using rule 121 (empty -> .)
    CPAREN          reduce using rule 121 (empty -> .)
    COLON           reduce using rule 121 (empty -> .)
    SEMICOLON       reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    CBRACKET        reduce using rule 121 (empty -> .)

    mexp1                          shift and go to state 190
    empty                          shift and go to state 106

state 162

    (109) term1 -> MULT factor . term1
    (109) term1 -> . MULT factor term1
    (110) term1 -> . DIV factor term1
    (111) term1 -> . empty
    (121) empty -> .

    MULT            shift and go to state 108
    DIV             shift and go to state 109
    PLUS            reduce using rule 121 (empty -> .)
    MINUS           reduce using rule 121 (empty -> .)
    LT              reduce using rule 121 (empty -> .)
    GT              reduce using rule 121 (empty -> .)
    GTE             reduce using rule 121 (empty -> .)
    LTE             reduce using rule 121 (empty -> .)
    EQ              reduce using rule 121 (empty -> .)
    NE              reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    QUESTION        reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    WHILE           reduce using rule 121 (empty -> .)
    FOR             reduce using rule 121 (empty -> .)
    OCURLY          reduce using rule 121 (empty -> .)
    FUNCTION        reduce using rule 121 (empty -> .)
    CLASS           reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    OPAREN          reduce using rule 121 (empty -> .)
    CSTINT          reduce using rule 121 (empty -> .)
    CSTFLT          reduce using rule 121 (empty -> .)
    CSTCHAR         reduce using rule 121 (empty -> .)
    CSTSTRING       reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    CCURLY          reduce using rule 121 (empty -> .)
    CPAREN          reduce using rule 121 (empty -> .)
    COLON           reduce using rule 121 (empty -> .)
    SEMICOLON       reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    CBRACKET        reduce using rule 121 (empty -> .)

    term1                          shift and go to state 191
    empty                          shift and go to state 110

state 163

    (110) term1 -> DIV factor . term1
    (109) term1 -> . MULT factor term1
    (110) term1 -> . DIV factor term1
    (111) term1 -> . empty
    (121) empty -> .

    MULT            shift and go to state 108
    DIV             shift and go to state 109
    PLUS            reduce using rule 121 (empty -> .)
    MINUS           reduce using rule 121 (empty -> .)
    LT              reduce using rule 121 (empty -> .)
    GT              reduce using rule 121 (empty -> .)
    GTE             reduce using rule 121 (empty -> .)
    LTE             reduce using rule 121 (empty -> .)
    EQ              reduce using rule 121 (empty -> .)
    NE              reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    QUESTION        reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    WHILE           reduce using rule 121 (empty -> .)
    FOR             reduce using rule 121 (empty -> .)
    OCURLY          reduce using rule 121 (empty -> .)
    FUNCTION        reduce using rule 121 (empty -> .)
    CLASS           reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    OPAREN          reduce using rule 121 (empty -> .)
    CSTINT          reduce using rule 121 (empty -> .)
    CSTFLT          reduce using rule 121 (empty -> .)
    CSTCHAR         reduce using rule 121 (empty -> .)
    CSTSTRING       reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    CCURLY          reduce using rule 121 (empty -> .)
    CPAREN          reduce using rule 121 (empty -> .)
    COLON           reduce using rule 121 (empty -> .)
    SEMICOLON       reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    CBRACKET        reduce using rule 121 (empty -> .)

    term1                          shift and go to state 192
    empty                          shift and go to state 110

state 164

    (22) dec -> VAR tipo SEMICOLON dec1 .

    OCURLY          reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    RETURN          reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    ID              reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    IF              reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    PRINT           reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    READ            reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    WHILE           reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    FOR             reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    FUNCTION        reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    CLASS           reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    VAR             reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    OPAREN          reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    CSTINT          reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    CSTFLT          reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    CSTCHAR         reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    CSTSTRING       reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    TRUE            reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    FALSE           reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    CCURLY          reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    METHODS         reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)


state 165

    (23) dec1 -> dec .

    OCURLY          reduce using rule 23 (dec1 -> dec .)
    RETURN          reduce using rule 23 (dec1 -> dec .)
    ID              reduce using rule 23 (dec1 -> dec .)
    IF              reduce using rule 23 (dec1 -> dec .)
    PRINT           reduce using rule 23 (dec1 -> dec .)
    READ            reduce using rule 23 (dec1 -> dec .)
    WHILE           reduce using rule 23 (dec1 -> dec .)
    FOR             reduce using rule 23 (dec1 -> dec .)
    FUNCTION        reduce using rule 23 (dec1 -> dec .)
    CLASS           reduce using rule 23 (dec1 -> dec .)
    VAR             reduce using rule 23 (dec1 -> dec .)
    OPAREN          reduce using rule 23 (dec1 -> dec .)
    CSTINT          reduce using rule 23 (dec1 -> dec .)
    CSTFLT          reduce using rule 23 (dec1 -> dec .)
    CSTCHAR         reduce using rule 23 (dec1 -> dec .)
    CSTSTRING       reduce using rule 23 (dec1 -> dec .)
    TRUE            reduce using rule 23 (dec1 -> dec .)
    FALSE           reduce using rule 23 (dec1 -> dec .)
    CCURLY          reduce using rule 23 (dec1 -> dec .)
    METHODS         reduce using rule 23 (dec1 -> dec .)


state 166

    (24) dec1 -> empty .

    OCURLY          reduce using rule 24 (dec1 -> empty .)
    RETURN          reduce using rule 24 (dec1 -> empty .)
    ID              reduce using rule 24 (dec1 -> empty .)
    IF              reduce using rule 24 (dec1 -> empty .)
    PRINT           reduce using rule 24 (dec1 -> empty .)
    READ            reduce using rule 24 (dec1 -> empty .)
    WHILE           reduce using rule 24 (dec1 -> empty .)
    FOR             reduce using rule 24 (dec1 -> empty .)
    FUNCTION        reduce using rule 24 (dec1 -> empty .)
    CLASS           reduce using rule 24 (dec1 -> empty .)
    VAR             reduce using rule 24 (dec1 -> empty .)
    OPAREN          reduce using rule 24 (dec1 -> empty .)
    CSTINT          reduce using rule 24 (dec1 -> empty .)
    CSTFLT          reduce using rule 24 (dec1 -> empty .)
    CSTCHAR         reduce using rule 24 (dec1 -> empty .)
    CSTSTRING       reduce using rule 24 (dec1 -> empty .)
    TRUE            reduce using rule 24 (dec1 -> empty .)
    FALSE           reduce using rule 24 (dec1 -> empty .)
    CCURLY          reduce using rule 24 (dec1 -> empty .)
    METHODS         reduce using rule 24 (dec1 -> empty .)


state 167

    (25) tipo -> compuesto ID saw_id . saw_variable tipo1
    (127) saw_variable -> .

    COMMA           reduce using rule 127 (saw_variable -> .)
    SEMICOLON       reduce using rule 127 (saw_variable -> .)

    saw_variable                   shift and go to state 193

state 168

    (26) tipo -> simple ID saw_id . saw_variable tipo1
    (127) saw_variable -> .

    COMMA           reduce using rule 127 (saw_variable -> .)
    SEMICOLON       reduce using rule 127 (saw_variable -> .)

    saw_variable                   shift and go to state 194

state 169

    (27) tipo -> multiple ID saw_id . saw_variable OBRACKET CSTINT CBRACKET tipo3 tipo2
    (127) saw_variable -> .

    OBRACKET        reduce using rule 127 (saw_variable -> .)

    saw_variable                   shift and go to state 195

state 170

    (74) ternaria -> exp QUESTION estatuto_redux COLON . estatuto_redux SEMICOLON
    (63) estatuto_redux -> . asignacion
    (64) estatuto_redux -> . llamada
    (65) estatuto_redux -> . escritura
    (66) estatuto_redux -> . leer
    (67) estatuto_redux -> . ternaria
    (68) asignacion -> . variable AS exp saw_asig
    (86) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (87) llamada -> . ID saw_id OPAREN CPAREN
    (75) escritura -> . PRINT OPAREN exp e1 CPAREN
    (78) leer -> . READ OPAREN exp e1 CPAREN
    (74) ternaria -> . exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON
    (81) variable -> . ID saw_id variable1 variable1 variable2
    (90) exp -> . texp exp1
    (93) texp -> . gexp texp1
    (96) gexp -> . mexp gexp1
    (104) mexp -> . termino mexp1
    (108) termino -> . factor term1
    (112) factor -> . OPAREN exp CPAREN
    (113) factor -> . varcst
    (114) factor -> . variable
    (115) factor -> . llamada
    (116) varcst -> . CSTINT
    (117) varcst -> . CSTFLT
    (118) varcst -> . CSTCHAR
    (119) varcst -> . CSTSTRING
    (120) varcst -> . boolean
    (79) boolean -> . TRUE
    (80) boolean -> . FALSE

    ID              shift and go to state 30
    PRINT           shift and go to state 33
    READ            shift and go to state 34
    OPAREN          shift and go to state 31
    CSTINT          shift and go to state 45
    CSTFLT          shift and go to state 46
    CSTCHAR         shift and go to state 47
    CSTSTRING       shift and go to state 48
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    exp                            shift and go to state 28
    estatuto_redux                 shift and go to state 196
    asignacion                     shift and go to state 131
    llamada                        shift and go to state 132
    escritura                      shift and go to state 133
    leer                           shift and go to state 134
    ternaria                       shift and go to state 135
    variable                       shift and go to state 29
    texp                           shift and go to state 39
    gexp                           shift and go to state 40
    mexp                           shift and go to state 41
    termino                        shift and go to state 42
    factor                         shift and go to state 43
    varcst                         shift and go to state 44
    boolean                        shift and go to state 49

state 171

    (68) asignacion -> variable AS exp saw_asig .

    RETURN          reduce using rule 68 (asignacion -> variable AS exp saw_asig .)
    ID              reduce using rule 68 (asignacion -> variable AS exp saw_asig .)
    IF              reduce using rule 68 (asignacion -> variable AS exp saw_asig .)
    PRINT           reduce using rule 68 (asignacion -> variable AS exp saw_asig .)
    READ            reduce using rule 68 (asignacion -> variable AS exp saw_asig .)
    WHILE           reduce using rule 68 (asignacion -> variable AS exp saw_asig .)
    FOR             reduce using rule 68 (asignacion -> variable AS exp saw_asig .)
    OCURLY          reduce using rule 68 (asignacion -> variable AS exp saw_asig .)
    FUNCTION        reduce using rule 68 (asignacion -> variable AS exp saw_asig .)
    CLASS           reduce using rule 68 (asignacion -> variable AS exp saw_asig .)
    VAR             reduce using rule 68 (asignacion -> variable AS exp saw_asig .)
    OPAREN          reduce using rule 68 (asignacion -> variable AS exp saw_asig .)
    CSTINT          reduce using rule 68 (asignacion -> variable AS exp saw_asig .)
    CSTFLT          reduce using rule 68 (asignacion -> variable AS exp saw_asig .)
    CSTCHAR         reduce using rule 68 (asignacion -> variable AS exp saw_asig .)
    CSTSTRING       reduce using rule 68 (asignacion -> variable AS exp saw_asig .)
    TRUE            reduce using rule 68 (asignacion -> variable AS exp saw_asig .)
    FALSE           reduce using rule 68 (asignacion -> variable AS exp saw_asig .)
    CCURLY          reduce using rule 68 (asignacion -> variable AS exp saw_asig .)
    COLON           reduce using rule 68 (asignacion -> variable AS exp saw_asig .)
    SEMICOLON       reduce using rule 68 (asignacion -> variable AS exp saw_asig .)


state 172

    (86) llamada -> ID saw_id OPAREN exp . llamada1 CPAREN
    (88) llamada1 -> . COMMA exp llamada1
    (89) llamada1 -> . empty
    (121) empty -> .

    COMMA           shift and go to state 198
    CPAREN          reduce using rule 121 (empty -> .)

    llamada1                       shift and go to state 197
    empty                          shift and go to state 199

state 173

    (87) llamada -> ID saw_id OPAREN CPAREN .

    RETURN          reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    ID              reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    IF              reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    PRINT           reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    READ            reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    WHILE           reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    FOR             reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    OCURLY          reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    FUNCTION        reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    CLASS           reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    VAR             reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    OPAREN          reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    CSTINT          reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    CSTFLT          reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    CSTCHAR         reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    CSTSTRING       reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    TRUE            reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    FALSE           reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    CCURLY          reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    MULT            reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    DIV             reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    PLUS            reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    MINUS           reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    LT              reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    GT              reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    GTE             reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    LTE             reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    EQ              reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    NE              reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    AND             reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    OR              reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    QUESTION        reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    CPAREN          reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    COLON           reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    SEMICOLON       reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    COMMA           reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)
    CBRACKET        reduce using rule 87 (llamada -> ID saw_id OPAREN CPAREN .)


state 174

    (81) variable -> ID saw_id variable1 variable1 . variable2
    (84) variable2 -> . PERIOD ID saw_id variable1 variable1 variable2
    (85) variable2 -> . empty
    (121) empty -> .

    PERIOD          shift and go to state 201
    AS              reduce using rule 121 (empty -> .)
    MULT            reduce using rule 121 (empty -> .)
    DIV             reduce using rule 121 (empty -> .)
    PLUS            reduce using rule 121 (empty -> .)
    MINUS           reduce using rule 121 (empty -> .)
    LT              reduce using rule 121 (empty -> .)
    GT              reduce using rule 121 (empty -> .)
    GTE             reduce using rule 121 (empty -> .)
    LTE             reduce using rule 121 (empty -> .)
    EQ              reduce using rule 121 (empty -> .)
    NE              reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    QUESTION        reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    WHILE           reduce using rule 121 (empty -> .)
    FOR             reduce using rule 121 (empty -> .)
    OCURLY          reduce using rule 121 (empty -> .)
    FUNCTION        reduce using rule 121 (empty -> .)
    CLASS           reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    OPAREN          reduce using rule 121 (empty -> .)
    CSTINT          reduce using rule 121 (empty -> .)
    CSTFLT          reduce using rule 121 (empty -> .)
    CSTCHAR         reduce using rule 121 (empty -> .)
    CSTSTRING       reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    CCURLY          reduce using rule 121 (empty -> .)
    CPAREN          reduce using rule 121 (empty -> .)
    COLON           reduce using rule 121 (empty -> .)
    SEMICOLON       reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    FROM            reduce using rule 121 (empty -> .)
    CBRACKET        reduce using rule 121 (empty -> .)
    TO              reduce using rule 121 (empty -> .)
    BY              reduce using rule 121 (empty -> .)

    variable2                      shift and go to state 200
    empty                          shift and go to state 202

state 175

    (82) variable1 -> OBRACKET exp . CBRACKET

    CBRACKET        shift and go to state 203


state 176

    (69) condicion -> IF cond2 THEN bloque . cond1 SEMICOLON
    (70) cond1 -> . ELSE bloque
    (71) cond1 -> . ELSE IF cond2 THEN bloque cond1
    (72) cond1 -> . empty
    (121) empty -> .

    ELSE            shift and go to state 205
    SEMICOLON       reduce using rule 121 (empty -> .)

    cond1                          shift and go to state 204
    empty                          shift and go to state 206

state 177

    (73) cond2 -> OPAREN exp CPAREN .

    THEN            reduce using rule 73 (cond2 -> OPAREN exp CPAREN .)


state 178

    (75) escritura -> PRINT OPAREN exp e1 . CPAREN

    CPAREN          shift and go to state 207


state 179

    (76) e1 -> COMMA . exp e1
    (90) exp -> . texp exp1
    (93) texp -> . gexp texp1
    (96) gexp -> . mexp gexp1
    (104) mexp -> . termino mexp1
    (108) termino -> . factor term1
    (112) factor -> . OPAREN exp CPAREN
    (113) factor -> . varcst
    (114) factor -> . variable
    (115) factor -> . llamada
    (116) varcst -> . CSTINT
    (117) varcst -> . CSTFLT
    (118) varcst -> . CSTCHAR
    (119) varcst -> . CSTSTRING
    (120) varcst -> . boolean
    (81) variable -> . ID saw_id variable1 variable1 variable2
    (86) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (87) llamada -> . ID saw_id OPAREN CPAREN
    (79) boolean -> . TRUE
    (80) boolean -> . FALSE

    OPAREN          shift and go to state 31
    CSTINT          shift and go to state 45
    CSTFLT          shift and go to state 46
    CSTCHAR         shift and go to state 47
    CSTSTRING       shift and go to state 48
    ID              shift and go to state 74
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    exp                            shift and go to state 208
    texp                           shift and go to state 39
    gexp                           shift and go to state 40
    mexp                           shift and go to state 41
    termino                        shift and go to state 42
    factor                         shift and go to state 43
    varcst                         shift and go to state 44
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 49

state 180

    (77) e1 -> empty .

    CPAREN          reduce using rule 77 (e1 -> empty .)


state 181

    (78) leer -> READ OPAREN exp e1 . CPAREN

    CPAREN          shift and go to state 209


state 182

    (18) ciclo_while -> WHILE cond2 THEN bloque . SEMICOLON

    SEMICOLON       shift and go to state 210


state 183

    (19) ciclo_for -> FOR OPAREN variable FROM . ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
    (20) ciclo_for1 -> . CSTINT
    (21) ciclo_for1 -> . variable
    (81) variable -> . ID saw_id variable1 variable1 variable2

    CSTINT          shift and go to state 213
    ID              shift and go to state 148

    variable                       shift and go to state 211
    ciclo_for1                     shift and go to state 212

state 184

    (81) variable -> ID saw_id . variable1 variable1 variable2
    (82) variable1 -> . OBRACKET exp CBRACKET
    (83) variable1 -> . empty
    (121) empty -> .

  ! shift/reduce conflict for OBRACKET resolved as shift
    OBRACKET        shift and go to state 139
    PERIOD          reduce using rule 121 (empty -> .)
    FROM            reduce using rule 121 (empty -> .)
    TO              reduce using rule 121 (empty -> .)
    BY              reduce using rule 121 (empty -> .)
    CPAREN          reduce using rule 121 (empty -> .)

  ! OBRACKET        [ reduce using rule 121 (empty -> .) ]

    variable1                      shift and go to state 138
    empty                          shift and go to state 140

state 185

    (3) funcion -> FUNCTION func1 ID saw_id . saw_function OPAREN param CPAREN bloque
    (129) saw_function -> .

    OPAREN          reduce using rule 129 (saw_function -> .)

    saw_function                   shift and go to state 214

state 186

    (12) clase -> CLASS ID saw_id saw_class . COLON clase_bloque SEMICOLON

    COLON           shift and go to state 215


state 187

    (91) exp1 -> OR texp exp1 .

    QUESTION        reduce using rule 91 (exp1 -> OR texp exp1 .)
    RETURN          reduce using rule 91 (exp1 -> OR texp exp1 .)
    ID              reduce using rule 91 (exp1 -> OR texp exp1 .)
    IF              reduce using rule 91 (exp1 -> OR texp exp1 .)
    PRINT           reduce using rule 91 (exp1 -> OR texp exp1 .)
    READ            reduce using rule 91 (exp1 -> OR texp exp1 .)
    WHILE           reduce using rule 91 (exp1 -> OR texp exp1 .)
    FOR             reduce using rule 91 (exp1 -> OR texp exp1 .)
    OCURLY          reduce using rule 91 (exp1 -> OR texp exp1 .)
    FUNCTION        reduce using rule 91 (exp1 -> OR texp exp1 .)
    CLASS           reduce using rule 91 (exp1 -> OR texp exp1 .)
    VAR             reduce using rule 91 (exp1 -> OR texp exp1 .)
    OPAREN          reduce using rule 91 (exp1 -> OR texp exp1 .)
    CSTINT          reduce using rule 91 (exp1 -> OR texp exp1 .)
    CSTFLT          reduce using rule 91 (exp1 -> OR texp exp1 .)
    CSTCHAR         reduce using rule 91 (exp1 -> OR texp exp1 .)
    CSTSTRING       reduce using rule 91 (exp1 -> OR texp exp1 .)
    TRUE            reduce using rule 91 (exp1 -> OR texp exp1 .)
    FALSE           reduce using rule 91 (exp1 -> OR texp exp1 .)
    CCURLY          reduce using rule 91 (exp1 -> OR texp exp1 .)
    CPAREN          reduce using rule 91 (exp1 -> OR texp exp1 .)
    COLON           reduce using rule 91 (exp1 -> OR texp exp1 .)
    SEMICOLON       reduce using rule 91 (exp1 -> OR texp exp1 .)
    COMMA           reduce using rule 91 (exp1 -> OR texp exp1 .)
    CBRACKET        reduce using rule 91 (exp1 -> OR texp exp1 .)


state 188

    (94) texp1 -> AND gexp texp1 .

    OR              reduce using rule 94 (texp1 -> AND gexp texp1 .)
    QUESTION        reduce using rule 94 (texp1 -> AND gexp texp1 .)
    RETURN          reduce using rule 94 (texp1 -> AND gexp texp1 .)
    ID              reduce using rule 94 (texp1 -> AND gexp texp1 .)
    IF              reduce using rule 94 (texp1 -> AND gexp texp1 .)
    PRINT           reduce using rule 94 (texp1 -> AND gexp texp1 .)
    READ            reduce using rule 94 (texp1 -> AND gexp texp1 .)
    WHILE           reduce using rule 94 (texp1 -> AND gexp texp1 .)
    FOR             reduce using rule 94 (texp1 -> AND gexp texp1 .)
    OCURLY          reduce using rule 94 (texp1 -> AND gexp texp1 .)
    FUNCTION        reduce using rule 94 (texp1 -> AND gexp texp1 .)
    CLASS           reduce using rule 94 (texp1 -> AND gexp texp1 .)
    VAR             reduce using rule 94 (texp1 -> AND gexp texp1 .)
    OPAREN          reduce using rule 94 (texp1 -> AND gexp texp1 .)
    CSTINT          reduce using rule 94 (texp1 -> AND gexp texp1 .)
    CSTFLT          reduce using rule 94 (texp1 -> AND gexp texp1 .)
    CSTCHAR         reduce using rule 94 (texp1 -> AND gexp texp1 .)
    CSTSTRING       reduce using rule 94 (texp1 -> AND gexp texp1 .)
    TRUE            reduce using rule 94 (texp1 -> AND gexp texp1 .)
    FALSE           reduce using rule 94 (texp1 -> AND gexp texp1 .)
    CCURLY          reduce using rule 94 (texp1 -> AND gexp texp1 .)
    CPAREN          reduce using rule 94 (texp1 -> AND gexp texp1 .)
    COLON           reduce using rule 94 (texp1 -> AND gexp texp1 .)
    SEMICOLON       reduce using rule 94 (texp1 -> AND gexp texp1 .)
    COMMA           reduce using rule 94 (texp1 -> AND gexp texp1 .)
    CBRACKET        reduce using rule 94 (texp1 -> AND gexp texp1 .)


state 189

    (105) mexp1 -> PLUS termino mexp1 .

    LT              reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    GT              reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    GTE             reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    LTE             reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    EQ              reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    NE              reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    AND             reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    OR              reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    QUESTION        reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    RETURN          reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    ID              reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    IF              reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    PRINT           reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    READ            reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    WHILE           reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    FOR             reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    OCURLY          reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    FUNCTION        reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    CLASS           reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    VAR             reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    OPAREN          reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    CSTINT          reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    CSTFLT          reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    CSTCHAR         reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    CSTSTRING       reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    TRUE            reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    FALSE           reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    CCURLY          reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    CPAREN          reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    COLON           reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    SEMICOLON       reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    COMMA           reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)
    CBRACKET        reduce using rule 105 (mexp1 -> PLUS termino mexp1 .)


state 190

    (106) mexp1 -> MINUS termino mexp1 .

    LT              reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    GT              reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    GTE             reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    LTE             reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    EQ              reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    NE              reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    AND             reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    OR              reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    QUESTION        reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    RETURN          reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    ID              reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    IF              reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    PRINT           reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    READ            reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    WHILE           reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    FOR             reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    OCURLY          reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    FUNCTION        reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    CLASS           reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    VAR             reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    OPAREN          reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    CSTINT          reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    CSTFLT          reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    CSTCHAR         reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    CSTSTRING       reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    TRUE            reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    FALSE           reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    CCURLY          reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    CPAREN          reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    COLON           reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    SEMICOLON       reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    COMMA           reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)
    CBRACKET        reduce using rule 106 (mexp1 -> MINUS termino mexp1 .)


state 191

    (109) term1 -> MULT factor term1 .

    PLUS            reduce using rule 109 (term1 -> MULT factor term1 .)
    MINUS           reduce using rule 109 (term1 -> MULT factor term1 .)
    LT              reduce using rule 109 (term1 -> MULT factor term1 .)
    GT              reduce using rule 109 (term1 -> MULT factor term1 .)
    GTE             reduce using rule 109 (term1 -> MULT factor term1 .)
    LTE             reduce using rule 109 (term1 -> MULT factor term1 .)
    EQ              reduce using rule 109 (term1 -> MULT factor term1 .)
    NE              reduce using rule 109 (term1 -> MULT factor term1 .)
    AND             reduce using rule 109 (term1 -> MULT factor term1 .)
    OR              reduce using rule 109 (term1 -> MULT factor term1 .)
    QUESTION        reduce using rule 109 (term1 -> MULT factor term1 .)
    RETURN          reduce using rule 109 (term1 -> MULT factor term1 .)
    ID              reduce using rule 109 (term1 -> MULT factor term1 .)
    IF              reduce using rule 109 (term1 -> MULT factor term1 .)
    PRINT           reduce using rule 109 (term1 -> MULT factor term1 .)
    READ            reduce using rule 109 (term1 -> MULT factor term1 .)
    WHILE           reduce using rule 109 (term1 -> MULT factor term1 .)
    FOR             reduce using rule 109 (term1 -> MULT factor term1 .)
    OCURLY          reduce using rule 109 (term1 -> MULT factor term1 .)
    FUNCTION        reduce using rule 109 (term1 -> MULT factor term1 .)
    CLASS           reduce using rule 109 (term1 -> MULT factor term1 .)
    VAR             reduce using rule 109 (term1 -> MULT factor term1 .)
    OPAREN          reduce using rule 109 (term1 -> MULT factor term1 .)
    CSTINT          reduce using rule 109 (term1 -> MULT factor term1 .)
    CSTFLT          reduce using rule 109 (term1 -> MULT factor term1 .)
    CSTCHAR         reduce using rule 109 (term1 -> MULT factor term1 .)
    CSTSTRING       reduce using rule 109 (term1 -> MULT factor term1 .)
    TRUE            reduce using rule 109 (term1 -> MULT factor term1 .)
    FALSE           reduce using rule 109 (term1 -> MULT factor term1 .)
    CCURLY          reduce using rule 109 (term1 -> MULT factor term1 .)
    CPAREN          reduce using rule 109 (term1 -> MULT factor term1 .)
    COLON           reduce using rule 109 (term1 -> MULT factor term1 .)
    SEMICOLON       reduce using rule 109 (term1 -> MULT factor term1 .)
    COMMA           reduce using rule 109 (term1 -> MULT factor term1 .)
    CBRACKET        reduce using rule 109 (term1 -> MULT factor term1 .)


state 192

    (110) term1 -> DIV factor term1 .

    PLUS            reduce using rule 110 (term1 -> DIV factor term1 .)
    MINUS           reduce using rule 110 (term1 -> DIV factor term1 .)
    LT              reduce using rule 110 (term1 -> DIV factor term1 .)
    GT              reduce using rule 110 (term1 -> DIV factor term1 .)
    GTE             reduce using rule 110 (term1 -> DIV factor term1 .)
    LTE             reduce using rule 110 (term1 -> DIV factor term1 .)
    EQ              reduce using rule 110 (term1 -> DIV factor term1 .)
    NE              reduce using rule 110 (term1 -> DIV factor term1 .)
    AND             reduce using rule 110 (term1 -> DIV factor term1 .)
    OR              reduce using rule 110 (term1 -> DIV factor term1 .)
    QUESTION        reduce using rule 110 (term1 -> DIV factor term1 .)
    RETURN          reduce using rule 110 (term1 -> DIV factor term1 .)
    ID              reduce using rule 110 (term1 -> DIV factor term1 .)
    IF              reduce using rule 110 (term1 -> DIV factor term1 .)
    PRINT           reduce using rule 110 (term1 -> DIV factor term1 .)
    READ            reduce using rule 110 (term1 -> DIV factor term1 .)
    WHILE           reduce using rule 110 (term1 -> DIV factor term1 .)
    FOR             reduce using rule 110 (term1 -> DIV factor term1 .)
    OCURLY          reduce using rule 110 (term1 -> DIV factor term1 .)
    FUNCTION        reduce using rule 110 (term1 -> DIV factor term1 .)
    CLASS           reduce using rule 110 (term1 -> DIV factor term1 .)
    VAR             reduce using rule 110 (term1 -> DIV factor term1 .)
    OPAREN          reduce using rule 110 (term1 -> DIV factor term1 .)
    CSTINT          reduce using rule 110 (term1 -> DIV factor term1 .)
    CSTFLT          reduce using rule 110 (term1 -> DIV factor term1 .)
    CSTCHAR         reduce using rule 110 (term1 -> DIV factor term1 .)
    CSTSTRING       reduce using rule 110 (term1 -> DIV factor term1 .)
    TRUE            reduce using rule 110 (term1 -> DIV factor term1 .)
    FALSE           reduce using rule 110 (term1 -> DIV factor term1 .)
    CCURLY          reduce using rule 110 (term1 -> DIV factor term1 .)
    CPAREN          reduce using rule 110 (term1 -> DIV factor term1 .)
    COLON           reduce using rule 110 (term1 -> DIV factor term1 .)
    SEMICOLON       reduce using rule 110 (term1 -> DIV factor term1 .)
    COMMA           reduce using rule 110 (term1 -> DIV factor term1 .)
    CBRACKET        reduce using rule 110 (term1 -> DIV factor term1 .)


state 193

    (25) tipo -> compuesto ID saw_id saw_variable . tipo1
    (28) tipo1 -> . COMMA ID saw_id saw_variable tipo1
    (29) tipo1 -> . empty
    (121) empty -> .

    COMMA           shift and go to state 217
    SEMICOLON       reduce using rule 121 (empty -> .)

    tipo1                          shift and go to state 216
    empty                          shift and go to state 218

state 194

    (26) tipo -> simple ID saw_id saw_variable . tipo1
    (28) tipo1 -> . COMMA ID saw_id saw_variable tipo1
    (29) tipo1 -> . empty
    (121) empty -> .

    COMMA           shift and go to state 217
    SEMICOLON       reduce using rule 121 (empty -> .)

    tipo1                          shift and go to state 219
    empty                          shift and go to state 218

state 195

    (27) tipo -> multiple ID saw_id saw_variable . OBRACKET CSTINT CBRACKET tipo3 tipo2

    OBRACKET        shift and go to state 220


state 196

    (74) ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux . SEMICOLON

    SEMICOLON       shift and go to state 221


state 197

    (86) llamada -> ID saw_id OPAREN exp llamada1 . CPAREN

    CPAREN          shift and go to state 222


state 198

    (88) llamada1 -> COMMA . exp llamada1
    (90) exp -> . texp exp1
    (93) texp -> . gexp texp1
    (96) gexp -> . mexp gexp1
    (104) mexp -> . termino mexp1
    (108) termino -> . factor term1
    (112) factor -> . OPAREN exp CPAREN
    (113) factor -> . varcst
    (114) factor -> . variable
    (115) factor -> . llamada
    (116) varcst -> . CSTINT
    (117) varcst -> . CSTFLT
    (118) varcst -> . CSTCHAR
    (119) varcst -> . CSTSTRING
    (120) varcst -> . boolean
    (81) variable -> . ID saw_id variable1 variable1 variable2
    (86) llamada -> . ID saw_id OPAREN exp llamada1 CPAREN
    (87) llamada -> . ID saw_id OPAREN CPAREN
    (79) boolean -> . TRUE
    (80) boolean -> . FALSE

    OPAREN          shift and go to state 31
    CSTINT          shift and go to state 45
    CSTFLT          shift and go to state 46
    CSTCHAR         shift and go to state 47
    CSTSTRING       shift and go to state 48
    ID              shift and go to state 74
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    exp                            shift and go to state 223
    texp                           shift and go to state 39
    gexp                           shift and go to state 40
    mexp                           shift and go to state 41
    termino                        shift and go to state 42
    factor                         shift and go to state 43
    varcst                         shift and go to state 44
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 49

state 199

    (89) llamada1 -> empty .

    CPAREN          reduce using rule 89 (llamada1 -> empty .)


state 200

    (81) variable -> ID saw_id variable1 variable1 variable2 .

    AS              reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    MULT            reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    DIV             reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    PLUS            reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    MINUS           reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    LT              reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    GT              reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    GTE             reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    LTE             reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    EQ              reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    NE              reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    AND             reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    OR              reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    QUESTION        reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    RETURN          reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    ID              reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    IF              reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    PRINT           reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    READ            reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    WHILE           reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    FOR             reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    OCURLY          reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    FUNCTION        reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    CLASS           reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    VAR             reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    OPAREN          reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    CSTINT          reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    CSTFLT          reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    CSTCHAR         reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    CSTSTRING       reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    TRUE            reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    FALSE           reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    CCURLY          reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    CPAREN          reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    COLON           reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    SEMICOLON       reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    COMMA           reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    FROM            reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    CBRACKET        reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    TO              reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)
    BY              reduce using rule 81 (variable -> ID saw_id variable1 variable1 variable2 .)


state 201

    (84) variable2 -> PERIOD . ID saw_id variable1 variable1 variable2

    ID              shift and go to state 224


state 202

    (85) variable2 -> empty .

    AS              reduce using rule 85 (variable2 -> empty .)
    MULT            reduce using rule 85 (variable2 -> empty .)
    DIV             reduce using rule 85 (variable2 -> empty .)
    PLUS            reduce using rule 85 (variable2 -> empty .)
    MINUS           reduce using rule 85 (variable2 -> empty .)
    LT              reduce using rule 85 (variable2 -> empty .)
    GT              reduce using rule 85 (variable2 -> empty .)
    GTE             reduce using rule 85 (variable2 -> empty .)
    LTE             reduce using rule 85 (variable2 -> empty .)
    EQ              reduce using rule 85 (variable2 -> empty .)
    NE              reduce using rule 85 (variable2 -> empty .)
    AND             reduce using rule 85 (variable2 -> empty .)
    OR              reduce using rule 85 (variable2 -> empty .)
    QUESTION        reduce using rule 85 (variable2 -> empty .)
    RETURN          reduce using rule 85 (variable2 -> empty .)
    ID              reduce using rule 85 (variable2 -> empty .)
    IF              reduce using rule 85 (variable2 -> empty .)
    PRINT           reduce using rule 85 (variable2 -> empty .)
    READ            reduce using rule 85 (variable2 -> empty .)
    WHILE           reduce using rule 85 (variable2 -> empty .)
    FOR             reduce using rule 85 (variable2 -> empty .)
    OCURLY          reduce using rule 85 (variable2 -> empty .)
    FUNCTION        reduce using rule 85 (variable2 -> empty .)
    CLASS           reduce using rule 85 (variable2 -> empty .)
    VAR             reduce using rule 85 (variable2 -> empty .)
    OPAREN          reduce using rule 85 (variable2 -> empty .)
    CSTINT          reduce using rule 85 (variable2 -> empty .)
    CSTFLT          reduce using rule 85 (variable2 -> empty .)
    CSTCHAR         reduce using rule 85 (variable2 -> empty .)
    CSTSTRING       reduce using rule 85 (variable2 -> empty .)
    TRUE            reduce using rule 85 (variable2 -> empty .)
    FALSE           reduce using rule 85 (variable2 -> empty .)
    CCURLY          reduce using rule 85 (variable2 -> empty .)
    CPAREN          reduce using rule 85 (variable2 -> empty .)
    COLON           reduce using rule 85 (variable2 -> empty .)
    SEMICOLON       reduce using rule 85 (variable2 -> empty .)
    COMMA           reduce using rule 85 (variable2 -> empty .)
    FROM            reduce using rule 85 (variable2 -> empty .)
    CBRACKET        reduce using rule 85 (variable2 -> empty .)
    TO              reduce using rule 85 (variable2 -> empty .)
    BY              reduce using rule 85 (variable2 -> empty .)


state 203

    (82) variable1 -> OBRACKET exp CBRACKET .

    OBRACKET        reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    PERIOD          reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    AS              reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    MULT            reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    DIV             reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    PLUS            reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    MINUS           reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    LT              reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    GT              reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    GTE             reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    LTE             reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    EQ              reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    NE              reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    AND             reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    OR              reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    QUESTION        reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    RETURN          reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    ID              reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    IF              reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    PRINT           reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    READ            reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    WHILE           reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    FOR             reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    OCURLY          reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    FUNCTION        reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    CLASS           reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    VAR             reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    OPAREN          reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    CSTINT          reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    CSTFLT          reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    CSTCHAR         reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    CSTSTRING       reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    TRUE            reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    FALSE           reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    CCURLY          reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    CPAREN          reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    COLON           reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    SEMICOLON       reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    COMMA           reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    CBRACKET        reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    FROM            reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    TO              reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)
    BY              reduce using rule 82 (variable1 -> OBRACKET exp CBRACKET .)


state 204

    (69) condicion -> IF cond2 THEN bloque cond1 . SEMICOLON

    SEMICOLON       shift and go to state 225


state 205

    (70) cond1 -> ELSE . bloque
    (71) cond1 -> ELSE . IF cond2 THEN bloque cond1
    (47) bloque -> . OCURLY b1 CCURLY scope_end

    IF              shift and go to state 227
    OCURLY          shift and go to state 9

    bloque                         shift and go to state 226

state 206

    (72) cond1 -> empty .

    SEMICOLON       reduce using rule 72 (cond1 -> empty .)


state 207

    (75) escritura -> PRINT OPAREN exp e1 CPAREN .

    RETURN          reduce using rule 75 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    ID              reduce using rule 75 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    IF              reduce using rule 75 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    PRINT           reduce using rule 75 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    READ            reduce using rule 75 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    WHILE           reduce using rule 75 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    FOR             reduce using rule 75 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    OCURLY          reduce using rule 75 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    FUNCTION        reduce using rule 75 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    CLASS           reduce using rule 75 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    VAR             reduce using rule 75 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    OPAREN          reduce using rule 75 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    CSTINT          reduce using rule 75 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    CSTFLT          reduce using rule 75 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    CSTCHAR         reduce using rule 75 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    CSTSTRING       reduce using rule 75 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    TRUE            reduce using rule 75 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    FALSE           reduce using rule 75 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    CCURLY          reduce using rule 75 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    COLON           reduce using rule 75 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    SEMICOLON       reduce using rule 75 (escritura -> PRINT OPAREN exp e1 CPAREN .)


state 208

    (76) e1 -> COMMA exp . e1
    (76) e1 -> . COMMA exp e1
    (77) e1 -> . empty
    (121) empty -> .

    COMMA           shift and go to state 179
    CPAREN          reduce using rule 121 (empty -> .)

    e1                             shift and go to state 228
    empty                          shift and go to state 180

state 209

    (78) leer -> READ OPAREN exp e1 CPAREN .

    RETURN          reduce using rule 78 (leer -> READ OPAREN exp e1 CPAREN .)
    ID              reduce using rule 78 (leer -> READ OPAREN exp e1 CPAREN .)
    IF              reduce using rule 78 (leer -> READ OPAREN exp e1 CPAREN .)
    PRINT           reduce using rule 78 (leer -> READ OPAREN exp e1 CPAREN .)
    READ            reduce using rule 78 (leer -> READ OPAREN exp e1 CPAREN .)
    WHILE           reduce using rule 78 (leer -> READ OPAREN exp e1 CPAREN .)
    FOR             reduce using rule 78 (leer -> READ OPAREN exp e1 CPAREN .)
    OCURLY          reduce using rule 78 (leer -> READ OPAREN exp e1 CPAREN .)
    FUNCTION        reduce using rule 78 (leer -> READ OPAREN exp e1 CPAREN .)
    CLASS           reduce using rule 78 (leer -> READ OPAREN exp e1 CPAREN .)
    VAR             reduce using rule 78 (leer -> READ OPAREN exp e1 CPAREN .)
    OPAREN          reduce using rule 78 (leer -> READ OPAREN exp e1 CPAREN .)
    CSTINT          reduce using rule 78 (leer -> READ OPAREN exp e1 CPAREN .)
    CSTFLT          reduce using rule 78 (leer -> READ OPAREN exp e1 CPAREN .)
    CSTCHAR         reduce using rule 78 (leer -> READ OPAREN exp e1 CPAREN .)
    CSTSTRING       reduce using rule 78 (leer -> READ OPAREN exp e1 CPAREN .)
    TRUE            reduce using rule 78 (leer -> READ OPAREN exp e1 CPAREN .)
    FALSE           reduce using rule 78 (leer -> READ OPAREN exp e1 CPAREN .)
    CCURLY          reduce using rule 78 (leer -> READ OPAREN exp e1 CPAREN .)
    COLON           reduce using rule 78 (leer -> READ OPAREN exp e1 CPAREN .)
    SEMICOLON       reduce using rule 78 (leer -> READ OPAREN exp e1 CPAREN .)


state 210

    (18) ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .

    RETURN          reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    ID              reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    IF              reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    PRINT           reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    READ            reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    WHILE           reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    FOR             reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    OCURLY          reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    FUNCTION        reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CLASS           reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    VAR             reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    OPAREN          reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CSTINT          reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CSTFLT          reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CSTCHAR         reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CSTSTRING       reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    TRUE            reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    FALSE           reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CCURLY          reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)


state 211

    (21) ciclo_for1 -> variable .

    TO              reduce using rule 21 (ciclo_for1 -> variable .)
    BY              reduce using rule 21 (ciclo_for1 -> variable .)
    CPAREN          reduce using rule 21 (ciclo_for1 -> variable .)


state 212

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 . TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON

    TO              shift and go to state 229


state 213

    (20) ciclo_for1 -> CSTINT .

    TO              reduce using rule 20 (ciclo_for1 -> CSTINT .)
    BY              reduce using rule 20 (ciclo_for1 -> CSTINT .)
    CPAREN          reduce using rule 20 (ciclo_for1 -> CSTINT .)


state 214

    (3) funcion -> FUNCTION func1 ID saw_id saw_function . OPAREN param CPAREN bloque

    OPAREN          shift and go to state 230


state 215

    (12) clase -> CLASS ID saw_id saw_class COLON . clase_bloque SEMICOLON
    (13) clase_bloque -> . OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY

    OCURLY          shift and go to state 232

    clase_bloque                   shift and go to state 231

state 216

    (25) tipo -> compuesto ID saw_id saw_variable tipo1 .

    SEMICOLON       reduce using rule 25 (tipo -> compuesto ID saw_id saw_variable tipo1 .)


state 217

    (28) tipo1 -> COMMA . ID saw_id saw_variable tipo1

    ID              shift and go to state 233


state 218

    (29) tipo1 -> empty .

    SEMICOLON       reduce using rule 29 (tipo1 -> empty .)


state 219

    (26) tipo -> simple ID saw_id saw_variable tipo1 .

    SEMICOLON       reduce using rule 26 (tipo -> simple ID saw_id saw_variable tipo1 .)


state 220

    (27) tipo -> multiple ID saw_id saw_variable OBRACKET . CSTINT CBRACKET tipo3 tipo2

    CSTINT          shift and go to state 234


state 221

    (74) ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .

    RETURN          reduce using rule 74 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    ID              reduce using rule 74 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    IF              reduce using rule 74 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    PRINT           reduce using rule 74 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    READ            reduce using rule 74 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    WHILE           reduce using rule 74 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    FOR             reduce using rule 74 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    OCURLY          reduce using rule 74 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    FUNCTION        reduce using rule 74 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CLASS           reduce using rule 74 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    VAR             reduce using rule 74 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    OPAREN          reduce using rule 74 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CSTINT          reduce using rule 74 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CSTFLT          reduce using rule 74 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CSTCHAR         reduce using rule 74 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CSTSTRING       reduce using rule 74 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    TRUE            reduce using rule 74 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    FALSE           reduce using rule 74 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CCURLY          reduce using rule 74 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    COLON           reduce using rule 74 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    SEMICOLON       reduce using rule 74 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)


state 222

    (86) llamada -> ID saw_id OPAREN exp llamada1 CPAREN .

    RETURN          reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    ID              reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    IF              reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    PRINT           reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    READ            reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    WHILE           reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    FOR             reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    OCURLY          reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    FUNCTION        reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    CLASS           reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    VAR             reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    OPAREN          reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    CSTINT          reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    CSTFLT          reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    CSTCHAR         reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    CSTSTRING       reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    TRUE            reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    FALSE           reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    CCURLY          reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    MULT            reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    DIV             reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    PLUS            reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    MINUS           reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    LT              reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    GT              reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    GTE             reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    LTE             reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    EQ              reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    NE              reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    AND             reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    OR              reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    QUESTION        reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    CPAREN          reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    COLON           reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    SEMICOLON       reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    COMMA           reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)
    CBRACKET        reduce using rule 86 (llamada -> ID saw_id OPAREN exp llamada1 CPAREN .)


state 223

    (88) llamada1 -> COMMA exp . llamada1
    (88) llamada1 -> . COMMA exp llamada1
    (89) llamada1 -> . empty
    (121) empty -> .

    COMMA           shift and go to state 198
    CPAREN          reduce using rule 121 (empty -> .)

    llamada1                       shift and go to state 235
    empty                          shift and go to state 199

state 224

    (84) variable2 -> PERIOD ID . saw_id variable1 variable1 variable2
    (125) saw_id -> .

    OBRACKET        reduce using rule 125 (saw_id -> .)
    PERIOD          reduce using rule 125 (saw_id -> .)
    AS              reduce using rule 125 (saw_id -> .)
    MULT            reduce using rule 125 (saw_id -> .)
    DIV             reduce using rule 125 (saw_id -> .)
    PLUS            reduce using rule 125 (saw_id -> .)
    MINUS           reduce using rule 125 (saw_id -> .)
    LT              reduce using rule 125 (saw_id -> .)
    GT              reduce using rule 125 (saw_id -> .)
    GTE             reduce using rule 125 (saw_id -> .)
    LTE             reduce using rule 125 (saw_id -> .)
    EQ              reduce using rule 125 (saw_id -> .)
    NE              reduce using rule 125 (saw_id -> .)
    AND             reduce using rule 125 (saw_id -> .)
    OR              reduce using rule 125 (saw_id -> .)
    QUESTION        reduce using rule 125 (saw_id -> .)
    RETURN          reduce using rule 125 (saw_id -> .)
    ID              reduce using rule 125 (saw_id -> .)
    IF              reduce using rule 125 (saw_id -> .)
    PRINT           reduce using rule 125 (saw_id -> .)
    READ            reduce using rule 125 (saw_id -> .)
    WHILE           reduce using rule 125 (saw_id -> .)
    FOR             reduce using rule 125 (saw_id -> .)
    OCURLY          reduce using rule 125 (saw_id -> .)
    FUNCTION        reduce using rule 125 (saw_id -> .)
    CLASS           reduce using rule 125 (saw_id -> .)
    VAR             reduce using rule 125 (saw_id -> .)
    OPAREN          reduce using rule 125 (saw_id -> .)
    CSTINT          reduce using rule 125 (saw_id -> .)
    CSTFLT          reduce using rule 125 (saw_id -> .)
    CSTCHAR         reduce using rule 125 (saw_id -> .)
    CSTSTRING       reduce using rule 125 (saw_id -> .)
    TRUE            reduce using rule 125 (saw_id -> .)
    FALSE           reduce using rule 125 (saw_id -> .)
    CCURLY          reduce using rule 125 (saw_id -> .)
    CPAREN          reduce using rule 125 (saw_id -> .)
    COLON           reduce using rule 125 (saw_id -> .)
    SEMICOLON       reduce using rule 125 (saw_id -> .)
    COMMA           reduce using rule 125 (saw_id -> .)
    FROM            reduce using rule 125 (saw_id -> .)
    CBRACKET        reduce using rule 125 (saw_id -> .)
    TO              reduce using rule 125 (saw_id -> .)
    BY              reduce using rule 125 (saw_id -> .)

    saw_id                         shift and go to state 236

state 225

    (69) condicion -> IF cond2 THEN bloque cond1 SEMICOLON .

    RETURN          reduce using rule 69 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    ID              reduce using rule 69 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    IF              reduce using rule 69 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    PRINT           reduce using rule 69 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    READ            reduce using rule 69 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    WHILE           reduce using rule 69 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    FOR             reduce using rule 69 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    OCURLY          reduce using rule 69 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    FUNCTION        reduce using rule 69 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CLASS           reduce using rule 69 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    VAR             reduce using rule 69 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    OPAREN          reduce using rule 69 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CSTINT          reduce using rule 69 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CSTFLT          reduce using rule 69 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CSTCHAR         reduce using rule 69 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CSTSTRING       reduce using rule 69 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    TRUE            reduce using rule 69 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    FALSE           reduce using rule 69 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CCURLY          reduce using rule 69 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)


state 226

    (70) cond1 -> ELSE bloque .

    SEMICOLON       reduce using rule 70 (cond1 -> ELSE bloque .)


state 227

    (71) cond1 -> ELSE IF . cond2 THEN bloque cond1
    (73) cond2 -> . OPAREN exp CPAREN

    OPAREN          shift and go to state 80

    cond2                          shift and go to state 237

state 228

    (76) e1 -> COMMA exp e1 .

    CPAREN          reduce using rule 76 (e1 -> COMMA exp e1 .)


state 229

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO . ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
    (20) ciclo_for1 -> . CSTINT
    (21) ciclo_for1 -> . variable
    (81) variable -> . ID saw_id variable1 variable1 variable2

    CSTINT          shift and go to state 213
    ID              shift and go to state 148

    variable                       shift and go to state 211
    ciclo_for1                     shift and go to state 238

state 230

    (3) funcion -> FUNCTION func1 ID saw_id saw_function OPAREN . param CPAREN bloque
    (6) param -> . param2 param1
    (7) param -> . empty
    (10) param2 -> . simple ID saw_id_param
    (11) param2 -> . multiple ID saw_id_param variable1 variable1
    (121) empty -> .
    (34) simple -> . INT saw_type
    (35) simple -> . FLOAT saw_type
    (36) simple -> . BOOL saw_type
    (37) simple -> . STRING saw_type
    (38) simple -> . CHAR saw_type
    (39) multiple -> . INTS saw_type
    (40) multiple -> . FLOATS saw_type
    (41) multiple -> . BOOLS saw_type
    (42) multiple -> . STRINGS saw_type
    (43) multiple -> . CHARS saw_type

    CPAREN          reduce using rule 121 (empty -> .)
    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    BOOL            shift and go to state 61
    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    INTS            shift and go to state 64
    FLOATS          shift and go to state 65
    BOOLS           shift and go to state 66
    STRINGS         shift and go to state 67
    CHARS           shift and go to state 68

    param                          shift and go to state 239
    param2                         shift and go to state 240
    empty                          shift and go to state 241
    simple                         shift and go to state 242
    multiple                       shift and go to state 243

state 231

    (12) clase -> CLASS ID saw_id saw_class COLON clase_bloque . SEMICOLON

    SEMICOLON       shift and go to state 244


state 232

    (13) clase_bloque -> OCURLY . ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY

    ATTRIBUTES      shift and go to state 245


state 233

    (28) tipo1 -> COMMA ID . saw_id saw_variable tipo1
    (125) saw_id -> .

    COMMA           reduce using rule 125 (saw_id -> .)
    SEMICOLON       reduce using rule 125 (saw_id -> .)

    saw_id                         shift and go to state 246

state 234

    (27) tipo -> multiple ID saw_id saw_variable OBRACKET CSTINT . CBRACKET tipo3 tipo2

    CBRACKET        shift and go to state 247


state 235

    (88) llamada1 -> COMMA exp llamada1 .

    CPAREN          reduce using rule 88 (llamada1 -> COMMA exp llamada1 .)


state 236

    (84) variable2 -> PERIOD ID saw_id . variable1 variable1 variable2
    (82) variable1 -> . OBRACKET exp CBRACKET
    (83) variable1 -> . empty
    (121) empty -> .

  ! shift/reduce conflict for OBRACKET resolved as shift
    OBRACKET        shift and go to state 139
    PERIOD          reduce using rule 121 (empty -> .)
    AS              reduce using rule 121 (empty -> .)
    MULT            reduce using rule 121 (empty -> .)
    DIV             reduce using rule 121 (empty -> .)
    PLUS            reduce using rule 121 (empty -> .)
    MINUS           reduce using rule 121 (empty -> .)
    LT              reduce using rule 121 (empty -> .)
    GT              reduce using rule 121 (empty -> .)
    GTE             reduce using rule 121 (empty -> .)
    LTE             reduce using rule 121 (empty -> .)
    EQ              reduce using rule 121 (empty -> .)
    NE              reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    QUESTION        reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    WHILE           reduce using rule 121 (empty -> .)
    FOR             reduce using rule 121 (empty -> .)
    OCURLY          reduce using rule 121 (empty -> .)
    FUNCTION        reduce using rule 121 (empty -> .)
    CLASS           reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    OPAREN          reduce using rule 121 (empty -> .)
    CSTINT          reduce using rule 121 (empty -> .)
    CSTFLT          reduce using rule 121 (empty -> .)
    CSTCHAR         reduce using rule 121 (empty -> .)
    CSTSTRING       reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    CCURLY          reduce using rule 121 (empty -> .)
    CPAREN          reduce using rule 121 (empty -> .)
    COLON           reduce using rule 121 (empty -> .)
    SEMICOLON       reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    FROM            reduce using rule 121 (empty -> .)
    CBRACKET        reduce using rule 121 (empty -> .)
    TO              reduce using rule 121 (empty -> .)
    BY              reduce using rule 121 (empty -> .)

  ! OBRACKET        [ reduce using rule 121 (empty -> .) ]

    variable1                      shift and go to state 248
    empty                          shift and go to state 140

state 237

    (71) cond1 -> ELSE IF cond2 . THEN bloque cond1

    THEN            shift and go to state 249


state 238

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 . BY ciclo_for1 CPAREN THEN bloque SEMICOLON

    BY              shift and go to state 250


state 239

    (3) funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param . CPAREN bloque

    CPAREN          shift and go to state 251


state 240

    (6) param -> param2 . param1
    (8) param1 -> . COMMA param2 param1
    (9) param1 -> . empty
    (121) empty -> .

    COMMA           shift and go to state 253
    CPAREN          reduce using rule 121 (empty -> .)

    param1                         shift and go to state 252
    empty                          shift and go to state 254

state 241

    (7) param -> empty .

    CPAREN          reduce using rule 7 (param -> empty .)


state 242

    (10) param2 -> simple . ID saw_id_param

    ID              shift and go to state 255


state 243

    (11) param2 -> multiple . ID saw_id_param variable1 variable1

    ID              shift and go to state 256


state 244

    (12) clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .

    RETURN          reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    ID              reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    IF              reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    PRINT           reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    READ            reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    WHILE           reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    FOR             reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    OCURLY          reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    FUNCTION        reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    CLASS           reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    VAR             reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    OPAREN          reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    CSTINT          reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    CSTFLT          reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    CSTCHAR         reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    CSTSTRING       reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    TRUE            reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    FALSE           reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)
    CCURLY          reduce using rule 12 (clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON .)


state 245

    (13) clase_bloque -> OCURLY ATTRIBUTES . COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY

    COLON           shift and go to state 257


state 246

    (28) tipo1 -> COMMA ID saw_id . saw_variable tipo1
    (127) saw_variable -> .

    COMMA           reduce using rule 127 (saw_variable -> .)
    SEMICOLON       reduce using rule 127 (saw_variable -> .)

    saw_variable                   shift and go to state 258

state 247

    (27) tipo -> multiple ID saw_id saw_variable OBRACKET CSTINT CBRACKET . tipo3 tipo2
    (32) tipo3 -> . OBRACKET CSTINT CBRACKET
    (33) tipo3 -> . empty
    (121) empty -> .

    OBRACKET        shift and go to state 259
    COMMA           reduce using rule 121 (empty -> .)
    SEMICOLON       reduce using rule 121 (empty -> .)

    tipo3                          shift and go to state 260
    empty                          shift and go to state 261

state 248

    (84) variable2 -> PERIOD ID saw_id variable1 . variable1 variable2
    (82) variable1 -> . OBRACKET exp CBRACKET
    (83) variable1 -> . empty
    (121) empty -> .

    OBRACKET        shift and go to state 139
    PERIOD          reduce using rule 121 (empty -> .)
    AS              reduce using rule 121 (empty -> .)
    MULT            reduce using rule 121 (empty -> .)
    DIV             reduce using rule 121 (empty -> .)
    PLUS            reduce using rule 121 (empty -> .)
    MINUS           reduce using rule 121 (empty -> .)
    LT              reduce using rule 121 (empty -> .)
    GT              reduce using rule 121 (empty -> .)
    GTE             reduce using rule 121 (empty -> .)
    LTE             reduce using rule 121 (empty -> .)
    EQ              reduce using rule 121 (empty -> .)
    NE              reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    QUESTION        reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    WHILE           reduce using rule 121 (empty -> .)
    FOR             reduce using rule 121 (empty -> .)
    OCURLY          reduce using rule 121 (empty -> .)
    FUNCTION        reduce using rule 121 (empty -> .)
    CLASS           reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    OPAREN          reduce using rule 121 (empty -> .)
    CSTINT          reduce using rule 121 (empty -> .)
    CSTFLT          reduce using rule 121 (empty -> .)
    CSTCHAR         reduce using rule 121 (empty -> .)
    CSTSTRING       reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    CCURLY          reduce using rule 121 (empty -> .)
    CPAREN          reduce using rule 121 (empty -> .)
    COLON           reduce using rule 121 (empty -> .)
    SEMICOLON       reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    FROM            reduce using rule 121 (empty -> .)
    CBRACKET        reduce using rule 121 (empty -> .)
    TO              reduce using rule 121 (empty -> .)
    BY              reduce using rule 121 (empty -> .)

    variable1                      shift and go to state 262
    empty                          shift and go to state 140

state 249

    (71) cond1 -> ELSE IF cond2 THEN . bloque cond1
    (47) bloque -> . OCURLY b1 CCURLY scope_end

    OCURLY          shift and go to state 9

    bloque                         shift and go to state 263

state 250

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY . ciclo_for1 CPAREN THEN bloque SEMICOLON
    (20) ciclo_for1 -> . CSTINT
    (21) ciclo_for1 -> . variable
    (81) variable -> . ID saw_id variable1 variable1 variable2

    CSTINT          shift and go to state 213
    ID              shift and go to state 148

    variable                       shift and go to state 211
    ciclo_for1                     shift and go to state 264

state 251

    (3) funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN . bloque
    (47) bloque -> . OCURLY b1 CCURLY scope_end

    OCURLY          shift and go to state 9

    bloque                         shift and go to state 265

state 252

    (6) param -> param2 param1 .

    CPAREN          reduce using rule 6 (param -> param2 param1 .)


state 253

    (8) param1 -> COMMA . param2 param1
    (10) param2 -> . simple ID saw_id_param
    (11) param2 -> . multiple ID saw_id_param variable1 variable1
    (34) simple -> . INT saw_type
    (35) simple -> . FLOAT saw_type
    (36) simple -> . BOOL saw_type
    (37) simple -> . STRING saw_type
    (38) simple -> . CHAR saw_type
    (39) multiple -> . INTS saw_type
    (40) multiple -> . FLOATS saw_type
    (41) multiple -> . BOOLS saw_type
    (42) multiple -> . STRINGS saw_type
    (43) multiple -> . CHARS saw_type

    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    BOOL            shift and go to state 61
    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    INTS            shift and go to state 64
    FLOATS          shift and go to state 65
    BOOLS           shift and go to state 66
    STRINGS         shift and go to state 67
    CHARS           shift and go to state 68

    param2                         shift and go to state 266
    simple                         shift and go to state 242
    multiple                       shift and go to state 243

state 254

    (9) param1 -> empty .

    CPAREN          reduce using rule 9 (param1 -> empty .)


state 255

    (10) param2 -> simple ID . saw_id_param
    (126) saw_id_param -> .

    COMMA           reduce using rule 126 (saw_id_param -> .)
    CPAREN          reduce using rule 126 (saw_id_param -> .)

    saw_id_param                   shift and go to state 267

state 256

    (11) param2 -> multiple ID . saw_id_param variable1 variable1
    (126) saw_id_param -> .

    OBRACKET        reduce using rule 126 (saw_id_param -> .)
    COMMA           reduce using rule 126 (saw_id_param -> .)
    CPAREN          reduce using rule 126 (saw_id_param -> .)

    saw_id_param                   shift and go to state 268

state 257

    (13) clase_bloque -> OCURLY ATTRIBUTES COLON . clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY
    (14) clase_bloque1 -> . dec
    (15) clase_bloque1 -> . empty
    (22) dec -> . VAR tipo SEMICOLON dec1
    (121) empty -> .

    VAR             shift and go to state 10
    METHODS         reduce using rule 121 (empty -> .)

    clase_bloque1                  shift and go to state 269
    dec                            shift and go to state 270
    empty                          shift and go to state 271

state 258

    (28) tipo1 -> COMMA ID saw_id saw_variable . tipo1
    (28) tipo1 -> . COMMA ID saw_id saw_variable tipo1
    (29) tipo1 -> . empty
    (121) empty -> .

    COMMA           shift and go to state 217
    SEMICOLON       reduce using rule 121 (empty -> .)

    tipo1                          shift and go to state 272
    empty                          shift and go to state 218

state 259

    (32) tipo3 -> OBRACKET . CSTINT CBRACKET

    CSTINT          shift and go to state 273


state 260

    (27) tipo -> multiple ID saw_id saw_variable OBRACKET CSTINT CBRACKET tipo3 . tipo2
    (30) tipo2 -> . COMMA ID saw_id OBRACKET CSTINT CBRACKET tipo3
    (31) tipo2 -> . empty
    (121) empty -> .

    COMMA           shift and go to state 275
    SEMICOLON       reduce using rule 121 (empty -> .)

    tipo2                          shift and go to state 274
    empty                          shift and go to state 276

state 261

    (33) tipo3 -> empty .

    COMMA           reduce using rule 33 (tipo3 -> empty .)
    SEMICOLON       reduce using rule 33 (tipo3 -> empty .)


state 262

    (84) variable2 -> PERIOD ID saw_id variable1 variable1 . variable2
    (84) variable2 -> . PERIOD ID saw_id variable1 variable1 variable2
    (85) variable2 -> . empty
    (121) empty -> .

    PERIOD          shift and go to state 201
    AS              reduce using rule 121 (empty -> .)
    MULT            reduce using rule 121 (empty -> .)
    DIV             reduce using rule 121 (empty -> .)
    PLUS            reduce using rule 121 (empty -> .)
    MINUS           reduce using rule 121 (empty -> .)
    LT              reduce using rule 121 (empty -> .)
    GT              reduce using rule 121 (empty -> .)
    GTE             reduce using rule 121 (empty -> .)
    LTE             reduce using rule 121 (empty -> .)
    EQ              reduce using rule 121 (empty -> .)
    NE              reduce using rule 121 (empty -> .)
    AND             reduce using rule 121 (empty -> .)
    OR              reduce using rule 121 (empty -> .)
    QUESTION        reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    READ            reduce using rule 121 (empty -> .)
    WHILE           reduce using rule 121 (empty -> .)
    FOR             reduce using rule 121 (empty -> .)
    OCURLY          reduce using rule 121 (empty -> .)
    FUNCTION        reduce using rule 121 (empty -> .)
    CLASS           reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    OPAREN          reduce using rule 121 (empty -> .)
    CSTINT          reduce using rule 121 (empty -> .)
    CSTFLT          reduce using rule 121 (empty -> .)
    CSTCHAR         reduce using rule 121 (empty -> .)
    CSTSTRING       reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    CCURLY          reduce using rule 121 (empty -> .)
    CPAREN          reduce using rule 121 (empty -> .)
    COLON           reduce using rule 121 (empty -> .)
    SEMICOLON       reduce using rule 121 (empty -> .)
    COMMA           reduce using rule 121 (empty -> .)
    FROM            reduce using rule 121 (empty -> .)
    CBRACKET        reduce using rule 121 (empty -> .)
    TO              reduce using rule 121 (empty -> .)
    BY              reduce using rule 121 (empty -> .)

    variable2                      shift and go to state 277
    empty                          shift and go to state 202

state 263

    (71) cond1 -> ELSE IF cond2 THEN bloque . cond1
    (70) cond1 -> . ELSE bloque
    (71) cond1 -> . ELSE IF cond2 THEN bloque cond1
    (72) cond1 -> . empty
    (121) empty -> .

    ELSE            shift and go to state 205
    SEMICOLON       reduce using rule 121 (empty -> .)

    cond1                          shift and go to state 278
    empty                          shift and go to state 206

state 264

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 . CPAREN THEN bloque SEMICOLON

    CPAREN          shift and go to state 279


state 265

    (3) funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .

    RETURN          reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    ID              reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    IF              reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    PRINT           reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    READ            reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    WHILE           reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    FOR             reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    OCURLY          reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    FUNCTION        reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    CLASS           reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    VAR             reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    OPAREN          reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    CSTINT          reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    CSTFLT          reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    CSTCHAR         reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    CSTSTRING       reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    TRUE            reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    FALSE           reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)
    CCURLY          reduce using rule 3 (funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque .)


state 266

    (8) param1 -> COMMA param2 . param1
    (8) param1 -> . COMMA param2 param1
    (9) param1 -> . empty
    (121) empty -> .

    COMMA           shift and go to state 253
    CPAREN          reduce using rule 121 (empty -> .)

    param1                         shift and go to state 280
    empty                          shift and go to state 254

state 267

    (10) param2 -> simple ID saw_id_param .

    COMMA           reduce using rule 10 (param2 -> simple ID saw_id_param .)
    CPAREN          reduce using rule 10 (param2 -> simple ID saw_id_param .)


state 268

    (11) param2 -> multiple ID saw_id_param . variable1 variable1
    (82) variable1 -> . OBRACKET exp CBRACKET
    (83) variable1 -> . empty
    (121) empty -> .

  ! shift/reduce conflict for OBRACKET resolved as shift
    OBRACKET        shift and go to state 139
    COMMA           reduce using rule 121 (empty -> .)
    CPAREN          reduce using rule 121 (empty -> .)

  ! OBRACKET        [ reduce using rule 121 (empty -> .) ]

    variable1                      shift and go to state 281
    empty                          shift and go to state 140

state 269

    (13) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 . METHODS COLON clase_metodos_bloque class_scope_end CCURLY

    METHODS         shift and go to state 282


state 270

    (14) clase_bloque1 -> dec .

    METHODS         reduce using rule 14 (clase_bloque1 -> dec .)


state 271

    (15) clase_bloque1 -> empty .

    METHODS         reduce using rule 15 (clase_bloque1 -> empty .)


state 272

    (28) tipo1 -> COMMA ID saw_id saw_variable tipo1 .

    SEMICOLON       reduce using rule 28 (tipo1 -> COMMA ID saw_id saw_variable tipo1 .)


state 273

    (32) tipo3 -> OBRACKET CSTINT . CBRACKET

    CBRACKET        shift and go to state 283


state 274

    (27) tipo -> multiple ID saw_id saw_variable OBRACKET CSTINT CBRACKET tipo3 tipo2 .

    SEMICOLON       reduce using rule 27 (tipo -> multiple ID saw_id saw_variable OBRACKET CSTINT CBRACKET tipo3 tipo2 .)


state 275

    (30) tipo2 -> COMMA . ID saw_id OBRACKET CSTINT CBRACKET tipo3

    ID              shift and go to state 284


state 276

    (31) tipo2 -> empty .

    SEMICOLON       reduce using rule 31 (tipo2 -> empty .)


state 277

    (84) variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .

    AS              reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    MULT            reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    DIV             reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    PLUS            reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    MINUS           reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    LT              reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    GT              reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    GTE             reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    LTE             reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    EQ              reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    NE              reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    AND             reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    OR              reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    QUESTION        reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    RETURN          reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    ID              reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    IF              reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    PRINT           reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    READ            reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    WHILE           reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    FOR             reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    OCURLY          reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    FUNCTION        reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    CLASS           reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    VAR             reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    OPAREN          reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    CSTINT          reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    CSTFLT          reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    CSTCHAR         reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    CSTSTRING       reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    TRUE            reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    FALSE           reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    CCURLY          reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    CPAREN          reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    COLON           reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    SEMICOLON       reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    COMMA           reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    FROM            reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    CBRACKET        reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    TO              reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)
    BY              reduce using rule 84 (variable2 -> PERIOD ID saw_id variable1 variable1 variable2 .)


state 278

    (71) cond1 -> ELSE IF cond2 THEN bloque cond1 .

    SEMICOLON       reduce using rule 71 (cond1 -> ELSE IF cond2 THEN bloque cond1 .)


state 279

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN . THEN bloque SEMICOLON

    THEN            shift and go to state 285


state 280

    (8) param1 -> COMMA param2 param1 .

    CPAREN          reduce using rule 8 (param1 -> COMMA param2 param1 .)


state 281

    (11) param2 -> multiple ID saw_id_param variable1 . variable1
    (82) variable1 -> . OBRACKET exp CBRACKET
    (83) variable1 -> . empty
    (121) empty -> .

    OBRACKET        shift and go to state 139
    COMMA           reduce using rule 121 (empty -> .)
    CPAREN          reduce using rule 121 (empty -> .)

    variable1                      shift and go to state 286
    empty                          shift and go to state 140

state 282

    (13) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS . COLON clase_metodos_bloque class_scope_end CCURLY

    COLON           shift and go to state 287


state 283

    (32) tipo3 -> OBRACKET CSTINT CBRACKET .

    COMMA           reduce using rule 32 (tipo3 -> OBRACKET CSTINT CBRACKET .)
    SEMICOLON       reduce using rule 32 (tipo3 -> OBRACKET CSTINT CBRACKET .)


state 284

    (30) tipo2 -> COMMA ID . saw_id OBRACKET CSTINT CBRACKET tipo3
    (125) saw_id -> .

    OBRACKET        reduce using rule 125 (saw_id -> .)

    saw_id                         shift and go to state 288

state 285

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN . bloque SEMICOLON
    (47) bloque -> . OCURLY b1 CCURLY scope_end

    OCURLY          shift and go to state 9

    bloque                         shift and go to state 289

state 286

    (11) param2 -> multiple ID saw_id_param variable1 variable1 .

    COMMA           reduce using rule 11 (param2 -> multiple ID saw_id_param variable1 variable1 .)
    CPAREN          reduce using rule 11 (param2 -> multiple ID saw_id_param variable1 variable1 .)


state 287

    (13) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON . clase_metodos_bloque class_scope_end CCURLY
    (16) clase_metodos_bloque -> . funcion clase_metodos_bloque
    (17) clase_metodos_bloque -> . empty
    (3) funcion -> . FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque
    (121) empty -> .

    FUNCTION        shift and go to state 37
    CCURLY          reduce using rule 121 (empty -> .)

    clase_metodos_bloque           shift and go to state 290
    funcion                        shift and go to state 291
    empty                          shift and go to state 292

state 288

    (30) tipo2 -> COMMA ID saw_id . OBRACKET CSTINT CBRACKET tipo3

    OBRACKET        shift and go to state 293


state 289

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque . SEMICOLON

    SEMICOLON       shift and go to state 294


state 290

    (13) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque . class_scope_end CCURLY
    (133) class_scope_end -> .

    CCURLY          reduce using rule 133 (class_scope_end -> .)

    class_scope_end                shift and go to state 295

state 291

    (16) clase_metodos_bloque -> funcion . clase_metodos_bloque
    (16) clase_metodos_bloque -> . funcion clase_metodos_bloque
    (17) clase_metodos_bloque -> . empty
    (3) funcion -> . FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque
    (121) empty -> .

    FUNCTION        shift and go to state 37
    CCURLY          reduce using rule 121 (empty -> .)

    funcion                        shift and go to state 291
    clase_metodos_bloque           shift and go to state 296
    empty                          shift and go to state 292

state 292

    (17) clase_metodos_bloque -> empty .

    CCURLY          reduce using rule 17 (clase_metodos_bloque -> empty .)


state 293

    (30) tipo2 -> COMMA ID saw_id OBRACKET . CSTINT CBRACKET tipo3

    CSTINT          shift and go to state 297


state 294

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .

    RETURN          reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    ID              reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    IF              reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    PRINT           reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    READ            reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    WHILE           reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    FOR             reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    OCURLY          reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    FUNCTION        reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CLASS           reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    VAR             reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    OPAREN          reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CSTINT          reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CSTFLT          reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CSTCHAR         reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CSTSTRING       reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    TRUE            reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    FALSE           reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CCURLY          reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)


state 295

    (13) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end . CCURLY

    CCURLY          shift and go to state 298


state 296

    (16) clase_metodos_bloque -> funcion clase_metodos_bloque .

    CCURLY          reduce using rule 16 (clase_metodos_bloque -> funcion clase_metodos_bloque .)


state 297

    (30) tipo2 -> COMMA ID saw_id OBRACKET CSTINT . CBRACKET tipo3

    CBRACKET        shift and go to state 299


state 298

    (13) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY .

    SEMICOLON       reduce using rule 13 (clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY .)


state 299

    (30) tipo2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET . tipo3
    (32) tipo3 -> . OBRACKET CSTINT CBRACKET
    (33) tipo3 -> . empty
    (121) empty -> .

    OBRACKET        shift and go to state 259
    SEMICOLON       reduce using rule 121 (empty -> .)

    tipo3                          shift and go to state 300
    empty                          shift and go to state 261

state 300

    (30) tipo2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET tipo3 .

    SEMICOLON       reduce using rule 30 (tipo2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET tipo3 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OBRACKET in state 77 resolved as shift
WARNING: shift/reduce conflict for VAR in state 111 resolved as shift
WARNING: shift/reduce conflict for OBRACKET in state 129 resolved as shift
WARNING: shift/reduce conflict for OPAREN in state 129 resolved as shift
WARNING: shift/reduce conflict for OBRACKET in state 184 resolved as shift
WARNING: shift/reduce conflict for OBRACKET in state 236 resolved as shift
WARNING: shift/reduce conflict for OBRACKET in state 268 resolved as shift
