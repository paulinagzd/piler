Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON bloque
Rule 2     programa -> PROGRAM ID SEMICOLON dec bloque
Rule 3     funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque
Rule 4     func1 -> simple
Rule 5     func1 -> VOID
Rule 6     param -> simple ID variable2 param1
Rule 7     param -> multiple ID variable1 variable1 variable2 param1
Rule 8     param -> empty
Rule 9     param1 -> COMMA param
Rule 10    param1 -> empty
Rule 11    clase -> CLASS ID COLON clase_bloque SEMICOLON
Rule 12    clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque CCURLY
Rule 13    clase_bloque1 -> dec
Rule 14    clase_bloque1 -> empty
Rule 15    clase_metodos_bloque -> funcion clase_metodos_bloque
Rule 16    clase_metodos_bloque -> empty
Rule 17    ciclo_while -> WHILE cond2 THEN bloque SEMICOLON
Rule 18    ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
Rule 19    ciclo_for1 -> CSTINT
Rule 20    ciclo_for1 -> variable
Rule 21    dec -> VAR tipo SEMICOLON dec1
Rule 22    dec1 -> dec
Rule 23    dec1 -> empty
Rule 24    tipo -> compuesto ID tipo1
Rule 25    tipo -> simple ID tipo1
Rule 26    tipo -> multiple ID tipo3 tipo3 tipo2
Rule 27    tipo1 -> COMMA ID tipo1
Rule 28    tipo1 -> empty
Rule 29    tipo2 -> COMMA ID tipo3 tipo3
Rule 30    tipo2 -> empty
Rule 31    tipo3 -> OBRACKET CSTINT CBRACKET
Rule 32    tipo3 -> empty
Rule 33    simple -> INT
Rule 34    simple -> FLOAT
Rule 35    simple -> BOOL
Rule 36    simple -> STRING
Rule 37    simple -> CHAR
Rule 38    multiple -> INTS
Rule 39    multiple -> FLOATS
Rule 40    multiple -> BOOLS
Rule 41    multiple -> STRINGS
Rule 42    multiple -> CHARS
Rule 43    compuesto -> ID
Rule 44    compuesto -> DATAFRAME
Rule 45    compuesto -> FILE
Rule 46    bloque -> OCURLY b1 CCURLY
Rule 47    b1 -> estatuto b1
Rule 48    b1 -> empty
Rule 49    estatuto -> asignacion
Rule 50    estatuto -> llamada
Rule 51    estatuto -> condicion
Rule 52    estatuto -> escritura
Rule 53    estatuto -> leer
Rule 54    estatuto -> ciclo_while
Rule 55    estatuto -> ciclo_for
Rule 56    estatuto -> ternaria
Rule 57    estatuto -> bloque
Rule 58    estatuto -> funcion
Rule 59    estatuto -> clase
Rule 60    estatuto -> dec
Rule 61    estatuto_redux -> asignacion
Rule 62    estatuto_redux -> llamada
Rule 63    estatuto_redux -> escritura
Rule 64    estatuto_redux -> leer
Rule 65    estatuto_redux -> ternaria
Rule 66    asignacion -> variable AS exp
Rule 67    condicion -> IF cond2 THEN bloque cond1 SEMICOLON
Rule 68    cond1 -> ELSE bloque
Rule 69    cond1 -> ELSE IF cond2 THEN bloque
Rule 70    cond1 -> empty
Rule 71    cond2 -> OPAREN exp CPAREN
Rule 72    ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON
Rule 73    escritura -> PRINT OPAREN exp e1 CPAREN
Rule 74    e1 -> COMMA exp e1
Rule 75    e1 -> empty
Rule 76    leer -> READ OPAREN exp e1 CPAREN
Rule 77    boolean -> TRUE
Rule 78    boolean -> FALSE
Rule 79    variable -> ID variable1 variable1 variable2
Rule 80    variable1 -> OBRACKET exp CBRACKET
Rule 81    variable1 -> empty
Rule 82    variable2 -> PERIOD ID variable1 variable1 variable2
Rule 83    variable2 -> empty
Rule 84    llamada -> ID OPAREN exp llamada1 CPAREN
Rule 85    llamada -> ID OPAREN CPAREN
Rule 86    llamada1 -> COMMA exp llamada1
Rule 87    llamada1 -> empty
Rule 88    exp -> texp exp1
Rule 89    exp1 -> OR texp exp1
Rule 90    exp1 -> empty
Rule 91    texp -> gexp texp1
Rule 92    texp1 -> AND gexp texp1
Rule 93    texp1 -> empty
Rule 94    gexp -> mexp gexp1
Rule 95    gexp1 -> LT mexp
Rule 96    gexp1 -> GT mexp
Rule 97    gexp1 -> EQ mexp
Rule 98    gexp1 -> NE mexp
Rule 99    gexp1 -> empty
Rule 100   mexp -> termino mexp1
Rule 101   mexp1 -> PLUS termino mexp1
Rule 102   mexp1 -> MINUS termino mexp1
Rule 103   mexp1 -> empty
Rule 104   termino -> factor term1
Rule 105   term1 -> MULT factor term1
Rule 106   term1 -> DIV factor term1
Rule 107   term1 -> empty
Rule 108   factor -> OPAREN exp CPAREN
Rule 109   factor -> varcst
Rule 110   factor -> variable
Rule 111   factor -> llamada
Rule 112   varcst -> CSTINT
Rule 113   varcst -> CSTFLT
Rule 114   varcst -> CSTCHAR
Rule 115   varcst -> CSTSTRING
Rule 116   varcst -> boolean
Rule 117   empty -> <empty>

Terminals, with rules where they appear

AND                  : 92
AS                   : 66
ATTRIBUTES           : 12
BOOL                 : 35
BOOLS                : 40
BY                   : 18
CBRACKET             : 31 80
CCURLY               : 12 46
CHAR                 : 37
CHARS                : 42
CLASS                : 11
COLON                : 11 12 12 72
COMMA                : 9 27 29 74 86
COMMENT              : 
CPAREN               : 3 18 71 73 76 84 85 108
CSTCHAR              : 114
CSTFLT               : 113
CSTINT               : 19 31 112
CSTSTRING            : 115
DATAFRAME            : 44
DIV                  : 106
ELSE                 : 68 69
EQ                   : 97
FALSE                : 78
FILE                 : 45
FLOAT                : 34
FLOATS               : 39
FOR                  : 18
FROM                 : 18
FUNCTION             : 3
GT                   : 96
ID                   : 1 2 3 6 7 11 24 25 26 27 29 43 79 82 84 85
IF                   : 67 69
INT                  : 33
INTS                 : 38
LT                   : 95
METHODS              : 12
MINUS                : 102
MULT                 : 105
NE                   : 98
OBRACKET             : 31 80
OCURLY               : 12 46
OPAREN               : 3 18 71 73 76 84 85 108
OR                   : 89
PERIOD               : 82
PLUS                 : 101
PRINT                : 73
PROGRAM              : 1 2
QUESTION             : 72
READ                 : 76
SEMICOLON            : 1 2 11 17 18 21 67 72
STRING               : 36
STRINGS              : 41
THEN                 : 17 18 67 69
TO                   : 18
TRUE                 : 77
VAR                  : 21
VOID                 : 5
WHILE                : 17
error                : 

Nonterminals, with rules where they appear

asignacion           : 49 61
b1                   : 46 47
bloque               : 1 2 3 17 18 57 67 68 69
boolean              : 116
ciclo_for            : 55
ciclo_for1           : 18 18 18
ciclo_while          : 54
clase                : 59
clase_bloque         : 11
clase_bloque1        : 12
clase_metodos_bloque : 12 15
compuesto            : 24
cond1                : 67
cond2                : 17 67 69
condicion            : 51
dec                  : 2 13 22 60
dec1                 : 21
e1                   : 73 74 76
empty                : 8 10 14 16 23 28 30 32 48 70 75 81 83 87 90 93 99 103 107
escritura            : 52 63
estatuto             : 47
estatuto_redux       : 72 72
exp                  : 66 71 72 73 74 76 80 84 86 108
exp1                 : 88 89
factor               : 104 105 106
func1                : 3
funcion              : 15 58
gexp                 : 91 92
gexp1                : 94
leer                 : 53 64
llamada              : 50 62 111
llamada1             : 84 86
mexp                 : 94 95 96 97 98
mexp1                : 100 101 102
multiple             : 7 26
param                : 3 9
param1               : 6 7
programa             : 0
simple               : 4 6 25
term1                : 104 105 106
termino              : 100 101 102
ternaria             : 56 65
texp                 : 88 89
texp1                : 91 92
tipo                 : 21
tipo1                : 24 25 27
tipo2                : 26
tipo3                : 26 26 29 29
varcst               : 109
variable             : 18 20 66 110
variable1            : 7 7 79 79 82 82
variable2            : 6 7 79 82

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON bloque
    (2) programa -> . PROGRAM ID SEMICOLON dec bloque

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SEMICOLON bloque
    (2) programa -> PROGRAM . ID SEMICOLON dec bloque

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SEMICOLON bloque
    (2) programa -> PROGRAM ID . SEMICOLON dec bloque

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . bloque
    (2) programa -> PROGRAM ID SEMICOLON . dec bloque
    (46) bloque -> . OCURLY b1 CCURLY
    (21) dec -> . VAR tipo SEMICOLON dec1

    OCURLY          shift and go to state 7
    VAR             shift and go to state 8

    bloque                         shift and go to state 5
    dec                            shift and go to state 6

state 5

    (1) programa -> PROGRAM ID SEMICOLON bloque .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON bloque .)


state 6

    (2) programa -> PROGRAM ID SEMICOLON dec . bloque
    (46) bloque -> . OCURLY b1 CCURLY

    OCURLY          shift and go to state 7

    bloque                         shift and go to state 9

state 7

    (46) bloque -> OCURLY . b1 CCURLY
    (47) b1 -> . estatuto b1
    (48) b1 -> . empty
    (49) estatuto -> . asignacion
    (50) estatuto -> . llamada
    (51) estatuto -> . condicion
    (52) estatuto -> . escritura
    (53) estatuto -> . leer
    (54) estatuto -> . ciclo_while
    (55) estatuto -> . ciclo_for
    (56) estatuto -> . ternaria
    (57) estatuto -> . bloque
    (58) estatuto -> . funcion
    (59) estatuto -> . clase
    (60) estatuto -> . dec
    (117) empty -> .
    (66) asignacion -> . variable AS exp
    (84) llamada -> . ID OPAREN exp llamada1 CPAREN
    (85) llamada -> . ID OPAREN CPAREN
    (67) condicion -> . IF cond2 THEN bloque cond1 SEMICOLON
    (73) escritura -> . PRINT OPAREN exp e1 CPAREN
    (76) leer -> . READ OPAREN exp e1 CPAREN
    (17) ciclo_while -> . WHILE cond2 THEN bloque SEMICOLON
    (18) ciclo_for -> . FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
    (72) ternaria -> . exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON
    (46) bloque -> . OCURLY b1 CCURLY
    (3) funcion -> . FUNCTION func1 ID OPAREN param CPAREN bloque
    (11) clase -> . CLASS ID COLON clase_bloque SEMICOLON
    (21) dec -> . VAR tipo SEMICOLON dec1
    (79) variable -> . ID variable1 variable1 variable2
    (88) exp -> . texp exp1
    (91) texp -> . gexp texp1
    (94) gexp -> . mexp gexp1
    (100) mexp -> . termino mexp1
    (104) termino -> . factor term1
    (108) factor -> . OPAREN exp CPAREN
    (109) factor -> . varcst
    (110) factor -> . variable
    (111) factor -> . llamada
    (112) varcst -> . CSTINT
    (113) varcst -> . CSTFLT
    (114) varcst -> . CSTCHAR
    (115) varcst -> . CSTSTRING
    (116) varcst -> . boolean
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    CCURLY          reduce using rule 117 (empty -> .)
    ID              shift and go to state 27
    IF              shift and go to state 29
    PRINT           shift and go to state 30
    READ            shift and go to state 31
    WHILE           shift and go to state 32
    FOR             shift and go to state 33
    OCURLY          shift and go to state 7
    FUNCTION        shift and go to state 34
    CLASS           shift and go to state 35
    VAR             shift and go to state 8
    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    b1                             shift and go to state 10
    estatuto                       shift and go to state 11
    empty                          shift and go to state 12
    asignacion                     shift and go to state 13
    llamada                        shift and go to state 14
    condicion                      shift and go to state 15
    escritura                      shift and go to state 16
    leer                           shift and go to state 17
    ciclo_while                    shift and go to state 18
    ciclo_for                      shift and go to state 19
    ternaria                       shift and go to state 20
    bloque                         shift and go to state 21
    funcion                        shift and go to state 22
    clase                          shift and go to state 23
    dec                            shift and go to state 24
    variable                       shift and go to state 25
    exp                            shift and go to state 26
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    boolean                        shift and go to state 46

state 8

    (21) dec -> VAR . tipo SEMICOLON dec1
    (24) tipo -> . compuesto ID tipo1
    (25) tipo -> . simple ID tipo1
    (26) tipo -> . multiple ID tipo3 tipo3 tipo2
    (43) compuesto -> . ID
    (44) compuesto -> . DATAFRAME
    (45) compuesto -> . FILE
    (33) simple -> . INT
    (34) simple -> . FLOAT
    (35) simple -> . BOOL
    (36) simple -> . STRING
    (37) simple -> . CHAR
    (38) multiple -> . INTS
    (39) multiple -> . FLOATS
    (40) multiple -> . BOOLS
    (41) multiple -> . STRINGS
    (42) multiple -> . CHARS

    ID              shift and go to state 51
    DATAFRAME       shift and go to state 54
    FILE            shift and go to state 55
    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    BOOL            shift and go to state 58
    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    INTS            shift and go to state 61
    FLOATS          shift and go to state 62
    BOOLS           shift and go to state 63
    STRINGS         shift and go to state 64
    CHARS           shift and go to state 65

    tipo                           shift and go to state 49
    compuesto                      shift and go to state 50
    simple                         shift and go to state 52
    multiple                       shift and go to state 53

state 9

    (2) programa -> PROGRAM ID SEMICOLON dec bloque .

    $end            reduce using rule 2 (programa -> PROGRAM ID SEMICOLON dec bloque .)


state 10

    (46) bloque -> OCURLY b1 . CCURLY

    CCURLY          shift and go to state 66


state 11

    (47) b1 -> estatuto . b1
    (47) b1 -> . estatuto b1
    (48) b1 -> . empty
    (49) estatuto -> . asignacion
    (50) estatuto -> . llamada
    (51) estatuto -> . condicion
    (52) estatuto -> . escritura
    (53) estatuto -> . leer
    (54) estatuto -> . ciclo_while
    (55) estatuto -> . ciclo_for
    (56) estatuto -> . ternaria
    (57) estatuto -> . bloque
    (58) estatuto -> . funcion
    (59) estatuto -> . clase
    (60) estatuto -> . dec
    (117) empty -> .
    (66) asignacion -> . variable AS exp
    (84) llamada -> . ID OPAREN exp llamada1 CPAREN
    (85) llamada -> . ID OPAREN CPAREN
    (67) condicion -> . IF cond2 THEN bloque cond1 SEMICOLON
    (73) escritura -> . PRINT OPAREN exp e1 CPAREN
    (76) leer -> . READ OPAREN exp e1 CPAREN
    (17) ciclo_while -> . WHILE cond2 THEN bloque SEMICOLON
    (18) ciclo_for -> . FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
    (72) ternaria -> . exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON
    (46) bloque -> . OCURLY b1 CCURLY
    (3) funcion -> . FUNCTION func1 ID OPAREN param CPAREN bloque
    (11) clase -> . CLASS ID COLON clase_bloque SEMICOLON
    (21) dec -> . VAR tipo SEMICOLON dec1
    (79) variable -> . ID variable1 variable1 variable2
    (88) exp -> . texp exp1
    (91) texp -> . gexp texp1
    (94) gexp -> . mexp gexp1
    (100) mexp -> . termino mexp1
    (104) termino -> . factor term1
    (108) factor -> . OPAREN exp CPAREN
    (109) factor -> . varcst
    (110) factor -> . variable
    (111) factor -> . llamada
    (112) varcst -> . CSTINT
    (113) varcst -> . CSTFLT
    (114) varcst -> . CSTCHAR
    (115) varcst -> . CSTSTRING
    (116) varcst -> . boolean
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    CCURLY          reduce using rule 117 (empty -> .)
    ID              shift and go to state 27
    IF              shift and go to state 29
    PRINT           shift and go to state 30
    READ            shift and go to state 31
    WHILE           shift and go to state 32
    FOR             shift and go to state 33
    OCURLY          shift and go to state 7
    FUNCTION        shift and go to state 34
    CLASS           shift and go to state 35
    VAR             shift and go to state 8
    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    estatuto                       shift and go to state 11
    b1                             shift and go to state 67
    empty                          shift and go to state 12
    asignacion                     shift and go to state 13
    llamada                        shift and go to state 14
    condicion                      shift and go to state 15
    escritura                      shift and go to state 16
    leer                           shift and go to state 17
    ciclo_while                    shift and go to state 18
    ciclo_for                      shift and go to state 19
    ternaria                       shift and go to state 20
    bloque                         shift and go to state 21
    funcion                        shift and go to state 22
    clase                          shift and go to state 23
    dec                            shift and go to state 24
    variable                       shift and go to state 25
    exp                            shift and go to state 26
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    boolean                        shift and go to state 46

state 12

    (48) b1 -> empty .

    CCURLY          reduce using rule 48 (b1 -> empty .)


state 13

    (49) estatuto -> asignacion .

    ID              reduce using rule 49 (estatuto -> asignacion .)
    IF              reduce using rule 49 (estatuto -> asignacion .)
    PRINT           reduce using rule 49 (estatuto -> asignacion .)
    READ            reduce using rule 49 (estatuto -> asignacion .)
    WHILE           reduce using rule 49 (estatuto -> asignacion .)
    FOR             reduce using rule 49 (estatuto -> asignacion .)
    OCURLY          reduce using rule 49 (estatuto -> asignacion .)
    FUNCTION        reduce using rule 49 (estatuto -> asignacion .)
    CLASS           reduce using rule 49 (estatuto -> asignacion .)
    VAR             reduce using rule 49 (estatuto -> asignacion .)
    OPAREN          reduce using rule 49 (estatuto -> asignacion .)
    CSTINT          reduce using rule 49 (estatuto -> asignacion .)
    CSTFLT          reduce using rule 49 (estatuto -> asignacion .)
    CSTCHAR         reduce using rule 49 (estatuto -> asignacion .)
    CSTSTRING       reduce using rule 49 (estatuto -> asignacion .)
    TRUE            reduce using rule 49 (estatuto -> asignacion .)
    FALSE           reduce using rule 49 (estatuto -> asignacion .)
    CCURLY          reduce using rule 49 (estatuto -> asignacion .)


state 14

    (50) estatuto -> llamada .
    (111) factor -> llamada .

    ID              reduce using rule 50 (estatuto -> llamada .)
    IF              reduce using rule 50 (estatuto -> llamada .)
    PRINT           reduce using rule 50 (estatuto -> llamada .)
    READ            reduce using rule 50 (estatuto -> llamada .)
    WHILE           reduce using rule 50 (estatuto -> llamada .)
    FOR             reduce using rule 50 (estatuto -> llamada .)
    OCURLY          reduce using rule 50 (estatuto -> llamada .)
    FUNCTION        reduce using rule 50 (estatuto -> llamada .)
    CLASS           reduce using rule 50 (estatuto -> llamada .)
    VAR             reduce using rule 50 (estatuto -> llamada .)
    OPAREN          reduce using rule 50 (estatuto -> llamada .)
    CSTINT          reduce using rule 50 (estatuto -> llamada .)
    CSTFLT          reduce using rule 50 (estatuto -> llamada .)
    CSTCHAR         reduce using rule 50 (estatuto -> llamada .)
    CSTSTRING       reduce using rule 50 (estatuto -> llamada .)
    TRUE            reduce using rule 50 (estatuto -> llamada .)
    FALSE           reduce using rule 50 (estatuto -> llamada .)
    CCURLY          reduce using rule 50 (estatuto -> llamada .)
    MULT            reduce using rule 111 (factor -> llamada .)
    DIV             reduce using rule 111 (factor -> llamada .)
    PLUS            reduce using rule 111 (factor -> llamada .)
    MINUS           reduce using rule 111 (factor -> llamada .)
    LT              reduce using rule 111 (factor -> llamada .)
    GT              reduce using rule 111 (factor -> llamada .)
    EQ              reduce using rule 111 (factor -> llamada .)
    NE              reduce using rule 111 (factor -> llamada .)
    AND             reduce using rule 111 (factor -> llamada .)
    OR              reduce using rule 111 (factor -> llamada .)
    QUESTION        reduce using rule 111 (factor -> llamada .)


state 15

    (51) estatuto -> condicion .

    ID              reduce using rule 51 (estatuto -> condicion .)
    IF              reduce using rule 51 (estatuto -> condicion .)
    PRINT           reduce using rule 51 (estatuto -> condicion .)
    READ            reduce using rule 51 (estatuto -> condicion .)
    WHILE           reduce using rule 51 (estatuto -> condicion .)
    FOR             reduce using rule 51 (estatuto -> condicion .)
    OCURLY          reduce using rule 51 (estatuto -> condicion .)
    FUNCTION        reduce using rule 51 (estatuto -> condicion .)
    CLASS           reduce using rule 51 (estatuto -> condicion .)
    VAR             reduce using rule 51 (estatuto -> condicion .)
    OPAREN          reduce using rule 51 (estatuto -> condicion .)
    CSTINT          reduce using rule 51 (estatuto -> condicion .)
    CSTFLT          reduce using rule 51 (estatuto -> condicion .)
    CSTCHAR         reduce using rule 51 (estatuto -> condicion .)
    CSTSTRING       reduce using rule 51 (estatuto -> condicion .)
    TRUE            reduce using rule 51 (estatuto -> condicion .)
    FALSE           reduce using rule 51 (estatuto -> condicion .)
    CCURLY          reduce using rule 51 (estatuto -> condicion .)


state 16

    (52) estatuto -> escritura .

    ID              reduce using rule 52 (estatuto -> escritura .)
    IF              reduce using rule 52 (estatuto -> escritura .)
    PRINT           reduce using rule 52 (estatuto -> escritura .)
    READ            reduce using rule 52 (estatuto -> escritura .)
    WHILE           reduce using rule 52 (estatuto -> escritura .)
    FOR             reduce using rule 52 (estatuto -> escritura .)
    OCURLY          reduce using rule 52 (estatuto -> escritura .)
    FUNCTION        reduce using rule 52 (estatuto -> escritura .)
    CLASS           reduce using rule 52 (estatuto -> escritura .)
    VAR             reduce using rule 52 (estatuto -> escritura .)
    OPAREN          reduce using rule 52 (estatuto -> escritura .)
    CSTINT          reduce using rule 52 (estatuto -> escritura .)
    CSTFLT          reduce using rule 52 (estatuto -> escritura .)
    CSTCHAR         reduce using rule 52 (estatuto -> escritura .)
    CSTSTRING       reduce using rule 52 (estatuto -> escritura .)
    TRUE            reduce using rule 52 (estatuto -> escritura .)
    FALSE           reduce using rule 52 (estatuto -> escritura .)
    CCURLY          reduce using rule 52 (estatuto -> escritura .)


state 17

    (53) estatuto -> leer .

    ID              reduce using rule 53 (estatuto -> leer .)
    IF              reduce using rule 53 (estatuto -> leer .)
    PRINT           reduce using rule 53 (estatuto -> leer .)
    READ            reduce using rule 53 (estatuto -> leer .)
    WHILE           reduce using rule 53 (estatuto -> leer .)
    FOR             reduce using rule 53 (estatuto -> leer .)
    OCURLY          reduce using rule 53 (estatuto -> leer .)
    FUNCTION        reduce using rule 53 (estatuto -> leer .)
    CLASS           reduce using rule 53 (estatuto -> leer .)
    VAR             reduce using rule 53 (estatuto -> leer .)
    OPAREN          reduce using rule 53 (estatuto -> leer .)
    CSTINT          reduce using rule 53 (estatuto -> leer .)
    CSTFLT          reduce using rule 53 (estatuto -> leer .)
    CSTCHAR         reduce using rule 53 (estatuto -> leer .)
    CSTSTRING       reduce using rule 53 (estatuto -> leer .)
    TRUE            reduce using rule 53 (estatuto -> leer .)
    FALSE           reduce using rule 53 (estatuto -> leer .)
    CCURLY          reduce using rule 53 (estatuto -> leer .)


state 18

    (54) estatuto -> ciclo_while .

    ID              reduce using rule 54 (estatuto -> ciclo_while .)
    IF              reduce using rule 54 (estatuto -> ciclo_while .)
    PRINT           reduce using rule 54 (estatuto -> ciclo_while .)
    READ            reduce using rule 54 (estatuto -> ciclo_while .)
    WHILE           reduce using rule 54 (estatuto -> ciclo_while .)
    FOR             reduce using rule 54 (estatuto -> ciclo_while .)
    OCURLY          reduce using rule 54 (estatuto -> ciclo_while .)
    FUNCTION        reduce using rule 54 (estatuto -> ciclo_while .)
    CLASS           reduce using rule 54 (estatuto -> ciclo_while .)
    VAR             reduce using rule 54 (estatuto -> ciclo_while .)
    OPAREN          reduce using rule 54 (estatuto -> ciclo_while .)
    CSTINT          reduce using rule 54 (estatuto -> ciclo_while .)
    CSTFLT          reduce using rule 54 (estatuto -> ciclo_while .)
    CSTCHAR         reduce using rule 54 (estatuto -> ciclo_while .)
    CSTSTRING       reduce using rule 54 (estatuto -> ciclo_while .)
    TRUE            reduce using rule 54 (estatuto -> ciclo_while .)
    FALSE           reduce using rule 54 (estatuto -> ciclo_while .)
    CCURLY          reduce using rule 54 (estatuto -> ciclo_while .)


state 19

    (55) estatuto -> ciclo_for .

    ID              reduce using rule 55 (estatuto -> ciclo_for .)
    IF              reduce using rule 55 (estatuto -> ciclo_for .)
    PRINT           reduce using rule 55 (estatuto -> ciclo_for .)
    READ            reduce using rule 55 (estatuto -> ciclo_for .)
    WHILE           reduce using rule 55 (estatuto -> ciclo_for .)
    FOR             reduce using rule 55 (estatuto -> ciclo_for .)
    OCURLY          reduce using rule 55 (estatuto -> ciclo_for .)
    FUNCTION        reduce using rule 55 (estatuto -> ciclo_for .)
    CLASS           reduce using rule 55 (estatuto -> ciclo_for .)
    VAR             reduce using rule 55 (estatuto -> ciclo_for .)
    OPAREN          reduce using rule 55 (estatuto -> ciclo_for .)
    CSTINT          reduce using rule 55 (estatuto -> ciclo_for .)
    CSTFLT          reduce using rule 55 (estatuto -> ciclo_for .)
    CSTCHAR         reduce using rule 55 (estatuto -> ciclo_for .)
    CSTSTRING       reduce using rule 55 (estatuto -> ciclo_for .)
    TRUE            reduce using rule 55 (estatuto -> ciclo_for .)
    FALSE           reduce using rule 55 (estatuto -> ciclo_for .)
    CCURLY          reduce using rule 55 (estatuto -> ciclo_for .)


state 20

    (56) estatuto -> ternaria .

    ID              reduce using rule 56 (estatuto -> ternaria .)
    IF              reduce using rule 56 (estatuto -> ternaria .)
    PRINT           reduce using rule 56 (estatuto -> ternaria .)
    READ            reduce using rule 56 (estatuto -> ternaria .)
    WHILE           reduce using rule 56 (estatuto -> ternaria .)
    FOR             reduce using rule 56 (estatuto -> ternaria .)
    OCURLY          reduce using rule 56 (estatuto -> ternaria .)
    FUNCTION        reduce using rule 56 (estatuto -> ternaria .)
    CLASS           reduce using rule 56 (estatuto -> ternaria .)
    VAR             reduce using rule 56 (estatuto -> ternaria .)
    OPAREN          reduce using rule 56 (estatuto -> ternaria .)
    CSTINT          reduce using rule 56 (estatuto -> ternaria .)
    CSTFLT          reduce using rule 56 (estatuto -> ternaria .)
    CSTCHAR         reduce using rule 56 (estatuto -> ternaria .)
    CSTSTRING       reduce using rule 56 (estatuto -> ternaria .)
    TRUE            reduce using rule 56 (estatuto -> ternaria .)
    FALSE           reduce using rule 56 (estatuto -> ternaria .)
    CCURLY          reduce using rule 56 (estatuto -> ternaria .)


state 21

    (57) estatuto -> bloque .

    ID              reduce using rule 57 (estatuto -> bloque .)
    IF              reduce using rule 57 (estatuto -> bloque .)
    PRINT           reduce using rule 57 (estatuto -> bloque .)
    READ            reduce using rule 57 (estatuto -> bloque .)
    WHILE           reduce using rule 57 (estatuto -> bloque .)
    FOR             reduce using rule 57 (estatuto -> bloque .)
    OCURLY          reduce using rule 57 (estatuto -> bloque .)
    FUNCTION        reduce using rule 57 (estatuto -> bloque .)
    CLASS           reduce using rule 57 (estatuto -> bloque .)
    VAR             reduce using rule 57 (estatuto -> bloque .)
    OPAREN          reduce using rule 57 (estatuto -> bloque .)
    CSTINT          reduce using rule 57 (estatuto -> bloque .)
    CSTFLT          reduce using rule 57 (estatuto -> bloque .)
    CSTCHAR         reduce using rule 57 (estatuto -> bloque .)
    CSTSTRING       reduce using rule 57 (estatuto -> bloque .)
    TRUE            reduce using rule 57 (estatuto -> bloque .)
    FALSE           reduce using rule 57 (estatuto -> bloque .)
    CCURLY          reduce using rule 57 (estatuto -> bloque .)


state 22

    (58) estatuto -> funcion .

    ID              reduce using rule 58 (estatuto -> funcion .)
    IF              reduce using rule 58 (estatuto -> funcion .)
    PRINT           reduce using rule 58 (estatuto -> funcion .)
    READ            reduce using rule 58 (estatuto -> funcion .)
    WHILE           reduce using rule 58 (estatuto -> funcion .)
    FOR             reduce using rule 58 (estatuto -> funcion .)
    OCURLY          reduce using rule 58 (estatuto -> funcion .)
    FUNCTION        reduce using rule 58 (estatuto -> funcion .)
    CLASS           reduce using rule 58 (estatuto -> funcion .)
    VAR             reduce using rule 58 (estatuto -> funcion .)
    OPAREN          reduce using rule 58 (estatuto -> funcion .)
    CSTINT          reduce using rule 58 (estatuto -> funcion .)
    CSTFLT          reduce using rule 58 (estatuto -> funcion .)
    CSTCHAR         reduce using rule 58 (estatuto -> funcion .)
    CSTSTRING       reduce using rule 58 (estatuto -> funcion .)
    TRUE            reduce using rule 58 (estatuto -> funcion .)
    FALSE           reduce using rule 58 (estatuto -> funcion .)
    CCURLY          reduce using rule 58 (estatuto -> funcion .)


state 23

    (59) estatuto -> clase .

    ID              reduce using rule 59 (estatuto -> clase .)
    IF              reduce using rule 59 (estatuto -> clase .)
    PRINT           reduce using rule 59 (estatuto -> clase .)
    READ            reduce using rule 59 (estatuto -> clase .)
    WHILE           reduce using rule 59 (estatuto -> clase .)
    FOR             reduce using rule 59 (estatuto -> clase .)
    OCURLY          reduce using rule 59 (estatuto -> clase .)
    FUNCTION        reduce using rule 59 (estatuto -> clase .)
    CLASS           reduce using rule 59 (estatuto -> clase .)
    VAR             reduce using rule 59 (estatuto -> clase .)
    OPAREN          reduce using rule 59 (estatuto -> clase .)
    CSTINT          reduce using rule 59 (estatuto -> clase .)
    CSTFLT          reduce using rule 59 (estatuto -> clase .)
    CSTCHAR         reduce using rule 59 (estatuto -> clase .)
    CSTSTRING       reduce using rule 59 (estatuto -> clase .)
    TRUE            reduce using rule 59 (estatuto -> clase .)
    FALSE           reduce using rule 59 (estatuto -> clase .)
    CCURLY          reduce using rule 59 (estatuto -> clase .)


state 24

    (60) estatuto -> dec .

    ID              reduce using rule 60 (estatuto -> dec .)
    IF              reduce using rule 60 (estatuto -> dec .)
    PRINT           reduce using rule 60 (estatuto -> dec .)
    READ            reduce using rule 60 (estatuto -> dec .)
    WHILE           reduce using rule 60 (estatuto -> dec .)
    FOR             reduce using rule 60 (estatuto -> dec .)
    OCURLY          reduce using rule 60 (estatuto -> dec .)
    FUNCTION        reduce using rule 60 (estatuto -> dec .)
    CLASS           reduce using rule 60 (estatuto -> dec .)
    VAR             reduce using rule 60 (estatuto -> dec .)
    OPAREN          reduce using rule 60 (estatuto -> dec .)
    CSTINT          reduce using rule 60 (estatuto -> dec .)
    CSTFLT          reduce using rule 60 (estatuto -> dec .)
    CSTCHAR         reduce using rule 60 (estatuto -> dec .)
    CSTSTRING       reduce using rule 60 (estatuto -> dec .)
    TRUE            reduce using rule 60 (estatuto -> dec .)
    FALSE           reduce using rule 60 (estatuto -> dec .)
    CCURLY          reduce using rule 60 (estatuto -> dec .)


state 25

    (66) asignacion -> variable . AS exp
    (110) factor -> variable .

    AS              shift and go to state 68
    MULT            reduce using rule 110 (factor -> variable .)
    DIV             reduce using rule 110 (factor -> variable .)
    PLUS            reduce using rule 110 (factor -> variable .)
    MINUS           reduce using rule 110 (factor -> variable .)
    LT              reduce using rule 110 (factor -> variable .)
    GT              reduce using rule 110 (factor -> variable .)
    EQ              reduce using rule 110 (factor -> variable .)
    NE              reduce using rule 110 (factor -> variable .)
    AND             reduce using rule 110 (factor -> variable .)
    OR              reduce using rule 110 (factor -> variable .)
    QUESTION        reduce using rule 110 (factor -> variable .)


state 26

    (72) ternaria -> exp . QUESTION estatuto_redux COLON estatuto_redux SEMICOLON

    QUESTION        shift and go to state 69


state 27

    (84) llamada -> ID . OPAREN exp llamada1 CPAREN
    (85) llamada -> ID . OPAREN CPAREN
    (79) variable -> ID . variable1 variable1 variable2
    (80) variable1 -> . OBRACKET exp CBRACKET
    (81) variable1 -> . empty
    (117) empty -> .

  ! shift/reduce conflict for OBRACKET resolved as shift
    OPAREN          shift and go to state 70
    OBRACKET        shift and go to state 72
    PERIOD          reduce using rule 117 (empty -> .)
    AS              reduce using rule 117 (empty -> .)
    MULT            reduce using rule 117 (empty -> .)
    DIV             reduce using rule 117 (empty -> .)
    PLUS            reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    LT              reduce using rule 117 (empty -> .)
    GT              reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NE              reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    QUESTION        reduce using rule 117 (empty -> .)

  ! OBRACKET        [ reduce using rule 117 (empty -> .) ]

    variable1                      shift and go to state 71
    empty                          shift and go to state 73

state 28

    (108) factor -> OPAREN . exp CPAREN
    (88) exp -> . texp exp1
    (91) texp -> . gexp texp1
    (94) gexp -> . mexp gexp1
    (100) mexp -> . termino mexp1
    (104) termino -> . factor term1
    (108) factor -> . OPAREN exp CPAREN
    (109) factor -> . varcst
    (110) factor -> . variable
    (111) factor -> . llamada
    (112) varcst -> . CSTINT
    (113) varcst -> . CSTFLT
    (114) varcst -> . CSTCHAR
    (115) varcst -> . CSTSTRING
    (116) varcst -> . boolean
    (79) variable -> . ID variable1 variable1 variable2
    (84) llamada -> . ID OPAREN exp llamada1 CPAREN
    (85) llamada -> . ID OPAREN CPAREN
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 74
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 29

    (67) condicion -> IF . cond2 THEN bloque cond1 SEMICOLON
    (71) cond2 -> . OPAREN exp CPAREN

    OPAREN          shift and go to state 79

    cond2                          shift and go to state 78

state 30

    (73) escritura -> PRINT . OPAREN exp e1 CPAREN

    OPAREN          shift and go to state 80


state 31

    (76) leer -> READ . OPAREN exp e1 CPAREN

    OPAREN          shift and go to state 81


state 32

    (17) ciclo_while -> WHILE . cond2 THEN bloque SEMICOLON
    (71) cond2 -> . OPAREN exp CPAREN

    OPAREN          shift and go to state 79

    cond2                          shift and go to state 82

state 33

    (18) ciclo_for -> FOR . OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON

    OPAREN          shift and go to state 83


state 34

    (3) funcion -> FUNCTION . func1 ID OPAREN param CPAREN bloque
    (4) func1 -> . simple
    (5) func1 -> . VOID
    (33) simple -> . INT
    (34) simple -> . FLOAT
    (35) simple -> . BOOL
    (36) simple -> . STRING
    (37) simple -> . CHAR

    VOID            shift and go to state 86
    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    BOOL            shift and go to state 58
    STRING          shift and go to state 59
    CHAR            shift and go to state 60

    func1                          shift and go to state 84
    simple                         shift and go to state 85

state 35

    (11) clase -> CLASS . ID COLON clase_bloque SEMICOLON

    ID              shift and go to state 87


state 36

    (88) exp -> texp . exp1
    (89) exp1 -> . OR texp exp1
    (90) exp1 -> . empty
    (117) empty -> .

    OR              shift and go to state 89
    QUESTION        reduce using rule 117 (empty -> .)
    CPAREN          reduce using rule 117 (empty -> .)
    ID              reduce using rule 117 (empty -> .)
    IF              reduce using rule 117 (empty -> .)
    PRINT           reduce using rule 117 (empty -> .)
    READ            reduce using rule 117 (empty -> .)
    WHILE           reduce using rule 117 (empty -> .)
    FOR             reduce using rule 117 (empty -> .)
    OCURLY          reduce using rule 117 (empty -> .)
    FUNCTION        reduce using rule 117 (empty -> .)
    CLASS           reduce using rule 117 (empty -> .)
    VAR             reduce using rule 117 (empty -> .)
    OPAREN          reduce using rule 117 (empty -> .)
    CSTINT          reduce using rule 117 (empty -> .)
    CSTFLT          reduce using rule 117 (empty -> .)
    CSTCHAR         reduce using rule 117 (empty -> .)
    CSTSTRING       reduce using rule 117 (empty -> .)
    TRUE            reduce using rule 117 (empty -> .)
    FALSE           reduce using rule 117 (empty -> .)
    CCURLY          reduce using rule 117 (empty -> .)
    COLON           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    CBRACKET        reduce using rule 117 (empty -> .)

    exp1                           shift and go to state 88
    empty                          shift and go to state 90

state 37

    (91) texp -> gexp . texp1
    (92) texp1 -> . AND gexp texp1
    (93) texp1 -> . empty
    (117) empty -> .

    AND             shift and go to state 92
    OR              reduce using rule 117 (empty -> .)
    QUESTION        reduce using rule 117 (empty -> .)
    CPAREN          reduce using rule 117 (empty -> .)
    ID              reduce using rule 117 (empty -> .)
    IF              reduce using rule 117 (empty -> .)
    PRINT           reduce using rule 117 (empty -> .)
    READ            reduce using rule 117 (empty -> .)
    WHILE           reduce using rule 117 (empty -> .)
    FOR             reduce using rule 117 (empty -> .)
    OCURLY          reduce using rule 117 (empty -> .)
    FUNCTION        reduce using rule 117 (empty -> .)
    CLASS           reduce using rule 117 (empty -> .)
    VAR             reduce using rule 117 (empty -> .)
    OPAREN          reduce using rule 117 (empty -> .)
    CSTINT          reduce using rule 117 (empty -> .)
    CSTFLT          reduce using rule 117 (empty -> .)
    CSTCHAR         reduce using rule 117 (empty -> .)
    CSTSTRING       reduce using rule 117 (empty -> .)
    TRUE            reduce using rule 117 (empty -> .)
    FALSE           reduce using rule 117 (empty -> .)
    CCURLY          reduce using rule 117 (empty -> .)
    COLON           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    CBRACKET        reduce using rule 117 (empty -> .)

    texp1                          shift and go to state 91
    empty                          shift and go to state 93

state 38

    (94) gexp -> mexp . gexp1
    (95) gexp1 -> . LT mexp
    (96) gexp1 -> . GT mexp
    (97) gexp1 -> . EQ mexp
    (98) gexp1 -> . NE mexp
    (99) gexp1 -> . empty
    (117) empty -> .

    LT              shift and go to state 95
    GT              shift and go to state 96
    EQ              shift and go to state 97
    NE              shift and go to state 98
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    QUESTION        reduce using rule 117 (empty -> .)
    CPAREN          reduce using rule 117 (empty -> .)
    ID              reduce using rule 117 (empty -> .)
    IF              reduce using rule 117 (empty -> .)
    PRINT           reduce using rule 117 (empty -> .)
    READ            reduce using rule 117 (empty -> .)
    WHILE           reduce using rule 117 (empty -> .)
    FOR             reduce using rule 117 (empty -> .)
    OCURLY          reduce using rule 117 (empty -> .)
    FUNCTION        reduce using rule 117 (empty -> .)
    CLASS           reduce using rule 117 (empty -> .)
    VAR             reduce using rule 117 (empty -> .)
    OPAREN          reduce using rule 117 (empty -> .)
    CSTINT          reduce using rule 117 (empty -> .)
    CSTFLT          reduce using rule 117 (empty -> .)
    CSTCHAR         reduce using rule 117 (empty -> .)
    CSTSTRING       reduce using rule 117 (empty -> .)
    TRUE            reduce using rule 117 (empty -> .)
    FALSE           reduce using rule 117 (empty -> .)
    CCURLY          reduce using rule 117 (empty -> .)
    COLON           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    CBRACKET        reduce using rule 117 (empty -> .)

    gexp1                          shift and go to state 94
    empty                          shift and go to state 99

state 39

    (100) mexp -> termino . mexp1
    (101) mexp1 -> . PLUS termino mexp1
    (102) mexp1 -> . MINUS termino mexp1
    (103) mexp1 -> . empty
    (117) empty -> .

    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    LT              reduce using rule 117 (empty -> .)
    GT              reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NE              reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    QUESTION        reduce using rule 117 (empty -> .)
    CPAREN          reduce using rule 117 (empty -> .)
    ID              reduce using rule 117 (empty -> .)
    IF              reduce using rule 117 (empty -> .)
    PRINT           reduce using rule 117 (empty -> .)
    READ            reduce using rule 117 (empty -> .)
    WHILE           reduce using rule 117 (empty -> .)
    FOR             reduce using rule 117 (empty -> .)
    OCURLY          reduce using rule 117 (empty -> .)
    FUNCTION        reduce using rule 117 (empty -> .)
    CLASS           reduce using rule 117 (empty -> .)
    VAR             reduce using rule 117 (empty -> .)
    OPAREN          reduce using rule 117 (empty -> .)
    CSTINT          reduce using rule 117 (empty -> .)
    CSTFLT          reduce using rule 117 (empty -> .)
    CSTCHAR         reduce using rule 117 (empty -> .)
    CSTSTRING       reduce using rule 117 (empty -> .)
    TRUE            reduce using rule 117 (empty -> .)
    FALSE           reduce using rule 117 (empty -> .)
    CCURLY          reduce using rule 117 (empty -> .)
    COLON           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    CBRACKET        reduce using rule 117 (empty -> .)

    mexp1                          shift and go to state 100
    empty                          shift and go to state 103

state 40

    (104) termino -> factor . term1
    (105) term1 -> . MULT factor term1
    (106) term1 -> . DIV factor term1
    (107) term1 -> . empty
    (117) empty -> .

    MULT            shift and go to state 105
    DIV             shift and go to state 106
    PLUS            reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    LT              reduce using rule 117 (empty -> .)
    GT              reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NE              reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    QUESTION        reduce using rule 117 (empty -> .)
    CPAREN          reduce using rule 117 (empty -> .)
    ID              reduce using rule 117 (empty -> .)
    IF              reduce using rule 117 (empty -> .)
    PRINT           reduce using rule 117 (empty -> .)
    READ            reduce using rule 117 (empty -> .)
    WHILE           reduce using rule 117 (empty -> .)
    FOR             reduce using rule 117 (empty -> .)
    OCURLY          reduce using rule 117 (empty -> .)
    FUNCTION        reduce using rule 117 (empty -> .)
    CLASS           reduce using rule 117 (empty -> .)
    VAR             reduce using rule 117 (empty -> .)
    OPAREN          reduce using rule 117 (empty -> .)
    CSTINT          reduce using rule 117 (empty -> .)
    CSTFLT          reduce using rule 117 (empty -> .)
    CSTCHAR         reduce using rule 117 (empty -> .)
    CSTSTRING       reduce using rule 117 (empty -> .)
    TRUE            reduce using rule 117 (empty -> .)
    FALSE           reduce using rule 117 (empty -> .)
    CCURLY          reduce using rule 117 (empty -> .)
    COLON           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    CBRACKET        reduce using rule 117 (empty -> .)

    term1                          shift and go to state 104
    empty                          shift and go to state 107

state 41

    (109) factor -> varcst .

    MULT            reduce using rule 109 (factor -> varcst .)
    DIV             reduce using rule 109 (factor -> varcst .)
    PLUS            reduce using rule 109 (factor -> varcst .)
    MINUS           reduce using rule 109 (factor -> varcst .)
    LT              reduce using rule 109 (factor -> varcst .)
    GT              reduce using rule 109 (factor -> varcst .)
    EQ              reduce using rule 109 (factor -> varcst .)
    NE              reduce using rule 109 (factor -> varcst .)
    AND             reduce using rule 109 (factor -> varcst .)
    OR              reduce using rule 109 (factor -> varcst .)
    QUESTION        reduce using rule 109 (factor -> varcst .)
    CPAREN          reduce using rule 109 (factor -> varcst .)
    ID              reduce using rule 109 (factor -> varcst .)
    IF              reduce using rule 109 (factor -> varcst .)
    PRINT           reduce using rule 109 (factor -> varcst .)
    READ            reduce using rule 109 (factor -> varcst .)
    WHILE           reduce using rule 109 (factor -> varcst .)
    FOR             reduce using rule 109 (factor -> varcst .)
    OCURLY          reduce using rule 109 (factor -> varcst .)
    FUNCTION        reduce using rule 109 (factor -> varcst .)
    CLASS           reduce using rule 109 (factor -> varcst .)
    VAR             reduce using rule 109 (factor -> varcst .)
    OPAREN          reduce using rule 109 (factor -> varcst .)
    CSTINT          reduce using rule 109 (factor -> varcst .)
    CSTFLT          reduce using rule 109 (factor -> varcst .)
    CSTCHAR         reduce using rule 109 (factor -> varcst .)
    CSTSTRING       reduce using rule 109 (factor -> varcst .)
    TRUE            reduce using rule 109 (factor -> varcst .)
    FALSE           reduce using rule 109 (factor -> varcst .)
    CCURLY          reduce using rule 109 (factor -> varcst .)
    COLON           reduce using rule 109 (factor -> varcst .)
    SEMICOLON       reduce using rule 109 (factor -> varcst .)
    COMMA           reduce using rule 109 (factor -> varcst .)
    CBRACKET        reduce using rule 109 (factor -> varcst .)


state 42

    (112) varcst -> CSTINT .

    MULT            reduce using rule 112 (varcst -> CSTINT .)
    DIV             reduce using rule 112 (varcst -> CSTINT .)
    PLUS            reduce using rule 112 (varcst -> CSTINT .)
    MINUS           reduce using rule 112 (varcst -> CSTINT .)
    LT              reduce using rule 112 (varcst -> CSTINT .)
    GT              reduce using rule 112 (varcst -> CSTINT .)
    EQ              reduce using rule 112 (varcst -> CSTINT .)
    NE              reduce using rule 112 (varcst -> CSTINT .)
    AND             reduce using rule 112 (varcst -> CSTINT .)
    OR              reduce using rule 112 (varcst -> CSTINT .)
    QUESTION        reduce using rule 112 (varcst -> CSTINT .)
    CPAREN          reduce using rule 112 (varcst -> CSTINT .)
    ID              reduce using rule 112 (varcst -> CSTINT .)
    IF              reduce using rule 112 (varcst -> CSTINT .)
    PRINT           reduce using rule 112 (varcst -> CSTINT .)
    READ            reduce using rule 112 (varcst -> CSTINT .)
    WHILE           reduce using rule 112 (varcst -> CSTINT .)
    FOR             reduce using rule 112 (varcst -> CSTINT .)
    OCURLY          reduce using rule 112 (varcst -> CSTINT .)
    FUNCTION        reduce using rule 112 (varcst -> CSTINT .)
    CLASS           reduce using rule 112 (varcst -> CSTINT .)
    VAR             reduce using rule 112 (varcst -> CSTINT .)
    OPAREN          reduce using rule 112 (varcst -> CSTINT .)
    CSTINT          reduce using rule 112 (varcst -> CSTINT .)
    CSTFLT          reduce using rule 112 (varcst -> CSTINT .)
    CSTCHAR         reduce using rule 112 (varcst -> CSTINT .)
    CSTSTRING       reduce using rule 112 (varcst -> CSTINT .)
    TRUE            reduce using rule 112 (varcst -> CSTINT .)
    FALSE           reduce using rule 112 (varcst -> CSTINT .)
    CCURLY          reduce using rule 112 (varcst -> CSTINT .)
    COLON           reduce using rule 112 (varcst -> CSTINT .)
    SEMICOLON       reduce using rule 112 (varcst -> CSTINT .)
    COMMA           reduce using rule 112 (varcst -> CSTINT .)
    CBRACKET        reduce using rule 112 (varcst -> CSTINT .)


state 43

    (113) varcst -> CSTFLT .

    MULT            reduce using rule 113 (varcst -> CSTFLT .)
    DIV             reduce using rule 113 (varcst -> CSTFLT .)
    PLUS            reduce using rule 113 (varcst -> CSTFLT .)
    MINUS           reduce using rule 113 (varcst -> CSTFLT .)
    LT              reduce using rule 113 (varcst -> CSTFLT .)
    GT              reduce using rule 113 (varcst -> CSTFLT .)
    EQ              reduce using rule 113 (varcst -> CSTFLT .)
    NE              reduce using rule 113 (varcst -> CSTFLT .)
    AND             reduce using rule 113 (varcst -> CSTFLT .)
    OR              reduce using rule 113 (varcst -> CSTFLT .)
    QUESTION        reduce using rule 113 (varcst -> CSTFLT .)
    CPAREN          reduce using rule 113 (varcst -> CSTFLT .)
    ID              reduce using rule 113 (varcst -> CSTFLT .)
    IF              reduce using rule 113 (varcst -> CSTFLT .)
    PRINT           reduce using rule 113 (varcst -> CSTFLT .)
    READ            reduce using rule 113 (varcst -> CSTFLT .)
    WHILE           reduce using rule 113 (varcst -> CSTFLT .)
    FOR             reduce using rule 113 (varcst -> CSTFLT .)
    OCURLY          reduce using rule 113 (varcst -> CSTFLT .)
    FUNCTION        reduce using rule 113 (varcst -> CSTFLT .)
    CLASS           reduce using rule 113 (varcst -> CSTFLT .)
    VAR             reduce using rule 113 (varcst -> CSTFLT .)
    OPAREN          reduce using rule 113 (varcst -> CSTFLT .)
    CSTINT          reduce using rule 113 (varcst -> CSTFLT .)
    CSTFLT          reduce using rule 113 (varcst -> CSTFLT .)
    CSTCHAR         reduce using rule 113 (varcst -> CSTFLT .)
    CSTSTRING       reduce using rule 113 (varcst -> CSTFLT .)
    TRUE            reduce using rule 113 (varcst -> CSTFLT .)
    FALSE           reduce using rule 113 (varcst -> CSTFLT .)
    CCURLY          reduce using rule 113 (varcst -> CSTFLT .)
    COLON           reduce using rule 113 (varcst -> CSTFLT .)
    SEMICOLON       reduce using rule 113 (varcst -> CSTFLT .)
    COMMA           reduce using rule 113 (varcst -> CSTFLT .)
    CBRACKET        reduce using rule 113 (varcst -> CSTFLT .)


state 44

    (114) varcst -> CSTCHAR .

    MULT            reduce using rule 114 (varcst -> CSTCHAR .)
    DIV             reduce using rule 114 (varcst -> CSTCHAR .)
    PLUS            reduce using rule 114 (varcst -> CSTCHAR .)
    MINUS           reduce using rule 114 (varcst -> CSTCHAR .)
    LT              reduce using rule 114 (varcst -> CSTCHAR .)
    GT              reduce using rule 114 (varcst -> CSTCHAR .)
    EQ              reduce using rule 114 (varcst -> CSTCHAR .)
    NE              reduce using rule 114 (varcst -> CSTCHAR .)
    AND             reduce using rule 114 (varcst -> CSTCHAR .)
    OR              reduce using rule 114 (varcst -> CSTCHAR .)
    QUESTION        reduce using rule 114 (varcst -> CSTCHAR .)
    CPAREN          reduce using rule 114 (varcst -> CSTCHAR .)
    ID              reduce using rule 114 (varcst -> CSTCHAR .)
    IF              reduce using rule 114 (varcst -> CSTCHAR .)
    PRINT           reduce using rule 114 (varcst -> CSTCHAR .)
    READ            reduce using rule 114 (varcst -> CSTCHAR .)
    WHILE           reduce using rule 114 (varcst -> CSTCHAR .)
    FOR             reduce using rule 114 (varcst -> CSTCHAR .)
    OCURLY          reduce using rule 114 (varcst -> CSTCHAR .)
    FUNCTION        reduce using rule 114 (varcst -> CSTCHAR .)
    CLASS           reduce using rule 114 (varcst -> CSTCHAR .)
    VAR             reduce using rule 114 (varcst -> CSTCHAR .)
    OPAREN          reduce using rule 114 (varcst -> CSTCHAR .)
    CSTINT          reduce using rule 114 (varcst -> CSTCHAR .)
    CSTFLT          reduce using rule 114 (varcst -> CSTCHAR .)
    CSTCHAR         reduce using rule 114 (varcst -> CSTCHAR .)
    CSTSTRING       reduce using rule 114 (varcst -> CSTCHAR .)
    TRUE            reduce using rule 114 (varcst -> CSTCHAR .)
    FALSE           reduce using rule 114 (varcst -> CSTCHAR .)
    CCURLY          reduce using rule 114 (varcst -> CSTCHAR .)
    COLON           reduce using rule 114 (varcst -> CSTCHAR .)
    SEMICOLON       reduce using rule 114 (varcst -> CSTCHAR .)
    COMMA           reduce using rule 114 (varcst -> CSTCHAR .)
    CBRACKET        reduce using rule 114 (varcst -> CSTCHAR .)


state 45

    (115) varcst -> CSTSTRING .

    MULT            reduce using rule 115 (varcst -> CSTSTRING .)
    DIV             reduce using rule 115 (varcst -> CSTSTRING .)
    PLUS            reduce using rule 115 (varcst -> CSTSTRING .)
    MINUS           reduce using rule 115 (varcst -> CSTSTRING .)
    LT              reduce using rule 115 (varcst -> CSTSTRING .)
    GT              reduce using rule 115 (varcst -> CSTSTRING .)
    EQ              reduce using rule 115 (varcst -> CSTSTRING .)
    NE              reduce using rule 115 (varcst -> CSTSTRING .)
    AND             reduce using rule 115 (varcst -> CSTSTRING .)
    OR              reduce using rule 115 (varcst -> CSTSTRING .)
    QUESTION        reduce using rule 115 (varcst -> CSTSTRING .)
    CPAREN          reduce using rule 115 (varcst -> CSTSTRING .)
    ID              reduce using rule 115 (varcst -> CSTSTRING .)
    IF              reduce using rule 115 (varcst -> CSTSTRING .)
    PRINT           reduce using rule 115 (varcst -> CSTSTRING .)
    READ            reduce using rule 115 (varcst -> CSTSTRING .)
    WHILE           reduce using rule 115 (varcst -> CSTSTRING .)
    FOR             reduce using rule 115 (varcst -> CSTSTRING .)
    OCURLY          reduce using rule 115 (varcst -> CSTSTRING .)
    FUNCTION        reduce using rule 115 (varcst -> CSTSTRING .)
    CLASS           reduce using rule 115 (varcst -> CSTSTRING .)
    VAR             reduce using rule 115 (varcst -> CSTSTRING .)
    OPAREN          reduce using rule 115 (varcst -> CSTSTRING .)
    CSTINT          reduce using rule 115 (varcst -> CSTSTRING .)
    CSTFLT          reduce using rule 115 (varcst -> CSTSTRING .)
    CSTCHAR         reduce using rule 115 (varcst -> CSTSTRING .)
    CSTSTRING       reduce using rule 115 (varcst -> CSTSTRING .)
    TRUE            reduce using rule 115 (varcst -> CSTSTRING .)
    FALSE           reduce using rule 115 (varcst -> CSTSTRING .)
    CCURLY          reduce using rule 115 (varcst -> CSTSTRING .)
    COLON           reduce using rule 115 (varcst -> CSTSTRING .)
    SEMICOLON       reduce using rule 115 (varcst -> CSTSTRING .)
    COMMA           reduce using rule 115 (varcst -> CSTSTRING .)
    CBRACKET        reduce using rule 115 (varcst -> CSTSTRING .)


state 46

    (116) varcst -> boolean .

    MULT            reduce using rule 116 (varcst -> boolean .)
    DIV             reduce using rule 116 (varcst -> boolean .)
    PLUS            reduce using rule 116 (varcst -> boolean .)
    MINUS           reduce using rule 116 (varcst -> boolean .)
    LT              reduce using rule 116 (varcst -> boolean .)
    GT              reduce using rule 116 (varcst -> boolean .)
    EQ              reduce using rule 116 (varcst -> boolean .)
    NE              reduce using rule 116 (varcst -> boolean .)
    AND             reduce using rule 116 (varcst -> boolean .)
    OR              reduce using rule 116 (varcst -> boolean .)
    QUESTION        reduce using rule 116 (varcst -> boolean .)
    CPAREN          reduce using rule 116 (varcst -> boolean .)
    ID              reduce using rule 116 (varcst -> boolean .)
    IF              reduce using rule 116 (varcst -> boolean .)
    PRINT           reduce using rule 116 (varcst -> boolean .)
    READ            reduce using rule 116 (varcst -> boolean .)
    WHILE           reduce using rule 116 (varcst -> boolean .)
    FOR             reduce using rule 116 (varcst -> boolean .)
    OCURLY          reduce using rule 116 (varcst -> boolean .)
    FUNCTION        reduce using rule 116 (varcst -> boolean .)
    CLASS           reduce using rule 116 (varcst -> boolean .)
    VAR             reduce using rule 116 (varcst -> boolean .)
    OPAREN          reduce using rule 116 (varcst -> boolean .)
    CSTINT          reduce using rule 116 (varcst -> boolean .)
    CSTFLT          reduce using rule 116 (varcst -> boolean .)
    CSTCHAR         reduce using rule 116 (varcst -> boolean .)
    CSTSTRING       reduce using rule 116 (varcst -> boolean .)
    TRUE            reduce using rule 116 (varcst -> boolean .)
    FALSE           reduce using rule 116 (varcst -> boolean .)
    CCURLY          reduce using rule 116 (varcst -> boolean .)
    COLON           reduce using rule 116 (varcst -> boolean .)
    SEMICOLON       reduce using rule 116 (varcst -> boolean .)
    COMMA           reduce using rule 116 (varcst -> boolean .)
    CBRACKET        reduce using rule 116 (varcst -> boolean .)


state 47

    (77) boolean -> TRUE .

    MULT            reduce using rule 77 (boolean -> TRUE .)
    DIV             reduce using rule 77 (boolean -> TRUE .)
    PLUS            reduce using rule 77 (boolean -> TRUE .)
    MINUS           reduce using rule 77 (boolean -> TRUE .)
    LT              reduce using rule 77 (boolean -> TRUE .)
    GT              reduce using rule 77 (boolean -> TRUE .)
    EQ              reduce using rule 77 (boolean -> TRUE .)
    NE              reduce using rule 77 (boolean -> TRUE .)
    AND             reduce using rule 77 (boolean -> TRUE .)
    OR              reduce using rule 77 (boolean -> TRUE .)
    QUESTION        reduce using rule 77 (boolean -> TRUE .)
    CPAREN          reduce using rule 77 (boolean -> TRUE .)
    ID              reduce using rule 77 (boolean -> TRUE .)
    IF              reduce using rule 77 (boolean -> TRUE .)
    PRINT           reduce using rule 77 (boolean -> TRUE .)
    READ            reduce using rule 77 (boolean -> TRUE .)
    WHILE           reduce using rule 77 (boolean -> TRUE .)
    FOR             reduce using rule 77 (boolean -> TRUE .)
    OCURLY          reduce using rule 77 (boolean -> TRUE .)
    FUNCTION        reduce using rule 77 (boolean -> TRUE .)
    CLASS           reduce using rule 77 (boolean -> TRUE .)
    VAR             reduce using rule 77 (boolean -> TRUE .)
    OPAREN          reduce using rule 77 (boolean -> TRUE .)
    CSTINT          reduce using rule 77 (boolean -> TRUE .)
    CSTFLT          reduce using rule 77 (boolean -> TRUE .)
    CSTCHAR         reduce using rule 77 (boolean -> TRUE .)
    CSTSTRING       reduce using rule 77 (boolean -> TRUE .)
    TRUE            reduce using rule 77 (boolean -> TRUE .)
    FALSE           reduce using rule 77 (boolean -> TRUE .)
    CCURLY          reduce using rule 77 (boolean -> TRUE .)
    COLON           reduce using rule 77 (boolean -> TRUE .)
    SEMICOLON       reduce using rule 77 (boolean -> TRUE .)
    COMMA           reduce using rule 77 (boolean -> TRUE .)
    CBRACKET        reduce using rule 77 (boolean -> TRUE .)


state 48

    (78) boolean -> FALSE .

    MULT            reduce using rule 78 (boolean -> FALSE .)
    DIV             reduce using rule 78 (boolean -> FALSE .)
    PLUS            reduce using rule 78 (boolean -> FALSE .)
    MINUS           reduce using rule 78 (boolean -> FALSE .)
    LT              reduce using rule 78 (boolean -> FALSE .)
    GT              reduce using rule 78 (boolean -> FALSE .)
    EQ              reduce using rule 78 (boolean -> FALSE .)
    NE              reduce using rule 78 (boolean -> FALSE .)
    AND             reduce using rule 78 (boolean -> FALSE .)
    OR              reduce using rule 78 (boolean -> FALSE .)
    QUESTION        reduce using rule 78 (boolean -> FALSE .)
    CPAREN          reduce using rule 78 (boolean -> FALSE .)
    ID              reduce using rule 78 (boolean -> FALSE .)
    IF              reduce using rule 78 (boolean -> FALSE .)
    PRINT           reduce using rule 78 (boolean -> FALSE .)
    READ            reduce using rule 78 (boolean -> FALSE .)
    WHILE           reduce using rule 78 (boolean -> FALSE .)
    FOR             reduce using rule 78 (boolean -> FALSE .)
    OCURLY          reduce using rule 78 (boolean -> FALSE .)
    FUNCTION        reduce using rule 78 (boolean -> FALSE .)
    CLASS           reduce using rule 78 (boolean -> FALSE .)
    VAR             reduce using rule 78 (boolean -> FALSE .)
    OPAREN          reduce using rule 78 (boolean -> FALSE .)
    CSTINT          reduce using rule 78 (boolean -> FALSE .)
    CSTFLT          reduce using rule 78 (boolean -> FALSE .)
    CSTCHAR         reduce using rule 78 (boolean -> FALSE .)
    CSTSTRING       reduce using rule 78 (boolean -> FALSE .)
    TRUE            reduce using rule 78 (boolean -> FALSE .)
    FALSE           reduce using rule 78 (boolean -> FALSE .)
    CCURLY          reduce using rule 78 (boolean -> FALSE .)
    COLON           reduce using rule 78 (boolean -> FALSE .)
    SEMICOLON       reduce using rule 78 (boolean -> FALSE .)
    COMMA           reduce using rule 78 (boolean -> FALSE .)
    CBRACKET        reduce using rule 78 (boolean -> FALSE .)


state 49

    (21) dec -> VAR tipo . SEMICOLON dec1

    SEMICOLON       shift and go to state 108


state 50

    (24) tipo -> compuesto . ID tipo1

    ID              shift and go to state 109


state 51

    (43) compuesto -> ID .

    ID              reduce using rule 43 (compuesto -> ID .)


state 52

    (25) tipo -> simple . ID tipo1

    ID              shift and go to state 110


state 53

    (26) tipo -> multiple . ID tipo3 tipo3 tipo2

    ID              shift and go to state 111


state 54

    (44) compuesto -> DATAFRAME .

    ID              reduce using rule 44 (compuesto -> DATAFRAME .)


state 55

    (45) compuesto -> FILE .

    ID              reduce using rule 45 (compuesto -> FILE .)


state 56

    (33) simple -> INT .

    ID              reduce using rule 33 (simple -> INT .)


state 57

    (34) simple -> FLOAT .

    ID              reduce using rule 34 (simple -> FLOAT .)


state 58

    (35) simple -> BOOL .

    ID              reduce using rule 35 (simple -> BOOL .)


state 59

    (36) simple -> STRING .

    ID              reduce using rule 36 (simple -> STRING .)


state 60

    (37) simple -> CHAR .

    ID              reduce using rule 37 (simple -> CHAR .)


state 61

    (38) multiple -> INTS .

    ID              reduce using rule 38 (multiple -> INTS .)


state 62

    (39) multiple -> FLOATS .

    ID              reduce using rule 39 (multiple -> FLOATS .)


state 63

    (40) multiple -> BOOLS .

    ID              reduce using rule 40 (multiple -> BOOLS .)


state 64

    (41) multiple -> STRINGS .

    ID              reduce using rule 41 (multiple -> STRINGS .)


state 65

    (42) multiple -> CHARS .

    ID              reduce using rule 42 (multiple -> CHARS .)


state 66

    (46) bloque -> OCURLY b1 CCURLY .

    $end            reduce using rule 46 (bloque -> OCURLY b1 CCURLY .)
    ID              reduce using rule 46 (bloque -> OCURLY b1 CCURLY .)
    IF              reduce using rule 46 (bloque -> OCURLY b1 CCURLY .)
    PRINT           reduce using rule 46 (bloque -> OCURLY b1 CCURLY .)
    READ            reduce using rule 46 (bloque -> OCURLY b1 CCURLY .)
    WHILE           reduce using rule 46 (bloque -> OCURLY b1 CCURLY .)
    FOR             reduce using rule 46 (bloque -> OCURLY b1 CCURLY .)
    OCURLY          reduce using rule 46 (bloque -> OCURLY b1 CCURLY .)
    FUNCTION        reduce using rule 46 (bloque -> OCURLY b1 CCURLY .)
    CLASS           reduce using rule 46 (bloque -> OCURLY b1 CCURLY .)
    VAR             reduce using rule 46 (bloque -> OCURLY b1 CCURLY .)
    OPAREN          reduce using rule 46 (bloque -> OCURLY b1 CCURLY .)
    CSTINT          reduce using rule 46 (bloque -> OCURLY b1 CCURLY .)
    CSTFLT          reduce using rule 46 (bloque -> OCURLY b1 CCURLY .)
    CSTCHAR         reduce using rule 46 (bloque -> OCURLY b1 CCURLY .)
    CSTSTRING       reduce using rule 46 (bloque -> OCURLY b1 CCURLY .)
    TRUE            reduce using rule 46 (bloque -> OCURLY b1 CCURLY .)
    FALSE           reduce using rule 46 (bloque -> OCURLY b1 CCURLY .)
    CCURLY          reduce using rule 46 (bloque -> OCURLY b1 CCURLY .)
    ELSE            reduce using rule 46 (bloque -> OCURLY b1 CCURLY .)
    SEMICOLON       reduce using rule 46 (bloque -> OCURLY b1 CCURLY .)


state 67

    (47) b1 -> estatuto b1 .

    CCURLY          reduce using rule 47 (b1 -> estatuto b1 .)


state 68

    (66) asignacion -> variable AS . exp
    (88) exp -> . texp exp1
    (91) texp -> . gexp texp1
    (94) gexp -> . mexp gexp1
    (100) mexp -> . termino mexp1
    (104) termino -> . factor term1
    (108) factor -> . OPAREN exp CPAREN
    (109) factor -> . varcst
    (110) factor -> . variable
    (111) factor -> . llamada
    (112) varcst -> . CSTINT
    (113) varcst -> . CSTFLT
    (114) varcst -> . CSTCHAR
    (115) varcst -> . CSTSTRING
    (116) varcst -> . boolean
    (79) variable -> . ID variable1 variable1 variable2
    (84) llamada -> . ID OPAREN exp llamada1 CPAREN
    (85) llamada -> . ID OPAREN CPAREN
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    variable                       shift and go to state 75
    exp                            shift and go to state 112
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 69

    (72) ternaria -> exp QUESTION . estatuto_redux COLON estatuto_redux SEMICOLON
    (61) estatuto_redux -> . asignacion
    (62) estatuto_redux -> . llamada
    (63) estatuto_redux -> . escritura
    (64) estatuto_redux -> . leer
    (65) estatuto_redux -> . ternaria
    (66) asignacion -> . variable AS exp
    (84) llamada -> . ID OPAREN exp llamada1 CPAREN
    (85) llamada -> . ID OPAREN CPAREN
    (73) escritura -> . PRINT OPAREN exp e1 CPAREN
    (76) leer -> . READ OPAREN exp e1 CPAREN
    (72) ternaria -> . exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON
    (79) variable -> . ID variable1 variable1 variable2
    (88) exp -> . texp exp1
    (91) texp -> . gexp texp1
    (94) gexp -> . mexp gexp1
    (100) mexp -> . termino mexp1
    (104) termino -> . factor term1
    (108) factor -> . OPAREN exp CPAREN
    (109) factor -> . varcst
    (110) factor -> . variable
    (111) factor -> . llamada
    (112) varcst -> . CSTINT
    (113) varcst -> . CSTFLT
    (114) varcst -> . CSTCHAR
    (115) varcst -> . CSTSTRING
    (116) varcst -> . boolean
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    ID              shift and go to state 27
    PRINT           shift and go to state 30
    READ            shift and go to state 31
    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 26
    estatuto_redux                 shift and go to state 113
    asignacion                     shift and go to state 114
    llamada                        shift and go to state 115
    escritura                      shift and go to state 116
    leer                           shift and go to state 117
    ternaria                       shift and go to state 118
    variable                       shift and go to state 25
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    boolean                        shift and go to state 46

state 70

    (84) llamada -> ID OPAREN . exp llamada1 CPAREN
    (85) llamada -> ID OPAREN . CPAREN
    (88) exp -> . texp exp1
    (91) texp -> . gexp texp1
    (94) gexp -> . mexp gexp1
    (100) mexp -> . termino mexp1
    (104) termino -> . factor term1
    (108) factor -> . OPAREN exp CPAREN
    (109) factor -> . varcst
    (110) factor -> . variable
    (111) factor -> . llamada
    (112) varcst -> . CSTINT
    (113) varcst -> . CSTFLT
    (114) varcst -> . CSTCHAR
    (115) varcst -> . CSTSTRING
    (116) varcst -> . boolean
    (79) variable -> . ID variable1 variable1 variable2
    (84) llamada -> . ID OPAREN exp llamada1 CPAREN
    (85) llamada -> . ID OPAREN CPAREN
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    CPAREN          shift and go to state 120
    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 119
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 71

    (79) variable -> ID variable1 . variable1 variable2
    (80) variable1 -> . OBRACKET exp CBRACKET
    (81) variable1 -> . empty
    (117) empty -> .

    OBRACKET        shift and go to state 72
    PERIOD          reduce using rule 117 (empty -> .)
    AS              reduce using rule 117 (empty -> .)
    MULT            reduce using rule 117 (empty -> .)
    DIV             reduce using rule 117 (empty -> .)
    PLUS            reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    LT              reduce using rule 117 (empty -> .)
    GT              reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NE              reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    QUESTION        reduce using rule 117 (empty -> .)
    CPAREN          reduce using rule 117 (empty -> .)
    ID              reduce using rule 117 (empty -> .)
    IF              reduce using rule 117 (empty -> .)
    PRINT           reduce using rule 117 (empty -> .)
    READ            reduce using rule 117 (empty -> .)
    WHILE           reduce using rule 117 (empty -> .)
    FOR             reduce using rule 117 (empty -> .)
    OCURLY          reduce using rule 117 (empty -> .)
    FUNCTION        reduce using rule 117 (empty -> .)
    CLASS           reduce using rule 117 (empty -> .)
    VAR             reduce using rule 117 (empty -> .)
    OPAREN          reduce using rule 117 (empty -> .)
    CSTINT          reduce using rule 117 (empty -> .)
    CSTFLT          reduce using rule 117 (empty -> .)
    CSTCHAR         reduce using rule 117 (empty -> .)
    CSTSTRING       reduce using rule 117 (empty -> .)
    TRUE            reduce using rule 117 (empty -> .)
    FALSE           reduce using rule 117 (empty -> .)
    CCURLY          reduce using rule 117 (empty -> .)
    COLON           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    CBRACKET        reduce using rule 117 (empty -> .)
    FROM            reduce using rule 117 (empty -> .)
    TO              reduce using rule 117 (empty -> .)
    BY              reduce using rule 117 (empty -> .)

    variable1                      shift and go to state 121
    empty                          shift and go to state 73

state 72

    (80) variable1 -> OBRACKET . exp CBRACKET
    (88) exp -> . texp exp1
    (91) texp -> . gexp texp1
    (94) gexp -> . mexp gexp1
    (100) mexp -> . termino mexp1
    (104) termino -> . factor term1
    (108) factor -> . OPAREN exp CPAREN
    (109) factor -> . varcst
    (110) factor -> . variable
    (111) factor -> . llamada
    (112) varcst -> . CSTINT
    (113) varcst -> . CSTFLT
    (114) varcst -> . CSTCHAR
    (115) varcst -> . CSTSTRING
    (116) varcst -> . boolean
    (79) variable -> . ID variable1 variable1 variable2
    (84) llamada -> . ID OPAREN exp llamada1 CPAREN
    (85) llamada -> . ID OPAREN CPAREN
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 122
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 73

    (81) variable1 -> empty .

    OBRACKET        reduce using rule 81 (variable1 -> empty .)
    PERIOD          reduce using rule 81 (variable1 -> empty .)
    AS              reduce using rule 81 (variable1 -> empty .)
    MULT            reduce using rule 81 (variable1 -> empty .)
    DIV             reduce using rule 81 (variable1 -> empty .)
    PLUS            reduce using rule 81 (variable1 -> empty .)
    MINUS           reduce using rule 81 (variable1 -> empty .)
    LT              reduce using rule 81 (variable1 -> empty .)
    GT              reduce using rule 81 (variable1 -> empty .)
    EQ              reduce using rule 81 (variable1 -> empty .)
    NE              reduce using rule 81 (variable1 -> empty .)
    AND             reduce using rule 81 (variable1 -> empty .)
    OR              reduce using rule 81 (variable1 -> empty .)
    QUESTION        reduce using rule 81 (variable1 -> empty .)
    CPAREN          reduce using rule 81 (variable1 -> empty .)
    ID              reduce using rule 81 (variable1 -> empty .)
    IF              reduce using rule 81 (variable1 -> empty .)
    PRINT           reduce using rule 81 (variable1 -> empty .)
    READ            reduce using rule 81 (variable1 -> empty .)
    WHILE           reduce using rule 81 (variable1 -> empty .)
    FOR             reduce using rule 81 (variable1 -> empty .)
    OCURLY          reduce using rule 81 (variable1 -> empty .)
    FUNCTION        reduce using rule 81 (variable1 -> empty .)
    CLASS           reduce using rule 81 (variable1 -> empty .)
    VAR             reduce using rule 81 (variable1 -> empty .)
    OPAREN          reduce using rule 81 (variable1 -> empty .)
    CSTINT          reduce using rule 81 (variable1 -> empty .)
    CSTFLT          reduce using rule 81 (variable1 -> empty .)
    CSTCHAR         reduce using rule 81 (variable1 -> empty .)
    CSTSTRING       reduce using rule 81 (variable1 -> empty .)
    TRUE            reduce using rule 81 (variable1 -> empty .)
    FALSE           reduce using rule 81 (variable1 -> empty .)
    CCURLY          reduce using rule 81 (variable1 -> empty .)
    COLON           reduce using rule 81 (variable1 -> empty .)
    SEMICOLON       reduce using rule 81 (variable1 -> empty .)
    COMMA           reduce using rule 81 (variable1 -> empty .)
    CBRACKET        reduce using rule 81 (variable1 -> empty .)
    FROM            reduce using rule 81 (variable1 -> empty .)
    TO              reduce using rule 81 (variable1 -> empty .)
    BY              reduce using rule 81 (variable1 -> empty .)


state 74

    (108) factor -> OPAREN exp . CPAREN

    CPAREN          shift and go to state 123


state 75

    (110) factor -> variable .

    MULT            reduce using rule 110 (factor -> variable .)
    DIV             reduce using rule 110 (factor -> variable .)
    PLUS            reduce using rule 110 (factor -> variable .)
    MINUS           reduce using rule 110 (factor -> variable .)
    LT              reduce using rule 110 (factor -> variable .)
    GT              reduce using rule 110 (factor -> variable .)
    EQ              reduce using rule 110 (factor -> variable .)
    NE              reduce using rule 110 (factor -> variable .)
    AND             reduce using rule 110 (factor -> variable .)
    OR              reduce using rule 110 (factor -> variable .)
    CPAREN          reduce using rule 110 (factor -> variable .)
    ID              reduce using rule 110 (factor -> variable .)
    IF              reduce using rule 110 (factor -> variable .)
    PRINT           reduce using rule 110 (factor -> variable .)
    READ            reduce using rule 110 (factor -> variable .)
    WHILE           reduce using rule 110 (factor -> variable .)
    FOR             reduce using rule 110 (factor -> variable .)
    OCURLY          reduce using rule 110 (factor -> variable .)
    FUNCTION        reduce using rule 110 (factor -> variable .)
    CLASS           reduce using rule 110 (factor -> variable .)
    VAR             reduce using rule 110 (factor -> variable .)
    OPAREN          reduce using rule 110 (factor -> variable .)
    CSTINT          reduce using rule 110 (factor -> variable .)
    CSTFLT          reduce using rule 110 (factor -> variable .)
    CSTCHAR         reduce using rule 110 (factor -> variable .)
    CSTSTRING       reduce using rule 110 (factor -> variable .)
    TRUE            reduce using rule 110 (factor -> variable .)
    FALSE           reduce using rule 110 (factor -> variable .)
    CCURLY          reduce using rule 110 (factor -> variable .)
    COLON           reduce using rule 110 (factor -> variable .)
    SEMICOLON       reduce using rule 110 (factor -> variable .)
    COMMA           reduce using rule 110 (factor -> variable .)
    CBRACKET        reduce using rule 110 (factor -> variable .)
    QUESTION        reduce using rule 110 (factor -> variable .)


state 76

    (111) factor -> llamada .

    MULT            reduce using rule 111 (factor -> llamada .)
    DIV             reduce using rule 111 (factor -> llamada .)
    PLUS            reduce using rule 111 (factor -> llamada .)
    MINUS           reduce using rule 111 (factor -> llamada .)
    LT              reduce using rule 111 (factor -> llamada .)
    GT              reduce using rule 111 (factor -> llamada .)
    EQ              reduce using rule 111 (factor -> llamada .)
    NE              reduce using rule 111 (factor -> llamada .)
    AND             reduce using rule 111 (factor -> llamada .)
    OR              reduce using rule 111 (factor -> llamada .)
    CPAREN          reduce using rule 111 (factor -> llamada .)
    ID              reduce using rule 111 (factor -> llamada .)
    IF              reduce using rule 111 (factor -> llamada .)
    PRINT           reduce using rule 111 (factor -> llamada .)
    READ            reduce using rule 111 (factor -> llamada .)
    WHILE           reduce using rule 111 (factor -> llamada .)
    FOR             reduce using rule 111 (factor -> llamada .)
    OCURLY          reduce using rule 111 (factor -> llamada .)
    FUNCTION        reduce using rule 111 (factor -> llamada .)
    CLASS           reduce using rule 111 (factor -> llamada .)
    VAR             reduce using rule 111 (factor -> llamada .)
    OPAREN          reduce using rule 111 (factor -> llamada .)
    CSTINT          reduce using rule 111 (factor -> llamada .)
    CSTFLT          reduce using rule 111 (factor -> llamada .)
    CSTCHAR         reduce using rule 111 (factor -> llamada .)
    CSTSTRING       reduce using rule 111 (factor -> llamada .)
    TRUE            reduce using rule 111 (factor -> llamada .)
    FALSE           reduce using rule 111 (factor -> llamada .)
    CCURLY          reduce using rule 111 (factor -> llamada .)
    COLON           reduce using rule 111 (factor -> llamada .)
    SEMICOLON       reduce using rule 111 (factor -> llamada .)
    COMMA           reduce using rule 111 (factor -> llamada .)
    CBRACKET        reduce using rule 111 (factor -> llamada .)
    QUESTION        reduce using rule 111 (factor -> llamada .)


state 77

    (79) variable -> ID . variable1 variable1 variable2
    (84) llamada -> ID . OPAREN exp llamada1 CPAREN
    (85) llamada -> ID . OPAREN CPAREN
    (80) variable1 -> . OBRACKET exp CBRACKET
    (81) variable1 -> . empty
    (117) empty -> .

  ! shift/reduce conflict for OBRACKET resolved as shift
  ! shift/reduce conflict for OPAREN resolved as shift
    OPAREN          shift and go to state 70
    OBRACKET        shift and go to state 72
    PERIOD          reduce using rule 117 (empty -> .)
    MULT            reduce using rule 117 (empty -> .)
    DIV             reduce using rule 117 (empty -> .)
    PLUS            reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    LT              reduce using rule 117 (empty -> .)
    GT              reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NE              reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    CPAREN          reduce using rule 117 (empty -> .)
    ID              reduce using rule 117 (empty -> .)
    IF              reduce using rule 117 (empty -> .)
    PRINT           reduce using rule 117 (empty -> .)
    READ            reduce using rule 117 (empty -> .)
    WHILE           reduce using rule 117 (empty -> .)
    FOR             reduce using rule 117 (empty -> .)
    OCURLY          reduce using rule 117 (empty -> .)
    FUNCTION        reduce using rule 117 (empty -> .)
    CLASS           reduce using rule 117 (empty -> .)
    VAR             reduce using rule 117 (empty -> .)
    CSTINT          reduce using rule 117 (empty -> .)
    CSTFLT          reduce using rule 117 (empty -> .)
    CSTCHAR         reduce using rule 117 (empty -> .)
    CSTSTRING       reduce using rule 117 (empty -> .)
    TRUE            reduce using rule 117 (empty -> .)
    FALSE           reduce using rule 117 (empty -> .)
    CCURLY          reduce using rule 117 (empty -> .)
    COLON           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    CBRACKET        reduce using rule 117 (empty -> .)
    QUESTION        reduce using rule 117 (empty -> .)

  ! OBRACKET        [ reduce using rule 117 (empty -> .) ]
  ! OPAREN          [ reduce using rule 117 (empty -> .) ]

    variable1                      shift and go to state 71
    empty                          shift and go to state 73

state 78

    (67) condicion -> IF cond2 . THEN bloque cond1 SEMICOLON

    THEN            shift and go to state 124


state 79

    (71) cond2 -> OPAREN . exp CPAREN
    (88) exp -> . texp exp1
    (91) texp -> . gexp texp1
    (94) gexp -> . mexp gexp1
    (100) mexp -> . termino mexp1
    (104) termino -> . factor term1
    (108) factor -> . OPAREN exp CPAREN
    (109) factor -> . varcst
    (110) factor -> . variable
    (111) factor -> . llamada
    (112) varcst -> . CSTINT
    (113) varcst -> . CSTFLT
    (114) varcst -> . CSTCHAR
    (115) varcst -> . CSTSTRING
    (116) varcst -> . boolean
    (79) variable -> . ID variable1 variable1 variable2
    (84) llamada -> . ID OPAREN exp llamada1 CPAREN
    (85) llamada -> . ID OPAREN CPAREN
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 125
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 80

    (73) escritura -> PRINT OPAREN . exp e1 CPAREN
    (88) exp -> . texp exp1
    (91) texp -> . gexp texp1
    (94) gexp -> . mexp gexp1
    (100) mexp -> . termino mexp1
    (104) termino -> . factor term1
    (108) factor -> . OPAREN exp CPAREN
    (109) factor -> . varcst
    (110) factor -> . variable
    (111) factor -> . llamada
    (112) varcst -> . CSTINT
    (113) varcst -> . CSTFLT
    (114) varcst -> . CSTCHAR
    (115) varcst -> . CSTSTRING
    (116) varcst -> . boolean
    (79) variable -> . ID variable1 variable1 variable2
    (84) llamada -> . ID OPAREN exp llamada1 CPAREN
    (85) llamada -> . ID OPAREN CPAREN
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 126
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 81

    (76) leer -> READ OPAREN . exp e1 CPAREN
    (88) exp -> . texp exp1
    (91) texp -> . gexp texp1
    (94) gexp -> . mexp gexp1
    (100) mexp -> . termino mexp1
    (104) termino -> . factor term1
    (108) factor -> . OPAREN exp CPAREN
    (109) factor -> . varcst
    (110) factor -> . variable
    (111) factor -> . llamada
    (112) varcst -> . CSTINT
    (113) varcst -> . CSTFLT
    (114) varcst -> . CSTCHAR
    (115) varcst -> . CSTSTRING
    (116) varcst -> . boolean
    (79) variable -> . ID variable1 variable1 variable2
    (84) llamada -> . ID OPAREN exp llamada1 CPAREN
    (85) llamada -> . ID OPAREN CPAREN
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 127
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 82

    (17) ciclo_while -> WHILE cond2 . THEN bloque SEMICOLON

    THEN            shift and go to state 128


state 83

    (18) ciclo_for -> FOR OPAREN . variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
    (79) variable -> . ID variable1 variable1 variable2

    ID              shift and go to state 130

    variable                       shift and go to state 129

state 84

    (3) funcion -> FUNCTION func1 . ID OPAREN param CPAREN bloque

    ID              shift and go to state 131


state 85

    (4) func1 -> simple .

    ID              reduce using rule 4 (func1 -> simple .)


state 86

    (5) func1 -> VOID .

    ID              reduce using rule 5 (func1 -> VOID .)


state 87

    (11) clase -> CLASS ID . COLON clase_bloque SEMICOLON

    COLON           shift and go to state 132


state 88

    (88) exp -> texp exp1 .

    QUESTION        reduce using rule 88 (exp -> texp exp1 .)
    CPAREN          reduce using rule 88 (exp -> texp exp1 .)
    ID              reduce using rule 88 (exp -> texp exp1 .)
    IF              reduce using rule 88 (exp -> texp exp1 .)
    PRINT           reduce using rule 88 (exp -> texp exp1 .)
    READ            reduce using rule 88 (exp -> texp exp1 .)
    WHILE           reduce using rule 88 (exp -> texp exp1 .)
    FOR             reduce using rule 88 (exp -> texp exp1 .)
    OCURLY          reduce using rule 88 (exp -> texp exp1 .)
    FUNCTION        reduce using rule 88 (exp -> texp exp1 .)
    CLASS           reduce using rule 88 (exp -> texp exp1 .)
    VAR             reduce using rule 88 (exp -> texp exp1 .)
    OPAREN          reduce using rule 88 (exp -> texp exp1 .)
    CSTINT          reduce using rule 88 (exp -> texp exp1 .)
    CSTFLT          reduce using rule 88 (exp -> texp exp1 .)
    CSTCHAR         reduce using rule 88 (exp -> texp exp1 .)
    CSTSTRING       reduce using rule 88 (exp -> texp exp1 .)
    TRUE            reduce using rule 88 (exp -> texp exp1 .)
    FALSE           reduce using rule 88 (exp -> texp exp1 .)
    CCURLY          reduce using rule 88 (exp -> texp exp1 .)
    COLON           reduce using rule 88 (exp -> texp exp1 .)
    SEMICOLON       reduce using rule 88 (exp -> texp exp1 .)
    COMMA           reduce using rule 88 (exp -> texp exp1 .)
    CBRACKET        reduce using rule 88 (exp -> texp exp1 .)


state 89

    (89) exp1 -> OR . texp exp1
    (91) texp -> . gexp texp1
    (94) gexp -> . mexp gexp1
    (100) mexp -> . termino mexp1
    (104) termino -> . factor term1
    (108) factor -> . OPAREN exp CPAREN
    (109) factor -> . varcst
    (110) factor -> . variable
    (111) factor -> . llamada
    (112) varcst -> . CSTINT
    (113) varcst -> . CSTFLT
    (114) varcst -> . CSTCHAR
    (115) varcst -> . CSTSTRING
    (116) varcst -> . boolean
    (79) variable -> . ID variable1 variable1 variable2
    (84) llamada -> . ID OPAREN exp llamada1 CPAREN
    (85) llamada -> . ID OPAREN CPAREN
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    texp                           shift and go to state 133
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 90

    (90) exp1 -> empty .

    QUESTION        reduce using rule 90 (exp1 -> empty .)
    CPAREN          reduce using rule 90 (exp1 -> empty .)
    ID              reduce using rule 90 (exp1 -> empty .)
    IF              reduce using rule 90 (exp1 -> empty .)
    PRINT           reduce using rule 90 (exp1 -> empty .)
    READ            reduce using rule 90 (exp1 -> empty .)
    WHILE           reduce using rule 90 (exp1 -> empty .)
    FOR             reduce using rule 90 (exp1 -> empty .)
    OCURLY          reduce using rule 90 (exp1 -> empty .)
    FUNCTION        reduce using rule 90 (exp1 -> empty .)
    CLASS           reduce using rule 90 (exp1 -> empty .)
    VAR             reduce using rule 90 (exp1 -> empty .)
    OPAREN          reduce using rule 90 (exp1 -> empty .)
    CSTINT          reduce using rule 90 (exp1 -> empty .)
    CSTFLT          reduce using rule 90 (exp1 -> empty .)
    CSTCHAR         reduce using rule 90 (exp1 -> empty .)
    CSTSTRING       reduce using rule 90 (exp1 -> empty .)
    TRUE            reduce using rule 90 (exp1 -> empty .)
    FALSE           reduce using rule 90 (exp1 -> empty .)
    CCURLY          reduce using rule 90 (exp1 -> empty .)
    COLON           reduce using rule 90 (exp1 -> empty .)
    SEMICOLON       reduce using rule 90 (exp1 -> empty .)
    COMMA           reduce using rule 90 (exp1 -> empty .)
    CBRACKET        reduce using rule 90 (exp1 -> empty .)


state 91

    (91) texp -> gexp texp1 .

    OR              reduce using rule 91 (texp -> gexp texp1 .)
    QUESTION        reduce using rule 91 (texp -> gexp texp1 .)
    CPAREN          reduce using rule 91 (texp -> gexp texp1 .)
    ID              reduce using rule 91 (texp -> gexp texp1 .)
    IF              reduce using rule 91 (texp -> gexp texp1 .)
    PRINT           reduce using rule 91 (texp -> gexp texp1 .)
    READ            reduce using rule 91 (texp -> gexp texp1 .)
    WHILE           reduce using rule 91 (texp -> gexp texp1 .)
    FOR             reduce using rule 91 (texp -> gexp texp1 .)
    OCURLY          reduce using rule 91 (texp -> gexp texp1 .)
    FUNCTION        reduce using rule 91 (texp -> gexp texp1 .)
    CLASS           reduce using rule 91 (texp -> gexp texp1 .)
    VAR             reduce using rule 91 (texp -> gexp texp1 .)
    OPAREN          reduce using rule 91 (texp -> gexp texp1 .)
    CSTINT          reduce using rule 91 (texp -> gexp texp1 .)
    CSTFLT          reduce using rule 91 (texp -> gexp texp1 .)
    CSTCHAR         reduce using rule 91 (texp -> gexp texp1 .)
    CSTSTRING       reduce using rule 91 (texp -> gexp texp1 .)
    TRUE            reduce using rule 91 (texp -> gexp texp1 .)
    FALSE           reduce using rule 91 (texp -> gexp texp1 .)
    CCURLY          reduce using rule 91 (texp -> gexp texp1 .)
    COLON           reduce using rule 91 (texp -> gexp texp1 .)
    SEMICOLON       reduce using rule 91 (texp -> gexp texp1 .)
    COMMA           reduce using rule 91 (texp -> gexp texp1 .)
    CBRACKET        reduce using rule 91 (texp -> gexp texp1 .)


state 92

    (92) texp1 -> AND . gexp texp1
    (94) gexp -> . mexp gexp1
    (100) mexp -> . termino mexp1
    (104) termino -> . factor term1
    (108) factor -> . OPAREN exp CPAREN
    (109) factor -> . varcst
    (110) factor -> . variable
    (111) factor -> . llamada
    (112) varcst -> . CSTINT
    (113) varcst -> . CSTFLT
    (114) varcst -> . CSTCHAR
    (115) varcst -> . CSTSTRING
    (116) varcst -> . boolean
    (79) variable -> . ID variable1 variable1 variable2
    (84) llamada -> . ID OPAREN exp llamada1 CPAREN
    (85) llamada -> . ID OPAREN CPAREN
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    gexp                           shift and go to state 134
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 93

    (93) texp1 -> empty .

    OR              reduce using rule 93 (texp1 -> empty .)
    QUESTION        reduce using rule 93 (texp1 -> empty .)
    CPAREN          reduce using rule 93 (texp1 -> empty .)
    ID              reduce using rule 93 (texp1 -> empty .)
    IF              reduce using rule 93 (texp1 -> empty .)
    PRINT           reduce using rule 93 (texp1 -> empty .)
    READ            reduce using rule 93 (texp1 -> empty .)
    WHILE           reduce using rule 93 (texp1 -> empty .)
    FOR             reduce using rule 93 (texp1 -> empty .)
    OCURLY          reduce using rule 93 (texp1 -> empty .)
    FUNCTION        reduce using rule 93 (texp1 -> empty .)
    CLASS           reduce using rule 93 (texp1 -> empty .)
    VAR             reduce using rule 93 (texp1 -> empty .)
    OPAREN          reduce using rule 93 (texp1 -> empty .)
    CSTINT          reduce using rule 93 (texp1 -> empty .)
    CSTFLT          reduce using rule 93 (texp1 -> empty .)
    CSTCHAR         reduce using rule 93 (texp1 -> empty .)
    CSTSTRING       reduce using rule 93 (texp1 -> empty .)
    TRUE            reduce using rule 93 (texp1 -> empty .)
    FALSE           reduce using rule 93 (texp1 -> empty .)
    CCURLY          reduce using rule 93 (texp1 -> empty .)
    COLON           reduce using rule 93 (texp1 -> empty .)
    SEMICOLON       reduce using rule 93 (texp1 -> empty .)
    COMMA           reduce using rule 93 (texp1 -> empty .)
    CBRACKET        reduce using rule 93 (texp1 -> empty .)


state 94

    (94) gexp -> mexp gexp1 .

    AND             reduce using rule 94 (gexp -> mexp gexp1 .)
    OR              reduce using rule 94 (gexp -> mexp gexp1 .)
    QUESTION        reduce using rule 94 (gexp -> mexp gexp1 .)
    CPAREN          reduce using rule 94 (gexp -> mexp gexp1 .)
    ID              reduce using rule 94 (gexp -> mexp gexp1 .)
    IF              reduce using rule 94 (gexp -> mexp gexp1 .)
    PRINT           reduce using rule 94 (gexp -> mexp gexp1 .)
    READ            reduce using rule 94 (gexp -> mexp gexp1 .)
    WHILE           reduce using rule 94 (gexp -> mexp gexp1 .)
    FOR             reduce using rule 94 (gexp -> mexp gexp1 .)
    OCURLY          reduce using rule 94 (gexp -> mexp gexp1 .)
    FUNCTION        reduce using rule 94 (gexp -> mexp gexp1 .)
    CLASS           reduce using rule 94 (gexp -> mexp gexp1 .)
    VAR             reduce using rule 94 (gexp -> mexp gexp1 .)
    OPAREN          reduce using rule 94 (gexp -> mexp gexp1 .)
    CSTINT          reduce using rule 94 (gexp -> mexp gexp1 .)
    CSTFLT          reduce using rule 94 (gexp -> mexp gexp1 .)
    CSTCHAR         reduce using rule 94 (gexp -> mexp gexp1 .)
    CSTSTRING       reduce using rule 94 (gexp -> mexp gexp1 .)
    TRUE            reduce using rule 94 (gexp -> mexp gexp1 .)
    FALSE           reduce using rule 94 (gexp -> mexp gexp1 .)
    CCURLY          reduce using rule 94 (gexp -> mexp gexp1 .)
    COLON           reduce using rule 94 (gexp -> mexp gexp1 .)
    SEMICOLON       reduce using rule 94 (gexp -> mexp gexp1 .)
    COMMA           reduce using rule 94 (gexp -> mexp gexp1 .)
    CBRACKET        reduce using rule 94 (gexp -> mexp gexp1 .)


state 95

    (95) gexp1 -> LT . mexp
    (100) mexp -> . termino mexp1
    (104) termino -> . factor term1
    (108) factor -> . OPAREN exp CPAREN
    (109) factor -> . varcst
    (110) factor -> . variable
    (111) factor -> . llamada
    (112) varcst -> . CSTINT
    (113) varcst -> . CSTFLT
    (114) varcst -> . CSTCHAR
    (115) varcst -> . CSTSTRING
    (116) varcst -> . boolean
    (79) variable -> . ID variable1 variable1 variable2
    (84) llamada -> . ID OPAREN exp llamada1 CPAREN
    (85) llamada -> . ID OPAREN CPAREN
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    mexp                           shift and go to state 135
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 96

    (96) gexp1 -> GT . mexp
    (100) mexp -> . termino mexp1
    (104) termino -> . factor term1
    (108) factor -> . OPAREN exp CPAREN
    (109) factor -> . varcst
    (110) factor -> . variable
    (111) factor -> . llamada
    (112) varcst -> . CSTINT
    (113) varcst -> . CSTFLT
    (114) varcst -> . CSTCHAR
    (115) varcst -> . CSTSTRING
    (116) varcst -> . boolean
    (79) variable -> . ID variable1 variable1 variable2
    (84) llamada -> . ID OPAREN exp llamada1 CPAREN
    (85) llamada -> . ID OPAREN CPAREN
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    mexp                           shift and go to state 136
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 97

    (97) gexp1 -> EQ . mexp
    (100) mexp -> . termino mexp1
    (104) termino -> . factor term1
    (108) factor -> . OPAREN exp CPAREN
    (109) factor -> . varcst
    (110) factor -> . variable
    (111) factor -> . llamada
    (112) varcst -> . CSTINT
    (113) varcst -> . CSTFLT
    (114) varcst -> . CSTCHAR
    (115) varcst -> . CSTSTRING
    (116) varcst -> . boolean
    (79) variable -> . ID variable1 variable1 variable2
    (84) llamada -> . ID OPAREN exp llamada1 CPAREN
    (85) llamada -> . ID OPAREN CPAREN
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    mexp                           shift and go to state 137
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 98

    (98) gexp1 -> NE . mexp
    (100) mexp -> . termino mexp1
    (104) termino -> . factor term1
    (108) factor -> . OPAREN exp CPAREN
    (109) factor -> . varcst
    (110) factor -> . variable
    (111) factor -> . llamada
    (112) varcst -> . CSTINT
    (113) varcst -> . CSTFLT
    (114) varcst -> . CSTCHAR
    (115) varcst -> . CSTSTRING
    (116) varcst -> . boolean
    (79) variable -> . ID variable1 variable1 variable2
    (84) llamada -> . ID OPAREN exp llamada1 CPAREN
    (85) llamada -> . ID OPAREN CPAREN
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    mexp                           shift and go to state 138
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 99

    (99) gexp1 -> empty .

    AND             reduce using rule 99 (gexp1 -> empty .)
    OR              reduce using rule 99 (gexp1 -> empty .)
    QUESTION        reduce using rule 99 (gexp1 -> empty .)
    CPAREN          reduce using rule 99 (gexp1 -> empty .)
    ID              reduce using rule 99 (gexp1 -> empty .)
    IF              reduce using rule 99 (gexp1 -> empty .)
    PRINT           reduce using rule 99 (gexp1 -> empty .)
    READ            reduce using rule 99 (gexp1 -> empty .)
    WHILE           reduce using rule 99 (gexp1 -> empty .)
    FOR             reduce using rule 99 (gexp1 -> empty .)
    OCURLY          reduce using rule 99 (gexp1 -> empty .)
    FUNCTION        reduce using rule 99 (gexp1 -> empty .)
    CLASS           reduce using rule 99 (gexp1 -> empty .)
    VAR             reduce using rule 99 (gexp1 -> empty .)
    OPAREN          reduce using rule 99 (gexp1 -> empty .)
    CSTINT          reduce using rule 99 (gexp1 -> empty .)
    CSTFLT          reduce using rule 99 (gexp1 -> empty .)
    CSTCHAR         reduce using rule 99 (gexp1 -> empty .)
    CSTSTRING       reduce using rule 99 (gexp1 -> empty .)
    TRUE            reduce using rule 99 (gexp1 -> empty .)
    FALSE           reduce using rule 99 (gexp1 -> empty .)
    CCURLY          reduce using rule 99 (gexp1 -> empty .)
    COLON           reduce using rule 99 (gexp1 -> empty .)
    SEMICOLON       reduce using rule 99 (gexp1 -> empty .)
    COMMA           reduce using rule 99 (gexp1 -> empty .)
    CBRACKET        reduce using rule 99 (gexp1 -> empty .)


state 100

    (100) mexp -> termino mexp1 .

    LT              reduce using rule 100 (mexp -> termino mexp1 .)
    GT              reduce using rule 100 (mexp -> termino mexp1 .)
    EQ              reduce using rule 100 (mexp -> termino mexp1 .)
    NE              reduce using rule 100 (mexp -> termino mexp1 .)
    AND             reduce using rule 100 (mexp -> termino mexp1 .)
    OR              reduce using rule 100 (mexp -> termino mexp1 .)
    QUESTION        reduce using rule 100 (mexp -> termino mexp1 .)
    CPAREN          reduce using rule 100 (mexp -> termino mexp1 .)
    ID              reduce using rule 100 (mexp -> termino mexp1 .)
    IF              reduce using rule 100 (mexp -> termino mexp1 .)
    PRINT           reduce using rule 100 (mexp -> termino mexp1 .)
    READ            reduce using rule 100 (mexp -> termino mexp1 .)
    WHILE           reduce using rule 100 (mexp -> termino mexp1 .)
    FOR             reduce using rule 100 (mexp -> termino mexp1 .)
    OCURLY          reduce using rule 100 (mexp -> termino mexp1 .)
    FUNCTION        reduce using rule 100 (mexp -> termino mexp1 .)
    CLASS           reduce using rule 100 (mexp -> termino mexp1 .)
    VAR             reduce using rule 100 (mexp -> termino mexp1 .)
    OPAREN          reduce using rule 100 (mexp -> termino mexp1 .)
    CSTINT          reduce using rule 100 (mexp -> termino mexp1 .)
    CSTFLT          reduce using rule 100 (mexp -> termino mexp1 .)
    CSTCHAR         reduce using rule 100 (mexp -> termino mexp1 .)
    CSTSTRING       reduce using rule 100 (mexp -> termino mexp1 .)
    TRUE            reduce using rule 100 (mexp -> termino mexp1 .)
    FALSE           reduce using rule 100 (mexp -> termino mexp1 .)
    CCURLY          reduce using rule 100 (mexp -> termino mexp1 .)
    COLON           reduce using rule 100 (mexp -> termino mexp1 .)
    SEMICOLON       reduce using rule 100 (mexp -> termino mexp1 .)
    COMMA           reduce using rule 100 (mexp -> termino mexp1 .)
    CBRACKET        reduce using rule 100 (mexp -> termino mexp1 .)


state 101

    (101) mexp1 -> PLUS . termino mexp1
    (104) termino -> . factor term1
    (108) factor -> . OPAREN exp CPAREN
    (109) factor -> . varcst
    (110) factor -> . variable
    (111) factor -> . llamada
    (112) varcst -> . CSTINT
    (113) varcst -> . CSTFLT
    (114) varcst -> . CSTCHAR
    (115) varcst -> . CSTSTRING
    (116) varcst -> . boolean
    (79) variable -> . ID variable1 variable1 variable2
    (84) llamada -> . ID OPAREN exp llamada1 CPAREN
    (85) llamada -> . ID OPAREN CPAREN
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    termino                        shift and go to state 139
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 102

    (102) mexp1 -> MINUS . termino mexp1
    (104) termino -> . factor term1
    (108) factor -> . OPAREN exp CPAREN
    (109) factor -> . varcst
    (110) factor -> . variable
    (111) factor -> . llamada
    (112) varcst -> . CSTINT
    (113) varcst -> . CSTFLT
    (114) varcst -> . CSTCHAR
    (115) varcst -> . CSTSTRING
    (116) varcst -> . boolean
    (79) variable -> . ID variable1 variable1 variable2
    (84) llamada -> . ID OPAREN exp llamada1 CPAREN
    (85) llamada -> . ID OPAREN CPAREN
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    termino                        shift and go to state 140
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 103

    (103) mexp1 -> empty .

    LT              reduce using rule 103 (mexp1 -> empty .)
    GT              reduce using rule 103 (mexp1 -> empty .)
    EQ              reduce using rule 103 (mexp1 -> empty .)
    NE              reduce using rule 103 (mexp1 -> empty .)
    AND             reduce using rule 103 (mexp1 -> empty .)
    OR              reduce using rule 103 (mexp1 -> empty .)
    QUESTION        reduce using rule 103 (mexp1 -> empty .)
    CPAREN          reduce using rule 103 (mexp1 -> empty .)
    ID              reduce using rule 103 (mexp1 -> empty .)
    IF              reduce using rule 103 (mexp1 -> empty .)
    PRINT           reduce using rule 103 (mexp1 -> empty .)
    READ            reduce using rule 103 (mexp1 -> empty .)
    WHILE           reduce using rule 103 (mexp1 -> empty .)
    FOR             reduce using rule 103 (mexp1 -> empty .)
    OCURLY          reduce using rule 103 (mexp1 -> empty .)
    FUNCTION        reduce using rule 103 (mexp1 -> empty .)
    CLASS           reduce using rule 103 (mexp1 -> empty .)
    VAR             reduce using rule 103 (mexp1 -> empty .)
    OPAREN          reduce using rule 103 (mexp1 -> empty .)
    CSTINT          reduce using rule 103 (mexp1 -> empty .)
    CSTFLT          reduce using rule 103 (mexp1 -> empty .)
    CSTCHAR         reduce using rule 103 (mexp1 -> empty .)
    CSTSTRING       reduce using rule 103 (mexp1 -> empty .)
    TRUE            reduce using rule 103 (mexp1 -> empty .)
    FALSE           reduce using rule 103 (mexp1 -> empty .)
    CCURLY          reduce using rule 103 (mexp1 -> empty .)
    COLON           reduce using rule 103 (mexp1 -> empty .)
    SEMICOLON       reduce using rule 103 (mexp1 -> empty .)
    COMMA           reduce using rule 103 (mexp1 -> empty .)
    CBRACKET        reduce using rule 103 (mexp1 -> empty .)


state 104

    (104) termino -> factor term1 .

    PLUS            reduce using rule 104 (termino -> factor term1 .)
    MINUS           reduce using rule 104 (termino -> factor term1 .)
    LT              reduce using rule 104 (termino -> factor term1 .)
    GT              reduce using rule 104 (termino -> factor term1 .)
    EQ              reduce using rule 104 (termino -> factor term1 .)
    NE              reduce using rule 104 (termino -> factor term1 .)
    AND             reduce using rule 104 (termino -> factor term1 .)
    OR              reduce using rule 104 (termino -> factor term1 .)
    QUESTION        reduce using rule 104 (termino -> factor term1 .)
    CPAREN          reduce using rule 104 (termino -> factor term1 .)
    ID              reduce using rule 104 (termino -> factor term1 .)
    IF              reduce using rule 104 (termino -> factor term1 .)
    PRINT           reduce using rule 104 (termino -> factor term1 .)
    READ            reduce using rule 104 (termino -> factor term1 .)
    WHILE           reduce using rule 104 (termino -> factor term1 .)
    FOR             reduce using rule 104 (termino -> factor term1 .)
    OCURLY          reduce using rule 104 (termino -> factor term1 .)
    FUNCTION        reduce using rule 104 (termino -> factor term1 .)
    CLASS           reduce using rule 104 (termino -> factor term1 .)
    VAR             reduce using rule 104 (termino -> factor term1 .)
    OPAREN          reduce using rule 104 (termino -> factor term1 .)
    CSTINT          reduce using rule 104 (termino -> factor term1 .)
    CSTFLT          reduce using rule 104 (termino -> factor term1 .)
    CSTCHAR         reduce using rule 104 (termino -> factor term1 .)
    CSTSTRING       reduce using rule 104 (termino -> factor term1 .)
    TRUE            reduce using rule 104 (termino -> factor term1 .)
    FALSE           reduce using rule 104 (termino -> factor term1 .)
    CCURLY          reduce using rule 104 (termino -> factor term1 .)
    COLON           reduce using rule 104 (termino -> factor term1 .)
    SEMICOLON       reduce using rule 104 (termino -> factor term1 .)
    COMMA           reduce using rule 104 (termino -> factor term1 .)
    CBRACKET        reduce using rule 104 (termino -> factor term1 .)


state 105

    (105) term1 -> MULT . factor term1
    (108) factor -> . OPAREN exp CPAREN
    (109) factor -> . varcst
    (110) factor -> . variable
    (111) factor -> . llamada
    (112) varcst -> . CSTINT
    (113) varcst -> . CSTFLT
    (114) varcst -> . CSTCHAR
    (115) varcst -> . CSTSTRING
    (116) varcst -> . boolean
    (79) variable -> . ID variable1 variable1 variable2
    (84) llamada -> . ID OPAREN exp llamada1 CPAREN
    (85) llamada -> . ID OPAREN CPAREN
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    factor                         shift and go to state 141
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 106

    (106) term1 -> DIV . factor term1
    (108) factor -> . OPAREN exp CPAREN
    (109) factor -> . varcst
    (110) factor -> . variable
    (111) factor -> . llamada
    (112) varcst -> . CSTINT
    (113) varcst -> . CSTFLT
    (114) varcst -> . CSTCHAR
    (115) varcst -> . CSTSTRING
    (116) varcst -> . boolean
    (79) variable -> . ID variable1 variable1 variable2
    (84) llamada -> . ID OPAREN exp llamada1 CPAREN
    (85) llamada -> . ID OPAREN CPAREN
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    factor                         shift and go to state 142
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 107

    (107) term1 -> empty .

    PLUS            reduce using rule 107 (term1 -> empty .)
    MINUS           reduce using rule 107 (term1 -> empty .)
    LT              reduce using rule 107 (term1 -> empty .)
    GT              reduce using rule 107 (term1 -> empty .)
    EQ              reduce using rule 107 (term1 -> empty .)
    NE              reduce using rule 107 (term1 -> empty .)
    AND             reduce using rule 107 (term1 -> empty .)
    OR              reduce using rule 107 (term1 -> empty .)
    QUESTION        reduce using rule 107 (term1 -> empty .)
    CPAREN          reduce using rule 107 (term1 -> empty .)
    ID              reduce using rule 107 (term1 -> empty .)
    IF              reduce using rule 107 (term1 -> empty .)
    PRINT           reduce using rule 107 (term1 -> empty .)
    READ            reduce using rule 107 (term1 -> empty .)
    WHILE           reduce using rule 107 (term1 -> empty .)
    FOR             reduce using rule 107 (term1 -> empty .)
    OCURLY          reduce using rule 107 (term1 -> empty .)
    FUNCTION        reduce using rule 107 (term1 -> empty .)
    CLASS           reduce using rule 107 (term1 -> empty .)
    VAR             reduce using rule 107 (term1 -> empty .)
    OPAREN          reduce using rule 107 (term1 -> empty .)
    CSTINT          reduce using rule 107 (term1 -> empty .)
    CSTFLT          reduce using rule 107 (term1 -> empty .)
    CSTCHAR         reduce using rule 107 (term1 -> empty .)
    CSTSTRING       reduce using rule 107 (term1 -> empty .)
    TRUE            reduce using rule 107 (term1 -> empty .)
    FALSE           reduce using rule 107 (term1 -> empty .)
    CCURLY          reduce using rule 107 (term1 -> empty .)
    COLON           reduce using rule 107 (term1 -> empty .)
    SEMICOLON       reduce using rule 107 (term1 -> empty .)
    COMMA           reduce using rule 107 (term1 -> empty .)
    CBRACKET        reduce using rule 107 (term1 -> empty .)


state 108

    (21) dec -> VAR tipo SEMICOLON . dec1
    (22) dec1 -> . dec
    (23) dec1 -> . empty
    (21) dec -> . VAR tipo SEMICOLON dec1
    (117) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 8
    OCURLY          reduce using rule 117 (empty -> .)
    ID              reduce using rule 117 (empty -> .)
    IF              reduce using rule 117 (empty -> .)
    PRINT           reduce using rule 117 (empty -> .)
    READ            reduce using rule 117 (empty -> .)
    WHILE           reduce using rule 117 (empty -> .)
    FOR             reduce using rule 117 (empty -> .)
    FUNCTION        reduce using rule 117 (empty -> .)
    CLASS           reduce using rule 117 (empty -> .)
    OPAREN          reduce using rule 117 (empty -> .)
    CSTINT          reduce using rule 117 (empty -> .)
    CSTFLT          reduce using rule 117 (empty -> .)
    CSTCHAR         reduce using rule 117 (empty -> .)
    CSTSTRING       reduce using rule 117 (empty -> .)
    TRUE            reduce using rule 117 (empty -> .)
    FALSE           reduce using rule 117 (empty -> .)
    CCURLY          reduce using rule 117 (empty -> .)
    METHODS         reduce using rule 117 (empty -> .)

  ! VAR             [ reduce using rule 117 (empty -> .) ]

    dec1                           shift and go to state 143
    dec                            shift and go to state 144
    empty                          shift and go to state 145

state 109

    (24) tipo -> compuesto ID . tipo1
    (27) tipo1 -> . COMMA ID tipo1
    (28) tipo1 -> . empty
    (117) empty -> .

    COMMA           shift and go to state 147
    SEMICOLON       reduce using rule 117 (empty -> .)

    tipo1                          shift and go to state 146
    empty                          shift and go to state 148

state 110

    (25) tipo -> simple ID . tipo1
    (27) tipo1 -> . COMMA ID tipo1
    (28) tipo1 -> . empty
    (117) empty -> .

    COMMA           shift and go to state 147
    SEMICOLON       reduce using rule 117 (empty -> .)

    tipo1                          shift and go to state 149
    empty                          shift and go to state 148

state 111

    (26) tipo -> multiple ID . tipo3 tipo3 tipo2
    (31) tipo3 -> . OBRACKET CSTINT CBRACKET
    (32) tipo3 -> . empty
    (117) empty -> .

  ! shift/reduce conflict for OBRACKET resolved as shift
    OBRACKET        shift and go to state 151
    COMMA           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)

  ! OBRACKET        [ reduce using rule 117 (empty -> .) ]

    tipo3                          shift and go to state 150
    empty                          shift and go to state 152

state 112

    (66) asignacion -> variable AS exp .

    ID              reduce using rule 66 (asignacion -> variable AS exp .)
    IF              reduce using rule 66 (asignacion -> variable AS exp .)
    PRINT           reduce using rule 66 (asignacion -> variable AS exp .)
    READ            reduce using rule 66 (asignacion -> variable AS exp .)
    WHILE           reduce using rule 66 (asignacion -> variable AS exp .)
    FOR             reduce using rule 66 (asignacion -> variable AS exp .)
    OCURLY          reduce using rule 66 (asignacion -> variable AS exp .)
    FUNCTION        reduce using rule 66 (asignacion -> variable AS exp .)
    CLASS           reduce using rule 66 (asignacion -> variable AS exp .)
    VAR             reduce using rule 66 (asignacion -> variable AS exp .)
    OPAREN          reduce using rule 66 (asignacion -> variable AS exp .)
    CSTINT          reduce using rule 66 (asignacion -> variable AS exp .)
    CSTFLT          reduce using rule 66 (asignacion -> variable AS exp .)
    CSTCHAR         reduce using rule 66 (asignacion -> variable AS exp .)
    CSTSTRING       reduce using rule 66 (asignacion -> variable AS exp .)
    TRUE            reduce using rule 66 (asignacion -> variable AS exp .)
    FALSE           reduce using rule 66 (asignacion -> variable AS exp .)
    CCURLY          reduce using rule 66 (asignacion -> variable AS exp .)
    COLON           reduce using rule 66 (asignacion -> variable AS exp .)
    SEMICOLON       reduce using rule 66 (asignacion -> variable AS exp .)


state 113

    (72) ternaria -> exp QUESTION estatuto_redux . COLON estatuto_redux SEMICOLON

    COLON           shift and go to state 153


state 114

    (61) estatuto_redux -> asignacion .

    COLON           reduce using rule 61 (estatuto_redux -> asignacion .)
    SEMICOLON       reduce using rule 61 (estatuto_redux -> asignacion .)


state 115

    (62) estatuto_redux -> llamada .
    (111) factor -> llamada .

    COLON           reduce using rule 62 (estatuto_redux -> llamada .)
    SEMICOLON       reduce using rule 62 (estatuto_redux -> llamada .)
    MULT            reduce using rule 111 (factor -> llamada .)
    DIV             reduce using rule 111 (factor -> llamada .)
    PLUS            reduce using rule 111 (factor -> llamada .)
    MINUS           reduce using rule 111 (factor -> llamada .)
    LT              reduce using rule 111 (factor -> llamada .)
    GT              reduce using rule 111 (factor -> llamada .)
    EQ              reduce using rule 111 (factor -> llamada .)
    NE              reduce using rule 111 (factor -> llamada .)
    AND             reduce using rule 111 (factor -> llamada .)
    OR              reduce using rule 111 (factor -> llamada .)
    QUESTION        reduce using rule 111 (factor -> llamada .)


state 116

    (63) estatuto_redux -> escritura .

    COLON           reduce using rule 63 (estatuto_redux -> escritura .)
    SEMICOLON       reduce using rule 63 (estatuto_redux -> escritura .)


state 117

    (64) estatuto_redux -> leer .

    COLON           reduce using rule 64 (estatuto_redux -> leer .)
    SEMICOLON       reduce using rule 64 (estatuto_redux -> leer .)


state 118

    (65) estatuto_redux -> ternaria .

    COLON           reduce using rule 65 (estatuto_redux -> ternaria .)
    SEMICOLON       reduce using rule 65 (estatuto_redux -> ternaria .)


state 119

    (84) llamada -> ID OPAREN exp . llamada1 CPAREN
    (86) llamada1 -> . COMMA exp llamada1
    (87) llamada1 -> . empty
    (117) empty -> .

    COMMA           shift and go to state 155
    CPAREN          reduce using rule 117 (empty -> .)

    llamada1                       shift and go to state 154
    empty                          shift and go to state 156

state 120

    (85) llamada -> ID OPAREN CPAREN .

    ID              reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    IF              reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    PRINT           reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    READ            reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    WHILE           reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    FOR             reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    OCURLY          reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    FUNCTION        reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    CLASS           reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    VAR             reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    OPAREN          reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    CSTINT          reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    CSTFLT          reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    CSTCHAR         reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    CSTSTRING       reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    TRUE            reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    FALSE           reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    CCURLY          reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    MULT            reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    DIV             reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    PLUS            reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    MINUS           reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    LT              reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    GT              reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    EQ              reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    NE              reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    AND             reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    OR              reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    QUESTION        reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    CPAREN          reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    COLON           reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    SEMICOLON       reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    COMMA           reduce using rule 85 (llamada -> ID OPAREN CPAREN .)
    CBRACKET        reduce using rule 85 (llamada -> ID OPAREN CPAREN .)


state 121

    (79) variable -> ID variable1 variable1 . variable2
    (82) variable2 -> . PERIOD ID variable1 variable1 variable2
    (83) variable2 -> . empty
    (117) empty -> .

    PERIOD          shift and go to state 158
    AS              reduce using rule 117 (empty -> .)
    MULT            reduce using rule 117 (empty -> .)
    DIV             reduce using rule 117 (empty -> .)
    PLUS            reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    LT              reduce using rule 117 (empty -> .)
    GT              reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NE              reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    QUESTION        reduce using rule 117 (empty -> .)
    CPAREN          reduce using rule 117 (empty -> .)
    ID              reduce using rule 117 (empty -> .)
    IF              reduce using rule 117 (empty -> .)
    PRINT           reduce using rule 117 (empty -> .)
    READ            reduce using rule 117 (empty -> .)
    WHILE           reduce using rule 117 (empty -> .)
    FOR             reduce using rule 117 (empty -> .)
    OCURLY          reduce using rule 117 (empty -> .)
    FUNCTION        reduce using rule 117 (empty -> .)
    CLASS           reduce using rule 117 (empty -> .)
    VAR             reduce using rule 117 (empty -> .)
    OPAREN          reduce using rule 117 (empty -> .)
    CSTINT          reduce using rule 117 (empty -> .)
    CSTFLT          reduce using rule 117 (empty -> .)
    CSTCHAR         reduce using rule 117 (empty -> .)
    CSTSTRING       reduce using rule 117 (empty -> .)
    TRUE            reduce using rule 117 (empty -> .)
    FALSE           reduce using rule 117 (empty -> .)
    CCURLY          reduce using rule 117 (empty -> .)
    COLON           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    CBRACKET        reduce using rule 117 (empty -> .)
    FROM            reduce using rule 117 (empty -> .)
    TO              reduce using rule 117 (empty -> .)
    BY              reduce using rule 117 (empty -> .)

    variable2                      shift and go to state 157
    empty                          shift and go to state 159

state 122

    (80) variable1 -> OBRACKET exp . CBRACKET

    CBRACKET        shift and go to state 160


state 123

    (108) factor -> OPAREN exp CPAREN .

    MULT            reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    DIV             reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    PLUS            reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    MINUS           reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    LT              reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    GT              reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    EQ              reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    NE              reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    AND             reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    OR              reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    QUESTION        reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    CPAREN          reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    ID              reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    IF              reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    PRINT           reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    READ            reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    WHILE           reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    FOR             reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    OCURLY          reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    FUNCTION        reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    CLASS           reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    VAR             reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    OPAREN          reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    CSTINT          reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    CSTFLT          reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    CSTCHAR         reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    CSTSTRING       reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    TRUE            reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    FALSE           reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    CCURLY          reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    COLON           reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    SEMICOLON       reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    COMMA           reduce using rule 108 (factor -> OPAREN exp CPAREN .)
    CBRACKET        reduce using rule 108 (factor -> OPAREN exp CPAREN .)


state 124

    (67) condicion -> IF cond2 THEN . bloque cond1 SEMICOLON
    (46) bloque -> . OCURLY b1 CCURLY

    OCURLY          shift and go to state 7

    bloque                         shift and go to state 161

state 125

    (71) cond2 -> OPAREN exp . CPAREN

    CPAREN          shift and go to state 162


state 126

    (73) escritura -> PRINT OPAREN exp . e1 CPAREN
    (74) e1 -> . COMMA exp e1
    (75) e1 -> . empty
    (117) empty -> .

    COMMA           shift and go to state 164
    CPAREN          reduce using rule 117 (empty -> .)

    e1                             shift and go to state 163
    empty                          shift and go to state 165

state 127

    (76) leer -> READ OPAREN exp . e1 CPAREN
    (74) e1 -> . COMMA exp e1
    (75) e1 -> . empty
    (117) empty -> .

    COMMA           shift and go to state 164
    CPAREN          reduce using rule 117 (empty -> .)

    e1                             shift and go to state 166
    empty                          shift and go to state 165

state 128

    (17) ciclo_while -> WHILE cond2 THEN . bloque SEMICOLON
    (46) bloque -> . OCURLY b1 CCURLY

    OCURLY          shift and go to state 7

    bloque                         shift and go to state 167

state 129

    (18) ciclo_for -> FOR OPAREN variable . FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON

    FROM            shift and go to state 168


state 130

    (79) variable -> ID . variable1 variable1 variable2
    (80) variable1 -> . OBRACKET exp CBRACKET
    (81) variable1 -> . empty
    (117) empty -> .

  ! shift/reduce conflict for OBRACKET resolved as shift
    OBRACKET        shift and go to state 72
    PERIOD          reduce using rule 117 (empty -> .)
    FROM            reduce using rule 117 (empty -> .)
    TO              reduce using rule 117 (empty -> .)
    BY              reduce using rule 117 (empty -> .)
    CPAREN          reduce using rule 117 (empty -> .)

  ! OBRACKET        [ reduce using rule 117 (empty -> .) ]

    variable1                      shift and go to state 71
    empty                          shift and go to state 73

state 131

    (3) funcion -> FUNCTION func1 ID . OPAREN param CPAREN bloque

    OPAREN          shift and go to state 169


state 132

    (11) clase -> CLASS ID COLON . clase_bloque SEMICOLON
    (12) clase_bloque -> . OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque CCURLY

    OCURLY          shift and go to state 171

    clase_bloque                   shift and go to state 170

state 133

    (89) exp1 -> OR texp . exp1
    (89) exp1 -> . OR texp exp1
    (90) exp1 -> . empty
    (117) empty -> .

    OR              shift and go to state 89
    QUESTION        reduce using rule 117 (empty -> .)
    CPAREN          reduce using rule 117 (empty -> .)
    ID              reduce using rule 117 (empty -> .)
    IF              reduce using rule 117 (empty -> .)
    PRINT           reduce using rule 117 (empty -> .)
    READ            reduce using rule 117 (empty -> .)
    WHILE           reduce using rule 117 (empty -> .)
    FOR             reduce using rule 117 (empty -> .)
    OCURLY          reduce using rule 117 (empty -> .)
    FUNCTION        reduce using rule 117 (empty -> .)
    CLASS           reduce using rule 117 (empty -> .)
    VAR             reduce using rule 117 (empty -> .)
    OPAREN          reduce using rule 117 (empty -> .)
    CSTINT          reduce using rule 117 (empty -> .)
    CSTFLT          reduce using rule 117 (empty -> .)
    CSTCHAR         reduce using rule 117 (empty -> .)
    CSTSTRING       reduce using rule 117 (empty -> .)
    TRUE            reduce using rule 117 (empty -> .)
    FALSE           reduce using rule 117 (empty -> .)
    CCURLY          reduce using rule 117 (empty -> .)
    COLON           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    CBRACKET        reduce using rule 117 (empty -> .)

    exp1                           shift and go to state 172
    empty                          shift and go to state 90

state 134

    (92) texp1 -> AND gexp . texp1
    (92) texp1 -> . AND gexp texp1
    (93) texp1 -> . empty
    (117) empty -> .

    AND             shift and go to state 92
    OR              reduce using rule 117 (empty -> .)
    QUESTION        reduce using rule 117 (empty -> .)
    CPAREN          reduce using rule 117 (empty -> .)
    ID              reduce using rule 117 (empty -> .)
    IF              reduce using rule 117 (empty -> .)
    PRINT           reduce using rule 117 (empty -> .)
    READ            reduce using rule 117 (empty -> .)
    WHILE           reduce using rule 117 (empty -> .)
    FOR             reduce using rule 117 (empty -> .)
    OCURLY          reduce using rule 117 (empty -> .)
    FUNCTION        reduce using rule 117 (empty -> .)
    CLASS           reduce using rule 117 (empty -> .)
    VAR             reduce using rule 117 (empty -> .)
    OPAREN          reduce using rule 117 (empty -> .)
    CSTINT          reduce using rule 117 (empty -> .)
    CSTFLT          reduce using rule 117 (empty -> .)
    CSTCHAR         reduce using rule 117 (empty -> .)
    CSTSTRING       reduce using rule 117 (empty -> .)
    TRUE            reduce using rule 117 (empty -> .)
    FALSE           reduce using rule 117 (empty -> .)
    CCURLY          reduce using rule 117 (empty -> .)
    COLON           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    CBRACKET        reduce using rule 117 (empty -> .)

    texp1                          shift and go to state 173
    empty                          shift and go to state 93

state 135

    (95) gexp1 -> LT mexp .

    AND             reduce using rule 95 (gexp1 -> LT mexp .)
    OR              reduce using rule 95 (gexp1 -> LT mexp .)
    QUESTION        reduce using rule 95 (gexp1 -> LT mexp .)
    CPAREN          reduce using rule 95 (gexp1 -> LT mexp .)
    ID              reduce using rule 95 (gexp1 -> LT mexp .)
    IF              reduce using rule 95 (gexp1 -> LT mexp .)
    PRINT           reduce using rule 95 (gexp1 -> LT mexp .)
    READ            reduce using rule 95 (gexp1 -> LT mexp .)
    WHILE           reduce using rule 95 (gexp1 -> LT mexp .)
    FOR             reduce using rule 95 (gexp1 -> LT mexp .)
    OCURLY          reduce using rule 95 (gexp1 -> LT mexp .)
    FUNCTION        reduce using rule 95 (gexp1 -> LT mexp .)
    CLASS           reduce using rule 95 (gexp1 -> LT mexp .)
    VAR             reduce using rule 95 (gexp1 -> LT mexp .)
    OPAREN          reduce using rule 95 (gexp1 -> LT mexp .)
    CSTINT          reduce using rule 95 (gexp1 -> LT mexp .)
    CSTFLT          reduce using rule 95 (gexp1 -> LT mexp .)
    CSTCHAR         reduce using rule 95 (gexp1 -> LT mexp .)
    CSTSTRING       reduce using rule 95 (gexp1 -> LT mexp .)
    TRUE            reduce using rule 95 (gexp1 -> LT mexp .)
    FALSE           reduce using rule 95 (gexp1 -> LT mexp .)
    CCURLY          reduce using rule 95 (gexp1 -> LT mexp .)
    COLON           reduce using rule 95 (gexp1 -> LT mexp .)
    SEMICOLON       reduce using rule 95 (gexp1 -> LT mexp .)
    COMMA           reduce using rule 95 (gexp1 -> LT mexp .)
    CBRACKET        reduce using rule 95 (gexp1 -> LT mexp .)


state 136

    (96) gexp1 -> GT mexp .

    AND             reduce using rule 96 (gexp1 -> GT mexp .)
    OR              reduce using rule 96 (gexp1 -> GT mexp .)
    QUESTION        reduce using rule 96 (gexp1 -> GT mexp .)
    CPAREN          reduce using rule 96 (gexp1 -> GT mexp .)
    ID              reduce using rule 96 (gexp1 -> GT mexp .)
    IF              reduce using rule 96 (gexp1 -> GT mexp .)
    PRINT           reduce using rule 96 (gexp1 -> GT mexp .)
    READ            reduce using rule 96 (gexp1 -> GT mexp .)
    WHILE           reduce using rule 96 (gexp1 -> GT mexp .)
    FOR             reduce using rule 96 (gexp1 -> GT mexp .)
    OCURLY          reduce using rule 96 (gexp1 -> GT mexp .)
    FUNCTION        reduce using rule 96 (gexp1 -> GT mexp .)
    CLASS           reduce using rule 96 (gexp1 -> GT mexp .)
    VAR             reduce using rule 96 (gexp1 -> GT mexp .)
    OPAREN          reduce using rule 96 (gexp1 -> GT mexp .)
    CSTINT          reduce using rule 96 (gexp1 -> GT mexp .)
    CSTFLT          reduce using rule 96 (gexp1 -> GT mexp .)
    CSTCHAR         reduce using rule 96 (gexp1 -> GT mexp .)
    CSTSTRING       reduce using rule 96 (gexp1 -> GT mexp .)
    TRUE            reduce using rule 96 (gexp1 -> GT mexp .)
    FALSE           reduce using rule 96 (gexp1 -> GT mexp .)
    CCURLY          reduce using rule 96 (gexp1 -> GT mexp .)
    COLON           reduce using rule 96 (gexp1 -> GT mexp .)
    SEMICOLON       reduce using rule 96 (gexp1 -> GT mexp .)
    COMMA           reduce using rule 96 (gexp1 -> GT mexp .)
    CBRACKET        reduce using rule 96 (gexp1 -> GT mexp .)


state 137

    (97) gexp1 -> EQ mexp .

    AND             reduce using rule 97 (gexp1 -> EQ mexp .)
    OR              reduce using rule 97 (gexp1 -> EQ mexp .)
    QUESTION        reduce using rule 97 (gexp1 -> EQ mexp .)
    CPAREN          reduce using rule 97 (gexp1 -> EQ mexp .)
    ID              reduce using rule 97 (gexp1 -> EQ mexp .)
    IF              reduce using rule 97 (gexp1 -> EQ mexp .)
    PRINT           reduce using rule 97 (gexp1 -> EQ mexp .)
    READ            reduce using rule 97 (gexp1 -> EQ mexp .)
    WHILE           reduce using rule 97 (gexp1 -> EQ mexp .)
    FOR             reduce using rule 97 (gexp1 -> EQ mexp .)
    OCURLY          reduce using rule 97 (gexp1 -> EQ mexp .)
    FUNCTION        reduce using rule 97 (gexp1 -> EQ mexp .)
    CLASS           reduce using rule 97 (gexp1 -> EQ mexp .)
    VAR             reduce using rule 97 (gexp1 -> EQ mexp .)
    OPAREN          reduce using rule 97 (gexp1 -> EQ mexp .)
    CSTINT          reduce using rule 97 (gexp1 -> EQ mexp .)
    CSTFLT          reduce using rule 97 (gexp1 -> EQ mexp .)
    CSTCHAR         reduce using rule 97 (gexp1 -> EQ mexp .)
    CSTSTRING       reduce using rule 97 (gexp1 -> EQ mexp .)
    TRUE            reduce using rule 97 (gexp1 -> EQ mexp .)
    FALSE           reduce using rule 97 (gexp1 -> EQ mexp .)
    CCURLY          reduce using rule 97 (gexp1 -> EQ mexp .)
    COLON           reduce using rule 97 (gexp1 -> EQ mexp .)
    SEMICOLON       reduce using rule 97 (gexp1 -> EQ mexp .)
    COMMA           reduce using rule 97 (gexp1 -> EQ mexp .)
    CBRACKET        reduce using rule 97 (gexp1 -> EQ mexp .)


state 138

    (98) gexp1 -> NE mexp .

    AND             reduce using rule 98 (gexp1 -> NE mexp .)
    OR              reduce using rule 98 (gexp1 -> NE mexp .)
    QUESTION        reduce using rule 98 (gexp1 -> NE mexp .)
    CPAREN          reduce using rule 98 (gexp1 -> NE mexp .)
    ID              reduce using rule 98 (gexp1 -> NE mexp .)
    IF              reduce using rule 98 (gexp1 -> NE mexp .)
    PRINT           reduce using rule 98 (gexp1 -> NE mexp .)
    READ            reduce using rule 98 (gexp1 -> NE mexp .)
    WHILE           reduce using rule 98 (gexp1 -> NE mexp .)
    FOR             reduce using rule 98 (gexp1 -> NE mexp .)
    OCURLY          reduce using rule 98 (gexp1 -> NE mexp .)
    FUNCTION        reduce using rule 98 (gexp1 -> NE mexp .)
    CLASS           reduce using rule 98 (gexp1 -> NE mexp .)
    VAR             reduce using rule 98 (gexp1 -> NE mexp .)
    OPAREN          reduce using rule 98 (gexp1 -> NE mexp .)
    CSTINT          reduce using rule 98 (gexp1 -> NE mexp .)
    CSTFLT          reduce using rule 98 (gexp1 -> NE mexp .)
    CSTCHAR         reduce using rule 98 (gexp1 -> NE mexp .)
    CSTSTRING       reduce using rule 98 (gexp1 -> NE mexp .)
    TRUE            reduce using rule 98 (gexp1 -> NE mexp .)
    FALSE           reduce using rule 98 (gexp1 -> NE mexp .)
    CCURLY          reduce using rule 98 (gexp1 -> NE mexp .)
    COLON           reduce using rule 98 (gexp1 -> NE mexp .)
    SEMICOLON       reduce using rule 98 (gexp1 -> NE mexp .)
    COMMA           reduce using rule 98 (gexp1 -> NE mexp .)
    CBRACKET        reduce using rule 98 (gexp1 -> NE mexp .)


state 139

    (101) mexp1 -> PLUS termino . mexp1
    (101) mexp1 -> . PLUS termino mexp1
    (102) mexp1 -> . MINUS termino mexp1
    (103) mexp1 -> . empty
    (117) empty -> .

    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    LT              reduce using rule 117 (empty -> .)
    GT              reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NE              reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    QUESTION        reduce using rule 117 (empty -> .)
    CPAREN          reduce using rule 117 (empty -> .)
    ID              reduce using rule 117 (empty -> .)
    IF              reduce using rule 117 (empty -> .)
    PRINT           reduce using rule 117 (empty -> .)
    READ            reduce using rule 117 (empty -> .)
    WHILE           reduce using rule 117 (empty -> .)
    FOR             reduce using rule 117 (empty -> .)
    OCURLY          reduce using rule 117 (empty -> .)
    FUNCTION        reduce using rule 117 (empty -> .)
    CLASS           reduce using rule 117 (empty -> .)
    VAR             reduce using rule 117 (empty -> .)
    OPAREN          reduce using rule 117 (empty -> .)
    CSTINT          reduce using rule 117 (empty -> .)
    CSTFLT          reduce using rule 117 (empty -> .)
    CSTCHAR         reduce using rule 117 (empty -> .)
    CSTSTRING       reduce using rule 117 (empty -> .)
    TRUE            reduce using rule 117 (empty -> .)
    FALSE           reduce using rule 117 (empty -> .)
    CCURLY          reduce using rule 117 (empty -> .)
    COLON           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    CBRACKET        reduce using rule 117 (empty -> .)

    mexp1                          shift and go to state 174
    empty                          shift and go to state 103

state 140

    (102) mexp1 -> MINUS termino . mexp1
    (101) mexp1 -> . PLUS termino mexp1
    (102) mexp1 -> . MINUS termino mexp1
    (103) mexp1 -> . empty
    (117) empty -> .

    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    LT              reduce using rule 117 (empty -> .)
    GT              reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NE              reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    QUESTION        reduce using rule 117 (empty -> .)
    CPAREN          reduce using rule 117 (empty -> .)
    ID              reduce using rule 117 (empty -> .)
    IF              reduce using rule 117 (empty -> .)
    PRINT           reduce using rule 117 (empty -> .)
    READ            reduce using rule 117 (empty -> .)
    WHILE           reduce using rule 117 (empty -> .)
    FOR             reduce using rule 117 (empty -> .)
    OCURLY          reduce using rule 117 (empty -> .)
    FUNCTION        reduce using rule 117 (empty -> .)
    CLASS           reduce using rule 117 (empty -> .)
    VAR             reduce using rule 117 (empty -> .)
    OPAREN          reduce using rule 117 (empty -> .)
    CSTINT          reduce using rule 117 (empty -> .)
    CSTFLT          reduce using rule 117 (empty -> .)
    CSTCHAR         reduce using rule 117 (empty -> .)
    CSTSTRING       reduce using rule 117 (empty -> .)
    TRUE            reduce using rule 117 (empty -> .)
    FALSE           reduce using rule 117 (empty -> .)
    CCURLY          reduce using rule 117 (empty -> .)
    COLON           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    CBRACKET        reduce using rule 117 (empty -> .)

    mexp1                          shift and go to state 175
    empty                          shift and go to state 103

state 141

    (105) term1 -> MULT factor . term1
    (105) term1 -> . MULT factor term1
    (106) term1 -> . DIV factor term1
    (107) term1 -> . empty
    (117) empty -> .

    MULT            shift and go to state 105
    DIV             shift and go to state 106
    PLUS            reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    LT              reduce using rule 117 (empty -> .)
    GT              reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NE              reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    QUESTION        reduce using rule 117 (empty -> .)
    CPAREN          reduce using rule 117 (empty -> .)
    ID              reduce using rule 117 (empty -> .)
    IF              reduce using rule 117 (empty -> .)
    PRINT           reduce using rule 117 (empty -> .)
    READ            reduce using rule 117 (empty -> .)
    WHILE           reduce using rule 117 (empty -> .)
    FOR             reduce using rule 117 (empty -> .)
    OCURLY          reduce using rule 117 (empty -> .)
    FUNCTION        reduce using rule 117 (empty -> .)
    CLASS           reduce using rule 117 (empty -> .)
    VAR             reduce using rule 117 (empty -> .)
    OPAREN          reduce using rule 117 (empty -> .)
    CSTINT          reduce using rule 117 (empty -> .)
    CSTFLT          reduce using rule 117 (empty -> .)
    CSTCHAR         reduce using rule 117 (empty -> .)
    CSTSTRING       reduce using rule 117 (empty -> .)
    TRUE            reduce using rule 117 (empty -> .)
    FALSE           reduce using rule 117 (empty -> .)
    CCURLY          reduce using rule 117 (empty -> .)
    COLON           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    CBRACKET        reduce using rule 117 (empty -> .)

    term1                          shift and go to state 176
    empty                          shift and go to state 107

state 142

    (106) term1 -> DIV factor . term1
    (105) term1 -> . MULT factor term1
    (106) term1 -> . DIV factor term1
    (107) term1 -> . empty
    (117) empty -> .

    MULT            shift and go to state 105
    DIV             shift and go to state 106
    PLUS            reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    LT              reduce using rule 117 (empty -> .)
    GT              reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NE              reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    QUESTION        reduce using rule 117 (empty -> .)
    CPAREN          reduce using rule 117 (empty -> .)
    ID              reduce using rule 117 (empty -> .)
    IF              reduce using rule 117 (empty -> .)
    PRINT           reduce using rule 117 (empty -> .)
    READ            reduce using rule 117 (empty -> .)
    WHILE           reduce using rule 117 (empty -> .)
    FOR             reduce using rule 117 (empty -> .)
    OCURLY          reduce using rule 117 (empty -> .)
    FUNCTION        reduce using rule 117 (empty -> .)
    CLASS           reduce using rule 117 (empty -> .)
    VAR             reduce using rule 117 (empty -> .)
    OPAREN          reduce using rule 117 (empty -> .)
    CSTINT          reduce using rule 117 (empty -> .)
    CSTFLT          reduce using rule 117 (empty -> .)
    CSTCHAR         reduce using rule 117 (empty -> .)
    CSTSTRING       reduce using rule 117 (empty -> .)
    TRUE            reduce using rule 117 (empty -> .)
    FALSE           reduce using rule 117 (empty -> .)
    CCURLY          reduce using rule 117 (empty -> .)
    COLON           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    CBRACKET        reduce using rule 117 (empty -> .)

    term1                          shift and go to state 177
    empty                          shift and go to state 107

state 143

    (21) dec -> VAR tipo SEMICOLON dec1 .

    OCURLY          reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    ID              reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    IF              reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    PRINT           reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    READ            reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    WHILE           reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    FOR             reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    FUNCTION        reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    CLASS           reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    VAR             reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    OPAREN          reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    CSTINT          reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    CSTFLT          reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    CSTCHAR         reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    CSTSTRING       reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    TRUE            reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    FALSE           reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    CCURLY          reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    METHODS         reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)


state 144

    (22) dec1 -> dec .

    OCURLY          reduce using rule 22 (dec1 -> dec .)
    ID              reduce using rule 22 (dec1 -> dec .)
    IF              reduce using rule 22 (dec1 -> dec .)
    PRINT           reduce using rule 22 (dec1 -> dec .)
    READ            reduce using rule 22 (dec1 -> dec .)
    WHILE           reduce using rule 22 (dec1 -> dec .)
    FOR             reduce using rule 22 (dec1 -> dec .)
    FUNCTION        reduce using rule 22 (dec1 -> dec .)
    CLASS           reduce using rule 22 (dec1 -> dec .)
    VAR             reduce using rule 22 (dec1 -> dec .)
    OPAREN          reduce using rule 22 (dec1 -> dec .)
    CSTINT          reduce using rule 22 (dec1 -> dec .)
    CSTFLT          reduce using rule 22 (dec1 -> dec .)
    CSTCHAR         reduce using rule 22 (dec1 -> dec .)
    CSTSTRING       reduce using rule 22 (dec1 -> dec .)
    TRUE            reduce using rule 22 (dec1 -> dec .)
    FALSE           reduce using rule 22 (dec1 -> dec .)
    CCURLY          reduce using rule 22 (dec1 -> dec .)
    METHODS         reduce using rule 22 (dec1 -> dec .)


state 145

    (23) dec1 -> empty .

    OCURLY          reduce using rule 23 (dec1 -> empty .)
    ID              reduce using rule 23 (dec1 -> empty .)
    IF              reduce using rule 23 (dec1 -> empty .)
    PRINT           reduce using rule 23 (dec1 -> empty .)
    READ            reduce using rule 23 (dec1 -> empty .)
    WHILE           reduce using rule 23 (dec1 -> empty .)
    FOR             reduce using rule 23 (dec1 -> empty .)
    FUNCTION        reduce using rule 23 (dec1 -> empty .)
    CLASS           reduce using rule 23 (dec1 -> empty .)
    VAR             reduce using rule 23 (dec1 -> empty .)
    OPAREN          reduce using rule 23 (dec1 -> empty .)
    CSTINT          reduce using rule 23 (dec1 -> empty .)
    CSTFLT          reduce using rule 23 (dec1 -> empty .)
    CSTCHAR         reduce using rule 23 (dec1 -> empty .)
    CSTSTRING       reduce using rule 23 (dec1 -> empty .)
    TRUE            reduce using rule 23 (dec1 -> empty .)
    FALSE           reduce using rule 23 (dec1 -> empty .)
    CCURLY          reduce using rule 23 (dec1 -> empty .)
    METHODS         reduce using rule 23 (dec1 -> empty .)


state 146

    (24) tipo -> compuesto ID tipo1 .

    SEMICOLON       reduce using rule 24 (tipo -> compuesto ID tipo1 .)


state 147

    (27) tipo1 -> COMMA . ID tipo1

    ID              shift and go to state 178


state 148

    (28) tipo1 -> empty .

    SEMICOLON       reduce using rule 28 (tipo1 -> empty .)


state 149

    (25) tipo -> simple ID tipo1 .

    SEMICOLON       reduce using rule 25 (tipo -> simple ID tipo1 .)


state 150

    (26) tipo -> multiple ID tipo3 . tipo3 tipo2
    (31) tipo3 -> . OBRACKET CSTINT CBRACKET
    (32) tipo3 -> . empty
    (117) empty -> .

    OBRACKET        shift and go to state 151
    COMMA           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)

    tipo3                          shift and go to state 179
    empty                          shift and go to state 152

state 151

    (31) tipo3 -> OBRACKET . CSTINT CBRACKET

    CSTINT          shift and go to state 180


state 152

    (32) tipo3 -> empty .

    OBRACKET        reduce using rule 32 (tipo3 -> empty .)
    COMMA           reduce using rule 32 (tipo3 -> empty .)
    SEMICOLON       reduce using rule 32 (tipo3 -> empty .)


state 153

    (72) ternaria -> exp QUESTION estatuto_redux COLON . estatuto_redux SEMICOLON
    (61) estatuto_redux -> . asignacion
    (62) estatuto_redux -> . llamada
    (63) estatuto_redux -> . escritura
    (64) estatuto_redux -> . leer
    (65) estatuto_redux -> . ternaria
    (66) asignacion -> . variable AS exp
    (84) llamada -> . ID OPAREN exp llamada1 CPAREN
    (85) llamada -> . ID OPAREN CPAREN
    (73) escritura -> . PRINT OPAREN exp e1 CPAREN
    (76) leer -> . READ OPAREN exp e1 CPAREN
    (72) ternaria -> . exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON
    (79) variable -> . ID variable1 variable1 variable2
    (88) exp -> . texp exp1
    (91) texp -> . gexp texp1
    (94) gexp -> . mexp gexp1
    (100) mexp -> . termino mexp1
    (104) termino -> . factor term1
    (108) factor -> . OPAREN exp CPAREN
    (109) factor -> . varcst
    (110) factor -> . variable
    (111) factor -> . llamada
    (112) varcst -> . CSTINT
    (113) varcst -> . CSTFLT
    (114) varcst -> . CSTCHAR
    (115) varcst -> . CSTSTRING
    (116) varcst -> . boolean
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    ID              shift and go to state 27
    PRINT           shift and go to state 30
    READ            shift and go to state 31
    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 26
    estatuto_redux                 shift and go to state 181
    asignacion                     shift and go to state 114
    llamada                        shift and go to state 115
    escritura                      shift and go to state 116
    leer                           shift and go to state 117
    ternaria                       shift and go to state 118
    variable                       shift and go to state 25
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    boolean                        shift and go to state 46

state 154

    (84) llamada -> ID OPAREN exp llamada1 . CPAREN

    CPAREN          shift and go to state 182


state 155

    (86) llamada1 -> COMMA . exp llamada1
    (88) exp -> . texp exp1
    (91) texp -> . gexp texp1
    (94) gexp -> . mexp gexp1
    (100) mexp -> . termino mexp1
    (104) termino -> . factor term1
    (108) factor -> . OPAREN exp CPAREN
    (109) factor -> . varcst
    (110) factor -> . variable
    (111) factor -> . llamada
    (112) varcst -> . CSTINT
    (113) varcst -> . CSTFLT
    (114) varcst -> . CSTCHAR
    (115) varcst -> . CSTSTRING
    (116) varcst -> . boolean
    (79) variable -> . ID variable1 variable1 variable2
    (84) llamada -> . ID OPAREN exp llamada1 CPAREN
    (85) llamada -> . ID OPAREN CPAREN
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 183
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 156

    (87) llamada1 -> empty .

    CPAREN          reduce using rule 87 (llamada1 -> empty .)


state 157

    (79) variable -> ID variable1 variable1 variable2 .

    AS              reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    MULT            reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    DIV             reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    PLUS            reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    MINUS           reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    LT              reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    GT              reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    EQ              reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    NE              reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    AND             reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    OR              reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    QUESTION        reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    CPAREN          reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    ID              reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    IF              reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    PRINT           reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    READ            reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    WHILE           reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    FOR             reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    OCURLY          reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    FUNCTION        reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    CLASS           reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    VAR             reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    OPAREN          reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    CSTINT          reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    CSTFLT          reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    CSTCHAR         reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    CSTSTRING       reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    TRUE            reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    FALSE           reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    CCURLY          reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    COLON           reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    SEMICOLON       reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    COMMA           reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    CBRACKET        reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    FROM            reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    TO              reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)
    BY              reduce using rule 79 (variable -> ID variable1 variable1 variable2 .)


state 158

    (82) variable2 -> PERIOD . ID variable1 variable1 variable2

    ID              shift and go to state 184


state 159

    (83) variable2 -> empty .

    AS              reduce using rule 83 (variable2 -> empty .)
    MULT            reduce using rule 83 (variable2 -> empty .)
    DIV             reduce using rule 83 (variable2 -> empty .)
    PLUS            reduce using rule 83 (variable2 -> empty .)
    MINUS           reduce using rule 83 (variable2 -> empty .)
    LT              reduce using rule 83 (variable2 -> empty .)
    GT              reduce using rule 83 (variable2 -> empty .)
    EQ              reduce using rule 83 (variable2 -> empty .)
    NE              reduce using rule 83 (variable2 -> empty .)
    AND             reduce using rule 83 (variable2 -> empty .)
    OR              reduce using rule 83 (variable2 -> empty .)
    QUESTION        reduce using rule 83 (variable2 -> empty .)
    CPAREN          reduce using rule 83 (variable2 -> empty .)
    ID              reduce using rule 83 (variable2 -> empty .)
    IF              reduce using rule 83 (variable2 -> empty .)
    PRINT           reduce using rule 83 (variable2 -> empty .)
    READ            reduce using rule 83 (variable2 -> empty .)
    WHILE           reduce using rule 83 (variable2 -> empty .)
    FOR             reduce using rule 83 (variable2 -> empty .)
    OCURLY          reduce using rule 83 (variable2 -> empty .)
    FUNCTION        reduce using rule 83 (variable2 -> empty .)
    CLASS           reduce using rule 83 (variable2 -> empty .)
    VAR             reduce using rule 83 (variable2 -> empty .)
    OPAREN          reduce using rule 83 (variable2 -> empty .)
    CSTINT          reduce using rule 83 (variable2 -> empty .)
    CSTFLT          reduce using rule 83 (variable2 -> empty .)
    CSTCHAR         reduce using rule 83 (variable2 -> empty .)
    CSTSTRING       reduce using rule 83 (variable2 -> empty .)
    TRUE            reduce using rule 83 (variable2 -> empty .)
    FALSE           reduce using rule 83 (variable2 -> empty .)
    CCURLY          reduce using rule 83 (variable2 -> empty .)
    COLON           reduce using rule 83 (variable2 -> empty .)
    SEMICOLON       reduce using rule 83 (variable2 -> empty .)
    COMMA           reduce using rule 83 (variable2 -> empty .)
    CBRACKET        reduce using rule 83 (variable2 -> empty .)
    FROM            reduce using rule 83 (variable2 -> empty .)
    TO              reduce using rule 83 (variable2 -> empty .)
    BY              reduce using rule 83 (variable2 -> empty .)


state 160

    (80) variable1 -> OBRACKET exp CBRACKET .

    OBRACKET        reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    PERIOD          reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    AS              reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    MULT            reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    DIV             reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    PLUS            reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    MINUS           reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    LT              reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    GT              reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    EQ              reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    NE              reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    AND             reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    OR              reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    QUESTION        reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    CPAREN          reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    ID              reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    IF              reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    PRINT           reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    READ            reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    WHILE           reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    FOR             reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    OCURLY          reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    FUNCTION        reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    CLASS           reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    VAR             reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    OPAREN          reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    CSTINT          reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    CSTFLT          reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    CSTCHAR         reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    CSTSTRING       reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    TRUE            reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    FALSE           reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    CCURLY          reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    COLON           reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    SEMICOLON       reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    COMMA           reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    CBRACKET        reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    FROM            reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    TO              reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)
    BY              reduce using rule 80 (variable1 -> OBRACKET exp CBRACKET .)


state 161

    (67) condicion -> IF cond2 THEN bloque . cond1 SEMICOLON
    (68) cond1 -> . ELSE bloque
    (69) cond1 -> . ELSE IF cond2 THEN bloque
    (70) cond1 -> . empty
    (117) empty -> .

    ELSE            shift and go to state 186
    SEMICOLON       reduce using rule 117 (empty -> .)

    cond1                          shift and go to state 185
    empty                          shift and go to state 187

state 162

    (71) cond2 -> OPAREN exp CPAREN .

    THEN            reduce using rule 71 (cond2 -> OPAREN exp CPAREN .)


state 163

    (73) escritura -> PRINT OPAREN exp e1 . CPAREN

    CPAREN          shift and go to state 188


state 164

    (74) e1 -> COMMA . exp e1
    (88) exp -> . texp exp1
    (91) texp -> . gexp texp1
    (94) gexp -> . mexp gexp1
    (100) mexp -> . termino mexp1
    (104) termino -> . factor term1
    (108) factor -> . OPAREN exp CPAREN
    (109) factor -> . varcst
    (110) factor -> . variable
    (111) factor -> . llamada
    (112) varcst -> . CSTINT
    (113) varcst -> . CSTFLT
    (114) varcst -> . CSTCHAR
    (115) varcst -> . CSTSTRING
    (116) varcst -> . boolean
    (79) variable -> . ID variable1 variable1 variable2
    (84) llamada -> . ID OPAREN exp llamada1 CPAREN
    (85) llamada -> . ID OPAREN CPAREN
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 189
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 165

    (75) e1 -> empty .

    CPAREN          reduce using rule 75 (e1 -> empty .)


state 166

    (76) leer -> READ OPAREN exp e1 . CPAREN

    CPAREN          shift and go to state 190


state 167

    (17) ciclo_while -> WHILE cond2 THEN bloque . SEMICOLON

    SEMICOLON       shift and go to state 191


state 168

    (18) ciclo_for -> FOR OPAREN variable FROM . ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
    (19) ciclo_for1 -> . CSTINT
    (20) ciclo_for1 -> . variable
    (79) variable -> . ID variable1 variable1 variable2

    CSTINT          shift and go to state 194
    ID              shift and go to state 130

    variable                       shift and go to state 192
    ciclo_for1                     shift and go to state 193

state 169

    (3) funcion -> FUNCTION func1 ID OPAREN . param CPAREN bloque
    (6) param -> . simple ID variable2 param1
    (7) param -> . multiple ID variable1 variable1 variable2 param1
    (8) param -> . empty
    (33) simple -> . INT
    (34) simple -> . FLOAT
    (35) simple -> . BOOL
    (36) simple -> . STRING
    (37) simple -> . CHAR
    (38) multiple -> . INTS
    (39) multiple -> . FLOATS
    (40) multiple -> . BOOLS
    (41) multiple -> . STRINGS
    (42) multiple -> . CHARS
    (117) empty -> .

    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    BOOL            shift and go to state 58
    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    INTS            shift and go to state 61
    FLOATS          shift and go to state 62
    BOOLS           shift and go to state 63
    STRINGS         shift and go to state 64
    CHARS           shift and go to state 65
    CPAREN          reduce using rule 117 (empty -> .)

    param                          shift and go to state 195
    simple                         shift and go to state 196
    multiple                       shift and go to state 197
    empty                          shift and go to state 198

state 170

    (11) clase -> CLASS ID COLON clase_bloque . SEMICOLON

    SEMICOLON       shift and go to state 199


state 171

    (12) clase_bloque -> OCURLY . ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque CCURLY

    ATTRIBUTES      shift and go to state 200


state 172

    (89) exp1 -> OR texp exp1 .

    QUESTION        reduce using rule 89 (exp1 -> OR texp exp1 .)
    CPAREN          reduce using rule 89 (exp1 -> OR texp exp1 .)
    ID              reduce using rule 89 (exp1 -> OR texp exp1 .)
    IF              reduce using rule 89 (exp1 -> OR texp exp1 .)
    PRINT           reduce using rule 89 (exp1 -> OR texp exp1 .)
    READ            reduce using rule 89 (exp1 -> OR texp exp1 .)
    WHILE           reduce using rule 89 (exp1 -> OR texp exp1 .)
    FOR             reduce using rule 89 (exp1 -> OR texp exp1 .)
    OCURLY          reduce using rule 89 (exp1 -> OR texp exp1 .)
    FUNCTION        reduce using rule 89 (exp1 -> OR texp exp1 .)
    CLASS           reduce using rule 89 (exp1 -> OR texp exp1 .)
    VAR             reduce using rule 89 (exp1 -> OR texp exp1 .)
    OPAREN          reduce using rule 89 (exp1 -> OR texp exp1 .)
    CSTINT          reduce using rule 89 (exp1 -> OR texp exp1 .)
    CSTFLT          reduce using rule 89 (exp1 -> OR texp exp1 .)
    CSTCHAR         reduce using rule 89 (exp1 -> OR texp exp1 .)
    CSTSTRING       reduce using rule 89 (exp1 -> OR texp exp1 .)
    TRUE            reduce using rule 89 (exp1 -> OR texp exp1 .)
    FALSE           reduce using rule 89 (exp1 -> OR texp exp1 .)
    CCURLY          reduce using rule 89 (exp1 -> OR texp exp1 .)
    COLON           reduce using rule 89 (exp1 -> OR texp exp1 .)
    SEMICOLON       reduce using rule 89 (exp1 -> OR texp exp1 .)
    COMMA           reduce using rule 89 (exp1 -> OR texp exp1 .)
    CBRACKET        reduce using rule 89 (exp1 -> OR texp exp1 .)


state 173

    (92) texp1 -> AND gexp texp1 .

    OR              reduce using rule 92 (texp1 -> AND gexp texp1 .)
    QUESTION        reduce using rule 92 (texp1 -> AND gexp texp1 .)
    CPAREN          reduce using rule 92 (texp1 -> AND gexp texp1 .)
    ID              reduce using rule 92 (texp1 -> AND gexp texp1 .)
    IF              reduce using rule 92 (texp1 -> AND gexp texp1 .)
    PRINT           reduce using rule 92 (texp1 -> AND gexp texp1 .)
    READ            reduce using rule 92 (texp1 -> AND gexp texp1 .)
    WHILE           reduce using rule 92 (texp1 -> AND gexp texp1 .)
    FOR             reduce using rule 92 (texp1 -> AND gexp texp1 .)
    OCURLY          reduce using rule 92 (texp1 -> AND gexp texp1 .)
    FUNCTION        reduce using rule 92 (texp1 -> AND gexp texp1 .)
    CLASS           reduce using rule 92 (texp1 -> AND gexp texp1 .)
    VAR             reduce using rule 92 (texp1 -> AND gexp texp1 .)
    OPAREN          reduce using rule 92 (texp1 -> AND gexp texp1 .)
    CSTINT          reduce using rule 92 (texp1 -> AND gexp texp1 .)
    CSTFLT          reduce using rule 92 (texp1 -> AND gexp texp1 .)
    CSTCHAR         reduce using rule 92 (texp1 -> AND gexp texp1 .)
    CSTSTRING       reduce using rule 92 (texp1 -> AND gexp texp1 .)
    TRUE            reduce using rule 92 (texp1 -> AND gexp texp1 .)
    FALSE           reduce using rule 92 (texp1 -> AND gexp texp1 .)
    CCURLY          reduce using rule 92 (texp1 -> AND gexp texp1 .)
    COLON           reduce using rule 92 (texp1 -> AND gexp texp1 .)
    SEMICOLON       reduce using rule 92 (texp1 -> AND gexp texp1 .)
    COMMA           reduce using rule 92 (texp1 -> AND gexp texp1 .)
    CBRACKET        reduce using rule 92 (texp1 -> AND gexp texp1 .)


state 174

    (101) mexp1 -> PLUS termino mexp1 .

    LT              reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    GT              reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    EQ              reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    NE              reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    AND             reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    OR              reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    QUESTION        reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    CPAREN          reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    ID              reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    IF              reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    PRINT           reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    READ            reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    WHILE           reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    FOR             reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    OCURLY          reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    FUNCTION        reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    CLASS           reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    VAR             reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    OPAREN          reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    CSTINT          reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    CSTFLT          reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    CSTCHAR         reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    CSTSTRING       reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    TRUE            reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    FALSE           reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    CCURLY          reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    COLON           reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    SEMICOLON       reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    COMMA           reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)
    CBRACKET        reduce using rule 101 (mexp1 -> PLUS termino mexp1 .)


state 175

    (102) mexp1 -> MINUS termino mexp1 .

    LT              reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    GT              reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    EQ              reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    NE              reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    AND             reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    OR              reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    QUESTION        reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    CPAREN          reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    ID              reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    IF              reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    PRINT           reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    READ            reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    WHILE           reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    FOR             reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    OCURLY          reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    FUNCTION        reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    CLASS           reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    VAR             reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    OPAREN          reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    CSTINT          reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    CSTFLT          reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    CSTCHAR         reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    CSTSTRING       reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    TRUE            reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    FALSE           reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    CCURLY          reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    COLON           reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    SEMICOLON       reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    COMMA           reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)
    CBRACKET        reduce using rule 102 (mexp1 -> MINUS termino mexp1 .)


state 176

    (105) term1 -> MULT factor term1 .

    PLUS            reduce using rule 105 (term1 -> MULT factor term1 .)
    MINUS           reduce using rule 105 (term1 -> MULT factor term1 .)
    LT              reduce using rule 105 (term1 -> MULT factor term1 .)
    GT              reduce using rule 105 (term1 -> MULT factor term1 .)
    EQ              reduce using rule 105 (term1 -> MULT factor term1 .)
    NE              reduce using rule 105 (term1 -> MULT factor term1 .)
    AND             reduce using rule 105 (term1 -> MULT factor term1 .)
    OR              reduce using rule 105 (term1 -> MULT factor term1 .)
    QUESTION        reduce using rule 105 (term1 -> MULT factor term1 .)
    CPAREN          reduce using rule 105 (term1 -> MULT factor term1 .)
    ID              reduce using rule 105 (term1 -> MULT factor term1 .)
    IF              reduce using rule 105 (term1 -> MULT factor term1 .)
    PRINT           reduce using rule 105 (term1 -> MULT factor term1 .)
    READ            reduce using rule 105 (term1 -> MULT factor term1 .)
    WHILE           reduce using rule 105 (term1 -> MULT factor term1 .)
    FOR             reduce using rule 105 (term1 -> MULT factor term1 .)
    OCURLY          reduce using rule 105 (term1 -> MULT factor term1 .)
    FUNCTION        reduce using rule 105 (term1 -> MULT factor term1 .)
    CLASS           reduce using rule 105 (term1 -> MULT factor term1 .)
    VAR             reduce using rule 105 (term1 -> MULT factor term1 .)
    OPAREN          reduce using rule 105 (term1 -> MULT factor term1 .)
    CSTINT          reduce using rule 105 (term1 -> MULT factor term1 .)
    CSTFLT          reduce using rule 105 (term1 -> MULT factor term1 .)
    CSTCHAR         reduce using rule 105 (term1 -> MULT factor term1 .)
    CSTSTRING       reduce using rule 105 (term1 -> MULT factor term1 .)
    TRUE            reduce using rule 105 (term1 -> MULT factor term1 .)
    FALSE           reduce using rule 105 (term1 -> MULT factor term1 .)
    CCURLY          reduce using rule 105 (term1 -> MULT factor term1 .)
    COLON           reduce using rule 105 (term1 -> MULT factor term1 .)
    SEMICOLON       reduce using rule 105 (term1 -> MULT factor term1 .)
    COMMA           reduce using rule 105 (term1 -> MULT factor term1 .)
    CBRACKET        reduce using rule 105 (term1 -> MULT factor term1 .)


state 177

    (106) term1 -> DIV factor term1 .

    PLUS            reduce using rule 106 (term1 -> DIV factor term1 .)
    MINUS           reduce using rule 106 (term1 -> DIV factor term1 .)
    LT              reduce using rule 106 (term1 -> DIV factor term1 .)
    GT              reduce using rule 106 (term1 -> DIV factor term1 .)
    EQ              reduce using rule 106 (term1 -> DIV factor term1 .)
    NE              reduce using rule 106 (term1 -> DIV factor term1 .)
    AND             reduce using rule 106 (term1 -> DIV factor term1 .)
    OR              reduce using rule 106 (term1 -> DIV factor term1 .)
    QUESTION        reduce using rule 106 (term1 -> DIV factor term1 .)
    CPAREN          reduce using rule 106 (term1 -> DIV factor term1 .)
    ID              reduce using rule 106 (term1 -> DIV factor term1 .)
    IF              reduce using rule 106 (term1 -> DIV factor term1 .)
    PRINT           reduce using rule 106 (term1 -> DIV factor term1 .)
    READ            reduce using rule 106 (term1 -> DIV factor term1 .)
    WHILE           reduce using rule 106 (term1 -> DIV factor term1 .)
    FOR             reduce using rule 106 (term1 -> DIV factor term1 .)
    OCURLY          reduce using rule 106 (term1 -> DIV factor term1 .)
    FUNCTION        reduce using rule 106 (term1 -> DIV factor term1 .)
    CLASS           reduce using rule 106 (term1 -> DIV factor term1 .)
    VAR             reduce using rule 106 (term1 -> DIV factor term1 .)
    OPAREN          reduce using rule 106 (term1 -> DIV factor term1 .)
    CSTINT          reduce using rule 106 (term1 -> DIV factor term1 .)
    CSTFLT          reduce using rule 106 (term1 -> DIV factor term1 .)
    CSTCHAR         reduce using rule 106 (term1 -> DIV factor term1 .)
    CSTSTRING       reduce using rule 106 (term1 -> DIV factor term1 .)
    TRUE            reduce using rule 106 (term1 -> DIV factor term1 .)
    FALSE           reduce using rule 106 (term1 -> DIV factor term1 .)
    CCURLY          reduce using rule 106 (term1 -> DIV factor term1 .)
    COLON           reduce using rule 106 (term1 -> DIV factor term1 .)
    SEMICOLON       reduce using rule 106 (term1 -> DIV factor term1 .)
    COMMA           reduce using rule 106 (term1 -> DIV factor term1 .)
    CBRACKET        reduce using rule 106 (term1 -> DIV factor term1 .)


state 178

    (27) tipo1 -> COMMA ID . tipo1
    (27) tipo1 -> . COMMA ID tipo1
    (28) tipo1 -> . empty
    (117) empty -> .

    COMMA           shift and go to state 147
    SEMICOLON       reduce using rule 117 (empty -> .)

    tipo1                          shift and go to state 201
    empty                          shift and go to state 148

state 179

    (26) tipo -> multiple ID tipo3 tipo3 . tipo2
    (29) tipo2 -> . COMMA ID tipo3 tipo3
    (30) tipo2 -> . empty
    (117) empty -> .

    COMMA           shift and go to state 203
    SEMICOLON       reduce using rule 117 (empty -> .)

    tipo2                          shift and go to state 202
    empty                          shift and go to state 204

state 180

    (31) tipo3 -> OBRACKET CSTINT . CBRACKET

    CBRACKET        shift and go to state 205


state 181

    (72) ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux . SEMICOLON

    SEMICOLON       shift and go to state 206


state 182

    (84) llamada -> ID OPAREN exp llamada1 CPAREN .

    ID              reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    IF              reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    PRINT           reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    READ            reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    WHILE           reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    FOR             reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    OCURLY          reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    FUNCTION        reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    CLASS           reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    VAR             reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    OPAREN          reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    CSTINT          reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    CSTFLT          reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    CSTCHAR         reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    CSTSTRING       reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    TRUE            reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    FALSE           reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    CCURLY          reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    MULT            reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    DIV             reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    PLUS            reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    MINUS           reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    LT              reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    GT              reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    EQ              reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    NE              reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    AND             reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    OR              reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    QUESTION        reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    CPAREN          reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    COLON           reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    SEMICOLON       reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    COMMA           reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    CBRACKET        reduce using rule 84 (llamada -> ID OPAREN exp llamada1 CPAREN .)


state 183

    (86) llamada1 -> COMMA exp . llamada1
    (86) llamada1 -> . COMMA exp llamada1
    (87) llamada1 -> . empty
    (117) empty -> .

    COMMA           shift and go to state 155
    CPAREN          reduce using rule 117 (empty -> .)

    llamada1                       shift and go to state 207
    empty                          shift and go to state 156

state 184

    (82) variable2 -> PERIOD ID . variable1 variable1 variable2
    (80) variable1 -> . OBRACKET exp CBRACKET
    (81) variable1 -> . empty
    (117) empty -> .

  ! shift/reduce conflict for OBRACKET resolved as shift
    OBRACKET        shift and go to state 72
    PERIOD          reduce using rule 117 (empty -> .)
    AS              reduce using rule 117 (empty -> .)
    MULT            reduce using rule 117 (empty -> .)
    DIV             reduce using rule 117 (empty -> .)
    PLUS            reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    LT              reduce using rule 117 (empty -> .)
    GT              reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NE              reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    QUESTION        reduce using rule 117 (empty -> .)
    CPAREN          reduce using rule 117 (empty -> .)
    ID              reduce using rule 117 (empty -> .)
    IF              reduce using rule 117 (empty -> .)
    PRINT           reduce using rule 117 (empty -> .)
    READ            reduce using rule 117 (empty -> .)
    WHILE           reduce using rule 117 (empty -> .)
    FOR             reduce using rule 117 (empty -> .)
    OCURLY          reduce using rule 117 (empty -> .)
    FUNCTION        reduce using rule 117 (empty -> .)
    CLASS           reduce using rule 117 (empty -> .)
    VAR             reduce using rule 117 (empty -> .)
    OPAREN          reduce using rule 117 (empty -> .)
    CSTINT          reduce using rule 117 (empty -> .)
    CSTFLT          reduce using rule 117 (empty -> .)
    CSTCHAR         reduce using rule 117 (empty -> .)
    CSTSTRING       reduce using rule 117 (empty -> .)
    TRUE            reduce using rule 117 (empty -> .)
    FALSE           reduce using rule 117 (empty -> .)
    CCURLY          reduce using rule 117 (empty -> .)
    COLON           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    CBRACKET        reduce using rule 117 (empty -> .)
    FROM            reduce using rule 117 (empty -> .)
    TO              reduce using rule 117 (empty -> .)
    BY              reduce using rule 117 (empty -> .)

  ! OBRACKET        [ reduce using rule 117 (empty -> .) ]

    variable1                      shift and go to state 208
    empty                          shift and go to state 73

state 185

    (67) condicion -> IF cond2 THEN bloque cond1 . SEMICOLON

    SEMICOLON       shift and go to state 209


state 186

    (68) cond1 -> ELSE . bloque
    (69) cond1 -> ELSE . IF cond2 THEN bloque
    (46) bloque -> . OCURLY b1 CCURLY

    IF              shift and go to state 211
    OCURLY          shift and go to state 7

    bloque                         shift and go to state 210

state 187

    (70) cond1 -> empty .

    SEMICOLON       reduce using rule 70 (cond1 -> empty .)


state 188

    (73) escritura -> PRINT OPAREN exp e1 CPAREN .

    ID              reduce using rule 73 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    IF              reduce using rule 73 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    PRINT           reduce using rule 73 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    READ            reduce using rule 73 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    WHILE           reduce using rule 73 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    FOR             reduce using rule 73 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    OCURLY          reduce using rule 73 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    FUNCTION        reduce using rule 73 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    CLASS           reduce using rule 73 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    VAR             reduce using rule 73 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    OPAREN          reduce using rule 73 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    CSTINT          reduce using rule 73 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    CSTFLT          reduce using rule 73 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    CSTCHAR         reduce using rule 73 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    CSTSTRING       reduce using rule 73 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    TRUE            reduce using rule 73 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    FALSE           reduce using rule 73 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    CCURLY          reduce using rule 73 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    COLON           reduce using rule 73 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    SEMICOLON       reduce using rule 73 (escritura -> PRINT OPAREN exp e1 CPAREN .)


state 189

    (74) e1 -> COMMA exp . e1
    (74) e1 -> . COMMA exp e1
    (75) e1 -> . empty
    (117) empty -> .

    COMMA           shift and go to state 164
    CPAREN          reduce using rule 117 (empty -> .)

    e1                             shift and go to state 212
    empty                          shift and go to state 165

state 190

    (76) leer -> READ OPAREN exp e1 CPAREN .

    ID              reduce using rule 76 (leer -> READ OPAREN exp e1 CPAREN .)
    IF              reduce using rule 76 (leer -> READ OPAREN exp e1 CPAREN .)
    PRINT           reduce using rule 76 (leer -> READ OPAREN exp e1 CPAREN .)
    READ            reduce using rule 76 (leer -> READ OPAREN exp e1 CPAREN .)
    WHILE           reduce using rule 76 (leer -> READ OPAREN exp e1 CPAREN .)
    FOR             reduce using rule 76 (leer -> READ OPAREN exp e1 CPAREN .)
    OCURLY          reduce using rule 76 (leer -> READ OPAREN exp e1 CPAREN .)
    FUNCTION        reduce using rule 76 (leer -> READ OPAREN exp e1 CPAREN .)
    CLASS           reduce using rule 76 (leer -> READ OPAREN exp e1 CPAREN .)
    VAR             reduce using rule 76 (leer -> READ OPAREN exp e1 CPAREN .)
    OPAREN          reduce using rule 76 (leer -> READ OPAREN exp e1 CPAREN .)
    CSTINT          reduce using rule 76 (leer -> READ OPAREN exp e1 CPAREN .)
    CSTFLT          reduce using rule 76 (leer -> READ OPAREN exp e1 CPAREN .)
    CSTCHAR         reduce using rule 76 (leer -> READ OPAREN exp e1 CPAREN .)
    CSTSTRING       reduce using rule 76 (leer -> READ OPAREN exp e1 CPAREN .)
    TRUE            reduce using rule 76 (leer -> READ OPAREN exp e1 CPAREN .)
    FALSE           reduce using rule 76 (leer -> READ OPAREN exp e1 CPAREN .)
    CCURLY          reduce using rule 76 (leer -> READ OPAREN exp e1 CPAREN .)
    COLON           reduce using rule 76 (leer -> READ OPAREN exp e1 CPAREN .)
    SEMICOLON       reduce using rule 76 (leer -> READ OPAREN exp e1 CPAREN .)


state 191

    (17) ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .

    ID              reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    IF              reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    PRINT           reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    READ            reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    WHILE           reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    FOR             reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    OCURLY          reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    FUNCTION        reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CLASS           reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    VAR             reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    OPAREN          reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CSTINT          reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CSTFLT          reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CSTCHAR         reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CSTSTRING       reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    TRUE            reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    FALSE           reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CCURLY          reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)


state 192

    (20) ciclo_for1 -> variable .

    TO              reduce using rule 20 (ciclo_for1 -> variable .)
    BY              reduce using rule 20 (ciclo_for1 -> variable .)
    CPAREN          reduce using rule 20 (ciclo_for1 -> variable .)


state 193

    (18) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 . TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON

    TO              shift and go to state 213


state 194

    (19) ciclo_for1 -> CSTINT .

    TO              reduce using rule 19 (ciclo_for1 -> CSTINT .)
    BY              reduce using rule 19 (ciclo_for1 -> CSTINT .)
    CPAREN          reduce using rule 19 (ciclo_for1 -> CSTINT .)


state 195

    (3) funcion -> FUNCTION func1 ID OPAREN param . CPAREN bloque

    CPAREN          shift and go to state 214


state 196

    (6) param -> simple . ID variable2 param1

    ID              shift and go to state 215


state 197

    (7) param -> multiple . ID variable1 variable1 variable2 param1

    ID              shift and go to state 216


state 198

    (8) param -> empty .

    CPAREN          reduce using rule 8 (param -> empty .)


state 199

    (11) clase -> CLASS ID COLON clase_bloque SEMICOLON .

    ID              reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    IF              reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    PRINT           reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    READ            reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    WHILE           reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    FOR             reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    OCURLY          reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    FUNCTION        reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    CLASS           reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    VAR             reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    OPAREN          reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    CSTINT          reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    CSTFLT          reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    CSTCHAR         reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    CSTSTRING       reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    TRUE            reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    FALSE           reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    CCURLY          reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)


state 200

    (12) clase_bloque -> OCURLY ATTRIBUTES . COLON clase_bloque1 METHODS COLON clase_metodos_bloque CCURLY

    COLON           shift and go to state 217


state 201

    (27) tipo1 -> COMMA ID tipo1 .

    SEMICOLON       reduce using rule 27 (tipo1 -> COMMA ID tipo1 .)


state 202

    (26) tipo -> multiple ID tipo3 tipo3 tipo2 .

    SEMICOLON       reduce using rule 26 (tipo -> multiple ID tipo3 tipo3 tipo2 .)


state 203

    (29) tipo2 -> COMMA . ID tipo3 tipo3

    ID              shift and go to state 218


state 204

    (30) tipo2 -> empty .

    SEMICOLON       reduce using rule 30 (tipo2 -> empty .)


state 205

    (31) tipo3 -> OBRACKET CSTINT CBRACKET .

    OBRACKET        reduce using rule 31 (tipo3 -> OBRACKET CSTINT CBRACKET .)
    COMMA           reduce using rule 31 (tipo3 -> OBRACKET CSTINT CBRACKET .)
    SEMICOLON       reduce using rule 31 (tipo3 -> OBRACKET CSTINT CBRACKET .)


state 206

    (72) ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .

    ID              reduce using rule 72 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    IF              reduce using rule 72 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    PRINT           reduce using rule 72 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    READ            reduce using rule 72 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    WHILE           reduce using rule 72 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    FOR             reduce using rule 72 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    OCURLY          reduce using rule 72 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    FUNCTION        reduce using rule 72 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CLASS           reduce using rule 72 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    VAR             reduce using rule 72 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    OPAREN          reduce using rule 72 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CSTINT          reduce using rule 72 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CSTFLT          reduce using rule 72 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CSTCHAR         reduce using rule 72 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CSTSTRING       reduce using rule 72 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    TRUE            reduce using rule 72 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    FALSE           reduce using rule 72 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CCURLY          reduce using rule 72 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    COLON           reduce using rule 72 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    SEMICOLON       reduce using rule 72 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)


state 207

    (86) llamada1 -> COMMA exp llamada1 .

    CPAREN          reduce using rule 86 (llamada1 -> COMMA exp llamada1 .)


state 208

    (82) variable2 -> PERIOD ID variable1 . variable1 variable2
    (80) variable1 -> . OBRACKET exp CBRACKET
    (81) variable1 -> . empty
    (117) empty -> .

    OBRACKET        shift and go to state 72
    PERIOD          reduce using rule 117 (empty -> .)
    AS              reduce using rule 117 (empty -> .)
    MULT            reduce using rule 117 (empty -> .)
    DIV             reduce using rule 117 (empty -> .)
    PLUS            reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    LT              reduce using rule 117 (empty -> .)
    GT              reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NE              reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    QUESTION        reduce using rule 117 (empty -> .)
    CPAREN          reduce using rule 117 (empty -> .)
    ID              reduce using rule 117 (empty -> .)
    IF              reduce using rule 117 (empty -> .)
    PRINT           reduce using rule 117 (empty -> .)
    READ            reduce using rule 117 (empty -> .)
    WHILE           reduce using rule 117 (empty -> .)
    FOR             reduce using rule 117 (empty -> .)
    OCURLY          reduce using rule 117 (empty -> .)
    FUNCTION        reduce using rule 117 (empty -> .)
    CLASS           reduce using rule 117 (empty -> .)
    VAR             reduce using rule 117 (empty -> .)
    OPAREN          reduce using rule 117 (empty -> .)
    CSTINT          reduce using rule 117 (empty -> .)
    CSTFLT          reduce using rule 117 (empty -> .)
    CSTCHAR         reduce using rule 117 (empty -> .)
    CSTSTRING       reduce using rule 117 (empty -> .)
    TRUE            reduce using rule 117 (empty -> .)
    FALSE           reduce using rule 117 (empty -> .)
    CCURLY          reduce using rule 117 (empty -> .)
    COLON           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    CBRACKET        reduce using rule 117 (empty -> .)
    FROM            reduce using rule 117 (empty -> .)
    TO              reduce using rule 117 (empty -> .)
    BY              reduce using rule 117 (empty -> .)

    variable1                      shift and go to state 219
    empty                          shift and go to state 73

state 209

    (67) condicion -> IF cond2 THEN bloque cond1 SEMICOLON .

    ID              reduce using rule 67 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    IF              reduce using rule 67 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    PRINT           reduce using rule 67 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    READ            reduce using rule 67 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    WHILE           reduce using rule 67 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    FOR             reduce using rule 67 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    OCURLY          reduce using rule 67 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    FUNCTION        reduce using rule 67 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CLASS           reduce using rule 67 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    VAR             reduce using rule 67 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    OPAREN          reduce using rule 67 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CSTINT          reduce using rule 67 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CSTFLT          reduce using rule 67 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CSTCHAR         reduce using rule 67 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CSTSTRING       reduce using rule 67 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    TRUE            reduce using rule 67 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    FALSE           reduce using rule 67 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CCURLY          reduce using rule 67 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)


state 210

    (68) cond1 -> ELSE bloque .

    SEMICOLON       reduce using rule 68 (cond1 -> ELSE bloque .)


state 211

    (69) cond1 -> ELSE IF . cond2 THEN bloque
    (71) cond2 -> . OPAREN exp CPAREN

    OPAREN          shift and go to state 79

    cond2                          shift and go to state 220

state 212

    (74) e1 -> COMMA exp e1 .

    CPAREN          reduce using rule 74 (e1 -> COMMA exp e1 .)


state 213

    (18) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO . ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
    (19) ciclo_for1 -> . CSTINT
    (20) ciclo_for1 -> . variable
    (79) variable -> . ID variable1 variable1 variable2

    CSTINT          shift and go to state 194
    ID              shift and go to state 130

    variable                       shift and go to state 192
    ciclo_for1                     shift and go to state 221

state 214

    (3) funcion -> FUNCTION func1 ID OPAREN param CPAREN . bloque
    (46) bloque -> . OCURLY b1 CCURLY

    OCURLY          shift and go to state 7

    bloque                         shift and go to state 222

state 215

    (6) param -> simple ID . variable2 param1
    (82) variable2 -> . PERIOD ID variable1 variable1 variable2
    (83) variable2 -> . empty
    (117) empty -> .

    PERIOD          shift and go to state 158
    COMMA           reduce using rule 117 (empty -> .)
    CPAREN          reduce using rule 117 (empty -> .)

    variable2                      shift and go to state 223
    empty                          shift and go to state 159

state 216

    (7) param -> multiple ID . variable1 variable1 variable2 param1
    (80) variable1 -> . OBRACKET exp CBRACKET
    (81) variable1 -> . empty
    (117) empty -> .

  ! shift/reduce conflict for OBRACKET resolved as shift
    OBRACKET        shift and go to state 72
    PERIOD          reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    CPAREN          reduce using rule 117 (empty -> .)

  ! OBRACKET        [ reduce using rule 117 (empty -> .) ]

    variable1                      shift and go to state 224
    empty                          shift and go to state 73

state 217

    (12) clase_bloque -> OCURLY ATTRIBUTES COLON . clase_bloque1 METHODS COLON clase_metodos_bloque CCURLY
    (13) clase_bloque1 -> . dec
    (14) clase_bloque1 -> . empty
    (21) dec -> . VAR tipo SEMICOLON dec1
    (117) empty -> .

    VAR             shift and go to state 8
    METHODS         reduce using rule 117 (empty -> .)

    clase_bloque1                  shift and go to state 225
    dec                            shift and go to state 226
    empty                          shift and go to state 227

state 218

    (29) tipo2 -> COMMA ID . tipo3 tipo3
    (31) tipo3 -> . OBRACKET CSTINT CBRACKET
    (32) tipo3 -> . empty
    (117) empty -> .

  ! shift/reduce conflict for OBRACKET resolved as shift
    OBRACKET        shift and go to state 151
    SEMICOLON       reduce using rule 117 (empty -> .)

  ! OBRACKET        [ reduce using rule 117 (empty -> .) ]

    tipo3                          shift and go to state 228
    empty                          shift and go to state 152

state 219

    (82) variable2 -> PERIOD ID variable1 variable1 . variable2
    (82) variable2 -> . PERIOD ID variable1 variable1 variable2
    (83) variable2 -> . empty
    (117) empty -> .

    PERIOD          shift and go to state 158
    AS              reduce using rule 117 (empty -> .)
    MULT            reduce using rule 117 (empty -> .)
    DIV             reduce using rule 117 (empty -> .)
    PLUS            reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    LT              reduce using rule 117 (empty -> .)
    GT              reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NE              reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    QUESTION        reduce using rule 117 (empty -> .)
    CPAREN          reduce using rule 117 (empty -> .)
    ID              reduce using rule 117 (empty -> .)
    IF              reduce using rule 117 (empty -> .)
    PRINT           reduce using rule 117 (empty -> .)
    READ            reduce using rule 117 (empty -> .)
    WHILE           reduce using rule 117 (empty -> .)
    FOR             reduce using rule 117 (empty -> .)
    OCURLY          reduce using rule 117 (empty -> .)
    FUNCTION        reduce using rule 117 (empty -> .)
    CLASS           reduce using rule 117 (empty -> .)
    VAR             reduce using rule 117 (empty -> .)
    OPAREN          reduce using rule 117 (empty -> .)
    CSTINT          reduce using rule 117 (empty -> .)
    CSTFLT          reduce using rule 117 (empty -> .)
    CSTCHAR         reduce using rule 117 (empty -> .)
    CSTSTRING       reduce using rule 117 (empty -> .)
    TRUE            reduce using rule 117 (empty -> .)
    FALSE           reduce using rule 117 (empty -> .)
    CCURLY          reduce using rule 117 (empty -> .)
    COLON           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    CBRACKET        reduce using rule 117 (empty -> .)
    FROM            reduce using rule 117 (empty -> .)
    TO              reduce using rule 117 (empty -> .)
    BY              reduce using rule 117 (empty -> .)

    variable2                      shift and go to state 229
    empty                          shift and go to state 159

state 220

    (69) cond1 -> ELSE IF cond2 . THEN bloque

    THEN            shift and go to state 230


state 221

    (18) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 . BY ciclo_for1 CPAREN THEN bloque SEMICOLON

    BY              shift and go to state 231


state 222

    (3) funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .

    ID              reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    IF              reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    PRINT           reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    READ            reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    WHILE           reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    FOR             reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    OCURLY          reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    FUNCTION        reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    CLASS           reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    VAR             reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    OPAREN          reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    CSTINT          reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    CSTFLT          reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    CSTCHAR         reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    CSTSTRING       reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    TRUE            reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    FALSE           reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    CCURLY          reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)


state 223

    (6) param -> simple ID variable2 . param1
    (9) param1 -> . COMMA param
    (10) param1 -> . empty
    (117) empty -> .

    COMMA           shift and go to state 233
    CPAREN          reduce using rule 117 (empty -> .)

    param1                         shift and go to state 232
    empty                          shift and go to state 234

state 224

    (7) param -> multiple ID variable1 . variable1 variable2 param1
    (80) variable1 -> . OBRACKET exp CBRACKET
    (81) variable1 -> . empty
    (117) empty -> .

    OBRACKET        shift and go to state 72
    PERIOD          reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    CPAREN          reduce using rule 117 (empty -> .)

    variable1                      shift and go to state 235
    empty                          shift and go to state 73

state 225

    (12) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 . METHODS COLON clase_metodos_bloque CCURLY

    METHODS         shift and go to state 236


state 226

    (13) clase_bloque1 -> dec .

    METHODS         reduce using rule 13 (clase_bloque1 -> dec .)


state 227

    (14) clase_bloque1 -> empty .

    METHODS         reduce using rule 14 (clase_bloque1 -> empty .)


state 228

    (29) tipo2 -> COMMA ID tipo3 . tipo3
    (31) tipo3 -> . OBRACKET CSTINT CBRACKET
    (32) tipo3 -> . empty
    (117) empty -> .

    OBRACKET        shift and go to state 151
    SEMICOLON       reduce using rule 117 (empty -> .)

    tipo3                          shift and go to state 237
    empty                          shift and go to state 152

state 229

    (82) variable2 -> PERIOD ID variable1 variable1 variable2 .

    AS              reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    MULT            reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    DIV             reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    PLUS            reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    MINUS           reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    LT              reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    GT              reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    EQ              reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    NE              reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    AND             reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    OR              reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    QUESTION        reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    CPAREN          reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    ID              reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    IF              reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    PRINT           reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    READ            reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    WHILE           reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    FOR             reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    OCURLY          reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    FUNCTION        reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    CLASS           reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    VAR             reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    OPAREN          reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    CSTINT          reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    CSTFLT          reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    CSTCHAR         reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    CSTSTRING       reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    TRUE            reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    FALSE           reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    CCURLY          reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    COLON           reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    SEMICOLON       reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    COMMA           reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    CBRACKET        reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    FROM            reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    TO              reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    BY              reduce using rule 82 (variable2 -> PERIOD ID variable1 variable1 variable2 .)


state 230

    (69) cond1 -> ELSE IF cond2 THEN . bloque
    (46) bloque -> . OCURLY b1 CCURLY

    OCURLY          shift and go to state 7

    bloque                         shift and go to state 238

state 231

    (18) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY . ciclo_for1 CPAREN THEN bloque SEMICOLON
    (19) ciclo_for1 -> . CSTINT
    (20) ciclo_for1 -> . variable
    (79) variable -> . ID variable1 variable1 variable2

    CSTINT          shift and go to state 194
    ID              shift and go to state 130

    variable                       shift and go to state 192
    ciclo_for1                     shift and go to state 239

state 232

    (6) param -> simple ID variable2 param1 .

    CPAREN          reduce using rule 6 (param -> simple ID variable2 param1 .)


state 233

    (9) param1 -> COMMA . param
    (6) param -> . simple ID variable2 param1
    (7) param -> . multiple ID variable1 variable1 variable2 param1
    (8) param -> . empty
    (33) simple -> . INT
    (34) simple -> . FLOAT
    (35) simple -> . BOOL
    (36) simple -> . STRING
    (37) simple -> . CHAR
    (38) multiple -> . INTS
    (39) multiple -> . FLOATS
    (40) multiple -> . BOOLS
    (41) multiple -> . STRINGS
    (42) multiple -> . CHARS
    (117) empty -> .

    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    BOOL            shift and go to state 58
    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    INTS            shift and go to state 61
    FLOATS          shift and go to state 62
    BOOLS           shift and go to state 63
    STRINGS         shift and go to state 64
    CHARS           shift and go to state 65
    CPAREN          reduce using rule 117 (empty -> .)

    param                          shift and go to state 240
    simple                         shift and go to state 196
    multiple                       shift and go to state 197
    empty                          shift and go to state 198

state 234

    (10) param1 -> empty .

    CPAREN          reduce using rule 10 (param1 -> empty .)


state 235

    (7) param -> multiple ID variable1 variable1 . variable2 param1
    (82) variable2 -> . PERIOD ID variable1 variable1 variable2
    (83) variable2 -> . empty
    (117) empty -> .

    PERIOD          shift and go to state 158
    COMMA           reduce using rule 117 (empty -> .)
    CPAREN          reduce using rule 117 (empty -> .)

    variable2                      shift and go to state 241
    empty                          shift and go to state 159

state 236

    (12) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS . COLON clase_metodos_bloque CCURLY

    COLON           shift and go to state 242


state 237

    (29) tipo2 -> COMMA ID tipo3 tipo3 .

    SEMICOLON       reduce using rule 29 (tipo2 -> COMMA ID tipo3 tipo3 .)


state 238

    (69) cond1 -> ELSE IF cond2 THEN bloque .

    SEMICOLON       reduce using rule 69 (cond1 -> ELSE IF cond2 THEN bloque .)


state 239

    (18) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 . CPAREN THEN bloque SEMICOLON

    CPAREN          shift and go to state 243


state 240

    (9) param1 -> COMMA param .

    CPAREN          reduce using rule 9 (param1 -> COMMA param .)


state 241

    (7) param -> multiple ID variable1 variable1 variable2 . param1
    (9) param1 -> . COMMA param
    (10) param1 -> . empty
    (117) empty -> .

    COMMA           shift and go to state 233
    CPAREN          reduce using rule 117 (empty -> .)

    param1                         shift and go to state 244
    empty                          shift and go to state 234

state 242

    (12) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON . clase_metodos_bloque CCURLY
    (15) clase_metodos_bloque -> . funcion clase_metodos_bloque
    (16) clase_metodos_bloque -> . empty
    (3) funcion -> . FUNCTION func1 ID OPAREN param CPAREN bloque
    (117) empty -> .

    FUNCTION        shift and go to state 34
    CCURLY          reduce using rule 117 (empty -> .)

    clase_metodos_bloque           shift and go to state 245
    funcion                        shift and go to state 246
    empty                          shift and go to state 247

state 243

    (18) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN . THEN bloque SEMICOLON

    THEN            shift and go to state 248


state 244

    (7) param -> multiple ID variable1 variable1 variable2 param1 .

    CPAREN          reduce using rule 7 (param -> multiple ID variable1 variable1 variable2 param1 .)


state 245

    (12) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque . CCURLY

    CCURLY          shift and go to state 249


state 246

    (15) clase_metodos_bloque -> funcion . clase_metodos_bloque
    (15) clase_metodos_bloque -> . funcion clase_metodos_bloque
    (16) clase_metodos_bloque -> . empty
    (3) funcion -> . FUNCTION func1 ID OPAREN param CPAREN bloque
    (117) empty -> .

    FUNCTION        shift and go to state 34
    CCURLY          reduce using rule 117 (empty -> .)

    funcion                        shift and go to state 246
    clase_metodos_bloque           shift and go to state 250
    empty                          shift and go to state 247

state 247

    (16) clase_metodos_bloque -> empty .

    CCURLY          reduce using rule 16 (clase_metodos_bloque -> empty .)


state 248

    (18) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN . bloque SEMICOLON
    (46) bloque -> . OCURLY b1 CCURLY

    OCURLY          shift and go to state 7

    bloque                         shift and go to state 251

state 249

    (12) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque CCURLY .

    SEMICOLON       reduce using rule 12 (clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque CCURLY .)


state 250

    (15) clase_metodos_bloque -> funcion clase_metodos_bloque .

    CCURLY          reduce using rule 15 (clase_metodos_bloque -> funcion clase_metodos_bloque .)


state 251

    (18) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque . SEMICOLON

    SEMICOLON       shift and go to state 252


state 252

    (18) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .

    ID              reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    IF              reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    PRINT           reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    READ            reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    WHILE           reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    FOR             reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    OCURLY          reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    FUNCTION        reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CLASS           reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    VAR             reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    OPAREN          reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CSTINT          reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CSTFLT          reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CSTCHAR         reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CSTSTRING       reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    TRUE            reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    FALSE           reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CCURLY          reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OBRACKET in state 27 resolved as shift
WARNING: shift/reduce conflict for OBRACKET in state 77 resolved as shift
WARNING: shift/reduce conflict for OPAREN in state 77 resolved as shift
WARNING: shift/reduce conflict for VAR in state 108 resolved as shift
WARNING: shift/reduce conflict for OBRACKET in state 111 resolved as shift
WARNING: shift/reduce conflict for OBRACKET in state 130 resolved as shift
WARNING: shift/reduce conflict for OBRACKET in state 184 resolved as shift
WARNING: shift/reduce conflict for OBRACKET in state 216 resolved as shift
WARNING: shift/reduce conflict for OBRACKET in state 218 resolved as shift
