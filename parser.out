Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON saw_program program_content main saw_program_end
Rule 2     program_content -> dec program_content
Rule 3     program_content -> class program_content
Rule 4     program_content -> function program_content
Rule 5     program_content -> empty
Rule 6     main -> INT MAIN saw_main OPAREN CPAREN block saw_function_end scope_end
Rule 7     functions -> function functions
Rule 8     functions -> empty
Rule 9     function -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN block saw_function_end scope_end
Rule 10    func1 -> simple
Rule 11    func1 -> VOID saw_type
Rule 12    param -> param2 param1
Rule 13    param -> empty
Rule 14    param1 -> COMMA param2 param1
Rule 15    param1 -> empty
Rule 16    param2 -> simple ID saw_id saw_variable_param
Rule 17    param2 -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable_param
Rule 18    class -> CLASS ID saw_id saw_class COLON class_block class_scope_end SEMICOLON
Rule 19    class_block -> OCURLY ATTRIBUTES COLON decs METHODS COLON functions CCURLY
Rule 20    while_loop -> WHILE saw_while cond2 THEN block SEMICOLON saw_while_end
Rule 21    for_loop -> FOR OPAREN variable FROM for_loop1 TO for_loop1 BY for_loop1 CPAREN THEN block SEMICOLON
Rule 22    for_loop1 -> CSTINT
Rule 23    for_loop1 -> variable
Rule 24    decs -> dec decs1
Rule 25    dec -> VAR type SEMICOLON dec1
Rule 26    dec1 -> dec
Rule 27    dec1 -> empty
Rule 28    decs1 -> decs
Rule 29    decs1 -> empty
Rule 30    type -> compound ID saw_id saw_variable type1
Rule 31    type -> simple ID saw_id saw_variable type1
Rule 32    type -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable type2
Rule 33    type1 -> COMMA ID saw_id saw_variable type1
Rule 34    type1 -> empty
Rule 35    type2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable
Rule 36    type2 -> empty
Rule 37    type3 -> OBRACKET CSTINT CBRACKET saw_dimension
Rule 38    type3 -> empty
Rule 39    simple -> INT saw_type
Rule 40    simple -> FLOAT saw_type
Rule 41    simple -> BOOL saw_type
Rule 42    simple -> STRING saw_type
Rule 43    simple -> CHAR saw_type
Rule 44    multiple -> INTS saw_type
Rule 45    multiple -> FLOATS saw_type
Rule 46    multiple -> BOOLS saw_type
Rule 47    multiple -> STRINGS saw_type
Rule 48    multiple -> CHARS saw_type
Rule 49    compound -> ID saw_type
Rule 50    compound -> DATAFRAME saw_type
Rule 51    compound -> FILE saw_type
Rule 52    block -> OCURLY b1 CCURLY
Rule 53    block -> OCURLY decs count_vars b1 CCURLY
Rule 54    b1 -> estatuto b1
Rule 55    b1 -> empty
Rule 56    estatuto -> assign
Rule 57    estatuto -> function_call
Rule 58    estatuto -> conditional
Rule 59    estatuto -> write
Rule 60    estatuto -> read
Rule 61    estatuto -> while_loop
Rule 62    estatuto -> for_loop
Rule 63    estatuto -> ternary
Rule 64    estatuto -> RETURN exp
Rule 65    estatuto_redux -> assign
Rule 66    estatuto_redux -> function_call
Rule 67    estatuto_redux -> write
Rule 68    estatuto_redux -> read
Rule 69    estatuto_redux -> ternary
Rule 70    estatuto_redux -> RETURN exp
Rule 71    assign -> variable saw_var_factor AS saw_asig exp
Rule 72    conditional -> IF cond2 THEN block cond1 SEMICOLON bc_end
Rule 73    cond1 -> ELSE saw_else block
Rule 74    cond1 -> empty
Rule 75    cond2 -> OPAREN exp CPAREN
Rule 76    ternary -> exp QUESTION saw_cond estatuto_redux COLON saw_else estatuto_redux SEMICOLON bc_end
Rule 77    write -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end
Rule 78    e1 -> COMMA exp e1
Rule 79    e1 -> empty
Rule 80    read -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end
Rule 81    l1 -> COMMA variable saw_read_exp e1
Rule 82    l1 -> empty
Rule 83    boolean -> TRUE
Rule 84    boolean -> FALSE
Rule 85    variable -> ID saw_id saw_called_var
Rule 86    variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
Rule 87    variable -> ID saw_id variable2
Rule 88    variable1 -> OBRACKET exp CBRACKET saw_dimension
Rule 89    variable1 -> empty
Rule 90    variable2 -> PERIOD ID saw_called_var_from_class
Rule 91    variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1
Rule 92    function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
Rule 93    function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub
Rule 94    function_call1 -> COMMA increment_cont exp verify_param function_call1
Rule 95    function_call1 -> empty
Rule 96    exp -> texp exp1 check_or_operator
Rule 97    exp1 -> OR saw_or texp exp1
Rule 98    exp1 -> empty
Rule 99    texp -> gexp texp1 check_and_operator
Rule 100   texp1 -> AND saw_and gexp texp1
Rule 101   texp1 -> empty
Rule 102   gexp -> mexp gexp1 check_relational_operator
Rule 103   gexp1 -> LT saw_relational_operator mexp
Rule 104   gexp1 -> GT saw_relational_operator mexp
Rule 105   gexp1 -> GTE saw_relational_operator mexp
Rule 106   gexp1 -> LTE saw_relational_operator mexp
Rule 107   gexp1 -> EQ saw_relational_operator mexp
Rule 108   gexp1 -> NE saw_relational_operator mexp
Rule 109   gexp1 -> empty
Rule 110   mexp -> termino mexp1
Rule 111   mexp1 -> PLUS saw_plusminus_operator termino mexp1
Rule 112   mexp1 -> MINUS saw_plusminus_operator termino mexp1
Rule 113   mexp1 -> empty
Rule 114   termino -> factor term1 check_plusminus_operator
Rule 115   term1 -> MULT saw_multdiv_operator factor term1
Rule 116   term1 -> DIV saw_multdiv_operator factor term1
Rule 117   term1 -> empty
Rule 118   factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
Rule 119   factor -> varcst check_multdiv_operator
Rule 120   factor -> variable saw_var_factor check_multdiv_operator
Rule 121   factor -> function_call
Rule 122   saw_var_factor -> <empty>
Rule 123   varcst -> CSTINT saw_end_value
Rule 124   varcst -> CSTFLT saw_end_value
Rule 125   varcst -> CSTCHAR saw_end_value
Rule 126   varcst -> CSTSTRING saw_end_value
Rule 127   varcst -> boolean saw_end_value
Rule 128   empty -> <empty>
Rule 129   saw_program -> <empty>
Rule 130   saw_program_end -> <empty>
Rule 131   saw_main -> <empty>
Rule 132   saw_class -> <empty>
Rule 133   saw_type -> <empty>
Rule 134   saw_id -> <empty>
Rule 135   saw_variable -> <empty>
Rule 136   saw_variable_param -> <empty>
Rule 137   saw_dimension -> <empty>
Rule 138   saw_called_var -> <empty>
Rule 139   saw_called_var_from_class -> <empty>
Rule 140   saw_asig -> <empty>
Rule 141   saw_end_value -> <empty>
Rule 142   saw_plusminus_operator -> <empty>
Rule 143   check_plusminus_operator -> <empty>
Rule 144   saw_multdiv_operator -> <empty>
Rule 145   check_multdiv_operator -> <empty>
Rule 146   saw_relational_operator -> <empty>
Rule 147   check_relational_operator -> <empty>
Rule 148   check_and_operator -> <empty>
Rule 149   check_or_operator -> <empty>
Rule 150   saw_and -> <empty>
Rule 151   saw_or -> <empty>
Rule 152   saw_oparen -> <empty>
Rule 153   saw_cparen -> <empty>
Rule 154   saw_function -> <empty>
Rule 155   saw_function_end -> <empty>
Rule 156   scope_end -> <empty>
Rule 157   class_scope_end -> <empty>
Rule 158   saw_print -> <empty>
Rule 159   saw_print_end -> <empty>
Rule 160   saw_read -> <empty>
Rule 161   saw_read_exp -> <empty>
Rule 162   saw_read_end -> <empty>
Rule 163   bc_end -> <empty>
Rule 164   saw_else -> <empty>
Rule 165   saw_while -> <empty>
Rule 166   saw_while_end -> <empty>
Rule 167   count_vars -> <empty>
Rule 168   verify_func -> <empty>
Rule 169   verify_param -> <empty>
Rule 170   increment_cont -> <empty>
Rule 171   generate_gosub -> <empty>
Rule 172   saw_cond -> <empty>

Terminals, with rules where they appear

AND                  : 100
AS                   : 71
ATTRIBUTES           : 19
BOOL                 : 41
BOOLS                : 46
BY                   : 21
CBRACKET             : 17 32 35 37 86 88 91
CCURLY               : 19 52 53
CHAR                 : 43
CHARS                : 48
CLASS                : 18
COLON                : 18 19 19 76
COMMA                : 14 33 35 78 81 94
COMMENT              : 
CPAREN               : 6 9 21 75 77 80 92 93 118
CSTCHAR              : 125
CSTFLT               : 124
CSTINT               : 17 22 32 35 37 123
CSTSTRING            : 126
DATAFRAME            : 50
DIV                  : 116
ELSE                 : 73
EQ                   : 107
FALSE                : 84
FILE                 : 51
FLOAT                : 40
FLOATS               : 45
FOR                  : 21
FROM                 : 21
FUNCTION             : 9
GT                   : 104
GTE                  : 105
ID                   : 1 9 16 17 18 30 31 32 33 35 49 85 86 87 90 91 92 93
IF                   : 72
INT                  : 6 39
INTS                 : 44
LT                   : 103
LTE                  : 106
MAIN                 : 6
METHODS              : 19
MINUS                : 112
MULT                 : 115
NE                   : 108
OBRACKET             : 17 32 35 37 86 88 91
OCURLY               : 19 52 53
OPAREN               : 6 9 21 75 77 80 92 93 118
OR                   : 97
PERIOD               : 90 91
PLUS                 : 111
PRINT                : 77
PROGRAM              : 1
QUESTION             : 76
READ                 : 80
RETURN               : 64 70
SEMICOLON            : 1 18 20 21 25 72 76
STRING               : 42
STRINGS              : 47
THEN                 : 20 21 72
TO                   : 21
TRUE                 : 83
VAR                  : 25
VOID                 : 11
WHILE                : 20
error                : 

Nonterminals, with rules where they appear

assign               : 56 65
b1                   : 52 53 54
bc_end               : 72 76
block                : 6 9 20 21 72 73
boolean              : 127
check_and_operator   : 99
check_multdiv_operator : 118 119 120
check_or_operator    : 96
check_plusminus_operator : 114
check_relational_operator : 102
class                : 3
class_block          : 18
class_scope_end      : 18
compound             : 30
cond1                : 72
cond2                : 20 72
conditional          : 58
count_vars           : 53
dec                  : 2 24 26
dec1                 : 25
decs                 : 19 28 53
decs1                : 24
e1                   : 77 78 81
empty                : 5 8 13 15 27 29 34 36 38 55 74 79 82 89 95 98 101 109 113 117
estatuto             : 54
estatuto_redux       : 76 76
exp                  : 64 70 71 75 76 77 78 86 88 91 92 94 118
exp1                 : 96 97
factor               : 114 115 116
for_loop             : 62
for_loop1            : 21 21 21
func1                : 9
function             : 4 7
function_call        : 57 66 121
function_call1       : 92 94
functions            : 7 19
generate_gosub       : 92 93
gexp                 : 99 100
gexp1                : 102
increment_cont       : 94
l1                   : 80
main                 : 1
mexp                 : 102 103 104 105 106 107 108
mexp1                : 110 111 112
multiple             : 17 32
param                : 9
param1               : 12 14
param2               : 12 14
program              : 0
program_content      : 1 2 3 4
read                 : 60 68
saw_and              : 100
saw_asig             : 71
saw_called_var       : 85 86
saw_called_var_from_class : 90 91
saw_class            : 18
saw_cond             : 76
saw_cparen           : 118
saw_dimension        : 17 32 35 37 86 88 91
saw_else             : 73 76
saw_end_value        : 123 124 125 126 127
saw_function         : 9
saw_function_end     : 6 9
saw_id               : 9 16 17 18 30 31 32 33 35 85 86 87 92 93
saw_main             : 6
saw_multdiv_operator : 115 116
saw_oparen           : 118
saw_or               : 97
saw_plusminus_operator : 111 112
saw_print            : 77
saw_print_end        : 77
saw_program          : 1
saw_program_end      : 1
saw_read             : 80
saw_read_end         : 80
saw_read_exp         : 80 81
saw_relational_operator : 103 104 105 106 107 108
saw_type             : 11 39 40 41 42 43 44 45 46 47 48 49 50 51
saw_var_factor       : 71 120
saw_variable         : 30 31 32 33 35
saw_variable_param   : 16 17
saw_while            : 20
saw_while_end        : 20
scope_end            : 6 9
simple               : 10 16 31
term1                : 114 115 116
termino              : 110 111 112
ternary              : 63 69
texp                 : 96 97
texp1                : 99 100
type                 : 25
type1                : 30 31 33
type2                : 32
type3                : 17 32 35
varcst               : 119
variable             : 21 23 71 80 81 120
variable1            : 86 91
variable2            : 87
verify_func          : 92 93
verify_param         : 92 94
while_loop           : 61
write                : 59 67

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON saw_program program_content main saw_program_end

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON saw_program program_content main saw_program_end

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON saw_program program_content main saw_program_end

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . saw_program program_content main saw_program_end
    (129) saw_program -> .

    VAR             reduce using rule 129 (saw_program -> .)
    CLASS           reduce using rule 129 (saw_program -> .)
    FUNCTION        reduce using rule 129 (saw_program -> .)
    INT             reduce using rule 129 (saw_program -> .)

    saw_program                    shift and go to state 5

state 5

    (1) program -> PROGRAM ID SEMICOLON saw_program . program_content main saw_program_end
    (2) program_content -> . dec program_content
    (3) program_content -> . class program_content
    (4) program_content -> . function program_content
    (5) program_content -> . empty
    (25) dec -> . VAR type SEMICOLON dec1
    (18) class -> . CLASS ID saw_id saw_class COLON class_block class_scope_end SEMICOLON
    (9) function -> . FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN block saw_function_end scope_end
    (128) empty -> .

    VAR             shift and go to state 11
    CLASS           shift and go to state 12
    FUNCTION        shift and go to state 13
    INT             reduce using rule 128 (empty -> .)

    program_content                shift and go to state 6
    dec                            shift and go to state 7
    class                          shift and go to state 8
    function                       shift and go to state 9
    empty                          shift and go to state 10

state 6

    (1) program -> PROGRAM ID SEMICOLON saw_program program_content . main saw_program_end
    (6) main -> . INT MAIN saw_main OPAREN CPAREN block saw_function_end scope_end

    INT             shift and go to state 15

    main                           shift and go to state 14

state 7

    (2) program_content -> dec . program_content
    (2) program_content -> . dec program_content
    (3) program_content -> . class program_content
    (4) program_content -> . function program_content
    (5) program_content -> . empty
    (25) dec -> . VAR type SEMICOLON dec1
    (18) class -> . CLASS ID saw_id saw_class COLON class_block class_scope_end SEMICOLON
    (9) function -> . FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN block saw_function_end scope_end
    (128) empty -> .

    VAR             shift and go to state 11
    CLASS           shift and go to state 12
    FUNCTION        shift and go to state 13
    INT             reduce using rule 128 (empty -> .)

    dec                            shift and go to state 7
    program_content                shift and go to state 16
    class                          shift and go to state 8
    function                       shift and go to state 9
    empty                          shift and go to state 10

state 8

    (3) program_content -> class . program_content
    (2) program_content -> . dec program_content
    (3) program_content -> . class program_content
    (4) program_content -> . function program_content
    (5) program_content -> . empty
    (25) dec -> . VAR type SEMICOLON dec1
    (18) class -> . CLASS ID saw_id saw_class COLON class_block class_scope_end SEMICOLON
    (9) function -> . FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN block saw_function_end scope_end
    (128) empty -> .

    VAR             shift and go to state 11
    CLASS           shift and go to state 12
    FUNCTION        shift and go to state 13
    INT             reduce using rule 128 (empty -> .)

    class                          shift and go to state 8
    program_content                shift and go to state 17
    dec                            shift and go to state 7
    function                       shift and go to state 9
    empty                          shift and go to state 10

state 9

    (4) program_content -> function . program_content
    (2) program_content -> . dec program_content
    (3) program_content -> . class program_content
    (4) program_content -> . function program_content
    (5) program_content -> . empty
    (25) dec -> . VAR type SEMICOLON dec1
    (18) class -> . CLASS ID saw_id saw_class COLON class_block class_scope_end SEMICOLON
    (9) function -> . FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN block saw_function_end scope_end
    (128) empty -> .

    VAR             shift and go to state 11
    CLASS           shift and go to state 12
    FUNCTION        shift and go to state 13
    INT             reduce using rule 128 (empty -> .)

    function                       shift and go to state 9
    program_content                shift and go to state 18
    dec                            shift and go to state 7
    class                          shift and go to state 8
    empty                          shift and go to state 10

state 10

    (5) program_content -> empty .

    INT             reduce using rule 5 (program_content -> empty .)


state 11

    (25) dec -> VAR . type SEMICOLON dec1
    (30) type -> . compound ID saw_id saw_variable type1
    (31) type -> . simple ID saw_id saw_variable type1
    (32) type -> . multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable type2
    (49) compound -> . ID saw_type
    (50) compound -> . DATAFRAME saw_type
    (51) compound -> . FILE saw_type
    (39) simple -> . INT saw_type
    (40) simple -> . FLOAT saw_type
    (41) simple -> . BOOL saw_type
    (42) simple -> . STRING saw_type
    (43) simple -> . CHAR saw_type
    (44) multiple -> . INTS saw_type
    (45) multiple -> . FLOATS saw_type
    (46) multiple -> . BOOLS saw_type
    (47) multiple -> . STRINGS saw_type
    (48) multiple -> . CHARS saw_type

    ID              shift and go to state 21
    DATAFRAME       shift and go to state 24
    FILE            shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    BOOL            shift and go to state 28
    STRING          shift and go to state 29
    CHAR            shift and go to state 30
    INTS            shift and go to state 31
    FLOATS          shift and go to state 32
    BOOLS           shift and go to state 33
    STRINGS         shift and go to state 34
    CHARS           shift and go to state 35

    type                           shift and go to state 19
    compound                       shift and go to state 20
    simple                         shift and go to state 22
    multiple                       shift and go to state 23

state 12

    (18) class -> CLASS . ID saw_id saw_class COLON class_block class_scope_end SEMICOLON

    ID              shift and go to state 36


state 13

    (9) function -> FUNCTION . func1 ID saw_id saw_function OPAREN param CPAREN block saw_function_end scope_end
    (10) func1 -> . simple
    (11) func1 -> . VOID saw_type
    (39) simple -> . INT saw_type
    (40) simple -> . FLOAT saw_type
    (41) simple -> . BOOL saw_type
    (42) simple -> . STRING saw_type
    (43) simple -> . CHAR saw_type

    VOID            shift and go to state 39
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    BOOL            shift and go to state 28
    STRING          shift and go to state 29
    CHAR            shift and go to state 30

    func1                          shift and go to state 37
    simple                         shift and go to state 38

state 14

    (1) program -> PROGRAM ID SEMICOLON saw_program program_content main . saw_program_end
    (130) saw_program_end -> .

    $end            reduce using rule 130 (saw_program_end -> .)

    saw_program_end                shift and go to state 40

state 15

    (6) main -> INT . MAIN saw_main OPAREN CPAREN block saw_function_end scope_end

    MAIN            shift and go to state 41


state 16

    (2) program_content -> dec program_content .

    INT             reduce using rule 2 (program_content -> dec program_content .)


state 17

    (3) program_content -> class program_content .

    INT             reduce using rule 3 (program_content -> class program_content .)


state 18

    (4) program_content -> function program_content .

    INT             reduce using rule 4 (program_content -> function program_content .)


state 19

    (25) dec -> VAR type . SEMICOLON dec1

    SEMICOLON       shift and go to state 42


state 20

    (30) type -> compound . ID saw_id saw_variable type1

    ID              shift and go to state 43


state 21

    (49) compound -> ID . saw_type
    (133) saw_type -> .

    ID              reduce using rule 133 (saw_type -> .)

    saw_type                       shift and go to state 44

state 22

    (31) type -> simple . ID saw_id saw_variable type1

    ID              shift and go to state 45


state 23

    (32) type -> multiple . ID saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable type2

    ID              shift and go to state 46


state 24

    (50) compound -> DATAFRAME . saw_type
    (133) saw_type -> .

    ID              reduce using rule 133 (saw_type -> .)

    saw_type                       shift and go to state 47

state 25

    (51) compound -> FILE . saw_type
    (133) saw_type -> .

    ID              reduce using rule 133 (saw_type -> .)

    saw_type                       shift and go to state 48

state 26

    (39) simple -> INT . saw_type
    (133) saw_type -> .

    ID              reduce using rule 133 (saw_type -> .)

    saw_type                       shift and go to state 49

state 27

    (40) simple -> FLOAT . saw_type
    (133) saw_type -> .

    ID              reduce using rule 133 (saw_type -> .)

    saw_type                       shift and go to state 50

state 28

    (41) simple -> BOOL . saw_type
    (133) saw_type -> .

    ID              reduce using rule 133 (saw_type -> .)

    saw_type                       shift and go to state 51

state 29

    (42) simple -> STRING . saw_type
    (133) saw_type -> .

    ID              reduce using rule 133 (saw_type -> .)

    saw_type                       shift and go to state 52

state 30

    (43) simple -> CHAR . saw_type
    (133) saw_type -> .

    ID              reduce using rule 133 (saw_type -> .)

    saw_type                       shift and go to state 53

state 31

    (44) multiple -> INTS . saw_type
    (133) saw_type -> .

    ID              reduce using rule 133 (saw_type -> .)

    saw_type                       shift and go to state 54

state 32

    (45) multiple -> FLOATS . saw_type
    (133) saw_type -> .

    ID              reduce using rule 133 (saw_type -> .)

    saw_type                       shift and go to state 55

state 33

    (46) multiple -> BOOLS . saw_type
    (133) saw_type -> .

    ID              reduce using rule 133 (saw_type -> .)

    saw_type                       shift and go to state 56

state 34

    (47) multiple -> STRINGS . saw_type
    (133) saw_type -> .

    ID              reduce using rule 133 (saw_type -> .)

    saw_type                       shift and go to state 57

state 35

    (48) multiple -> CHARS . saw_type
    (133) saw_type -> .

    ID              reduce using rule 133 (saw_type -> .)

    saw_type                       shift and go to state 58

state 36

    (18) class -> CLASS ID . saw_id saw_class COLON class_block class_scope_end SEMICOLON
    (134) saw_id -> .

    COLON           reduce using rule 134 (saw_id -> .)

    saw_id                         shift and go to state 59

state 37

    (9) function -> FUNCTION func1 . ID saw_id saw_function OPAREN param CPAREN block saw_function_end scope_end

    ID              shift and go to state 60


state 38

    (10) func1 -> simple .

    ID              reduce using rule 10 (func1 -> simple .)


state 39

    (11) func1 -> VOID . saw_type
    (133) saw_type -> .

    ID              reduce using rule 133 (saw_type -> .)

    saw_type                       shift and go to state 61

state 40

    (1) program -> PROGRAM ID SEMICOLON saw_program program_content main saw_program_end .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON saw_program program_content main saw_program_end .)


state 41

    (6) main -> INT MAIN . saw_main OPAREN CPAREN block saw_function_end scope_end
    (131) saw_main -> .

    OPAREN          reduce using rule 131 (saw_main -> .)

    saw_main                       shift and go to state 62

state 42

    (25) dec -> VAR type SEMICOLON . dec1
    (26) dec1 -> . dec
    (27) dec1 -> . empty
    (25) dec -> . VAR type SEMICOLON dec1
    (128) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 11
    CLASS           reduce using rule 128 (empty -> .)
    FUNCTION        reduce using rule 128 (empty -> .)
    INT             reduce using rule 128 (empty -> .)
    RETURN          reduce using rule 128 (empty -> .)
    ID              reduce using rule 128 (empty -> .)
    IF              reduce using rule 128 (empty -> .)
    PRINT           reduce using rule 128 (empty -> .)
    READ            reduce using rule 128 (empty -> .)
    WHILE           reduce using rule 128 (empty -> .)
    FOR             reduce using rule 128 (empty -> .)
    OPAREN          reduce using rule 128 (empty -> .)
    CSTINT          reduce using rule 128 (empty -> .)
    CSTFLT          reduce using rule 128 (empty -> .)
    CSTCHAR         reduce using rule 128 (empty -> .)
    CSTSTRING       reduce using rule 128 (empty -> .)
    TRUE            reduce using rule 128 (empty -> .)
    FALSE           reduce using rule 128 (empty -> .)
    CCURLY          reduce using rule 128 (empty -> .)
    METHODS         reduce using rule 128 (empty -> .)

  ! VAR             [ reduce using rule 128 (empty -> .) ]

    dec1                           shift and go to state 63
    dec                            shift and go to state 64
    empty                          shift and go to state 65

state 43

    (30) type -> compound ID . saw_id saw_variable type1
    (134) saw_id -> .

    COMMA           reduce using rule 134 (saw_id -> .)
    SEMICOLON       reduce using rule 134 (saw_id -> .)

    saw_id                         shift and go to state 66

state 44

    (49) compound -> ID saw_type .

    ID              reduce using rule 49 (compound -> ID saw_type .)


state 45

    (31) type -> simple ID . saw_id saw_variable type1
    (134) saw_id -> .

    COMMA           reduce using rule 134 (saw_id -> .)
    SEMICOLON       reduce using rule 134 (saw_id -> .)

    saw_id                         shift and go to state 67

state 46

    (32) type -> multiple ID . saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable type2
    (134) saw_id -> .

    OBRACKET        reduce using rule 134 (saw_id -> .)

    saw_id                         shift and go to state 68

state 47

    (50) compound -> DATAFRAME saw_type .

    ID              reduce using rule 50 (compound -> DATAFRAME saw_type .)


state 48

    (51) compound -> FILE saw_type .

    ID              reduce using rule 51 (compound -> FILE saw_type .)


state 49

    (39) simple -> INT saw_type .

    ID              reduce using rule 39 (simple -> INT saw_type .)


state 50

    (40) simple -> FLOAT saw_type .

    ID              reduce using rule 40 (simple -> FLOAT saw_type .)


state 51

    (41) simple -> BOOL saw_type .

    ID              reduce using rule 41 (simple -> BOOL saw_type .)


state 52

    (42) simple -> STRING saw_type .

    ID              reduce using rule 42 (simple -> STRING saw_type .)


state 53

    (43) simple -> CHAR saw_type .

    ID              reduce using rule 43 (simple -> CHAR saw_type .)


state 54

    (44) multiple -> INTS saw_type .

    ID              reduce using rule 44 (multiple -> INTS saw_type .)


state 55

    (45) multiple -> FLOATS saw_type .

    ID              reduce using rule 45 (multiple -> FLOATS saw_type .)


state 56

    (46) multiple -> BOOLS saw_type .

    ID              reduce using rule 46 (multiple -> BOOLS saw_type .)


state 57

    (47) multiple -> STRINGS saw_type .

    ID              reduce using rule 47 (multiple -> STRINGS saw_type .)


state 58

    (48) multiple -> CHARS saw_type .

    ID              reduce using rule 48 (multiple -> CHARS saw_type .)


state 59

    (18) class -> CLASS ID saw_id . saw_class COLON class_block class_scope_end SEMICOLON
    (132) saw_class -> .

    COLON           reduce using rule 132 (saw_class -> .)

    saw_class                      shift and go to state 69

state 60

    (9) function -> FUNCTION func1 ID . saw_id saw_function OPAREN param CPAREN block saw_function_end scope_end
    (134) saw_id -> .

    OPAREN          reduce using rule 134 (saw_id -> .)

    saw_id                         shift and go to state 70

state 61

    (11) func1 -> VOID saw_type .

    ID              reduce using rule 11 (func1 -> VOID saw_type .)


state 62

    (6) main -> INT MAIN saw_main . OPAREN CPAREN block saw_function_end scope_end

    OPAREN          shift and go to state 71


state 63

    (25) dec -> VAR type SEMICOLON dec1 .

    VAR             reduce using rule 25 (dec -> VAR type SEMICOLON dec1 .)
    CLASS           reduce using rule 25 (dec -> VAR type SEMICOLON dec1 .)
    FUNCTION        reduce using rule 25 (dec -> VAR type SEMICOLON dec1 .)
    INT             reduce using rule 25 (dec -> VAR type SEMICOLON dec1 .)
    RETURN          reduce using rule 25 (dec -> VAR type SEMICOLON dec1 .)
    ID              reduce using rule 25 (dec -> VAR type SEMICOLON dec1 .)
    IF              reduce using rule 25 (dec -> VAR type SEMICOLON dec1 .)
    PRINT           reduce using rule 25 (dec -> VAR type SEMICOLON dec1 .)
    READ            reduce using rule 25 (dec -> VAR type SEMICOLON dec1 .)
    WHILE           reduce using rule 25 (dec -> VAR type SEMICOLON dec1 .)
    FOR             reduce using rule 25 (dec -> VAR type SEMICOLON dec1 .)
    OPAREN          reduce using rule 25 (dec -> VAR type SEMICOLON dec1 .)
    CSTINT          reduce using rule 25 (dec -> VAR type SEMICOLON dec1 .)
    CSTFLT          reduce using rule 25 (dec -> VAR type SEMICOLON dec1 .)
    CSTCHAR         reduce using rule 25 (dec -> VAR type SEMICOLON dec1 .)
    CSTSTRING       reduce using rule 25 (dec -> VAR type SEMICOLON dec1 .)
    TRUE            reduce using rule 25 (dec -> VAR type SEMICOLON dec1 .)
    FALSE           reduce using rule 25 (dec -> VAR type SEMICOLON dec1 .)
    CCURLY          reduce using rule 25 (dec -> VAR type SEMICOLON dec1 .)
    METHODS         reduce using rule 25 (dec -> VAR type SEMICOLON dec1 .)


state 64

    (26) dec1 -> dec .

    VAR             reduce using rule 26 (dec1 -> dec .)
    CLASS           reduce using rule 26 (dec1 -> dec .)
    FUNCTION        reduce using rule 26 (dec1 -> dec .)
    INT             reduce using rule 26 (dec1 -> dec .)
    RETURN          reduce using rule 26 (dec1 -> dec .)
    ID              reduce using rule 26 (dec1 -> dec .)
    IF              reduce using rule 26 (dec1 -> dec .)
    PRINT           reduce using rule 26 (dec1 -> dec .)
    READ            reduce using rule 26 (dec1 -> dec .)
    WHILE           reduce using rule 26 (dec1 -> dec .)
    FOR             reduce using rule 26 (dec1 -> dec .)
    OPAREN          reduce using rule 26 (dec1 -> dec .)
    CSTINT          reduce using rule 26 (dec1 -> dec .)
    CSTFLT          reduce using rule 26 (dec1 -> dec .)
    CSTCHAR         reduce using rule 26 (dec1 -> dec .)
    CSTSTRING       reduce using rule 26 (dec1 -> dec .)
    TRUE            reduce using rule 26 (dec1 -> dec .)
    FALSE           reduce using rule 26 (dec1 -> dec .)
    CCURLY          reduce using rule 26 (dec1 -> dec .)
    METHODS         reduce using rule 26 (dec1 -> dec .)


state 65

    (27) dec1 -> empty .

    VAR             reduce using rule 27 (dec1 -> empty .)
    CLASS           reduce using rule 27 (dec1 -> empty .)
    FUNCTION        reduce using rule 27 (dec1 -> empty .)
    INT             reduce using rule 27 (dec1 -> empty .)
    RETURN          reduce using rule 27 (dec1 -> empty .)
    ID              reduce using rule 27 (dec1 -> empty .)
    IF              reduce using rule 27 (dec1 -> empty .)
    PRINT           reduce using rule 27 (dec1 -> empty .)
    READ            reduce using rule 27 (dec1 -> empty .)
    WHILE           reduce using rule 27 (dec1 -> empty .)
    FOR             reduce using rule 27 (dec1 -> empty .)
    OPAREN          reduce using rule 27 (dec1 -> empty .)
    CSTINT          reduce using rule 27 (dec1 -> empty .)
    CSTFLT          reduce using rule 27 (dec1 -> empty .)
    CSTCHAR         reduce using rule 27 (dec1 -> empty .)
    CSTSTRING       reduce using rule 27 (dec1 -> empty .)
    TRUE            reduce using rule 27 (dec1 -> empty .)
    FALSE           reduce using rule 27 (dec1 -> empty .)
    CCURLY          reduce using rule 27 (dec1 -> empty .)
    METHODS         reduce using rule 27 (dec1 -> empty .)


state 66

    (30) type -> compound ID saw_id . saw_variable type1
    (135) saw_variable -> .

    COMMA           reduce using rule 135 (saw_variable -> .)
    SEMICOLON       reduce using rule 135 (saw_variable -> .)

    saw_variable                   shift and go to state 72

state 67

    (31) type -> simple ID saw_id . saw_variable type1
    (135) saw_variable -> .

    COMMA           reduce using rule 135 (saw_variable -> .)
    SEMICOLON       reduce using rule 135 (saw_variable -> .)

    saw_variable                   shift and go to state 73

state 68

    (32) type -> multiple ID saw_id . OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable type2

    OBRACKET        shift and go to state 74


state 69

    (18) class -> CLASS ID saw_id saw_class . COLON class_block class_scope_end SEMICOLON

    COLON           shift and go to state 75


state 70

    (9) function -> FUNCTION func1 ID saw_id . saw_function OPAREN param CPAREN block saw_function_end scope_end
    (154) saw_function -> .

    OPAREN          reduce using rule 154 (saw_function -> .)

    saw_function                   shift and go to state 76

state 71

    (6) main -> INT MAIN saw_main OPAREN . CPAREN block saw_function_end scope_end

    CPAREN          shift and go to state 77


state 72

    (30) type -> compound ID saw_id saw_variable . type1
    (33) type1 -> . COMMA ID saw_id saw_variable type1
    (34) type1 -> . empty
    (128) empty -> .

    COMMA           shift and go to state 79
    SEMICOLON       reduce using rule 128 (empty -> .)

    type1                          shift and go to state 78
    empty                          shift and go to state 80

state 73

    (31) type -> simple ID saw_id saw_variable . type1
    (33) type1 -> . COMMA ID saw_id saw_variable type1
    (34) type1 -> . empty
    (128) empty -> .

    COMMA           shift and go to state 79
    SEMICOLON       reduce using rule 128 (empty -> .)

    type1                          shift and go to state 81
    empty                          shift and go to state 80

state 74

    (32) type -> multiple ID saw_id OBRACKET . CSTINT CBRACKET saw_dimension type3 saw_variable type2

    CSTINT          shift and go to state 82


state 75

    (18) class -> CLASS ID saw_id saw_class COLON . class_block class_scope_end SEMICOLON
    (19) class_block -> . OCURLY ATTRIBUTES COLON decs METHODS COLON functions CCURLY

    OCURLY          shift and go to state 84

    class_block                    shift and go to state 83

state 76

    (9) function -> FUNCTION func1 ID saw_id saw_function . OPAREN param CPAREN block saw_function_end scope_end

    OPAREN          shift and go to state 85


state 77

    (6) main -> INT MAIN saw_main OPAREN CPAREN . block saw_function_end scope_end
    (52) block -> . OCURLY b1 CCURLY
    (53) block -> . OCURLY decs count_vars b1 CCURLY

    OCURLY          shift and go to state 87

    block                          shift and go to state 86

state 78

    (30) type -> compound ID saw_id saw_variable type1 .

    SEMICOLON       reduce using rule 30 (type -> compound ID saw_id saw_variable type1 .)


state 79

    (33) type1 -> COMMA . ID saw_id saw_variable type1

    ID              shift and go to state 88


state 80

    (34) type1 -> empty .

    SEMICOLON       reduce using rule 34 (type1 -> empty .)


state 81

    (31) type -> simple ID saw_id saw_variable type1 .

    SEMICOLON       reduce using rule 31 (type -> simple ID saw_id saw_variable type1 .)


state 82

    (32) type -> multiple ID saw_id OBRACKET CSTINT . CBRACKET saw_dimension type3 saw_variable type2

    CBRACKET        shift and go to state 89


state 83

    (18) class -> CLASS ID saw_id saw_class COLON class_block . class_scope_end SEMICOLON
    (157) class_scope_end -> .

    SEMICOLON       reduce using rule 157 (class_scope_end -> .)

    class_scope_end                shift and go to state 90

state 84

    (19) class_block -> OCURLY . ATTRIBUTES COLON decs METHODS COLON functions CCURLY

    ATTRIBUTES      shift and go to state 91


state 85

    (9) function -> FUNCTION func1 ID saw_id saw_function OPAREN . param CPAREN block saw_function_end scope_end
    (12) param -> . param2 param1
    (13) param -> . empty
    (16) param2 -> . simple ID saw_id saw_variable_param
    (17) param2 -> . multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable_param
    (128) empty -> .
    (39) simple -> . INT saw_type
    (40) simple -> . FLOAT saw_type
    (41) simple -> . BOOL saw_type
    (42) simple -> . STRING saw_type
    (43) simple -> . CHAR saw_type
    (44) multiple -> . INTS saw_type
    (45) multiple -> . FLOATS saw_type
    (46) multiple -> . BOOLS saw_type
    (47) multiple -> . STRINGS saw_type
    (48) multiple -> . CHARS saw_type

    CPAREN          reduce using rule 128 (empty -> .)
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    BOOL            shift and go to state 28
    STRING          shift and go to state 29
    CHAR            shift and go to state 30
    INTS            shift and go to state 31
    FLOATS          shift and go to state 32
    BOOLS           shift and go to state 33
    STRINGS         shift and go to state 34
    CHARS           shift and go to state 35

    param                          shift and go to state 92
    param2                         shift and go to state 93
    empty                          shift and go to state 94
    simple                         shift and go to state 95
    multiple                       shift and go to state 96

state 86

    (6) main -> INT MAIN saw_main OPAREN CPAREN block . saw_function_end scope_end
    (155) saw_function_end -> .

    $end            reduce using rule 155 (saw_function_end -> .)

    saw_function_end               shift and go to state 97

state 87

    (52) block -> OCURLY . b1 CCURLY
    (53) block -> OCURLY . decs count_vars b1 CCURLY
    (54) b1 -> . estatuto b1
    (55) b1 -> . empty
    (24) decs -> . dec decs1
    (56) estatuto -> . assign
    (57) estatuto -> . function_call
    (58) estatuto -> . conditional
    (59) estatuto -> . write
    (60) estatuto -> . read
    (61) estatuto -> . while_loop
    (62) estatuto -> . for_loop
    (63) estatuto -> . ternary
    (64) estatuto -> . RETURN exp
    (128) empty -> .
    (25) dec -> . VAR type SEMICOLON dec1
    (71) assign -> . variable saw_var_factor AS saw_asig exp
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (72) conditional -> . IF cond2 THEN block cond1 SEMICOLON bc_end
    (77) write -> . PRINT saw_print OPAREN exp e1 CPAREN saw_print_end
    (80) read -> . READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end
    (20) while_loop -> . WHILE saw_while cond2 THEN block SEMICOLON saw_while_end
    (21) for_loop -> . FOR OPAREN variable FROM for_loop1 TO for_loop1 BY for_loop1 CPAREN THEN block SEMICOLON
    (76) ternary -> . exp QUESTION saw_cond estatuto_redux COLON saw_else estatuto_redux SEMICOLON bc_end
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (96) exp -> . texp exp1 check_or_operator
    (99) texp -> . gexp texp1 check_and_operator
    (102) gexp -> . mexp gexp1 check_relational_operator
    (110) mexp -> . termino mexp1
    (114) termino -> . factor term1 check_plusminus_operator
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    RETURN          shift and go to state 111
    CCURLY          reduce using rule 128 (empty -> .)
    VAR             shift and go to state 11
    ID              shift and go to state 114
    IF              shift and go to state 116
    PRINT           shift and go to state 117
    READ            shift and go to state 118
    WHILE           shift and go to state 119
    FOR             shift and go to state 120
    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    b1                             shift and go to state 98
    decs                           shift and go to state 99
    estatuto                       shift and go to state 100
    empty                          shift and go to state 101
    dec                            shift and go to state 102
    assign                         shift and go to state 103
    function_call                  shift and go to state 104
    conditional                    shift and go to state 105
    write                          shift and go to state 106
    read                           shift and go to state 107
    while_loop                     shift and go to state 108
    for_loop                       shift and go to state 109
    ternary                        shift and go to state 110
    exp                            shift and go to state 112
    variable                       shift and go to state 113
    texp                           shift and go to state 121
    gexp                           shift and go to state 122
    mexp                           shift and go to state 123
    termino                        shift and go to state 124
    factor                         shift and go to state 125
    varcst                         shift and go to state 126
    boolean                        shift and go to state 131

state 88

    (33) type1 -> COMMA ID . saw_id saw_variable type1
    (134) saw_id -> .

    COMMA           reduce using rule 134 (saw_id -> .)
    SEMICOLON       reduce using rule 134 (saw_id -> .)

    saw_id                         shift and go to state 134

state 89

    (32) type -> multiple ID saw_id OBRACKET CSTINT CBRACKET . saw_dimension type3 saw_variable type2
    (137) saw_dimension -> .

    OBRACKET        reduce using rule 137 (saw_dimension -> .)
    COMMA           reduce using rule 137 (saw_dimension -> .)
    SEMICOLON       reduce using rule 137 (saw_dimension -> .)

    saw_dimension                  shift and go to state 135

state 90

    (18) class -> CLASS ID saw_id saw_class COLON class_block class_scope_end . SEMICOLON

    SEMICOLON       shift and go to state 136


state 91

    (19) class_block -> OCURLY ATTRIBUTES . COLON decs METHODS COLON functions CCURLY

    COLON           shift and go to state 137


state 92

    (9) function -> FUNCTION func1 ID saw_id saw_function OPAREN param . CPAREN block saw_function_end scope_end

    CPAREN          shift and go to state 138


state 93

    (12) param -> param2 . param1
    (14) param1 -> . COMMA param2 param1
    (15) param1 -> . empty
    (128) empty -> .

    COMMA           shift and go to state 140
    CPAREN          reduce using rule 128 (empty -> .)

    param1                         shift and go to state 139
    empty                          shift and go to state 141

state 94

    (13) param -> empty .

    CPAREN          reduce using rule 13 (param -> empty .)


state 95

    (16) param2 -> simple . ID saw_id saw_variable_param

    ID              shift and go to state 142


state 96

    (17) param2 -> multiple . ID saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable_param

    ID              shift and go to state 143


state 97

    (6) main -> INT MAIN saw_main OPAREN CPAREN block saw_function_end . scope_end
    (156) scope_end -> .

    $end            reduce using rule 156 (scope_end -> .)

    scope_end                      shift and go to state 144

state 98

    (52) block -> OCURLY b1 . CCURLY

    CCURLY          shift and go to state 145


state 99

    (53) block -> OCURLY decs . count_vars b1 CCURLY
    (167) count_vars -> .

    RETURN          reduce using rule 167 (count_vars -> .)
    ID              reduce using rule 167 (count_vars -> .)
    IF              reduce using rule 167 (count_vars -> .)
    PRINT           reduce using rule 167 (count_vars -> .)
    READ            reduce using rule 167 (count_vars -> .)
    WHILE           reduce using rule 167 (count_vars -> .)
    FOR             reduce using rule 167 (count_vars -> .)
    OPAREN          reduce using rule 167 (count_vars -> .)
    CSTINT          reduce using rule 167 (count_vars -> .)
    CSTFLT          reduce using rule 167 (count_vars -> .)
    CSTCHAR         reduce using rule 167 (count_vars -> .)
    CSTSTRING       reduce using rule 167 (count_vars -> .)
    TRUE            reduce using rule 167 (count_vars -> .)
    FALSE           reduce using rule 167 (count_vars -> .)
    CCURLY          reduce using rule 167 (count_vars -> .)

    count_vars                     shift and go to state 146

state 100

    (54) b1 -> estatuto . b1
    (54) b1 -> . estatuto b1
    (55) b1 -> . empty
    (56) estatuto -> . assign
    (57) estatuto -> . function_call
    (58) estatuto -> . conditional
    (59) estatuto -> . write
    (60) estatuto -> . read
    (61) estatuto -> . while_loop
    (62) estatuto -> . for_loop
    (63) estatuto -> . ternary
    (64) estatuto -> . RETURN exp
    (128) empty -> .
    (71) assign -> . variable saw_var_factor AS saw_asig exp
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (72) conditional -> . IF cond2 THEN block cond1 SEMICOLON bc_end
    (77) write -> . PRINT saw_print OPAREN exp e1 CPAREN saw_print_end
    (80) read -> . READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end
    (20) while_loop -> . WHILE saw_while cond2 THEN block SEMICOLON saw_while_end
    (21) for_loop -> . FOR OPAREN variable FROM for_loop1 TO for_loop1 BY for_loop1 CPAREN THEN block SEMICOLON
    (76) ternary -> . exp QUESTION saw_cond estatuto_redux COLON saw_else estatuto_redux SEMICOLON bc_end
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (96) exp -> . texp exp1 check_or_operator
    (99) texp -> . gexp texp1 check_and_operator
    (102) gexp -> . mexp gexp1 check_relational_operator
    (110) mexp -> . termino mexp1
    (114) termino -> . factor term1 check_plusminus_operator
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    RETURN          shift and go to state 111
    CCURLY          reduce using rule 128 (empty -> .)
    ID              shift and go to state 114
    IF              shift and go to state 116
    PRINT           shift and go to state 117
    READ            shift and go to state 118
    WHILE           shift and go to state 119
    FOR             shift and go to state 120
    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    estatuto                       shift and go to state 100
    b1                             shift and go to state 147
    empty                          shift and go to state 101
    assign                         shift and go to state 103
    function_call                  shift and go to state 104
    conditional                    shift and go to state 105
    write                          shift and go to state 106
    read                           shift and go to state 107
    while_loop                     shift and go to state 108
    for_loop                       shift and go to state 109
    ternary                        shift and go to state 110
    exp                            shift and go to state 112
    variable                       shift and go to state 113
    texp                           shift and go to state 121
    gexp                           shift and go to state 122
    mexp                           shift and go to state 123
    termino                        shift and go to state 124
    factor                         shift and go to state 125
    varcst                         shift and go to state 126
    boolean                        shift and go to state 131

state 101

    (55) b1 -> empty .

    CCURLY          reduce using rule 55 (b1 -> empty .)


state 102

    (24) decs -> dec . decs1
    (28) decs1 -> . decs
    (29) decs1 -> . empty
    (24) decs -> . dec decs1
    (128) empty -> .
    (25) dec -> . VAR type SEMICOLON dec1

    RETURN          reduce using rule 128 (empty -> .)
    ID              reduce using rule 128 (empty -> .)
    IF              reduce using rule 128 (empty -> .)
    PRINT           reduce using rule 128 (empty -> .)
    READ            reduce using rule 128 (empty -> .)
    WHILE           reduce using rule 128 (empty -> .)
    FOR             reduce using rule 128 (empty -> .)
    OPAREN          reduce using rule 128 (empty -> .)
    CSTINT          reduce using rule 128 (empty -> .)
    CSTFLT          reduce using rule 128 (empty -> .)
    CSTCHAR         reduce using rule 128 (empty -> .)
    CSTSTRING       reduce using rule 128 (empty -> .)
    TRUE            reduce using rule 128 (empty -> .)
    FALSE           reduce using rule 128 (empty -> .)
    CCURLY          reduce using rule 128 (empty -> .)
    METHODS         reduce using rule 128 (empty -> .)
    VAR             shift and go to state 11

    dec                            shift and go to state 102
    decs1                          shift and go to state 148
    decs                           shift and go to state 149
    empty                          shift and go to state 150

state 103

    (56) estatuto -> assign .

    RETURN          reduce using rule 56 (estatuto -> assign .)
    ID              reduce using rule 56 (estatuto -> assign .)
    IF              reduce using rule 56 (estatuto -> assign .)
    PRINT           reduce using rule 56 (estatuto -> assign .)
    READ            reduce using rule 56 (estatuto -> assign .)
    WHILE           reduce using rule 56 (estatuto -> assign .)
    FOR             reduce using rule 56 (estatuto -> assign .)
    OPAREN          reduce using rule 56 (estatuto -> assign .)
    CSTINT          reduce using rule 56 (estatuto -> assign .)
    CSTFLT          reduce using rule 56 (estatuto -> assign .)
    CSTCHAR         reduce using rule 56 (estatuto -> assign .)
    CSTSTRING       reduce using rule 56 (estatuto -> assign .)
    TRUE            reduce using rule 56 (estatuto -> assign .)
    FALSE           reduce using rule 56 (estatuto -> assign .)
    CCURLY          reduce using rule 56 (estatuto -> assign .)


state 104

    (57) estatuto -> function_call .
    (121) factor -> function_call .

    RETURN          reduce using rule 57 (estatuto -> function_call .)
    ID              reduce using rule 57 (estatuto -> function_call .)
    IF              reduce using rule 57 (estatuto -> function_call .)
    PRINT           reduce using rule 57 (estatuto -> function_call .)
    READ            reduce using rule 57 (estatuto -> function_call .)
    WHILE           reduce using rule 57 (estatuto -> function_call .)
    FOR             reduce using rule 57 (estatuto -> function_call .)
    OPAREN          reduce using rule 57 (estatuto -> function_call .)
    CSTINT          reduce using rule 57 (estatuto -> function_call .)
    CSTFLT          reduce using rule 57 (estatuto -> function_call .)
    CSTCHAR         reduce using rule 57 (estatuto -> function_call .)
    CSTSTRING       reduce using rule 57 (estatuto -> function_call .)
    TRUE            reduce using rule 57 (estatuto -> function_call .)
    FALSE           reduce using rule 57 (estatuto -> function_call .)
    CCURLY          reduce using rule 57 (estatuto -> function_call .)
    MULT            reduce using rule 121 (factor -> function_call .)
    DIV             reduce using rule 121 (factor -> function_call .)
    PLUS            reduce using rule 121 (factor -> function_call .)
    MINUS           reduce using rule 121 (factor -> function_call .)
    LT              reduce using rule 121 (factor -> function_call .)
    GT              reduce using rule 121 (factor -> function_call .)
    GTE             reduce using rule 121 (factor -> function_call .)
    LTE             reduce using rule 121 (factor -> function_call .)
    EQ              reduce using rule 121 (factor -> function_call .)
    NE              reduce using rule 121 (factor -> function_call .)
    AND             reduce using rule 121 (factor -> function_call .)
    OR              reduce using rule 121 (factor -> function_call .)
    QUESTION        reduce using rule 121 (factor -> function_call .)


state 105

    (58) estatuto -> conditional .

    RETURN          reduce using rule 58 (estatuto -> conditional .)
    ID              reduce using rule 58 (estatuto -> conditional .)
    IF              reduce using rule 58 (estatuto -> conditional .)
    PRINT           reduce using rule 58 (estatuto -> conditional .)
    READ            reduce using rule 58 (estatuto -> conditional .)
    WHILE           reduce using rule 58 (estatuto -> conditional .)
    FOR             reduce using rule 58 (estatuto -> conditional .)
    OPAREN          reduce using rule 58 (estatuto -> conditional .)
    CSTINT          reduce using rule 58 (estatuto -> conditional .)
    CSTFLT          reduce using rule 58 (estatuto -> conditional .)
    CSTCHAR         reduce using rule 58 (estatuto -> conditional .)
    CSTSTRING       reduce using rule 58 (estatuto -> conditional .)
    TRUE            reduce using rule 58 (estatuto -> conditional .)
    FALSE           reduce using rule 58 (estatuto -> conditional .)
    CCURLY          reduce using rule 58 (estatuto -> conditional .)


state 106

    (59) estatuto -> write .

    RETURN          reduce using rule 59 (estatuto -> write .)
    ID              reduce using rule 59 (estatuto -> write .)
    IF              reduce using rule 59 (estatuto -> write .)
    PRINT           reduce using rule 59 (estatuto -> write .)
    READ            reduce using rule 59 (estatuto -> write .)
    WHILE           reduce using rule 59 (estatuto -> write .)
    FOR             reduce using rule 59 (estatuto -> write .)
    OPAREN          reduce using rule 59 (estatuto -> write .)
    CSTINT          reduce using rule 59 (estatuto -> write .)
    CSTFLT          reduce using rule 59 (estatuto -> write .)
    CSTCHAR         reduce using rule 59 (estatuto -> write .)
    CSTSTRING       reduce using rule 59 (estatuto -> write .)
    TRUE            reduce using rule 59 (estatuto -> write .)
    FALSE           reduce using rule 59 (estatuto -> write .)
    CCURLY          reduce using rule 59 (estatuto -> write .)


state 107

    (60) estatuto -> read .

    RETURN          reduce using rule 60 (estatuto -> read .)
    ID              reduce using rule 60 (estatuto -> read .)
    IF              reduce using rule 60 (estatuto -> read .)
    PRINT           reduce using rule 60 (estatuto -> read .)
    READ            reduce using rule 60 (estatuto -> read .)
    WHILE           reduce using rule 60 (estatuto -> read .)
    FOR             reduce using rule 60 (estatuto -> read .)
    OPAREN          reduce using rule 60 (estatuto -> read .)
    CSTINT          reduce using rule 60 (estatuto -> read .)
    CSTFLT          reduce using rule 60 (estatuto -> read .)
    CSTCHAR         reduce using rule 60 (estatuto -> read .)
    CSTSTRING       reduce using rule 60 (estatuto -> read .)
    TRUE            reduce using rule 60 (estatuto -> read .)
    FALSE           reduce using rule 60 (estatuto -> read .)
    CCURLY          reduce using rule 60 (estatuto -> read .)


state 108

    (61) estatuto -> while_loop .

    RETURN          reduce using rule 61 (estatuto -> while_loop .)
    ID              reduce using rule 61 (estatuto -> while_loop .)
    IF              reduce using rule 61 (estatuto -> while_loop .)
    PRINT           reduce using rule 61 (estatuto -> while_loop .)
    READ            reduce using rule 61 (estatuto -> while_loop .)
    WHILE           reduce using rule 61 (estatuto -> while_loop .)
    FOR             reduce using rule 61 (estatuto -> while_loop .)
    OPAREN          reduce using rule 61 (estatuto -> while_loop .)
    CSTINT          reduce using rule 61 (estatuto -> while_loop .)
    CSTFLT          reduce using rule 61 (estatuto -> while_loop .)
    CSTCHAR         reduce using rule 61 (estatuto -> while_loop .)
    CSTSTRING       reduce using rule 61 (estatuto -> while_loop .)
    TRUE            reduce using rule 61 (estatuto -> while_loop .)
    FALSE           reduce using rule 61 (estatuto -> while_loop .)
    CCURLY          reduce using rule 61 (estatuto -> while_loop .)


state 109

    (62) estatuto -> for_loop .

    RETURN          reduce using rule 62 (estatuto -> for_loop .)
    ID              reduce using rule 62 (estatuto -> for_loop .)
    IF              reduce using rule 62 (estatuto -> for_loop .)
    PRINT           reduce using rule 62 (estatuto -> for_loop .)
    READ            reduce using rule 62 (estatuto -> for_loop .)
    WHILE           reduce using rule 62 (estatuto -> for_loop .)
    FOR             reduce using rule 62 (estatuto -> for_loop .)
    OPAREN          reduce using rule 62 (estatuto -> for_loop .)
    CSTINT          reduce using rule 62 (estatuto -> for_loop .)
    CSTFLT          reduce using rule 62 (estatuto -> for_loop .)
    CSTCHAR         reduce using rule 62 (estatuto -> for_loop .)
    CSTSTRING       reduce using rule 62 (estatuto -> for_loop .)
    TRUE            reduce using rule 62 (estatuto -> for_loop .)
    FALSE           reduce using rule 62 (estatuto -> for_loop .)
    CCURLY          reduce using rule 62 (estatuto -> for_loop .)


state 110

    (63) estatuto -> ternary .

    RETURN          reduce using rule 63 (estatuto -> ternary .)
    ID              reduce using rule 63 (estatuto -> ternary .)
    IF              reduce using rule 63 (estatuto -> ternary .)
    PRINT           reduce using rule 63 (estatuto -> ternary .)
    READ            reduce using rule 63 (estatuto -> ternary .)
    WHILE           reduce using rule 63 (estatuto -> ternary .)
    FOR             reduce using rule 63 (estatuto -> ternary .)
    OPAREN          reduce using rule 63 (estatuto -> ternary .)
    CSTINT          reduce using rule 63 (estatuto -> ternary .)
    CSTFLT          reduce using rule 63 (estatuto -> ternary .)
    CSTCHAR         reduce using rule 63 (estatuto -> ternary .)
    CSTSTRING       reduce using rule 63 (estatuto -> ternary .)
    TRUE            reduce using rule 63 (estatuto -> ternary .)
    FALSE           reduce using rule 63 (estatuto -> ternary .)
    CCURLY          reduce using rule 63 (estatuto -> ternary .)


state 111

    (64) estatuto -> RETURN . exp
    (96) exp -> . texp exp1 check_or_operator
    (99) texp -> . gexp texp1 check_and_operator
    (102) gexp -> . mexp gexp1 check_relational_operator
    (110) mexp -> . termino mexp1
    (114) termino -> . factor term1 check_plusminus_operator
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    ID              shift and go to state 154
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    exp                            shift and go to state 151
    texp                           shift and go to state 121
    gexp                           shift and go to state 122
    mexp                           shift and go to state 123
    termino                        shift and go to state 124
    factor                         shift and go to state 125
    varcst                         shift and go to state 126
    variable                       shift and go to state 152
    function_call                  shift and go to state 153
    boolean                        shift and go to state 131

state 112

    (76) ternary -> exp . QUESTION saw_cond estatuto_redux COLON saw_else estatuto_redux SEMICOLON bc_end

    QUESTION        shift and go to state 155


state 113

    (71) assign -> variable . saw_var_factor AS saw_asig exp
    (120) factor -> variable . saw_var_factor check_multdiv_operator
    (122) saw_var_factor -> .

    AS              reduce using rule 122 (saw_var_factor -> .)
    MULT            reduce using rule 122 (saw_var_factor -> .)
    DIV             reduce using rule 122 (saw_var_factor -> .)
    PLUS            reduce using rule 122 (saw_var_factor -> .)
    MINUS           reduce using rule 122 (saw_var_factor -> .)
    LT              reduce using rule 122 (saw_var_factor -> .)
    GT              reduce using rule 122 (saw_var_factor -> .)
    GTE             reduce using rule 122 (saw_var_factor -> .)
    LTE             reduce using rule 122 (saw_var_factor -> .)
    EQ              reduce using rule 122 (saw_var_factor -> .)
    NE              reduce using rule 122 (saw_var_factor -> .)
    AND             reduce using rule 122 (saw_var_factor -> .)
    OR              reduce using rule 122 (saw_var_factor -> .)
    QUESTION        reduce using rule 122 (saw_var_factor -> .)

    saw_var_factor                 shift and go to state 156

state 114

    (92) function_call -> ID . saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> ID . saw_id verify_func OPAREN CPAREN generate_gosub
    (85) variable -> ID . saw_id saw_called_var
    (86) variable -> ID . saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> ID . saw_id variable2
    (134) saw_id -> .

    OBRACKET        reduce using rule 134 (saw_id -> .)
    PERIOD          reduce using rule 134 (saw_id -> .)
    OPAREN          reduce using rule 134 (saw_id -> .)
    AS              reduce using rule 134 (saw_id -> .)
    MULT            reduce using rule 134 (saw_id -> .)
    DIV             reduce using rule 134 (saw_id -> .)
    PLUS            reduce using rule 134 (saw_id -> .)
    MINUS           reduce using rule 134 (saw_id -> .)
    LT              reduce using rule 134 (saw_id -> .)
    GT              reduce using rule 134 (saw_id -> .)
    GTE             reduce using rule 134 (saw_id -> .)
    LTE             reduce using rule 134 (saw_id -> .)
    EQ              reduce using rule 134 (saw_id -> .)
    NE              reduce using rule 134 (saw_id -> .)
    AND             reduce using rule 134 (saw_id -> .)
    OR              reduce using rule 134 (saw_id -> .)
    QUESTION        reduce using rule 134 (saw_id -> .)

    saw_id                         shift and go to state 157

state 115

    (118) factor -> OPAREN . saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (152) saw_oparen -> .

    OPAREN          reduce using rule 152 (saw_oparen -> .)
    CSTINT          reduce using rule 152 (saw_oparen -> .)
    CSTFLT          reduce using rule 152 (saw_oparen -> .)
    CSTCHAR         reduce using rule 152 (saw_oparen -> .)
    CSTSTRING       reduce using rule 152 (saw_oparen -> .)
    ID              reduce using rule 152 (saw_oparen -> .)
    TRUE            reduce using rule 152 (saw_oparen -> .)
    FALSE           reduce using rule 152 (saw_oparen -> .)

    saw_oparen                     shift and go to state 158

state 116

    (72) conditional -> IF . cond2 THEN block cond1 SEMICOLON bc_end
    (75) cond2 -> . OPAREN exp CPAREN

    OPAREN          shift and go to state 160

    cond2                          shift and go to state 159

state 117

    (77) write -> PRINT . saw_print OPAREN exp e1 CPAREN saw_print_end
    (158) saw_print -> .

    OPAREN          reduce using rule 158 (saw_print -> .)

    saw_print                      shift and go to state 161

state 118

    (80) read -> READ . saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end
    (160) saw_read -> .

    OPAREN          reduce using rule 160 (saw_read -> .)

    saw_read                       shift and go to state 162

state 119

    (20) while_loop -> WHILE . saw_while cond2 THEN block SEMICOLON saw_while_end
    (165) saw_while -> .

    OPAREN          reduce using rule 165 (saw_while -> .)

    saw_while                      shift and go to state 163

state 120

    (21) for_loop -> FOR . OPAREN variable FROM for_loop1 TO for_loop1 BY for_loop1 CPAREN THEN block SEMICOLON

    OPAREN          shift and go to state 164


state 121

    (96) exp -> texp . exp1 check_or_operator
    (97) exp1 -> . OR saw_or texp exp1
    (98) exp1 -> . empty
    (128) empty -> .

    OR              shift and go to state 166
    QUESTION        reduce using rule 128 (empty -> .)
    RETURN          reduce using rule 128 (empty -> .)
    ID              reduce using rule 128 (empty -> .)
    IF              reduce using rule 128 (empty -> .)
    PRINT           reduce using rule 128 (empty -> .)
    READ            reduce using rule 128 (empty -> .)
    WHILE           reduce using rule 128 (empty -> .)
    FOR             reduce using rule 128 (empty -> .)
    OPAREN          reduce using rule 128 (empty -> .)
    CSTINT          reduce using rule 128 (empty -> .)
    CSTFLT          reduce using rule 128 (empty -> .)
    CSTCHAR         reduce using rule 128 (empty -> .)
    CSTSTRING       reduce using rule 128 (empty -> .)
    TRUE            reduce using rule 128 (empty -> .)
    FALSE           reduce using rule 128 (empty -> .)
    CCURLY          reduce using rule 128 (empty -> .)
    CPAREN          reduce using rule 128 (empty -> .)
    CBRACKET        reduce using rule 128 (empty -> .)
    COMMA           reduce using rule 128 (empty -> .)
    COLON           reduce using rule 128 (empty -> .)
    SEMICOLON       reduce using rule 128 (empty -> .)

    exp1                           shift and go to state 165
    empty                          shift and go to state 167

state 122

    (99) texp -> gexp . texp1 check_and_operator
    (100) texp1 -> . AND saw_and gexp texp1
    (101) texp1 -> . empty
    (128) empty -> .

    AND             shift and go to state 169
    OR              reduce using rule 128 (empty -> .)
    QUESTION        reduce using rule 128 (empty -> .)
    RETURN          reduce using rule 128 (empty -> .)
    ID              reduce using rule 128 (empty -> .)
    IF              reduce using rule 128 (empty -> .)
    PRINT           reduce using rule 128 (empty -> .)
    READ            reduce using rule 128 (empty -> .)
    WHILE           reduce using rule 128 (empty -> .)
    FOR             reduce using rule 128 (empty -> .)
    OPAREN          reduce using rule 128 (empty -> .)
    CSTINT          reduce using rule 128 (empty -> .)
    CSTFLT          reduce using rule 128 (empty -> .)
    CSTCHAR         reduce using rule 128 (empty -> .)
    CSTSTRING       reduce using rule 128 (empty -> .)
    TRUE            reduce using rule 128 (empty -> .)
    FALSE           reduce using rule 128 (empty -> .)
    CCURLY          reduce using rule 128 (empty -> .)
    CPAREN          reduce using rule 128 (empty -> .)
    CBRACKET        reduce using rule 128 (empty -> .)
    COMMA           reduce using rule 128 (empty -> .)
    COLON           reduce using rule 128 (empty -> .)
    SEMICOLON       reduce using rule 128 (empty -> .)

    texp1                          shift and go to state 168
    empty                          shift and go to state 170

state 123

    (102) gexp -> mexp . gexp1 check_relational_operator
    (103) gexp1 -> . LT saw_relational_operator mexp
    (104) gexp1 -> . GT saw_relational_operator mexp
    (105) gexp1 -> . GTE saw_relational_operator mexp
    (106) gexp1 -> . LTE saw_relational_operator mexp
    (107) gexp1 -> . EQ saw_relational_operator mexp
    (108) gexp1 -> . NE saw_relational_operator mexp
    (109) gexp1 -> . empty
    (128) empty -> .

    LT              shift and go to state 172
    GT              shift and go to state 173
    GTE             shift and go to state 174
    LTE             shift and go to state 175
    EQ              shift and go to state 176
    NE              shift and go to state 177
    AND             reduce using rule 128 (empty -> .)
    OR              reduce using rule 128 (empty -> .)
    QUESTION        reduce using rule 128 (empty -> .)
    RETURN          reduce using rule 128 (empty -> .)
    ID              reduce using rule 128 (empty -> .)
    IF              reduce using rule 128 (empty -> .)
    PRINT           reduce using rule 128 (empty -> .)
    READ            reduce using rule 128 (empty -> .)
    WHILE           reduce using rule 128 (empty -> .)
    FOR             reduce using rule 128 (empty -> .)
    OPAREN          reduce using rule 128 (empty -> .)
    CSTINT          reduce using rule 128 (empty -> .)
    CSTFLT          reduce using rule 128 (empty -> .)
    CSTCHAR         reduce using rule 128 (empty -> .)
    CSTSTRING       reduce using rule 128 (empty -> .)
    TRUE            reduce using rule 128 (empty -> .)
    FALSE           reduce using rule 128 (empty -> .)
    CCURLY          reduce using rule 128 (empty -> .)
    CPAREN          reduce using rule 128 (empty -> .)
    CBRACKET        reduce using rule 128 (empty -> .)
    COMMA           reduce using rule 128 (empty -> .)
    COLON           reduce using rule 128 (empty -> .)
    SEMICOLON       reduce using rule 128 (empty -> .)

    gexp1                          shift and go to state 171
    empty                          shift and go to state 178

state 124

    (110) mexp -> termino . mexp1
    (111) mexp1 -> . PLUS saw_plusminus_operator termino mexp1
    (112) mexp1 -> . MINUS saw_plusminus_operator termino mexp1
    (113) mexp1 -> . empty
    (128) empty -> .

    PLUS            shift and go to state 180
    MINUS           shift and go to state 181
    LT              reduce using rule 128 (empty -> .)
    GT              reduce using rule 128 (empty -> .)
    GTE             reduce using rule 128 (empty -> .)
    LTE             reduce using rule 128 (empty -> .)
    EQ              reduce using rule 128 (empty -> .)
    NE              reduce using rule 128 (empty -> .)
    AND             reduce using rule 128 (empty -> .)
    OR              reduce using rule 128 (empty -> .)
    QUESTION        reduce using rule 128 (empty -> .)
    RETURN          reduce using rule 128 (empty -> .)
    ID              reduce using rule 128 (empty -> .)
    IF              reduce using rule 128 (empty -> .)
    PRINT           reduce using rule 128 (empty -> .)
    READ            reduce using rule 128 (empty -> .)
    WHILE           reduce using rule 128 (empty -> .)
    FOR             reduce using rule 128 (empty -> .)
    OPAREN          reduce using rule 128 (empty -> .)
    CSTINT          reduce using rule 128 (empty -> .)
    CSTFLT          reduce using rule 128 (empty -> .)
    CSTCHAR         reduce using rule 128 (empty -> .)
    CSTSTRING       reduce using rule 128 (empty -> .)
    TRUE            reduce using rule 128 (empty -> .)
    FALSE           reduce using rule 128 (empty -> .)
    CCURLY          reduce using rule 128 (empty -> .)
    CPAREN          reduce using rule 128 (empty -> .)
    CBRACKET        reduce using rule 128 (empty -> .)
    COMMA           reduce using rule 128 (empty -> .)
    COLON           reduce using rule 128 (empty -> .)
    SEMICOLON       reduce using rule 128 (empty -> .)

    mexp1                          shift and go to state 179
    empty                          shift and go to state 182

state 125

    (114) termino -> factor . term1 check_plusminus_operator
    (115) term1 -> . MULT saw_multdiv_operator factor term1
    (116) term1 -> . DIV saw_multdiv_operator factor term1
    (117) term1 -> . empty
    (128) empty -> .

    MULT            shift and go to state 184
    DIV             shift and go to state 185
    PLUS            reduce using rule 128 (empty -> .)
    MINUS           reduce using rule 128 (empty -> .)
    LT              reduce using rule 128 (empty -> .)
    GT              reduce using rule 128 (empty -> .)
    GTE             reduce using rule 128 (empty -> .)
    LTE             reduce using rule 128 (empty -> .)
    EQ              reduce using rule 128 (empty -> .)
    NE              reduce using rule 128 (empty -> .)
    AND             reduce using rule 128 (empty -> .)
    OR              reduce using rule 128 (empty -> .)
    QUESTION        reduce using rule 128 (empty -> .)
    RETURN          reduce using rule 128 (empty -> .)
    ID              reduce using rule 128 (empty -> .)
    IF              reduce using rule 128 (empty -> .)
    PRINT           reduce using rule 128 (empty -> .)
    READ            reduce using rule 128 (empty -> .)
    WHILE           reduce using rule 128 (empty -> .)
    FOR             reduce using rule 128 (empty -> .)
    OPAREN          reduce using rule 128 (empty -> .)
    CSTINT          reduce using rule 128 (empty -> .)
    CSTFLT          reduce using rule 128 (empty -> .)
    CSTCHAR         reduce using rule 128 (empty -> .)
    CSTSTRING       reduce using rule 128 (empty -> .)
    TRUE            reduce using rule 128 (empty -> .)
    FALSE           reduce using rule 128 (empty -> .)
    CCURLY          reduce using rule 128 (empty -> .)
    CPAREN          reduce using rule 128 (empty -> .)
    CBRACKET        reduce using rule 128 (empty -> .)
    COMMA           reduce using rule 128 (empty -> .)
    COLON           reduce using rule 128 (empty -> .)
    SEMICOLON       reduce using rule 128 (empty -> .)

    term1                          shift and go to state 183
    empty                          shift and go to state 186

state 126

    (119) factor -> varcst . check_multdiv_operator
    (145) check_multdiv_operator -> .

    MULT            reduce using rule 145 (check_multdiv_operator -> .)
    DIV             reduce using rule 145 (check_multdiv_operator -> .)
    PLUS            reduce using rule 145 (check_multdiv_operator -> .)
    MINUS           reduce using rule 145 (check_multdiv_operator -> .)
    LT              reduce using rule 145 (check_multdiv_operator -> .)
    GT              reduce using rule 145 (check_multdiv_operator -> .)
    GTE             reduce using rule 145 (check_multdiv_operator -> .)
    LTE             reduce using rule 145 (check_multdiv_operator -> .)
    EQ              reduce using rule 145 (check_multdiv_operator -> .)
    NE              reduce using rule 145 (check_multdiv_operator -> .)
    AND             reduce using rule 145 (check_multdiv_operator -> .)
    OR              reduce using rule 145 (check_multdiv_operator -> .)
    QUESTION        reduce using rule 145 (check_multdiv_operator -> .)
    RETURN          reduce using rule 145 (check_multdiv_operator -> .)
    ID              reduce using rule 145 (check_multdiv_operator -> .)
    IF              reduce using rule 145 (check_multdiv_operator -> .)
    PRINT           reduce using rule 145 (check_multdiv_operator -> .)
    READ            reduce using rule 145 (check_multdiv_operator -> .)
    WHILE           reduce using rule 145 (check_multdiv_operator -> .)
    FOR             reduce using rule 145 (check_multdiv_operator -> .)
    OPAREN          reduce using rule 145 (check_multdiv_operator -> .)
    CSTINT          reduce using rule 145 (check_multdiv_operator -> .)
    CSTFLT          reduce using rule 145 (check_multdiv_operator -> .)
    CSTCHAR         reduce using rule 145 (check_multdiv_operator -> .)
    CSTSTRING       reduce using rule 145 (check_multdiv_operator -> .)
    TRUE            reduce using rule 145 (check_multdiv_operator -> .)
    FALSE           reduce using rule 145 (check_multdiv_operator -> .)
    CCURLY          reduce using rule 145 (check_multdiv_operator -> .)
    CPAREN          reduce using rule 145 (check_multdiv_operator -> .)
    CBRACKET        reduce using rule 145 (check_multdiv_operator -> .)
    COMMA           reduce using rule 145 (check_multdiv_operator -> .)
    COLON           reduce using rule 145 (check_multdiv_operator -> .)
    SEMICOLON       reduce using rule 145 (check_multdiv_operator -> .)

    check_multdiv_operator         shift and go to state 187

state 127

    (123) varcst -> CSTINT . saw_end_value
    (141) saw_end_value -> .

    MULT            reduce using rule 141 (saw_end_value -> .)
    DIV             reduce using rule 141 (saw_end_value -> .)
    PLUS            reduce using rule 141 (saw_end_value -> .)
    MINUS           reduce using rule 141 (saw_end_value -> .)
    LT              reduce using rule 141 (saw_end_value -> .)
    GT              reduce using rule 141 (saw_end_value -> .)
    GTE             reduce using rule 141 (saw_end_value -> .)
    LTE             reduce using rule 141 (saw_end_value -> .)
    EQ              reduce using rule 141 (saw_end_value -> .)
    NE              reduce using rule 141 (saw_end_value -> .)
    AND             reduce using rule 141 (saw_end_value -> .)
    OR              reduce using rule 141 (saw_end_value -> .)
    QUESTION        reduce using rule 141 (saw_end_value -> .)
    RETURN          reduce using rule 141 (saw_end_value -> .)
    ID              reduce using rule 141 (saw_end_value -> .)
    IF              reduce using rule 141 (saw_end_value -> .)
    PRINT           reduce using rule 141 (saw_end_value -> .)
    READ            reduce using rule 141 (saw_end_value -> .)
    WHILE           reduce using rule 141 (saw_end_value -> .)
    FOR             reduce using rule 141 (saw_end_value -> .)
    OPAREN          reduce using rule 141 (saw_end_value -> .)
    CSTINT          reduce using rule 141 (saw_end_value -> .)
    CSTFLT          reduce using rule 141 (saw_end_value -> .)
    CSTCHAR         reduce using rule 141 (saw_end_value -> .)
    CSTSTRING       reduce using rule 141 (saw_end_value -> .)
    TRUE            reduce using rule 141 (saw_end_value -> .)
    FALSE           reduce using rule 141 (saw_end_value -> .)
    CCURLY          reduce using rule 141 (saw_end_value -> .)
    CPAREN          reduce using rule 141 (saw_end_value -> .)
    CBRACKET        reduce using rule 141 (saw_end_value -> .)
    COMMA           reduce using rule 141 (saw_end_value -> .)
    COLON           reduce using rule 141 (saw_end_value -> .)
    SEMICOLON       reduce using rule 141 (saw_end_value -> .)

    saw_end_value                  shift and go to state 188

state 128

    (124) varcst -> CSTFLT . saw_end_value
    (141) saw_end_value -> .

    MULT            reduce using rule 141 (saw_end_value -> .)
    DIV             reduce using rule 141 (saw_end_value -> .)
    PLUS            reduce using rule 141 (saw_end_value -> .)
    MINUS           reduce using rule 141 (saw_end_value -> .)
    LT              reduce using rule 141 (saw_end_value -> .)
    GT              reduce using rule 141 (saw_end_value -> .)
    GTE             reduce using rule 141 (saw_end_value -> .)
    LTE             reduce using rule 141 (saw_end_value -> .)
    EQ              reduce using rule 141 (saw_end_value -> .)
    NE              reduce using rule 141 (saw_end_value -> .)
    AND             reduce using rule 141 (saw_end_value -> .)
    OR              reduce using rule 141 (saw_end_value -> .)
    QUESTION        reduce using rule 141 (saw_end_value -> .)
    RETURN          reduce using rule 141 (saw_end_value -> .)
    ID              reduce using rule 141 (saw_end_value -> .)
    IF              reduce using rule 141 (saw_end_value -> .)
    PRINT           reduce using rule 141 (saw_end_value -> .)
    READ            reduce using rule 141 (saw_end_value -> .)
    WHILE           reduce using rule 141 (saw_end_value -> .)
    FOR             reduce using rule 141 (saw_end_value -> .)
    OPAREN          reduce using rule 141 (saw_end_value -> .)
    CSTINT          reduce using rule 141 (saw_end_value -> .)
    CSTFLT          reduce using rule 141 (saw_end_value -> .)
    CSTCHAR         reduce using rule 141 (saw_end_value -> .)
    CSTSTRING       reduce using rule 141 (saw_end_value -> .)
    TRUE            reduce using rule 141 (saw_end_value -> .)
    FALSE           reduce using rule 141 (saw_end_value -> .)
    CCURLY          reduce using rule 141 (saw_end_value -> .)
    CPAREN          reduce using rule 141 (saw_end_value -> .)
    CBRACKET        reduce using rule 141 (saw_end_value -> .)
    COMMA           reduce using rule 141 (saw_end_value -> .)
    COLON           reduce using rule 141 (saw_end_value -> .)
    SEMICOLON       reduce using rule 141 (saw_end_value -> .)

    saw_end_value                  shift and go to state 189

state 129

    (125) varcst -> CSTCHAR . saw_end_value
    (141) saw_end_value -> .

    MULT            reduce using rule 141 (saw_end_value -> .)
    DIV             reduce using rule 141 (saw_end_value -> .)
    PLUS            reduce using rule 141 (saw_end_value -> .)
    MINUS           reduce using rule 141 (saw_end_value -> .)
    LT              reduce using rule 141 (saw_end_value -> .)
    GT              reduce using rule 141 (saw_end_value -> .)
    GTE             reduce using rule 141 (saw_end_value -> .)
    LTE             reduce using rule 141 (saw_end_value -> .)
    EQ              reduce using rule 141 (saw_end_value -> .)
    NE              reduce using rule 141 (saw_end_value -> .)
    AND             reduce using rule 141 (saw_end_value -> .)
    OR              reduce using rule 141 (saw_end_value -> .)
    QUESTION        reduce using rule 141 (saw_end_value -> .)
    RETURN          reduce using rule 141 (saw_end_value -> .)
    ID              reduce using rule 141 (saw_end_value -> .)
    IF              reduce using rule 141 (saw_end_value -> .)
    PRINT           reduce using rule 141 (saw_end_value -> .)
    READ            reduce using rule 141 (saw_end_value -> .)
    WHILE           reduce using rule 141 (saw_end_value -> .)
    FOR             reduce using rule 141 (saw_end_value -> .)
    OPAREN          reduce using rule 141 (saw_end_value -> .)
    CSTINT          reduce using rule 141 (saw_end_value -> .)
    CSTFLT          reduce using rule 141 (saw_end_value -> .)
    CSTCHAR         reduce using rule 141 (saw_end_value -> .)
    CSTSTRING       reduce using rule 141 (saw_end_value -> .)
    TRUE            reduce using rule 141 (saw_end_value -> .)
    FALSE           reduce using rule 141 (saw_end_value -> .)
    CCURLY          reduce using rule 141 (saw_end_value -> .)
    CPAREN          reduce using rule 141 (saw_end_value -> .)
    CBRACKET        reduce using rule 141 (saw_end_value -> .)
    COMMA           reduce using rule 141 (saw_end_value -> .)
    COLON           reduce using rule 141 (saw_end_value -> .)
    SEMICOLON       reduce using rule 141 (saw_end_value -> .)

    saw_end_value                  shift and go to state 190

state 130

    (126) varcst -> CSTSTRING . saw_end_value
    (141) saw_end_value -> .

    MULT            reduce using rule 141 (saw_end_value -> .)
    DIV             reduce using rule 141 (saw_end_value -> .)
    PLUS            reduce using rule 141 (saw_end_value -> .)
    MINUS           reduce using rule 141 (saw_end_value -> .)
    LT              reduce using rule 141 (saw_end_value -> .)
    GT              reduce using rule 141 (saw_end_value -> .)
    GTE             reduce using rule 141 (saw_end_value -> .)
    LTE             reduce using rule 141 (saw_end_value -> .)
    EQ              reduce using rule 141 (saw_end_value -> .)
    NE              reduce using rule 141 (saw_end_value -> .)
    AND             reduce using rule 141 (saw_end_value -> .)
    OR              reduce using rule 141 (saw_end_value -> .)
    QUESTION        reduce using rule 141 (saw_end_value -> .)
    RETURN          reduce using rule 141 (saw_end_value -> .)
    ID              reduce using rule 141 (saw_end_value -> .)
    IF              reduce using rule 141 (saw_end_value -> .)
    PRINT           reduce using rule 141 (saw_end_value -> .)
    READ            reduce using rule 141 (saw_end_value -> .)
    WHILE           reduce using rule 141 (saw_end_value -> .)
    FOR             reduce using rule 141 (saw_end_value -> .)
    OPAREN          reduce using rule 141 (saw_end_value -> .)
    CSTINT          reduce using rule 141 (saw_end_value -> .)
    CSTFLT          reduce using rule 141 (saw_end_value -> .)
    CSTCHAR         reduce using rule 141 (saw_end_value -> .)
    CSTSTRING       reduce using rule 141 (saw_end_value -> .)
    TRUE            reduce using rule 141 (saw_end_value -> .)
    FALSE           reduce using rule 141 (saw_end_value -> .)
    CCURLY          reduce using rule 141 (saw_end_value -> .)
    CPAREN          reduce using rule 141 (saw_end_value -> .)
    CBRACKET        reduce using rule 141 (saw_end_value -> .)
    COMMA           reduce using rule 141 (saw_end_value -> .)
    COLON           reduce using rule 141 (saw_end_value -> .)
    SEMICOLON       reduce using rule 141 (saw_end_value -> .)

    saw_end_value                  shift and go to state 191

state 131

    (127) varcst -> boolean . saw_end_value
    (141) saw_end_value -> .

    MULT            reduce using rule 141 (saw_end_value -> .)
    DIV             reduce using rule 141 (saw_end_value -> .)
    PLUS            reduce using rule 141 (saw_end_value -> .)
    MINUS           reduce using rule 141 (saw_end_value -> .)
    LT              reduce using rule 141 (saw_end_value -> .)
    GT              reduce using rule 141 (saw_end_value -> .)
    GTE             reduce using rule 141 (saw_end_value -> .)
    LTE             reduce using rule 141 (saw_end_value -> .)
    EQ              reduce using rule 141 (saw_end_value -> .)
    NE              reduce using rule 141 (saw_end_value -> .)
    AND             reduce using rule 141 (saw_end_value -> .)
    OR              reduce using rule 141 (saw_end_value -> .)
    QUESTION        reduce using rule 141 (saw_end_value -> .)
    RETURN          reduce using rule 141 (saw_end_value -> .)
    ID              reduce using rule 141 (saw_end_value -> .)
    IF              reduce using rule 141 (saw_end_value -> .)
    PRINT           reduce using rule 141 (saw_end_value -> .)
    READ            reduce using rule 141 (saw_end_value -> .)
    WHILE           reduce using rule 141 (saw_end_value -> .)
    FOR             reduce using rule 141 (saw_end_value -> .)
    OPAREN          reduce using rule 141 (saw_end_value -> .)
    CSTINT          reduce using rule 141 (saw_end_value -> .)
    CSTFLT          reduce using rule 141 (saw_end_value -> .)
    CSTCHAR         reduce using rule 141 (saw_end_value -> .)
    CSTSTRING       reduce using rule 141 (saw_end_value -> .)
    TRUE            reduce using rule 141 (saw_end_value -> .)
    FALSE           reduce using rule 141 (saw_end_value -> .)
    CCURLY          reduce using rule 141 (saw_end_value -> .)
    CPAREN          reduce using rule 141 (saw_end_value -> .)
    CBRACKET        reduce using rule 141 (saw_end_value -> .)
    COMMA           reduce using rule 141 (saw_end_value -> .)
    COLON           reduce using rule 141 (saw_end_value -> .)
    SEMICOLON       reduce using rule 141 (saw_end_value -> .)

    saw_end_value                  shift and go to state 192

state 132

    (83) boolean -> TRUE .

    MULT            reduce using rule 83 (boolean -> TRUE .)
    DIV             reduce using rule 83 (boolean -> TRUE .)
    PLUS            reduce using rule 83 (boolean -> TRUE .)
    MINUS           reduce using rule 83 (boolean -> TRUE .)
    LT              reduce using rule 83 (boolean -> TRUE .)
    GT              reduce using rule 83 (boolean -> TRUE .)
    GTE             reduce using rule 83 (boolean -> TRUE .)
    LTE             reduce using rule 83 (boolean -> TRUE .)
    EQ              reduce using rule 83 (boolean -> TRUE .)
    NE              reduce using rule 83 (boolean -> TRUE .)
    AND             reduce using rule 83 (boolean -> TRUE .)
    OR              reduce using rule 83 (boolean -> TRUE .)
    QUESTION        reduce using rule 83 (boolean -> TRUE .)
    RETURN          reduce using rule 83 (boolean -> TRUE .)
    ID              reduce using rule 83 (boolean -> TRUE .)
    IF              reduce using rule 83 (boolean -> TRUE .)
    PRINT           reduce using rule 83 (boolean -> TRUE .)
    READ            reduce using rule 83 (boolean -> TRUE .)
    WHILE           reduce using rule 83 (boolean -> TRUE .)
    FOR             reduce using rule 83 (boolean -> TRUE .)
    OPAREN          reduce using rule 83 (boolean -> TRUE .)
    CSTINT          reduce using rule 83 (boolean -> TRUE .)
    CSTFLT          reduce using rule 83 (boolean -> TRUE .)
    CSTCHAR         reduce using rule 83 (boolean -> TRUE .)
    CSTSTRING       reduce using rule 83 (boolean -> TRUE .)
    TRUE            reduce using rule 83 (boolean -> TRUE .)
    FALSE           reduce using rule 83 (boolean -> TRUE .)
    CCURLY          reduce using rule 83 (boolean -> TRUE .)
    CPAREN          reduce using rule 83 (boolean -> TRUE .)
    CBRACKET        reduce using rule 83 (boolean -> TRUE .)
    COMMA           reduce using rule 83 (boolean -> TRUE .)
    COLON           reduce using rule 83 (boolean -> TRUE .)
    SEMICOLON       reduce using rule 83 (boolean -> TRUE .)


state 133

    (84) boolean -> FALSE .

    MULT            reduce using rule 84 (boolean -> FALSE .)
    DIV             reduce using rule 84 (boolean -> FALSE .)
    PLUS            reduce using rule 84 (boolean -> FALSE .)
    MINUS           reduce using rule 84 (boolean -> FALSE .)
    LT              reduce using rule 84 (boolean -> FALSE .)
    GT              reduce using rule 84 (boolean -> FALSE .)
    GTE             reduce using rule 84 (boolean -> FALSE .)
    LTE             reduce using rule 84 (boolean -> FALSE .)
    EQ              reduce using rule 84 (boolean -> FALSE .)
    NE              reduce using rule 84 (boolean -> FALSE .)
    AND             reduce using rule 84 (boolean -> FALSE .)
    OR              reduce using rule 84 (boolean -> FALSE .)
    QUESTION        reduce using rule 84 (boolean -> FALSE .)
    RETURN          reduce using rule 84 (boolean -> FALSE .)
    ID              reduce using rule 84 (boolean -> FALSE .)
    IF              reduce using rule 84 (boolean -> FALSE .)
    PRINT           reduce using rule 84 (boolean -> FALSE .)
    READ            reduce using rule 84 (boolean -> FALSE .)
    WHILE           reduce using rule 84 (boolean -> FALSE .)
    FOR             reduce using rule 84 (boolean -> FALSE .)
    OPAREN          reduce using rule 84 (boolean -> FALSE .)
    CSTINT          reduce using rule 84 (boolean -> FALSE .)
    CSTFLT          reduce using rule 84 (boolean -> FALSE .)
    CSTCHAR         reduce using rule 84 (boolean -> FALSE .)
    CSTSTRING       reduce using rule 84 (boolean -> FALSE .)
    TRUE            reduce using rule 84 (boolean -> FALSE .)
    FALSE           reduce using rule 84 (boolean -> FALSE .)
    CCURLY          reduce using rule 84 (boolean -> FALSE .)
    CPAREN          reduce using rule 84 (boolean -> FALSE .)
    CBRACKET        reduce using rule 84 (boolean -> FALSE .)
    COMMA           reduce using rule 84 (boolean -> FALSE .)
    COLON           reduce using rule 84 (boolean -> FALSE .)
    SEMICOLON       reduce using rule 84 (boolean -> FALSE .)


state 134

    (33) type1 -> COMMA ID saw_id . saw_variable type1
    (135) saw_variable -> .

    COMMA           reduce using rule 135 (saw_variable -> .)
    SEMICOLON       reduce using rule 135 (saw_variable -> .)

    saw_variable                   shift and go to state 193

state 135

    (32) type -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension . type3 saw_variable type2
    (37) type3 -> . OBRACKET CSTINT CBRACKET saw_dimension
    (38) type3 -> . empty
    (128) empty -> .

    OBRACKET        shift and go to state 194
    COMMA           reduce using rule 128 (empty -> .)
    SEMICOLON       reduce using rule 128 (empty -> .)

    type3                          shift and go to state 195
    empty                          shift and go to state 196

state 136

    (18) class -> CLASS ID saw_id saw_class COLON class_block class_scope_end SEMICOLON .

    VAR             reduce using rule 18 (class -> CLASS ID saw_id saw_class COLON class_block class_scope_end SEMICOLON .)
    CLASS           reduce using rule 18 (class -> CLASS ID saw_id saw_class COLON class_block class_scope_end SEMICOLON .)
    FUNCTION        reduce using rule 18 (class -> CLASS ID saw_id saw_class COLON class_block class_scope_end SEMICOLON .)
    INT             reduce using rule 18 (class -> CLASS ID saw_id saw_class COLON class_block class_scope_end SEMICOLON .)


state 137

    (19) class_block -> OCURLY ATTRIBUTES COLON . decs METHODS COLON functions CCURLY
    (24) decs -> . dec decs1
    (25) dec -> . VAR type SEMICOLON dec1

    VAR             shift and go to state 11

    decs                           shift and go to state 197
    dec                            shift and go to state 102

state 138

    (9) function -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN . block saw_function_end scope_end
    (52) block -> . OCURLY b1 CCURLY
    (53) block -> . OCURLY decs count_vars b1 CCURLY

    OCURLY          shift and go to state 87

    block                          shift and go to state 198

state 139

    (12) param -> param2 param1 .

    CPAREN          reduce using rule 12 (param -> param2 param1 .)


state 140

    (14) param1 -> COMMA . param2 param1
    (16) param2 -> . simple ID saw_id saw_variable_param
    (17) param2 -> . multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable_param
    (39) simple -> . INT saw_type
    (40) simple -> . FLOAT saw_type
    (41) simple -> . BOOL saw_type
    (42) simple -> . STRING saw_type
    (43) simple -> . CHAR saw_type
    (44) multiple -> . INTS saw_type
    (45) multiple -> . FLOATS saw_type
    (46) multiple -> . BOOLS saw_type
    (47) multiple -> . STRINGS saw_type
    (48) multiple -> . CHARS saw_type

    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    BOOL            shift and go to state 28
    STRING          shift and go to state 29
    CHAR            shift and go to state 30
    INTS            shift and go to state 31
    FLOATS          shift and go to state 32
    BOOLS           shift and go to state 33
    STRINGS         shift and go to state 34
    CHARS           shift and go to state 35

    param2                         shift and go to state 199
    simple                         shift and go to state 95
    multiple                       shift and go to state 96

state 141

    (15) param1 -> empty .

    CPAREN          reduce using rule 15 (param1 -> empty .)


state 142

    (16) param2 -> simple ID . saw_id saw_variable_param
    (134) saw_id -> .

    COMMA           reduce using rule 134 (saw_id -> .)
    CPAREN          reduce using rule 134 (saw_id -> .)

    saw_id                         shift and go to state 200

state 143

    (17) param2 -> multiple ID . saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable_param
    (134) saw_id -> .

    OBRACKET        reduce using rule 134 (saw_id -> .)

    saw_id                         shift and go to state 201

state 144

    (6) main -> INT MAIN saw_main OPAREN CPAREN block saw_function_end scope_end .

    $end            reduce using rule 6 (main -> INT MAIN saw_main OPAREN CPAREN block saw_function_end scope_end .)


state 145

    (52) block -> OCURLY b1 CCURLY .

    $end            reduce using rule 52 (block -> OCURLY b1 CCURLY .)
    VAR             reduce using rule 52 (block -> OCURLY b1 CCURLY .)
    CLASS           reduce using rule 52 (block -> OCURLY b1 CCURLY .)
    FUNCTION        reduce using rule 52 (block -> OCURLY b1 CCURLY .)
    INT             reduce using rule 52 (block -> OCURLY b1 CCURLY .)
    CCURLY          reduce using rule 52 (block -> OCURLY b1 CCURLY .)
    ELSE            reduce using rule 52 (block -> OCURLY b1 CCURLY .)
    SEMICOLON       reduce using rule 52 (block -> OCURLY b1 CCURLY .)


state 146

    (53) block -> OCURLY decs count_vars . b1 CCURLY
    (54) b1 -> . estatuto b1
    (55) b1 -> . empty
    (56) estatuto -> . assign
    (57) estatuto -> . function_call
    (58) estatuto -> . conditional
    (59) estatuto -> . write
    (60) estatuto -> . read
    (61) estatuto -> . while_loop
    (62) estatuto -> . for_loop
    (63) estatuto -> . ternary
    (64) estatuto -> . RETURN exp
    (128) empty -> .
    (71) assign -> . variable saw_var_factor AS saw_asig exp
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (72) conditional -> . IF cond2 THEN block cond1 SEMICOLON bc_end
    (77) write -> . PRINT saw_print OPAREN exp e1 CPAREN saw_print_end
    (80) read -> . READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end
    (20) while_loop -> . WHILE saw_while cond2 THEN block SEMICOLON saw_while_end
    (21) for_loop -> . FOR OPAREN variable FROM for_loop1 TO for_loop1 BY for_loop1 CPAREN THEN block SEMICOLON
    (76) ternary -> . exp QUESTION saw_cond estatuto_redux COLON saw_else estatuto_redux SEMICOLON bc_end
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (96) exp -> . texp exp1 check_or_operator
    (99) texp -> . gexp texp1 check_and_operator
    (102) gexp -> . mexp gexp1 check_relational_operator
    (110) mexp -> . termino mexp1
    (114) termino -> . factor term1 check_plusminus_operator
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    RETURN          shift and go to state 111
    CCURLY          reduce using rule 128 (empty -> .)
    ID              shift and go to state 114
    IF              shift and go to state 116
    PRINT           shift and go to state 117
    READ            shift and go to state 118
    WHILE           shift and go to state 119
    FOR             shift and go to state 120
    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    b1                             shift and go to state 202
    estatuto                       shift and go to state 100
    empty                          shift and go to state 101
    assign                         shift and go to state 103
    function_call                  shift and go to state 104
    conditional                    shift and go to state 105
    write                          shift and go to state 106
    read                           shift and go to state 107
    while_loop                     shift and go to state 108
    for_loop                       shift and go to state 109
    ternary                        shift and go to state 110
    exp                            shift and go to state 112
    variable                       shift and go to state 113
    texp                           shift and go to state 121
    gexp                           shift and go to state 122
    mexp                           shift and go to state 123
    termino                        shift and go to state 124
    factor                         shift and go to state 125
    varcst                         shift and go to state 126
    boolean                        shift and go to state 131

state 147

    (54) b1 -> estatuto b1 .

    CCURLY          reduce using rule 54 (b1 -> estatuto b1 .)


state 148

    (24) decs -> dec decs1 .

    RETURN          reduce using rule 24 (decs -> dec decs1 .)
    ID              reduce using rule 24 (decs -> dec decs1 .)
    IF              reduce using rule 24 (decs -> dec decs1 .)
    PRINT           reduce using rule 24 (decs -> dec decs1 .)
    READ            reduce using rule 24 (decs -> dec decs1 .)
    WHILE           reduce using rule 24 (decs -> dec decs1 .)
    FOR             reduce using rule 24 (decs -> dec decs1 .)
    OPAREN          reduce using rule 24 (decs -> dec decs1 .)
    CSTINT          reduce using rule 24 (decs -> dec decs1 .)
    CSTFLT          reduce using rule 24 (decs -> dec decs1 .)
    CSTCHAR         reduce using rule 24 (decs -> dec decs1 .)
    CSTSTRING       reduce using rule 24 (decs -> dec decs1 .)
    TRUE            reduce using rule 24 (decs -> dec decs1 .)
    FALSE           reduce using rule 24 (decs -> dec decs1 .)
    CCURLY          reduce using rule 24 (decs -> dec decs1 .)
    METHODS         reduce using rule 24 (decs -> dec decs1 .)


state 149

    (28) decs1 -> decs .

    RETURN          reduce using rule 28 (decs1 -> decs .)
    ID              reduce using rule 28 (decs1 -> decs .)
    IF              reduce using rule 28 (decs1 -> decs .)
    PRINT           reduce using rule 28 (decs1 -> decs .)
    READ            reduce using rule 28 (decs1 -> decs .)
    WHILE           reduce using rule 28 (decs1 -> decs .)
    FOR             reduce using rule 28 (decs1 -> decs .)
    OPAREN          reduce using rule 28 (decs1 -> decs .)
    CSTINT          reduce using rule 28 (decs1 -> decs .)
    CSTFLT          reduce using rule 28 (decs1 -> decs .)
    CSTCHAR         reduce using rule 28 (decs1 -> decs .)
    CSTSTRING       reduce using rule 28 (decs1 -> decs .)
    TRUE            reduce using rule 28 (decs1 -> decs .)
    FALSE           reduce using rule 28 (decs1 -> decs .)
    CCURLY          reduce using rule 28 (decs1 -> decs .)
    METHODS         reduce using rule 28 (decs1 -> decs .)


state 150

    (29) decs1 -> empty .

    RETURN          reduce using rule 29 (decs1 -> empty .)
    ID              reduce using rule 29 (decs1 -> empty .)
    IF              reduce using rule 29 (decs1 -> empty .)
    PRINT           reduce using rule 29 (decs1 -> empty .)
    READ            reduce using rule 29 (decs1 -> empty .)
    WHILE           reduce using rule 29 (decs1 -> empty .)
    FOR             reduce using rule 29 (decs1 -> empty .)
    OPAREN          reduce using rule 29 (decs1 -> empty .)
    CSTINT          reduce using rule 29 (decs1 -> empty .)
    CSTFLT          reduce using rule 29 (decs1 -> empty .)
    CSTCHAR         reduce using rule 29 (decs1 -> empty .)
    CSTSTRING       reduce using rule 29 (decs1 -> empty .)
    TRUE            reduce using rule 29 (decs1 -> empty .)
    FALSE           reduce using rule 29 (decs1 -> empty .)
    CCURLY          reduce using rule 29 (decs1 -> empty .)
    METHODS         reduce using rule 29 (decs1 -> empty .)


state 151

    (64) estatuto -> RETURN exp .

    RETURN          reduce using rule 64 (estatuto -> RETURN exp .)
    ID              reduce using rule 64 (estatuto -> RETURN exp .)
    IF              reduce using rule 64 (estatuto -> RETURN exp .)
    PRINT           reduce using rule 64 (estatuto -> RETURN exp .)
    READ            reduce using rule 64 (estatuto -> RETURN exp .)
    WHILE           reduce using rule 64 (estatuto -> RETURN exp .)
    FOR             reduce using rule 64 (estatuto -> RETURN exp .)
    OPAREN          reduce using rule 64 (estatuto -> RETURN exp .)
    CSTINT          reduce using rule 64 (estatuto -> RETURN exp .)
    CSTFLT          reduce using rule 64 (estatuto -> RETURN exp .)
    CSTCHAR         reduce using rule 64 (estatuto -> RETURN exp .)
    CSTSTRING       reduce using rule 64 (estatuto -> RETURN exp .)
    TRUE            reduce using rule 64 (estatuto -> RETURN exp .)
    FALSE           reduce using rule 64 (estatuto -> RETURN exp .)
    CCURLY          reduce using rule 64 (estatuto -> RETURN exp .)


state 152

    (120) factor -> variable . saw_var_factor check_multdiv_operator
    (122) saw_var_factor -> .

    MULT            reduce using rule 122 (saw_var_factor -> .)
    DIV             reduce using rule 122 (saw_var_factor -> .)
    PLUS            reduce using rule 122 (saw_var_factor -> .)
    MINUS           reduce using rule 122 (saw_var_factor -> .)
    LT              reduce using rule 122 (saw_var_factor -> .)
    GT              reduce using rule 122 (saw_var_factor -> .)
    GTE             reduce using rule 122 (saw_var_factor -> .)
    LTE             reduce using rule 122 (saw_var_factor -> .)
    EQ              reduce using rule 122 (saw_var_factor -> .)
    NE              reduce using rule 122 (saw_var_factor -> .)
    AND             reduce using rule 122 (saw_var_factor -> .)
    OR              reduce using rule 122 (saw_var_factor -> .)
    RETURN          reduce using rule 122 (saw_var_factor -> .)
    ID              reduce using rule 122 (saw_var_factor -> .)
    IF              reduce using rule 122 (saw_var_factor -> .)
    PRINT           reduce using rule 122 (saw_var_factor -> .)
    READ            reduce using rule 122 (saw_var_factor -> .)
    WHILE           reduce using rule 122 (saw_var_factor -> .)
    FOR             reduce using rule 122 (saw_var_factor -> .)
    OPAREN          reduce using rule 122 (saw_var_factor -> .)
    CSTINT          reduce using rule 122 (saw_var_factor -> .)
    CSTFLT          reduce using rule 122 (saw_var_factor -> .)
    CSTCHAR         reduce using rule 122 (saw_var_factor -> .)
    CSTSTRING       reduce using rule 122 (saw_var_factor -> .)
    TRUE            reduce using rule 122 (saw_var_factor -> .)
    FALSE           reduce using rule 122 (saw_var_factor -> .)
    CCURLY          reduce using rule 122 (saw_var_factor -> .)
    CPAREN          reduce using rule 122 (saw_var_factor -> .)
    CBRACKET        reduce using rule 122 (saw_var_factor -> .)
    COMMA           reduce using rule 122 (saw_var_factor -> .)
    QUESTION        reduce using rule 122 (saw_var_factor -> .)
    COLON           reduce using rule 122 (saw_var_factor -> .)
    SEMICOLON       reduce using rule 122 (saw_var_factor -> .)

    saw_var_factor                 shift and go to state 203

state 153

    (121) factor -> function_call .

    MULT            reduce using rule 121 (factor -> function_call .)
    DIV             reduce using rule 121 (factor -> function_call .)
    PLUS            reduce using rule 121 (factor -> function_call .)
    MINUS           reduce using rule 121 (factor -> function_call .)
    LT              reduce using rule 121 (factor -> function_call .)
    GT              reduce using rule 121 (factor -> function_call .)
    GTE             reduce using rule 121 (factor -> function_call .)
    LTE             reduce using rule 121 (factor -> function_call .)
    EQ              reduce using rule 121 (factor -> function_call .)
    NE              reduce using rule 121 (factor -> function_call .)
    AND             reduce using rule 121 (factor -> function_call .)
    OR              reduce using rule 121 (factor -> function_call .)
    RETURN          reduce using rule 121 (factor -> function_call .)
    ID              reduce using rule 121 (factor -> function_call .)
    IF              reduce using rule 121 (factor -> function_call .)
    PRINT           reduce using rule 121 (factor -> function_call .)
    READ            reduce using rule 121 (factor -> function_call .)
    WHILE           reduce using rule 121 (factor -> function_call .)
    FOR             reduce using rule 121 (factor -> function_call .)
    OPAREN          reduce using rule 121 (factor -> function_call .)
    CSTINT          reduce using rule 121 (factor -> function_call .)
    CSTFLT          reduce using rule 121 (factor -> function_call .)
    CSTCHAR         reduce using rule 121 (factor -> function_call .)
    CSTSTRING       reduce using rule 121 (factor -> function_call .)
    TRUE            reduce using rule 121 (factor -> function_call .)
    FALSE           reduce using rule 121 (factor -> function_call .)
    CCURLY          reduce using rule 121 (factor -> function_call .)
    CPAREN          reduce using rule 121 (factor -> function_call .)
    CBRACKET        reduce using rule 121 (factor -> function_call .)
    COMMA           reduce using rule 121 (factor -> function_call .)
    QUESTION        reduce using rule 121 (factor -> function_call .)
    COLON           reduce using rule 121 (factor -> function_call .)
    SEMICOLON       reduce using rule 121 (factor -> function_call .)


state 154

    (85) variable -> ID . saw_id saw_called_var
    (86) variable -> ID . saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> ID . saw_id variable2
    (92) function_call -> ID . saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> ID . saw_id verify_func OPAREN CPAREN generate_gosub
    (134) saw_id -> .

    OBRACKET        reduce using rule 134 (saw_id -> .)
    PERIOD          reduce using rule 134 (saw_id -> .)
    OPAREN          reduce using rule 134 (saw_id -> .)
    MULT            reduce using rule 134 (saw_id -> .)
    DIV             reduce using rule 134 (saw_id -> .)
    PLUS            reduce using rule 134 (saw_id -> .)
    MINUS           reduce using rule 134 (saw_id -> .)
    LT              reduce using rule 134 (saw_id -> .)
    GT              reduce using rule 134 (saw_id -> .)
    GTE             reduce using rule 134 (saw_id -> .)
    LTE             reduce using rule 134 (saw_id -> .)
    EQ              reduce using rule 134 (saw_id -> .)
    NE              reduce using rule 134 (saw_id -> .)
    AND             reduce using rule 134 (saw_id -> .)
    OR              reduce using rule 134 (saw_id -> .)
    RETURN          reduce using rule 134 (saw_id -> .)
    ID              reduce using rule 134 (saw_id -> .)
    IF              reduce using rule 134 (saw_id -> .)
    PRINT           reduce using rule 134 (saw_id -> .)
    READ            reduce using rule 134 (saw_id -> .)
    WHILE           reduce using rule 134 (saw_id -> .)
    FOR             reduce using rule 134 (saw_id -> .)
    CSTINT          reduce using rule 134 (saw_id -> .)
    CSTFLT          reduce using rule 134 (saw_id -> .)
    CSTCHAR         reduce using rule 134 (saw_id -> .)
    CSTSTRING       reduce using rule 134 (saw_id -> .)
    TRUE            reduce using rule 134 (saw_id -> .)
    FALSE           reduce using rule 134 (saw_id -> .)
    CCURLY          reduce using rule 134 (saw_id -> .)
    CPAREN          reduce using rule 134 (saw_id -> .)
    CBRACKET        reduce using rule 134 (saw_id -> .)
    COMMA           reduce using rule 134 (saw_id -> .)
    QUESTION        reduce using rule 134 (saw_id -> .)
    COLON           reduce using rule 134 (saw_id -> .)
    SEMICOLON       reduce using rule 134 (saw_id -> .)

    saw_id                         shift and go to state 204

state 155

    (76) ternary -> exp QUESTION . saw_cond estatuto_redux COLON saw_else estatuto_redux SEMICOLON bc_end
    (172) saw_cond -> .

    RETURN          reduce using rule 172 (saw_cond -> .)
    ID              reduce using rule 172 (saw_cond -> .)
    PRINT           reduce using rule 172 (saw_cond -> .)
    READ            reduce using rule 172 (saw_cond -> .)
    OPAREN          reduce using rule 172 (saw_cond -> .)
    CSTINT          reduce using rule 172 (saw_cond -> .)
    CSTFLT          reduce using rule 172 (saw_cond -> .)
    CSTCHAR         reduce using rule 172 (saw_cond -> .)
    CSTSTRING       reduce using rule 172 (saw_cond -> .)
    TRUE            reduce using rule 172 (saw_cond -> .)
    FALSE           reduce using rule 172 (saw_cond -> .)

    saw_cond                       shift and go to state 205

state 156

    (71) assign -> variable saw_var_factor . AS saw_asig exp
    (120) factor -> variable saw_var_factor . check_multdiv_operator
    (145) check_multdiv_operator -> .

    AS              shift and go to state 206
    MULT            reduce using rule 145 (check_multdiv_operator -> .)
    DIV             reduce using rule 145 (check_multdiv_operator -> .)
    PLUS            reduce using rule 145 (check_multdiv_operator -> .)
    MINUS           reduce using rule 145 (check_multdiv_operator -> .)
    LT              reduce using rule 145 (check_multdiv_operator -> .)
    GT              reduce using rule 145 (check_multdiv_operator -> .)
    GTE             reduce using rule 145 (check_multdiv_operator -> .)
    LTE             reduce using rule 145 (check_multdiv_operator -> .)
    EQ              reduce using rule 145 (check_multdiv_operator -> .)
    NE              reduce using rule 145 (check_multdiv_operator -> .)
    AND             reduce using rule 145 (check_multdiv_operator -> .)
    OR              reduce using rule 145 (check_multdiv_operator -> .)
    QUESTION        reduce using rule 145 (check_multdiv_operator -> .)

    check_multdiv_operator         shift and go to state 207

state 157

    (92) function_call -> ID saw_id . verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> ID saw_id . verify_func OPAREN CPAREN generate_gosub
    (85) variable -> ID saw_id . saw_called_var
    (86) variable -> ID saw_id . OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> ID saw_id . variable2
    (168) verify_func -> .
    (138) saw_called_var -> .
    (90) variable2 -> . PERIOD ID saw_called_var_from_class
    (91) variable2 -> . PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1

    OBRACKET        shift and go to state 210
    OPAREN          reduce using rule 168 (verify_func -> .)
    AS              reduce using rule 138 (saw_called_var -> .)
    MULT            reduce using rule 138 (saw_called_var -> .)
    DIV             reduce using rule 138 (saw_called_var -> .)
    PLUS            reduce using rule 138 (saw_called_var -> .)
    MINUS           reduce using rule 138 (saw_called_var -> .)
    LT              reduce using rule 138 (saw_called_var -> .)
    GT              reduce using rule 138 (saw_called_var -> .)
    GTE             reduce using rule 138 (saw_called_var -> .)
    LTE             reduce using rule 138 (saw_called_var -> .)
    EQ              reduce using rule 138 (saw_called_var -> .)
    NE              reduce using rule 138 (saw_called_var -> .)
    AND             reduce using rule 138 (saw_called_var -> .)
    OR              reduce using rule 138 (saw_called_var -> .)
    QUESTION        reduce using rule 138 (saw_called_var -> .)
    PERIOD          shift and go to state 212

    verify_func                    shift and go to state 208
    saw_called_var                 shift and go to state 209
    variable2                      shift and go to state 211

state 158

    (118) factor -> OPAREN saw_oparen . exp CPAREN saw_cparen check_multdiv_operator
    (96) exp -> . texp exp1 check_or_operator
    (99) texp -> . gexp texp1 check_and_operator
    (102) gexp -> . mexp gexp1 check_relational_operator
    (110) mexp -> . termino mexp1
    (114) termino -> . factor term1 check_plusminus_operator
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    ID              shift and go to state 154
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    exp                            shift and go to state 213
    texp                           shift and go to state 121
    gexp                           shift and go to state 122
    mexp                           shift and go to state 123
    termino                        shift and go to state 124
    factor                         shift and go to state 125
    varcst                         shift and go to state 126
    variable                       shift and go to state 152
    function_call                  shift and go to state 153
    boolean                        shift and go to state 131

state 159

    (72) conditional -> IF cond2 . THEN block cond1 SEMICOLON bc_end

    THEN            shift and go to state 214


state 160

    (75) cond2 -> OPAREN . exp CPAREN
    (96) exp -> . texp exp1 check_or_operator
    (99) texp -> . gexp texp1 check_and_operator
    (102) gexp -> . mexp gexp1 check_relational_operator
    (110) mexp -> . termino mexp1
    (114) termino -> . factor term1 check_plusminus_operator
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    ID              shift and go to state 154
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    exp                            shift and go to state 215
    texp                           shift and go to state 121
    gexp                           shift and go to state 122
    mexp                           shift and go to state 123
    termino                        shift and go to state 124
    factor                         shift and go to state 125
    varcst                         shift and go to state 126
    variable                       shift and go to state 152
    function_call                  shift and go to state 153
    boolean                        shift and go to state 131

state 161

    (77) write -> PRINT saw_print . OPAREN exp e1 CPAREN saw_print_end

    OPAREN          shift and go to state 216


state 162

    (80) read -> READ saw_read . OPAREN variable saw_read_exp l1 CPAREN saw_read_end

    OPAREN          shift and go to state 217


state 163

    (20) while_loop -> WHILE saw_while . cond2 THEN block SEMICOLON saw_while_end
    (75) cond2 -> . OPAREN exp CPAREN

    OPAREN          shift and go to state 160

    cond2                          shift and go to state 218

state 164

    (21) for_loop -> FOR OPAREN . variable FROM for_loop1 TO for_loop1 BY for_loop1 CPAREN THEN block SEMICOLON
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2

    ID              shift and go to state 220

    variable                       shift and go to state 219

state 165

    (96) exp -> texp exp1 . check_or_operator
    (149) check_or_operator -> .

    QUESTION        reduce using rule 149 (check_or_operator -> .)
    RETURN          reduce using rule 149 (check_or_operator -> .)
    ID              reduce using rule 149 (check_or_operator -> .)
    IF              reduce using rule 149 (check_or_operator -> .)
    PRINT           reduce using rule 149 (check_or_operator -> .)
    READ            reduce using rule 149 (check_or_operator -> .)
    WHILE           reduce using rule 149 (check_or_operator -> .)
    FOR             reduce using rule 149 (check_or_operator -> .)
    OPAREN          reduce using rule 149 (check_or_operator -> .)
    CSTINT          reduce using rule 149 (check_or_operator -> .)
    CSTFLT          reduce using rule 149 (check_or_operator -> .)
    CSTCHAR         reduce using rule 149 (check_or_operator -> .)
    CSTSTRING       reduce using rule 149 (check_or_operator -> .)
    TRUE            reduce using rule 149 (check_or_operator -> .)
    FALSE           reduce using rule 149 (check_or_operator -> .)
    CCURLY          reduce using rule 149 (check_or_operator -> .)
    CPAREN          reduce using rule 149 (check_or_operator -> .)
    CBRACKET        reduce using rule 149 (check_or_operator -> .)
    COMMA           reduce using rule 149 (check_or_operator -> .)
    COLON           reduce using rule 149 (check_or_operator -> .)
    SEMICOLON       reduce using rule 149 (check_or_operator -> .)

    check_or_operator              shift and go to state 221

state 166

    (97) exp1 -> OR . saw_or texp exp1
    (151) saw_or -> .

    OPAREN          reduce using rule 151 (saw_or -> .)
    CSTINT          reduce using rule 151 (saw_or -> .)
    CSTFLT          reduce using rule 151 (saw_or -> .)
    CSTCHAR         reduce using rule 151 (saw_or -> .)
    CSTSTRING       reduce using rule 151 (saw_or -> .)
    ID              reduce using rule 151 (saw_or -> .)
    TRUE            reduce using rule 151 (saw_or -> .)
    FALSE           reduce using rule 151 (saw_or -> .)

    saw_or                         shift and go to state 222

state 167

    (98) exp1 -> empty .

    QUESTION        reduce using rule 98 (exp1 -> empty .)
    RETURN          reduce using rule 98 (exp1 -> empty .)
    ID              reduce using rule 98 (exp1 -> empty .)
    IF              reduce using rule 98 (exp1 -> empty .)
    PRINT           reduce using rule 98 (exp1 -> empty .)
    READ            reduce using rule 98 (exp1 -> empty .)
    WHILE           reduce using rule 98 (exp1 -> empty .)
    FOR             reduce using rule 98 (exp1 -> empty .)
    OPAREN          reduce using rule 98 (exp1 -> empty .)
    CSTINT          reduce using rule 98 (exp1 -> empty .)
    CSTFLT          reduce using rule 98 (exp1 -> empty .)
    CSTCHAR         reduce using rule 98 (exp1 -> empty .)
    CSTSTRING       reduce using rule 98 (exp1 -> empty .)
    TRUE            reduce using rule 98 (exp1 -> empty .)
    FALSE           reduce using rule 98 (exp1 -> empty .)
    CCURLY          reduce using rule 98 (exp1 -> empty .)
    CPAREN          reduce using rule 98 (exp1 -> empty .)
    CBRACKET        reduce using rule 98 (exp1 -> empty .)
    COMMA           reduce using rule 98 (exp1 -> empty .)
    COLON           reduce using rule 98 (exp1 -> empty .)
    SEMICOLON       reduce using rule 98 (exp1 -> empty .)


state 168

    (99) texp -> gexp texp1 . check_and_operator
    (148) check_and_operator -> .

    OR              reduce using rule 148 (check_and_operator -> .)
    QUESTION        reduce using rule 148 (check_and_operator -> .)
    RETURN          reduce using rule 148 (check_and_operator -> .)
    ID              reduce using rule 148 (check_and_operator -> .)
    IF              reduce using rule 148 (check_and_operator -> .)
    PRINT           reduce using rule 148 (check_and_operator -> .)
    READ            reduce using rule 148 (check_and_operator -> .)
    WHILE           reduce using rule 148 (check_and_operator -> .)
    FOR             reduce using rule 148 (check_and_operator -> .)
    OPAREN          reduce using rule 148 (check_and_operator -> .)
    CSTINT          reduce using rule 148 (check_and_operator -> .)
    CSTFLT          reduce using rule 148 (check_and_operator -> .)
    CSTCHAR         reduce using rule 148 (check_and_operator -> .)
    CSTSTRING       reduce using rule 148 (check_and_operator -> .)
    TRUE            reduce using rule 148 (check_and_operator -> .)
    FALSE           reduce using rule 148 (check_and_operator -> .)
    CCURLY          reduce using rule 148 (check_and_operator -> .)
    CPAREN          reduce using rule 148 (check_and_operator -> .)
    CBRACKET        reduce using rule 148 (check_and_operator -> .)
    COMMA           reduce using rule 148 (check_and_operator -> .)
    COLON           reduce using rule 148 (check_and_operator -> .)
    SEMICOLON       reduce using rule 148 (check_and_operator -> .)

    check_and_operator             shift and go to state 223

state 169

    (100) texp1 -> AND . saw_and gexp texp1
    (150) saw_and -> .

    OPAREN          reduce using rule 150 (saw_and -> .)
    CSTINT          reduce using rule 150 (saw_and -> .)
    CSTFLT          reduce using rule 150 (saw_and -> .)
    CSTCHAR         reduce using rule 150 (saw_and -> .)
    CSTSTRING       reduce using rule 150 (saw_and -> .)
    ID              reduce using rule 150 (saw_and -> .)
    TRUE            reduce using rule 150 (saw_and -> .)
    FALSE           reduce using rule 150 (saw_and -> .)

    saw_and                        shift and go to state 224

state 170

    (101) texp1 -> empty .

    OR              reduce using rule 101 (texp1 -> empty .)
    QUESTION        reduce using rule 101 (texp1 -> empty .)
    RETURN          reduce using rule 101 (texp1 -> empty .)
    ID              reduce using rule 101 (texp1 -> empty .)
    IF              reduce using rule 101 (texp1 -> empty .)
    PRINT           reduce using rule 101 (texp1 -> empty .)
    READ            reduce using rule 101 (texp1 -> empty .)
    WHILE           reduce using rule 101 (texp1 -> empty .)
    FOR             reduce using rule 101 (texp1 -> empty .)
    OPAREN          reduce using rule 101 (texp1 -> empty .)
    CSTINT          reduce using rule 101 (texp1 -> empty .)
    CSTFLT          reduce using rule 101 (texp1 -> empty .)
    CSTCHAR         reduce using rule 101 (texp1 -> empty .)
    CSTSTRING       reduce using rule 101 (texp1 -> empty .)
    TRUE            reduce using rule 101 (texp1 -> empty .)
    FALSE           reduce using rule 101 (texp1 -> empty .)
    CCURLY          reduce using rule 101 (texp1 -> empty .)
    CPAREN          reduce using rule 101 (texp1 -> empty .)
    CBRACKET        reduce using rule 101 (texp1 -> empty .)
    COMMA           reduce using rule 101 (texp1 -> empty .)
    COLON           reduce using rule 101 (texp1 -> empty .)
    SEMICOLON       reduce using rule 101 (texp1 -> empty .)


state 171

    (102) gexp -> mexp gexp1 . check_relational_operator
    (147) check_relational_operator -> .

    AND             reduce using rule 147 (check_relational_operator -> .)
    OR              reduce using rule 147 (check_relational_operator -> .)
    QUESTION        reduce using rule 147 (check_relational_operator -> .)
    RETURN          reduce using rule 147 (check_relational_operator -> .)
    ID              reduce using rule 147 (check_relational_operator -> .)
    IF              reduce using rule 147 (check_relational_operator -> .)
    PRINT           reduce using rule 147 (check_relational_operator -> .)
    READ            reduce using rule 147 (check_relational_operator -> .)
    WHILE           reduce using rule 147 (check_relational_operator -> .)
    FOR             reduce using rule 147 (check_relational_operator -> .)
    OPAREN          reduce using rule 147 (check_relational_operator -> .)
    CSTINT          reduce using rule 147 (check_relational_operator -> .)
    CSTFLT          reduce using rule 147 (check_relational_operator -> .)
    CSTCHAR         reduce using rule 147 (check_relational_operator -> .)
    CSTSTRING       reduce using rule 147 (check_relational_operator -> .)
    TRUE            reduce using rule 147 (check_relational_operator -> .)
    FALSE           reduce using rule 147 (check_relational_operator -> .)
    CCURLY          reduce using rule 147 (check_relational_operator -> .)
    CPAREN          reduce using rule 147 (check_relational_operator -> .)
    CBRACKET        reduce using rule 147 (check_relational_operator -> .)
    COMMA           reduce using rule 147 (check_relational_operator -> .)
    COLON           reduce using rule 147 (check_relational_operator -> .)
    SEMICOLON       reduce using rule 147 (check_relational_operator -> .)

    check_relational_operator      shift and go to state 225

state 172

    (103) gexp1 -> LT . saw_relational_operator mexp
    (146) saw_relational_operator -> .

    OPAREN          reduce using rule 146 (saw_relational_operator -> .)
    CSTINT          reduce using rule 146 (saw_relational_operator -> .)
    CSTFLT          reduce using rule 146 (saw_relational_operator -> .)
    CSTCHAR         reduce using rule 146 (saw_relational_operator -> .)
    CSTSTRING       reduce using rule 146 (saw_relational_operator -> .)
    ID              reduce using rule 146 (saw_relational_operator -> .)
    TRUE            reduce using rule 146 (saw_relational_operator -> .)
    FALSE           reduce using rule 146 (saw_relational_operator -> .)

    saw_relational_operator        shift and go to state 226

state 173

    (104) gexp1 -> GT . saw_relational_operator mexp
    (146) saw_relational_operator -> .

    OPAREN          reduce using rule 146 (saw_relational_operator -> .)
    CSTINT          reduce using rule 146 (saw_relational_operator -> .)
    CSTFLT          reduce using rule 146 (saw_relational_operator -> .)
    CSTCHAR         reduce using rule 146 (saw_relational_operator -> .)
    CSTSTRING       reduce using rule 146 (saw_relational_operator -> .)
    ID              reduce using rule 146 (saw_relational_operator -> .)
    TRUE            reduce using rule 146 (saw_relational_operator -> .)
    FALSE           reduce using rule 146 (saw_relational_operator -> .)

    saw_relational_operator        shift and go to state 227

state 174

    (105) gexp1 -> GTE . saw_relational_operator mexp
    (146) saw_relational_operator -> .

    OPAREN          reduce using rule 146 (saw_relational_operator -> .)
    CSTINT          reduce using rule 146 (saw_relational_operator -> .)
    CSTFLT          reduce using rule 146 (saw_relational_operator -> .)
    CSTCHAR         reduce using rule 146 (saw_relational_operator -> .)
    CSTSTRING       reduce using rule 146 (saw_relational_operator -> .)
    ID              reduce using rule 146 (saw_relational_operator -> .)
    TRUE            reduce using rule 146 (saw_relational_operator -> .)
    FALSE           reduce using rule 146 (saw_relational_operator -> .)

    saw_relational_operator        shift and go to state 228

state 175

    (106) gexp1 -> LTE . saw_relational_operator mexp
    (146) saw_relational_operator -> .

    OPAREN          reduce using rule 146 (saw_relational_operator -> .)
    CSTINT          reduce using rule 146 (saw_relational_operator -> .)
    CSTFLT          reduce using rule 146 (saw_relational_operator -> .)
    CSTCHAR         reduce using rule 146 (saw_relational_operator -> .)
    CSTSTRING       reduce using rule 146 (saw_relational_operator -> .)
    ID              reduce using rule 146 (saw_relational_operator -> .)
    TRUE            reduce using rule 146 (saw_relational_operator -> .)
    FALSE           reduce using rule 146 (saw_relational_operator -> .)

    saw_relational_operator        shift and go to state 229

state 176

    (107) gexp1 -> EQ . saw_relational_operator mexp
    (146) saw_relational_operator -> .

    OPAREN          reduce using rule 146 (saw_relational_operator -> .)
    CSTINT          reduce using rule 146 (saw_relational_operator -> .)
    CSTFLT          reduce using rule 146 (saw_relational_operator -> .)
    CSTCHAR         reduce using rule 146 (saw_relational_operator -> .)
    CSTSTRING       reduce using rule 146 (saw_relational_operator -> .)
    ID              reduce using rule 146 (saw_relational_operator -> .)
    TRUE            reduce using rule 146 (saw_relational_operator -> .)
    FALSE           reduce using rule 146 (saw_relational_operator -> .)

    saw_relational_operator        shift and go to state 230

state 177

    (108) gexp1 -> NE . saw_relational_operator mexp
    (146) saw_relational_operator -> .

    OPAREN          reduce using rule 146 (saw_relational_operator -> .)
    CSTINT          reduce using rule 146 (saw_relational_operator -> .)
    CSTFLT          reduce using rule 146 (saw_relational_operator -> .)
    CSTCHAR         reduce using rule 146 (saw_relational_operator -> .)
    CSTSTRING       reduce using rule 146 (saw_relational_operator -> .)
    ID              reduce using rule 146 (saw_relational_operator -> .)
    TRUE            reduce using rule 146 (saw_relational_operator -> .)
    FALSE           reduce using rule 146 (saw_relational_operator -> .)

    saw_relational_operator        shift and go to state 231

state 178

    (109) gexp1 -> empty .

    AND             reduce using rule 109 (gexp1 -> empty .)
    OR              reduce using rule 109 (gexp1 -> empty .)
    QUESTION        reduce using rule 109 (gexp1 -> empty .)
    RETURN          reduce using rule 109 (gexp1 -> empty .)
    ID              reduce using rule 109 (gexp1 -> empty .)
    IF              reduce using rule 109 (gexp1 -> empty .)
    PRINT           reduce using rule 109 (gexp1 -> empty .)
    READ            reduce using rule 109 (gexp1 -> empty .)
    WHILE           reduce using rule 109 (gexp1 -> empty .)
    FOR             reduce using rule 109 (gexp1 -> empty .)
    OPAREN          reduce using rule 109 (gexp1 -> empty .)
    CSTINT          reduce using rule 109 (gexp1 -> empty .)
    CSTFLT          reduce using rule 109 (gexp1 -> empty .)
    CSTCHAR         reduce using rule 109 (gexp1 -> empty .)
    CSTSTRING       reduce using rule 109 (gexp1 -> empty .)
    TRUE            reduce using rule 109 (gexp1 -> empty .)
    FALSE           reduce using rule 109 (gexp1 -> empty .)
    CCURLY          reduce using rule 109 (gexp1 -> empty .)
    CPAREN          reduce using rule 109 (gexp1 -> empty .)
    CBRACKET        reduce using rule 109 (gexp1 -> empty .)
    COMMA           reduce using rule 109 (gexp1 -> empty .)
    COLON           reduce using rule 109 (gexp1 -> empty .)
    SEMICOLON       reduce using rule 109 (gexp1 -> empty .)


state 179

    (110) mexp -> termino mexp1 .

    LT              reduce using rule 110 (mexp -> termino mexp1 .)
    GT              reduce using rule 110 (mexp -> termino mexp1 .)
    GTE             reduce using rule 110 (mexp -> termino mexp1 .)
    LTE             reduce using rule 110 (mexp -> termino mexp1 .)
    EQ              reduce using rule 110 (mexp -> termino mexp1 .)
    NE              reduce using rule 110 (mexp -> termino mexp1 .)
    AND             reduce using rule 110 (mexp -> termino mexp1 .)
    OR              reduce using rule 110 (mexp -> termino mexp1 .)
    QUESTION        reduce using rule 110 (mexp -> termino mexp1 .)
    RETURN          reduce using rule 110 (mexp -> termino mexp1 .)
    ID              reduce using rule 110 (mexp -> termino mexp1 .)
    IF              reduce using rule 110 (mexp -> termino mexp1 .)
    PRINT           reduce using rule 110 (mexp -> termino mexp1 .)
    READ            reduce using rule 110 (mexp -> termino mexp1 .)
    WHILE           reduce using rule 110 (mexp -> termino mexp1 .)
    FOR             reduce using rule 110 (mexp -> termino mexp1 .)
    OPAREN          reduce using rule 110 (mexp -> termino mexp1 .)
    CSTINT          reduce using rule 110 (mexp -> termino mexp1 .)
    CSTFLT          reduce using rule 110 (mexp -> termino mexp1 .)
    CSTCHAR         reduce using rule 110 (mexp -> termino mexp1 .)
    CSTSTRING       reduce using rule 110 (mexp -> termino mexp1 .)
    TRUE            reduce using rule 110 (mexp -> termino mexp1 .)
    FALSE           reduce using rule 110 (mexp -> termino mexp1 .)
    CCURLY          reduce using rule 110 (mexp -> termino mexp1 .)
    CPAREN          reduce using rule 110 (mexp -> termino mexp1 .)
    CBRACKET        reduce using rule 110 (mexp -> termino mexp1 .)
    COMMA           reduce using rule 110 (mexp -> termino mexp1 .)
    COLON           reduce using rule 110 (mexp -> termino mexp1 .)
    SEMICOLON       reduce using rule 110 (mexp -> termino mexp1 .)


state 180

    (111) mexp1 -> PLUS . saw_plusminus_operator termino mexp1
    (142) saw_plusminus_operator -> .

    OPAREN          reduce using rule 142 (saw_plusminus_operator -> .)
    CSTINT          reduce using rule 142 (saw_plusminus_operator -> .)
    CSTFLT          reduce using rule 142 (saw_plusminus_operator -> .)
    CSTCHAR         reduce using rule 142 (saw_plusminus_operator -> .)
    CSTSTRING       reduce using rule 142 (saw_plusminus_operator -> .)
    ID              reduce using rule 142 (saw_plusminus_operator -> .)
    TRUE            reduce using rule 142 (saw_plusminus_operator -> .)
    FALSE           reduce using rule 142 (saw_plusminus_operator -> .)

    saw_plusminus_operator         shift and go to state 232

state 181

    (112) mexp1 -> MINUS . saw_plusminus_operator termino mexp1
    (142) saw_plusminus_operator -> .

    OPAREN          reduce using rule 142 (saw_plusminus_operator -> .)
    CSTINT          reduce using rule 142 (saw_plusminus_operator -> .)
    CSTFLT          reduce using rule 142 (saw_plusminus_operator -> .)
    CSTCHAR         reduce using rule 142 (saw_plusminus_operator -> .)
    CSTSTRING       reduce using rule 142 (saw_plusminus_operator -> .)
    ID              reduce using rule 142 (saw_plusminus_operator -> .)
    TRUE            reduce using rule 142 (saw_plusminus_operator -> .)
    FALSE           reduce using rule 142 (saw_plusminus_operator -> .)

    saw_plusminus_operator         shift and go to state 233

state 182

    (113) mexp1 -> empty .

    LT              reduce using rule 113 (mexp1 -> empty .)
    GT              reduce using rule 113 (mexp1 -> empty .)
    GTE             reduce using rule 113 (mexp1 -> empty .)
    LTE             reduce using rule 113 (mexp1 -> empty .)
    EQ              reduce using rule 113 (mexp1 -> empty .)
    NE              reduce using rule 113 (mexp1 -> empty .)
    AND             reduce using rule 113 (mexp1 -> empty .)
    OR              reduce using rule 113 (mexp1 -> empty .)
    QUESTION        reduce using rule 113 (mexp1 -> empty .)
    RETURN          reduce using rule 113 (mexp1 -> empty .)
    ID              reduce using rule 113 (mexp1 -> empty .)
    IF              reduce using rule 113 (mexp1 -> empty .)
    PRINT           reduce using rule 113 (mexp1 -> empty .)
    READ            reduce using rule 113 (mexp1 -> empty .)
    WHILE           reduce using rule 113 (mexp1 -> empty .)
    FOR             reduce using rule 113 (mexp1 -> empty .)
    OPAREN          reduce using rule 113 (mexp1 -> empty .)
    CSTINT          reduce using rule 113 (mexp1 -> empty .)
    CSTFLT          reduce using rule 113 (mexp1 -> empty .)
    CSTCHAR         reduce using rule 113 (mexp1 -> empty .)
    CSTSTRING       reduce using rule 113 (mexp1 -> empty .)
    TRUE            reduce using rule 113 (mexp1 -> empty .)
    FALSE           reduce using rule 113 (mexp1 -> empty .)
    CCURLY          reduce using rule 113 (mexp1 -> empty .)
    CPAREN          reduce using rule 113 (mexp1 -> empty .)
    CBRACKET        reduce using rule 113 (mexp1 -> empty .)
    COMMA           reduce using rule 113 (mexp1 -> empty .)
    COLON           reduce using rule 113 (mexp1 -> empty .)
    SEMICOLON       reduce using rule 113 (mexp1 -> empty .)


state 183

    (114) termino -> factor term1 . check_plusminus_operator
    (143) check_plusminus_operator -> .

    PLUS            reduce using rule 143 (check_plusminus_operator -> .)
    MINUS           reduce using rule 143 (check_plusminus_operator -> .)
    LT              reduce using rule 143 (check_plusminus_operator -> .)
    GT              reduce using rule 143 (check_plusminus_operator -> .)
    GTE             reduce using rule 143 (check_plusminus_operator -> .)
    LTE             reduce using rule 143 (check_plusminus_operator -> .)
    EQ              reduce using rule 143 (check_plusminus_operator -> .)
    NE              reduce using rule 143 (check_plusminus_operator -> .)
    AND             reduce using rule 143 (check_plusminus_operator -> .)
    OR              reduce using rule 143 (check_plusminus_operator -> .)
    QUESTION        reduce using rule 143 (check_plusminus_operator -> .)
    RETURN          reduce using rule 143 (check_plusminus_operator -> .)
    ID              reduce using rule 143 (check_plusminus_operator -> .)
    IF              reduce using rule 143 (check_plusminus_operator -> .)
    PRINT           reduce using rule 143 (check_plusminus_operator -> .)
    READ            reduce using rule 143 (check_plusminus_operator -> .)
    WHILE           reduce using rule 143 (check_plusminus_operator -> .)
    FOR             reduce using rule 143 (check_plusminus_operator -> .)
    OPAREN          reduce using rule 143 (check_plusminus_operator -> .)
    CSTINT          reduce using rule 143 (check_plusminus_operator -> .)
    CSTFLT          reduce using rule 143 (check_plusminus_operator -> .)
    CSTCHAR         reduce using rule 143 (check_plusminus_operator -> .)
    CSTSTRING       reduce using rule 143 (check_plusminus_operator -> .)
    TRUE            reduce using rule 143 (check_plusminus_operator -> .)
    FALSE           reduce using rule 143 (check_plusminus_operator -> .)
    CCURLY          reduce using rule 143 (check_plusminus_operator -> .)
    CPAREN          reduce using rule 143 (check_plusminus_operator -> .)
    CBRACKET        reduce using rule 143 (check_plusminus_operator -> .)
    COMMA           reduce using rule 143 (check_plusminus_operator -> .)
    COLON           reduce using rule 143 (check_plusminus_operator -> .)
    SEMICOLON       reduce using rule 143 (check_plusminus_operator -> .)

    check_plusminus_operator       shift and go to state 234

state 184

    (115) term1 -> MULT . saw_multdiv_operator factor term1
    (144) saw_multdiv_operator -> .

    OPAREN          reduce using rule 144 (saw_multdiv_operator -> .)
    CSTINT          reduce using rule 144 (saw_multdiv_operator -> .)
    CSTFLT          reduce using rule 144 (saw_multdiv_operator -> .)
    CSTCHAR         reduce using rule 144 (saw_multdiv_operator -> .)
    CSTSTRING       reduce using rule 144 (saw_multdiv_operator -> .)
    ID              reduce using rule 144 (saw_multdiv_operator -> .)
    TRUE            reduce using rule 144 (saw_multdiv_operator -> .)
    FALSE           reduce using rule 144 (saw_multdiv_operator -> .)

    saw_multdiv_operator           shift and go to state 235

state 185

    (116) term1 -> DIV . saw_multdiv_operator factor term1
    (144) saw_multdiv_operator -> .

    OPAREN          reduce using rule 144 (saw_multdiv_operator -> .)
    CSTINT          reduce using rule 144 (saw_multdiv_operator -> .)
    CSTFLT          reduce using rule 144 (saw_multdiv_operator -> .)
    CSTCHAR         reduce using rule 144 (saw_multdiv_operator -> .)
    CSTSTRING       reduce using rule 144 (saw_multdiv_operator -> .)
    ID              reduce using rule 144 (saw_multdiv_operator -> .)
    TRUE            reduce using rule 144 (saw_multdiv_operator -> .)
    FALSE           reduce using rule 144 (saw_multdiv_operator -> .)

    saw_multdiv_operator           shift and go to state 236

state 186

    (117) term1 -> empty .

    PLUS            reduce using rule 117 (term1 -> empty .)
    MINUS           reduce using rule 117 (term1 -> empty .)
    LT              reduce using rule 117 (term1 -> empty .)
    GT              reduce using rule 117 (term1 -> empty .)
    GTE             reduce using rule 117 (term1 -> empty .)
    LTE             reduce using rule 117 (term1 -> empty .)
    EQ              reduce using rule 117 (term1 -> empty .)
    NE              reduce using rule 117 (term1 -> empty .)
    AND             reduce using rule 117 (term1 -> empty .)
    OR              reduce using rule 117 (term1 -> empty .)
    QUESTION        reduce using rule 117 (term1 -> empty .)
    RETURN          reduce using rule 117 (term1 -> empty .)
    ID              reduce using rule 117 (term1 -> empty .)
    IF              reduce using rule 117 (term1 -> empty .)
    PRINT           reduce using rule 117 (term1 -> empty .)
    READ            reduce using rule 117 (term1 -> empty .)
    WHILE           reduce using rule 117 (term1 -> empty .)
    FOR             reduce using rule 117 (term1 -> empty .)
    OPAREN          reduce using rule 117 (term1 -> empty .)
    CSTINT          reduce using rule 117 (term1 -> empty .)
    CSTFLT          reduce using rule 117 (term1 -> empty .)
    CSTCHAR         reduce using rule 117 (term1 -> empty .)
    CSTSTRING       reduce using rule 117 (term1 -> empty .)
    TRUE            reduce using rule 117 (term1 -> empty .)
    FALSE           reduce using rule 117 (term1 -> empty .)
    CCURLY          reduce using rule 117 (term1 -> empty .)
    CPAREN          reduce using rule 117 (term1 -> empty .)
    CBRACKET        reduce using rule 117 (term1 -> empty .)
    COMMA           reduce using rule 117 (term1 -> empty .)
    COLON           reduce using rule 117 (term1 -> empty .)
    SEMICOLON       reduce using rule 117 (term1 -> empty .)


state 187

    (119) factor -> varcst check_multdiv_operator .

    MULT            reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    DIV             reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    PLUS            reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    MINUS           reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    LT              reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    GT              reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    GTE             reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    LTE             reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    EQ              reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    NE              reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    AND             reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    OR              reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    QUESTION        reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    RETURN          reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    ID              reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    IF              reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    PRINT           reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    READ            reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    WHILE           reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    FOR             reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    OPAREN          reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    CSTINT          reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    CSTFLT          reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    CSTCHAR         reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    CSTSTRING       reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    TRUE            reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    FALSE           reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    CCURLY          reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    CPAREN          reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    CBRACKET        reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    COMMA           reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    COLON           reduce using rule 119 (factor -> varcst check_multdiv_operator .)
    SEMICOLON       reduce using rule 119 (factor -> varcst check_multdiv_operator .)


state 188

    (123) varcst -> CSTINT saw_end_value .

    MULT            reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    DIV             reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    PLUS            reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    MINUS           reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    LT              reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    GT              reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    GTE             reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    LTE             reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    EQ              reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    NE              reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    AND             reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    OR              reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    QUESTION        reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    RETURN          reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    ID              reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    IF              reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    PRINT           reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    READ            reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    WHILE           reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    FOR             reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    OPAREN          reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    CSTINT          reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    CSTFLT          reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    CSTCHAR         reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    CSTSTRING       reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    TRUE            reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    FALSE           reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    CCURLY          reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    CPAREN          reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    CBRACKET        reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    COMMA           reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    COLON           reduce using rule 123 (varcst -> CSTINT saw_end_value .)
    SEMICOLON       reduce using rule 123 (varcst -> CSTINT saw_end_value .)


state 189

    (124) varcst -> CSTFLT saw_end_value .

    MULT            reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    DIV             reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    PLUS            reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    MINUS           reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    LT              reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    GT              reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    GTE             reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    LTE             reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    EQ              reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    NE              reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    AND             reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    OR              reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    QUESTION        reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    RETURN          reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    ID              reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    IF              reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    PRINT           reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    READ            reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    WHILE           reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    FOR             reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    OPAREN          reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    CSTINT          reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    CSTFLT          reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    CSTCHAR         reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    CSTSTRING       reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    TRUE            reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    FALSE           reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    CCURLY          reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    CPAREN          reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    CBRACKET        reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    COMMA           reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    COLON           reduce using rule 124 (varcst -> CSTFLT saw_end_value .)
    SEMICOLON       reduce using rule 124 (varcst -> CSTFLT saw_end_value .)


state 190

    (125) varcst -> CSTCHAR saw_end_value .

    MULT            reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    DIV             reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    PLUS            reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    MINUS           reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    LT              reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    GT              reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    GTE             reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    LTE             reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    EQ              reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    NE              reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    AND             reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    OR              reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    QUESTION        reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    RETURN          reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    ID              reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    IF              reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    PRINT           reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    READ            reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    WHILE           reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    FOR             reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    OPAREN          reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    CSTINT          reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    CSTFLT          reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    CSTCHAR         reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    CSTSTRING       reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    TRUE            reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    FALSE           reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    CCURLY          reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    CPAREN          reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    CBRACKET        reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    COMMA           reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    COLON           reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)
    SEMICOLON       reduce using rule 125 (varcst -> CSTCHAR saw_end_value .)


state 191

    (126) varcst -> CSTSTRING saw_end_value .

    MULT            reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    DIV             reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    PLUS            reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    MINUS           reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    LT              reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    GT              reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    GTE             reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    LTE             reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    EQ              reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    NE              reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    AND             reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    OR              reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    QUESTION        reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    RETURN          reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    ID              reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    IF              reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    PRINT           reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    READ            reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    WHILE           reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    FOR             reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    OPAREN          reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    CSTINT          reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    CSTFLT          reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    CSTCHAR         reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    CSTSTRING       reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    TRUE            reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    FALSE           reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    CCURLY          reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    CPAREN          reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    CBRACKET        reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    COMMA           reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    COLON           reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)
    SEMICOLON       reduce using rule 126 (varcst -> CSTSTRING saw_end_value .)


state 192

    (127) varcst -> boolean saw_end_value .

    MULT            reduce using rule 127 (varcst -> boolean saw_end_value .)
    DIV             reduce using rule 127 (varcst -> boolean saw_end_value .)
    PLUS            reduce using rule 127 (varcst -> boolean saw_end_value .)
    MINUS           reduce using rule 127 (varcst -> boolean saw_end_value .)
    LT              reduce using rule 127 (varcst -> boolean saw_end_value .)
    GT              reduce using rule 127 (varcst -> boolean saw_end_value .)
    GTE             reduce using rule 127 (varcst -> boolean saw_end_value .)
    LTE             reduce using rule 127 (varcst -> boolean saw_end_value .)
    EQ              reduce using rule 127 (varcst -> boolean saw_end_value .)
    NE              reduce using rule 127 (varcst -> boolean saw_end_value .)
    AND             reduce using rule 127 (varcst -> boolean saw_end_value .)
    OR              reduce using rule 127 (varcst -> boolean saw_end_value .)
    QUESTION        reduce using rule 127 (varcst -> boolean saw_end_value .)
    RETURN          reduce using rule 127 (varcst -> boolean saw_end_value .)
    ID              reduce using rule 127 (varcst -> boolean saw_end_value .)
    IF              reduce using rule 127 (varcst -> boolean saw_end_value .)
    PRINT           reduce using rule 127 (varcst -> boolean saw_end_value .)
    READ            reduce using rule 127 (varcst -> boolean saw_end_value .)
    WHILE           reduce using rule 127 (varcst -> boolean saw_end_value .)
    FOR             reduce using rule 127 (varcst -> boolean saw_end_value .)
    OPAREN          reduce using rule 127 (varcst -> boolean saw_end_value .)
    CSTINT          reduce using rule 127 (varcst -> boolean saw_end_value .)
    CSTFLT          reduce using rule 127 (varcst -> boolean saw_end_value .)
    CSTCHAR         reduce using rule 127 (varcst -> boolean saw_end_value .)
    CSTSTRING       reduce using rule 127 (varcst -> boolean saw_end_value .)
    TRUE            reduce using rule 127 (varcst -> boolean saw_end_value .)
    FALSE           reduce using rule 127 (varcst -> boolean saw_end_value .)
    CCURLY          reduce using rule 127 (varcst -> boolean saw_end_value .)
    CPAREN          reduce using rule 127 (varcst -> boolean saw_end_value .)
    CBRACKET        reduce using rule 127 (varcst -> boolean saw_end_value .)
    COMMA           reduce using rule 127 (varcst -> boolean saw_end_value .)
    COLON           reduce using rule 127 (varcst -> boolean saw_end_value .)
    SEMICOLON       reduce using rule 127 (varcst -> boolean saw_end_value .)


state 193

    (33) type1 -> COMMA ID saw_id saw_variable . type1
    (33) type1 -> . COMMA ID saw_id saw_variable type1
    (34) type1 -> . empty
    (128) empty -> .

    COMMA           shift and go to state 79
    SEMICOLON       reduce using rule 128 (empty -> .)

    type1                          shift and go to state 237
    empty                          shift and go to state 80

state 194

    (37) type3 -> OBRACKET . CSTINT CBRACKET saw_dimension

    CSTINT          shift and go to state 238


state 195

    (32) type -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 . saw_variable type2
    (135) saw_variable -> .

    COMMA           reduce using rule 135 (saw_variable -> .)
    SEMICOLON       reduce using rule 135 (saw_variable -> .)

    saw_variable                   shift and go to state 239

state 196

    (38) type3 -> empty .

    COMMA           reduce using rule 38 (type3 -> empty .)
    SEMICOLON       reduce using rule 38 (type3 -> empty .)
    CPAREN          reduce using rule 38 (type3 -> empty .)


state 197

    (19) class_block -> OCURLY ATTRIBUTES COLON decs . METHODS COLON functions CCURLY

    METHODS         shift and go to state 240


state 198

    (9) function -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN block . saw_function_end scope_end
    (155) saw_function_end -> .

    VAR             reduce using rule 155 (saw_function_end -> .)
    CLASS           reduce using rule 155 (saw_function_end -> .)
    FUNCTION        reduce using rule 155 (saw_function_end -> .)
    INT             reduce using rule 155 (saw_function_end -> .)
    CCURLY          reduce using rule 155 (saw_function_end -> .)

    saw_function_end               shift and go to state 241

state 199

    (14) param1 -> COMMA param2 . param1
    (14) param1 -> . COMMA param2 param1
    (15) param1 -> . empty
    (128) empty -> .

    COMMA           shift and go to state 140
    CPAREN          reduce using rule 128 (empty -> .)

    param1                         shift and go to state 242
    empty                          shift and go to state 141

state 200

    (16) param2 -> simple ID saw_id . saw_variable_param
    (136) saw_variable_param -> .

    COMMA           reduce using rule 136 (saw_variable_param -> .)
    CPAREN          reduce using rule 136 (saw_variable_param -> .)

    saw_variable_param             shift and go to state 243

state 201

    (17) param2 -> multiple ID saw_id . OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable_param

    OBRACKET        shift and go to state 244


state 202

    (53) block -> OCURLY decs count_vars b1 . CCURLY

    CCURLY          shift and go to state 245


state 203

    (120) factor -> variable saw_var_factor . check_multdiv_operator
    (145) check_multdiv_operator -> .

    MULT            reduce using rule 145 (check_multdiv_operator -> .)
    DIV             reduce using rule 145 (check_multdiv_operator -> .)
    PLUS            reduce using rule 145 (check_multdiv_operator -> .)
    MINUS           reduce using rule 145 (check_multdiv_operator -> .)
    LT              reduce using rule 145 (check_multdiv_operator -> .)
    GT              reduce using rule 145 (check_multdiv_operator -> .)
    GTE             reduce using rule 145 (check_multdiv_operator -> .)
    LTE             reduce using rule 145 (check_multdiv_operator -> .)
    EQ              reduce using rule 145 (check_multdiv_operator -> .)
    NE              reduce using rule 145 (check_multdiv_operator -> .)
    AND             reduce using rule 145 (check_multdiv_operator -> .)
    OR              reduce using rule 145 (check_multdiv_operator -> .)
    RETURN          reduce using rule 145 (check_multdiv_operator -> .)
    ID              reduce using rule 145 (check_multdiv_operator -> .)
    IF              reduce using rule 145 (check_multdiv_operator -> .)
    PRINT           reduce using rule 145 (check_multdiv_operator -> .)
    READ            reduce using rule 145 (check_multdiv_operator -> .)
    WHILE           reduce using rule 145 (check_multdiv_operator -> .)
    FOR             reduce using rule 145 (check_multdiv_operator -> .)
    OPAREN          reduce using rule 145 (check_multdiv_operator -> .)
    CSTINT          reduce using rule 145 (check_multdiv_operator -> .)
    CSTFLT          reduce using rule 145 (check_multdiv_operator -> .)
    CSTCHAR         reduce using rule 145 (check_multdiv_operator -> .)
    CSTSTRING       reduce using rule 145 (check_multdiv_operator -> .)
    TRUE            reduce using rule 145 (check_multdiv_operator -> .)
    FALSE           reduce using rule 145 (check_multdiv_operator -> .)
    CCURLY          reduce using rule 145 (check_multdiv_operator -> .)
    CPAREN          reduce using rule 145 (check_multdiv_operator -> .)
    CBRACKET        reduce using rule 145 (check_multdiv_operator -> .)
    COMMA           reduce using rule 145 (check_multdiv_operator -> .)
    QUESTION        reduce using rule 145 (check_multdiv_operator -> .)
    COLON           reduce using rule 145 (check_multdiv_operator -> .)
    SEMICOLON       reduce using rule 145 (check_multdiv_operator -> .)

    check_multdiv_operator         shift and go to state 207

state 204

    (85) variable -> ID saw_id . saw_called_var
    (86) variable -> ID saw_id . OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> ID saw_id . variable2
    (92) function_call -> ID saw_id . verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> ID saw_id . verify_func OPAREN CPAREN generate_gosub
    (138) saw_called_var -> .
    (90) variable2 -> . PERIOD ID saw_called_var_from_class
    (91) variable2 -> . PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1
    (168) verify_func -> .

  ! reduce/reduce conflict for OPAREN resolved using rule 138 (saw_called_var -> .)
    OBRACKET        shift and go to state 210
    MULT            reduce using rule 138 (saw_called_var -> .)
    DIV             reduce using rule 138 (saw_called_var -> .)
    PLUS            reduce using rule 138 (saw_called_var -> .)
    MINUS           reduce using rule 138 (saw_called_var -> .)
    LT              reduce using rule 138 (saw_called_var -> .)
    GT              reduce using rule 138 (saw_called_var -> .)
    GTE             reduce using rule 138 (saw_called_var -> .)
    LTE             reduce using rule 138 (saw_called_var -> .)
    EQ              reduce using rule 138 (saw_called_var -> .)
    NE              reduce using rule 138 (saw_called_var -> .)
    AND             reduce using rule 138 (saw_called_var -> .)
    OR              reduce using rule 138 (saw_called_var -> .)
    RETURN          reduce using rule 138 (saw_called_var -> .)
    ID              reduce using rule 138 (saw_called_var -> .)
    IF              reduce using rule 138 (saw_called_var -> .)
    PRINT           reduce using rule 138 (saw_called_var -> .)
    READ            reduce using rule 138 (saw_called_var -> .)
    WHILE           reduce using rule 138 (saw_called_var -> .)
    FOR             reduce using rule 138 (saw_called_var -> .)
    OPAREN          reduce using rule 138 (saw_called_var -> .)
    CSTINT          reduce using rule 138 (saw_called_var -> .)
    CSTFLT          reduce using rule 138 (saw_called_var -> .)
    CSTCHAR         reduce using rule 138 (saw_called_var -> .)
    CSTSTRING       reduce using rule 138 (saw_called_var -> .)
    TRUE            reduce using rule 138 (saw_called_var -> .)
    FALSE           reduce using rule 138 (saw_called_var -> .)
    CCURLY          reduce using rule 138 (saw_called_var -> .)
    CPAREN          reduce using rule 138 (saw_called_var -> .)
    CBRACKET        reduce using rule 138 (saw_called_var -> .)
    COMMA           reduce using rule 138 (saw_called_var -> .)
    QUESTION        reduce using rule 138 (saw_called_var -> .)
    COLON           reduce using rule 138 (saw_called_var -> .)
    SEMICOLON       reduce using rule 138 (saw_called_var -> .)
    PERIOD          shift and go to state 212

  ! OPAREN          [ reduce using rule 168 (verify_func -> .) ]

    saw_called_var                 shift and go to state 209
    variable2                      shift and go to state 211
    verify_func                    shift and go to state 208

state 205

    (76) ternary -> exp QUESTION saw_cond . estatuto_redux COLON saw_else estatuto_redux SEMICOLON bc_end
    (65) estatuto_redux -> . assign
    (66) estatuto_redux -> . function_call
    (67) estatuto_redux -> . write
    (68) estatuto_redux -> . read
    (69) estatuto_redux -> . ternary
    (70) estatuto_redux -> . RETURN exp
    (71) assign -> . variable saw_var_factor AS saw_asig exp
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (77) write -> . PRINT saw_print OPAREN exp e1 CPAREN saw_print_end
    (80) read -> . READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end
    (76) ternary -> . exp QUESTION saw_cond estatuto_redux COLON saw_else estatuto_redux SEMICOLON bc_end
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (96) exp -> . texp exp1 check_or_operator
    (99) texp -> . gexp texp1 check_and_operator
    (102) gexp -> . mexp gexp1 check_relational_operator
    (110) mexp -> . termino mexp1
    (114) termino -> . factor term1 check_plusminus_operator
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    RETURN          shift and go to state 252
    ID              shift and go to state 114
    PRINT           shift and go to state 117
    READ            shift and go to state 118
    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    exp                            shift and go to state 112
    estatuto_redux                 shift and go to state 246
    assign                         shift and go to state 247
    function_call                  shift and go to state 248
    write                          shift and go to state 249
    read                           shift and go to state 250
    ternary                        shift and go to state 251
    variable                       shift and go to state 113
    texp                           shift and go to state 121
    gexp                           shift and go to state 122
    mexp                           shift and go to state 123
    termino                        shift and go to state 124
    factor                         shift and go to state 125
    varcst                         shift and go to state 126
    boolean                        shift and go to state 131

state 206

    (71) assign -> variable saw_var_factor AS . saw_asig exp
    (140) saw_asig -> .

    OPAREN          reduce using rule 140 (saw_asig -> .)
    CSTINT          reduce using rule 140 (saw_asig -> .)
    CSTFLT          reduce using rule 140 (saw_asig -> .)
    CSTCHAR         reduce using rule 140 (saw_asig -> .)
    CSTSTRING       reduce using rule 140 (saw_asig -> .)
    ID              reduce using rule 140 (saw_asig -> .)
    TRUE            reduce using rule 140 (saw_asig -> .)
    FALSE           reduce using rule 140 (saw_asig -> .)

    saw_asig                       shift and go to state 253

state 207

    (120) factor -> variable saw_var_factor check_multdiv_operator .

    MULT            reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    DIV             reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    PLUS            reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    MINUS           reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    LT              reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    GT              reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    GTE             reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    LTE             reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    EQ              reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    NE              reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    AND             reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    OR              reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    QUESTION        reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    RETURN          reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    ID              reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    IF              reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    PRINT           reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    READ            reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    WHILE           reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    FOR             reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    OPAREN          reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    CSTINT          reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    CSTFLT          reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    CSTCHAR         reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    CSTSTRING       reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    TRUE            reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    FALSE           reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    CCURLY          reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    CPAREN          reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    CBRACKET        reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    COMMA           reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    COLON           reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)
    SEMICOLON       reduce using rule 120 (factor -> variable saw_var_factor check_multdiv_operator .)


state 208

    (92) function_call -> ID saw_id verify_func . OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> ID saw_id verify_func . OPAREN CPAREN generate_gosub

    OPAREN          shift and go to state 254


state 209

    (85) variable -> ID saw_id saw_called_var .

    AS              reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    MULT            reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    DIV             reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    PLUS            reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    MINUS           reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    LT              reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    GT              reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    GTE             reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    LTE             reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    EQ              reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    NE              reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    AND             reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    OR              reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    QUESTION        reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    RETURN          reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    ID              reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    IF              reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    PRINT           reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    READ            reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    WHILE           reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    FOR             reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    OPAREN          reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    CSTINT          reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    CSTFLT          reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    CSTCHAR         reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    CSTSTRING       reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    TRUE            reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    FALSE           reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    CCURLY          reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    CPAREN          reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    FROM            reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    CBRACKET        reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    COMMA           reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    COLON           reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    SEMICOLON       reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    TO              reduce using rule 85 (variable -> ID saw_id saw_called_var .)
    BY              reduce using rule 85 (variable -> ID saw_id saw_called_var .)


state 210

    (86) variable -> ID saw_id OBRACKET . exp CBRACKET saw_dimension variable1 saw_called_var
    (96) exp -> . texp exp1 check_or_operator
    (99) texp -> . gexp texp1 check_and_operator
    (102) gexp -> . mexp gexp1 check_relational_operator
    (110) mexp -> . termino mexp1
    (114) termino -> . factor term1 check_plusminus_operator
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    ID              shift and go to state 154
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    exp                            shift and go to state 255
    texp                           shift and go to state 121
    gexp                           shift and go to state 122
    mexp                           shift and go to state 123
    termino                        shift and go to state 124
    factor                         shift and go to state 125
    varcst                         shift and go to state 126
    variable                       shift and go to state 152
    function_call                  shift and go to state 153
    boolean                        shift and go to state 131

state 211

    (87) variable -> ID saw_id variable2 .

    AS              reduce using rule 87 (variable -> ID saw_id variable2 .)
    MULT            reduce using rule 87 (variable -> ID saw_id variable2 .)
    DIV             reduce using rule 87 (variable -> ID saw_id variable2 .)
    PLUS            reduce using rule 87 (variable -> ID saw_id variable2 .)
    MINUS           reduce using rule 87 (variable -> ID saw_id variable2 .)
    LT              reduce using rule 87 (variable -> ID saw_id variable2 .)
    GT              reduce using rule 87 (variable -> ID saw_id variable2 .)
    GTE             reduce using rule 87 (variable -> ID saw_id variable2 .)
    LTE             reduce using rule 87 (variable -> ID saw_id variable2 .)
    EQ              reduce using rule 87 (variable -> ID saw_id variable2 .)
    NE              reduce using rule 87 (variable -> ID saw_id variable2 .)
    AND             reduce using rule 87 (variable -> ID saw_id variable2 .)
    OR              reduce using rule 87 (variable -> ID saw_id variable2 .)
    QUESTION        reduce using rule 87 (variable -> ID saw_id variable2 .)
    RETURN          reduce using rule 87 (variable -> ID saw_id variable2 .)
    ID              reduce using rule 87 (variable -> ID saw_id variable2 .)
    IF              reduce using rule 87 (variable -> ID saw_id variable2 .)
    PRINT           reduce using rule 87 (variable -> ID saw_id variable2 .)
    READ            reduce using rule 87 (variable -> ID saw_id variable2 .)
    WHILE           reduce using rule 87 (variable -> ID saw_id variable2 .)
    FOR             reduce using rule 87 (variable -> ID saw_id variable2 .)
    OPAREN          reduce using rule 87 (variable -> ID saw_id variable2 .)
    CSTINT          reduce using rule 87 (variable -> ID saw_id variable2 .)
    CSTFLT          reduce using rule 87 (variable -> ID saw_id variable2 .)
    CSTCHAR         reduce using rule 87 (variable -> ID saw_id variable2 .)
    CSTSTRING       reduce using rule 87 (variable -> ID saw_id variable2 .)
    TRUE            reduce using rule 87 (variable -> ID saw_id variable2 .)
    FALSE           reduce using rule 87 (variable -> ID saw_id variable2 .)
    CCURLY          reduce using rule 87 (variable -> ID saw_id variable2 .)
    CPAREN          reduce using rule 87 (variable -> ID saw_id variable2 .)
    FROM            reduce using rule 87 (variable -> ID saw_id variable2 .)
    CBRACKET        reduce using rule 87 (variable -> ID saw_id variable2 .)
    COMMA           reduce using rule 87 (variable -> ID saw_id variable2 .)
    COLON           reduce using rule 87 (variable -> ID saw_id variable2 .)
    SEMICOLON       reduce using rule 87 (variable -> ID saw_id variable2 .)
    TO              reduce using rule 87 (variable -> ID saw_id variable2 .)
    BY              reduce using rule 87 (variable -> ID saw_id variable2 .)


state 212

    (90) variable2 -> PERIOD . ID saw_called_var_from_class
    (91) variable2 -> PERIOD . ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1

    ID              shift and go to state 256


state 213

    (118) factor -> OPAREN saw_oparen exp . CPAREN saw_cparen check_multdiv_operator

    CPAREN          shift and go to state 257


state 214

    (72) conditional -> IF cond2 THEN . block cond1 SEMICOLON bc_end
    (52) block -> . OCURLY b1 CCURLY
    (53) block -> . OCURLY decs count_vars b1 CCURLY

    OCURLY          shift and go to state 87

    block                          shift and go to state 258

state 215

    (75) cond2 -> OPAREN exp . CPAREN

    CPAREN          shift and go to state 259


state 216

    (77) write -> PRINT saw_print OPAREN . exp e1 CPAREN saw_print_end
    (96) exp -> . texp exp1 check_or_operator
    (99) texp -> . gexp texp1 check_and_operator
    (102) gexp -> . mexp gexp1 check_relational_operator
    (110) mexp -> . termino mexp1
    (114) termino -> . factor term1 check_plusminus_operator
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    ID              shift and go to state 154
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    exp                            shift and go to state 260
    texp                           shift and go to state 121
    gexp                           shift and go to state 122
    mexp                           shift and go to state 123
    termino                        shift and go to state 124
    factor                         shift and go to state 125
    varcst                         shift and go to state 126
    variable                       shift and go to state 152
    function_call                  shift and go to state 153
    boolean                        shift and go to state 131

state 217

    (80) read -> READ saw_read OPAREN . variable saw_read_exp l1 CPAREN saw_read_end
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2

    ID              shift and go to state 220

    variable                       shift and go to state 261

state 218

    (20) while_loop -> WHILE saw_while cond2 . THEN block SEMICOLON saw_while_end

    THEN            shift and go to state 262


state 219

    (21) for_loop -> FOR OPAREN variable . FROM for_loop1 TO for_loop1 BY for_loop1 CPAREN THEN block SEMICOLON

    FROM            shift and go to state 263


state 220

    (85) variable -> ID . saw_id saw_called_var
    (86) variable -> ID . saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> ID . saw_id variable2
    (134) saw_id -> .

    OBRACKET        reduce using rule 134 (saw_id -> .)
    PERIOD          reduce using rule 134 (saw_id -> .)
    FROM            reduce using rule 134 (saw_id -> .)
    COMMA           reduce using rule 134 (saw_id -> .)
    CPAREN          reduce using rule 134 (saw_id -> .)
    TO              reduce using rule 134 (saw_id -> .)
    BY              reduce using rule 134 (saw_id -> .)

    saw_id                         shift and go to state 264

state 221

    (96) exp -> texp exp1 check_or_operator .

    QUESTION        reduce using rule 96 (exp -> texp exp1 check_or_operator .)
    RETURN          reduce using rule 96 (exp -> texp exp1 check_or_operator .)
    ID              reduce using rule 96 (exp -> texp exp1 check_or_operator .)
    IF              reduce using rule 96 (exp -> texp exp1 check_or_operator .)
    PRINT           reduce using rule 96 (exp -> texp exp1 check_or_operator .)
    READ            reduce using rule 96 (exp -> texp exp1 check_or_operator .)
    WHILE           reduce using rule 96 (exp -> texp exp1 check_or_operator .)
    FOR             reduce using rule 96 (exp -> texp exp1 check_or_operator .)
    OPAREN          reduce using rule 96 (exp -> texp exp1 check_or_operator .)
    CSTINT          reduce using rule 96 (exp -> texp exp1 check_or_operator .)
    CSTFLT          reduce using rule 96 (exp -> texp exp1 check_or_operator .)
    CSTCHAR         reduce using rule 96 (exp -> texp exp1 check_or_operator .)
    CSTSTRING       reduce using rule 96 (exp -> texp exp1 check_or_operator .)
    TRUE            reduce using rule 96 (exp -> texp exp1 check_or_operator .)
    FALSE           reduce using rule 96 (exp -> texp exp1 check_or_operator .)
    CCURLY          reduce using rule 96 (exp -> texp exp1 check_or_operator .)
    CPAREN          reduce using rule 96 (exp -> texp exp1 check_or_operator .)
    CBRACKET        reduce using rule 96 (exp -> texp exp1 check_or_operator .)
    COMMA           reduce using rule 96 (exp -> texp exp1 check_or_operator .)
    COLON           reduce using rule 96 (exp -> texp exp1 check_or_operator .)
    SEMICOLON       reduce using rule 96 (exp -> texp exp1 check_or_operator .)


state 222

    (97) exp1 -> OR saw_or . texp exp1
    (99) texp -> . gexp texp1 check_and_operator
    (102) gexp -> . mexp gexp1 check_relational_operator
    (110) mexp -> . termino mexp1
    (114) termino -> . factor term1 check_plusminus_operator
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    ID              shift and go to state 154
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    texp                           shift and go to state 265
    gexp                           shift and go to state 122
    mexp                           shift and go to state 123
    termino                        shift and go to state 124
    factor                         shift and go to state 125
    varcst                         shift and go to state 126
    variable                       shift and go to state 152
    function_call                  shift and go to state 153
    boolean                        shift and go to state 131

state 223

    (99) texp -> gexp texp1 check_and_operator .

    OR              reduce using rule 99 (texp -> gexp texp1 check_and_operator .)
    QUESTION        reduce using rule 99 (texp -> gexp texp1 check_and_operator .)
    RETURN          reduce using rule 99 (texp -> gexp texp1 check_and_operator .)
    ID              reduce using rule 99 (texp -> gexp texp1 check_and_operator .)
    IF              reduce using rule 99 (texp -> gexp texp1 check_and_operator .)
    PRINT           reduce using rule 99 (texp -> gexp texp1 check_and_operator .)
    READ            reduce using rule 99 (texp -> gexp texp1 check_and_operator .)
    WHILE           reduce using rule 99 (texp -> gexp texp1 check_and_operator .)
    FOR             reduce using rule 99 (texp -> gexp texp1 check_and_operator .)
    OPAREN          reduce using rule 99 (texp -> gexp texp1 check_and_operator .)
    CSTINT          reduce using rule 99 (texp -> gexp texp1 check_and_operator .)
    CSTFLT          reduce using rule 99 (texp -> gexp texp1 check_and_operator .)
    CSTCHAR         reduce using rule 99 (texp -> gexp texp1 check_and_operator .)
    CSTSTRING       reduce using rule 99 (texp -> gexp texp1 check_and_operator .)
    TRUE            reduce using rule 99 (texp -> gexp texp1 check_and_operator .)
    FALSE           reduce using rule 99 (texp -> gexp texp1 check_and_operator .)
    CCURLY          reduce using rule 99 (texp -> gexp texp1 check_and_operator .)
    CPAREN          reduce using rule 99 (texp -> gexp texp1 check_and_operator .)
    CBRACKET        reduce using rule 99 (texp -> gexp texp1 check_and_operator .)
    COMMA           reduce using rule 99 (texp -> gexp texp1 check_and_operator .)
    COLON           reduce using rule 99 (texp -> gexp texp1 check_and_operator .)
    SEMICOLON       reduce using rule 99 (texp -> gexp texp1 check_and_operator .)


state 224

    (100) texp1 -> AND saw_and . gexp texp1
    (102) gexp -> . mexp gexp1 check_relational_operator
    (110) mexp -> . termino mexp1
    (114) termino -> . factor term1 check_plusminus_operator
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    ID              shift and go to state 154
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    gexp                           shift and go to state 266
    mexp                           shift and go to state 123
    termino                        shift and go to state 124
    factor                         shift and go to state 125
    varcst                         shift and go to state 126
    variable                       shift and go to state 152
    function_call                  shift and go to state 153
    boolean                        shift and go to state 131

state 225

    (102) gexp -> mexp gexp1 check_relational_operator .

    AND             reduce using rule 102 (gexp -> mexp gexp1 check_relational_operator .)
    OR              reduce using rule 102 (gexp -> mexp gexp1 check_relational_operator .)
    QUESTION        reduce using rule 102 (gexp -> mexp gexp1 check_relational_operator .)
    RETURN          reduce using rule 102 (gexp -> mexp gexp1 check_relational_operator .)
    ID              reduce using rule 102 (gexp -> mexp gexp1 check_relational_operator .)
    IF              reduce using rule 102 (gexp -> mexp gexp1 check_relational_operator .)
    PRINT           reduce using rule 102 (gexp -> mexp gexp1 check_relational_operator .)
    READ            reduce using rule 102 (gexp -> mexp gexp1 check_relational_operator .)
    WHILE           reduce using rule 102 (gexp -> mexp gexp1 check_relational_operator .)
    FOR             reduce using rule 102 (gexp -> mexp gexp1 check_relational_operator .)
    OPAREN          reduce using rule 102 (gexp -> mexp gexp1 check_relational_operator .)
    CSTINT          reduce using rule 102 (gexp -> mexp gexp1 check_relational_operator .)
    CSTFLT          reduce using rule 102 (gexp -> mexp gexp1 check_relational_operator .)
    CSTCHAR         reduce using rule 102 (gexp -> mexp gexp1 check_relational_operator .)
    CSTSTRING       reduce using rule 102 (gexp -> mexp gexp1 check_relational_operator .)
    TRUE            reduce using rule 102 (gexp -> mexp gexp1 check_relational_operator .)
    FALSE           reduce using rule 102 (gexp -> mexp gexp1 check_relational_operator .)
    CCURLY          reduce using rule 102 (gexp -> mexp gexp1 check_relational_operator .)
    CPAREN          reduce using rule 102 (gexp -> mexp gexp1 check_relational_operator .)
    CBRACKET        reduce using rule 102 (gexp -> mexp gexp1 check_relational_operator .)
    COMMA           reduce using rule 102 (gexp -> mexp gexp1 check_relational_operator .)
    COLON           reduce using rule 102 (gexp -> mexp gexp1 check_relational_operator .)
    SEMICOLON       reduce using rule 102 (gexp -> mexp gexp1 check_relational_operator .)


state 226

    (103) gexp1 -> LT saw_relational_operator . mexp
    (110) mexp -> . termino mexp1
    (114) termino -> . factor term1 check_plusminus_operator
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    ID              shift and go to state 154
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    mexp                           shift and go to state 267
    termino                        shift and go to state 124
    factor                         shift and go to state 125
    varcst                         shift and go to state 126
    variable                       shift and go to state 152
    function_call                  shift and go to state 153
    boolean                        shift and go to state 131

state 227

    (104) gexp1 -> GT saw_relational_operator . mexp
    (110) mexp -> . termino mexp1
    (114) termino -> . factor term1 check_plusminus_operator
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    ID              shift and go to state 154
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    mexp                           shift and go to state 268
    termino                        shift and go to state 124
    factor                         shift and go to state 125
    varcst                         shift and go to state 126
    variable                       shift and go to state 152
    function_call                  shift and go to state 153
    boolean                        shift and go to state 131

state 228

    (105) gexp1 -> GTE saw_relational_operator . mexp
    (110) mexp -> . termino mexp1
    (114) termino -> . factor term1 check_plusminus_operator
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    ID              shift and go to state 154
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    mexp                           shift and go to state 269
    termino                        shift and go to state 124
    factor                         shift and go to state 125
    varcst                         shift and go to state 126
    variable                       shift and go to state 152
    function_call                  shift and go to state 153
    boolean                        shift and go to state 131

state 229

    (106) gexp1 -> LTE saw_relational_operator . mexp
    (110) mexp -> . termino mexp1
    (114) termino -> . factor term1 check_plusminus_operator
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    ID              shift and go to state 154
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    mexp                           shift and go to state 270
    termino                        shift and go to state 124
    factor                         shift and go to state 125
    varcst                         shift and go to state 126
    variable                       shift and go to state 152
    function_call                  shift and go to state 153
    boolean                        shift and go to state 131

state 230

    (107) gexp1 -> EQ saw_relational_operator . mexp
    (110) mexp -> . termino mexp1
    (114) termino -> . factor term1 check_plusminus_operator
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    ID              shift and go to state 154
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    mexp                           shift and go to state 271
    termino                        shift and go to state 124
    factor                         shift and go to state 125
    varcst                         shift and go to state 126
    variable                       shift and go to state 152
    function_call                  shift and go to state 153
    boolean                        shift and go to state 131

state 231

    (108) gexp1 -> NE saw_relational_operator . mexp
    (110) mexp -> . termino mexp1
    (114) termino -> . factor term1 check_plusminus_operator
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    ID              shift and go to state 154
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    mexp                           shift and go to state 272
    termino                        shift and go to state 124
    factor                         shift and go to state 125
    varcst                         shift and go to state 126
    variable                       shift and go to state 152
    function_call                  shift and go to state 153
    boolean                        shift and go to state 131

state 232

    (111) mexp1 -> PLUS saw_plusminus_operator . termino mexp1
    (114) termino -> . factor term1 check_plusminus_operator
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    ID              shift and go to state 154
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    termino                        shift and go to state 273
    factor                         shift and go to state 125
    varcst                         shift and go to state 126
    variable                       shift and go to state 152
    function_call                  shift and go to state 153
    boolean                        shift and go to state 131

state 233

    (112) mexp1 -> MINUS saw_plusminus_operator . termino mexp1
    (114) termino -> . factor term1 check_plusminus_operator
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    ID              shift and go to state 154
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    termino                        shift and go to state 274
    factor                         shift and go to state 125
    varcst                         shift and go to state 126
    variable                       shift and go to state 152
    function_call                  shift and go to state 153
    boolean                        shift and go to state 131

state 234

    (114) termino -> factor term1 check_plusminus_operator .

    PLUS            reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    MINUS           reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    LT              reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    GT              reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    GTE             reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    LTE             reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    EQ              reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    NE              reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    AND             reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    OR              reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    QUESTION        reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    RETURN          reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    ID              reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    IF              reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    PRINT           reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    READ            reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    WHILE           reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    FOR             reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    OPAREN          reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    CSTINT          reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    CSTFLT          reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    CSTCHAR         reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    CSTSTRING       reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    TRUE            reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    FALSE           reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    CCURLY          reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    CPAREN          reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    CBRACKET        reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    COMMA           reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    COLON           reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)
    SEMICOLON       reduce using rule 114 (termino -> factor term1 check_plusminus_operator .)


state 235

    (115) term1 -> MULT saw_multdiv_operator . factor term1
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    ID              shift and go to state 154
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    factor                         shift and go to state 275
    varcst                         shift and go to state 126
    variable                       shift and go to state 152
    function_call                  shift and go to state 153
    boolean                        shift and go to state 131

state 236

    (116) term1 -> DIV saw_multdiv_operator . factor term1
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    ID              shift and go to state 154
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    factor                         shift and go to state 276
    varcst                         shift and go to state 126
    variable                       shift and go to state 152
    function_call                  shift and go to state 153
    boolean                        shift and go to state 131

state 237

    (33) type1 -> COMMA ID saw_id saw_variable type1 .

    SEMICOLON       reduce using rule 33 (type1 -> COMMA ID saw_id saw_variable type1 .)


state 238

    (37) type3 -> OBRACKET CSTINT . CBRACKET saw_dimension

    CBRACKET        shift and go to state 277


state 239

    (32) type -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable . type2
    (35) type2 -> . COMMA ID saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable
    (36) type2 -> . empty
    (128) empty -> .

    COMMA           shift and go to state 279
    SEMICOLON       reduce using rule 128 (empty -> .)

    type2                          shift and go to state 278
    empty                          shift and go to state 280

state 240

    (19) class_block -> OCURLY ATTRIBUTES COLON decs METHODS . COLON functions CCURLY

    COLON           shift and go to state 281


state 241

    (9) function -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN block saw_function_end . scope_end
    (156) scope_end -> .

    VAR             reduce using rule 156 (scope_end -> .)
    CLASS           reduce using rule 156 (scope_end -> .)
    FUNCTION        reduce using rule 156 (scope_end -> .)
    INT             reduce using rule 156 (scope_end -> .)
    CCURLY          reduce using rule 156 (scope_end -> .)

    scope_end                      shift and go to state 282

state 242

    (14) param1 -> COMMA param2 param1 .

    CPAREN          reduce using rule 14 (param1 -> COMMA param2 param1 .)


state 243

    (16) param2 -> simple ID saw_id saw_variable_param .

    COMMA           reduce using rule 16 (param2 -> simple ID saw_id saw_variable_param .)
    CPAREN          reduce using rule 16 (param2 -> simple ID saw_id saw_variable_param .)


state 244

    (17) param2 -> multiple ID saw_id OBRACKET . CSTINT CBRACKET saw_dimension type3 saw_variable_param

    CSTINT          shift and go to state 283


state 245

    (53) block -> OCURLY decs count_vars b1 CCURLY .

    $end            reduce using rule 53 (block -> OCURLY decs count_vars b1 CCURLY .)
    VAR             reduce using rule 53 (block -> OCURLY decs count_vars b1 CCURLY .)
    CLASS           reduce using rule 53 (block -> OCURLY decs count_vars b1 CCURLY .)
    FUNCTION        reduce using rule 53 (block -> OCURLY decs count_vars b1 CCURLY .)
    INT             reduce using rule 53 (block -> OCURLY decs count_vars b1 CCURLY .)
    CCURLY          reduce using rule 53 (block -> OCURLY decs count_vars b1 CCURLY .)
    ELSE            reduce using rule 53 (block -> OCURLY decs count_vars b1 CCURLY .)
    SEMICOLON       reduce using rule 53 (block -> OCURLY decs count_vars b1 CCURLY .)


state 246

    (76) ternary -> exp QUESTION saw_cond estatuto_redux . COLON saw_else estatuto_redux SEMICOLON bc_end

    COLON           shift and go to state 284


state 247

    (65) estatuto_redux -> assign .

    COLON           reduce using rule 65 (estatuto_redux -> assign .)
    SEMICOLON       reduce using rule 65 (estatuto_redux -> assign .)


state 248

    (66) estatuto_redux -> function_call .
    (121) factor -> function_call .

    COLON           reduce using rule 66 (estatuto_redux -> function_call .)
    SEMICOLON       reduce using rule 66 (estatuto_redux -> function_call .)
    MULT            reduce using rule 121 (factor -> function_call .)
    DIV             reduce using rule 121 (factor -> function_call .)
    PLUS            reduce using rule 121 (factor -> function_call .)
    MINUS           reduce using rule 121 (factor -> function_call .)
    LT              reduce using rule 121 (factor -> function_call .)
    GT              reduce using rule 121 (factor -> function_call .)
    GTE             reduce using rule 121 (factor -> function_call .)
    LTE             reduce using rule 121 (factor -> function_call .)
    EQ              reduce using rule 121 (factor -> function_call .)
    NE              reduce using rule 121 (factor -> function_call .)
    AND             reduce using rule 121 (factor -> function_call .)
    OR              reduce using rule 121 (factor -> function_call .)
    QUESTION        reduce using rule 121 (factor -> function_call .)


state 249

    (67) estatuto_redux -> write .

    COLON           reduce using rule 67 (estatuto_redux -> write .)
    SEMICOLON       reduce using rule 67 (estatuto_redux -> write .)


state 250

    (68) estatuto_redux -> read .

    COLON           reduce using rule 68 (estatuto_redux -> read .)
    SEMICOLON       reduce using rule 68 (estatuto_redux -> read .)


state 251

    (69) estatuto_redux -> ternary .

    COLON           reduce using rule 69 (estatuto_redux -> ternary .)
    SEMICOLON       reduce using rule 69 (estatuto_redux -> ternary .)


state 252

    (70) estatuto_redux -> RETURN . exp
    (96) exp -> . texp exp1 check_or_operator
    (99) texp -> . gexp texp1 check_and_operator
    (102) gexp -> . mexp gexp1 check_relational_operator
    (110) mexp -> . termino mexp1
    (114) termino -> . factor term1 check_plusminus_operator
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    ID              shift and go to state 154
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    exp                            shift and go to state 285
    texp                           shift and go to state 121
    gexp                           shift and go to state 122
    mexp                           shift and go to state 123
    termino                        shift and go to state 124
    factor                         shift and go to state 125
    varcst                         shift and go to state 126
    variable                       shift and go to state 152
    function_call                  shift and go to state 153
    boolean                        shift and go to state 131

state 253

    (71) assign -> variable saw_var_factor AS saw_asig . exp
    (96) exp -> . texp exp1 check_or_operator
    (99) texp -> . gexp texp1 check_and_operator
    (102) gexp -> . mexp gexp1 check_relational_operator
    (110) mexp -> . termino mexp1
    (114) termino -> . factor term1 check_plusminus_operator
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    ID              shift and go to state 154
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    variable                       shift and go to state 152
    exp                            shift and go to state 286
    texp                           shift and go to state 121
    gexp                           shift and go to state 122
    mexp                           shift and go to state 123
    termino                        shift and go to state 124
    factor                         shift and go to state 125
    varcst                         shift and go to state 126
    function_call                  shift and go to state 153
    boolean                        shift and go to state 131

state 254

    (92) function_call -> ID saw_id verify_func OPAREN . exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> ID saw_id verify_func OPAREN . CPAREN generate_gosub
    (96) exp -> . texp exp1 check_or_operator
    (99) texp -> . gexp texp1 check_and_operator
    (102) gexp -> . mexp gexp1 check_relational_operator
    (110) mexp -> . termino mexp1
    (114) termino -> . factor term1 check_plusminus_operator
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    CPAREN          shift and go to state 288
    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    ID              shift and go to state 154
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    exp                            shift and go to state 287
    texp                           shift and go to state 121
    gexp                           shift and go to state 122
    mexp                           shift and go to state 123
    termino                        shift and go to state 124
    factor                         shift and go to state 125
    varcst                         shift and go to state 126
    variable                       shift and go to state 152
    function_call                  shift and go to state 153
    boolean                        shift and go to state 131

state 255

    (86) variable -> ID saw_id OBRACKET exp . CBRACKET saw_dimension variable1 saw_called_var

    CBRACKET        shift and go to state 289


state 256

    (90) variable2 -> PERIOD ID . saw_called_var_from_class
    (91) variable2 -> PERIOD ID . saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1
    (139) saw_called_var_from_class -> .

    OBRACKET        reduce using rule 139 (saw_called_var_from_class -> .)
    AS              reduce using rule 139 (saw_called_var_from_class -> .)
    MULT            reduce using rule 139 (saw_called_var_from_class -> .)
    DIV             reduce using rule 139 (saw_called_var_from_class -> .)
    PLUS            reduce using rule 139 (saw_called_var_from_class -> .)
    MINUS           reduce using rule 139 (saw_called_var_from_class -> .)
    LT              reduce using rule 139 (saw_called_var_from_class -> .)
    GT              reduce using rule 139 (saw_called_var_from_class -> .)
    GTE             reduce using rule 139 (saw_called_var_from_class -> .)
    LTE             reduce using rule 139 (saw_called_var_from_class -> .)
    EQ              reduce using rule 139 (saw_called_var_from_class -> .)
    NE              reduce using rule 139 (saw_called_var_from_class -> .)
    AND             reduce using rule 139 (saw_called_var_from_class -> .)
    OR              reduce using rule 139 (saw_called_var_from_class -> .)
    QUESTION        reduce using rule 139 (saw_called_var_from_class -> .)
    RETURN          reduce using rule 139 (saw_called_var_from_class -> .)
    ID              reduce using rule 139 (saw_called_var_from_class -> .)
    IF              reduce using rule 139 (saw_called_var_from_class -> .)
    PRINT           reduce using rule 139 (saw_called_var_from_class -> .)
    READ            reduce using rule 139 (saw_called_var_from_class -> .)
    WHILE           reduce using rule 139 (saw_called_var_from_class -> .)
    FOR             reduce using rule 139 (saw_called_var_from_class -> .)
    OPAREN          reduce using rule 139 (saw_called_var_from_class -> .)
    CSTINT          reduce using rule 139 (saw_called_var_from_class -> .)
    CSTFLT          reduce using rule 139 (saw_called_var_from_class -> .)
    CSTCHAR         reduce using rule 139 (saw_called_var_from_class -> .)
    CSTSTRING       reduce using rule 139 (saw_called_var_from_class -> .)
    TRUE            reduce using rule 139 (saw_called_var_from_class -> .)
    FALSE           reduce using rule 139 (saw_called_var_from_class -> .)
    CCURLY          reduce using rule 139 (saw_called_var_from_class -> .)
    CPAREN          reduce using rule 139 (saw_called_var_from_class -> .)
    CBRACKET        reduce using rule 139 (saw_called_var_from_class -> .)
    COMMA           reduce using rule 139 (saw_called_var_from_class -> .)
    COLON           reduce using rule 139 (saw_called_var_from_class -> .)
    SEMICOLON       reduce using rule 139 (saw_called_var_from_class -> .)
    FROM            reduce using rule 139 (saw_called_var_from_class -> .)
    TO              reduce using rule 139 (saw_called_var_from_class -> .)
    BY              reduce using rule 139 (saw_called_var_from_class -> .)

    saw_called_var_from_class      shift and go to state 290

state 257

    (118) factor -> OPAREN saw_oparen exp CPAREN . saw_cparen check_multdiv_operator
    (153) saw_cparen -> .

    MULT            reduce using rule 153 (saw_cparen -> .)
    DIV             reduce using rule 153 (saw_cparen -> .)
    PLUS            reduce using rule 153 (saw_cparen -> .)
    MINUS           reduce using rule 153 (saw_cparen -> .)
    LT              reduce using rule 153 (saw_cparen -> .)
    GT              reduce using rule 153 (saw_cparen -> .)
    GTE             reduce using rule 153 (saw_cparen -> .)
    LTE             reduce using rule 153 (saw_cparen -> .)
    EQ              reduce using rule 153 (saw_cparen -> .)
    NE              reduce using rule 153 (saw_cparen -> .)
    AND             reduce using rule 153 (saw_cparen -> .)
    OR              reduce using rule 153 (saw_cparen -> .)
    QUESTION        reduce using rule 153 (saw_cparen -> .)
    RETURN          reduce using rule 153 (saw_cparen -> .)
    ID              reduce using rule 153 (saw_cparen -> .)
    IF              reduce using rule 153 (saw_cparen -> .)
    PRINT           reduce using rule 153 (saw_cparen -> .)
    READ            reduce using rule 153 (saw_cparen -> .)
    WHILE           reduce using rule 153 (saw_cparen -> .)
    FOR             reduce using rule 153 (saw_cparen -> .)
    OPAREN          reduce using rule 153 (saw_cparen -> .)
    CSTINT          reduce using rule 153 (saw_cparen -> .)
    CSTFLT          reduce using rule 153 (saw_cparen -> .)
    CSTCHAR         reduce using rule 153 (saw_cparen -> .)
    CSTSTRING       reduce using rule 153 (saw_cparen -> .)
    TRUE            reduce using rule 153 (saw_cparen -> .)
    FALSE           reduce using rule 153 (saw_cparen -> .)
    CCURLY          reduce using rule 153 (saw_cparen -> .)
    CPAREN          reduce using rule 153 (saw_cparen -> .)
    CBRACKET        reduce using rule 153 (saw_cparen -> .)
    COMMA           reduce using rule 153 (saw_cparen -> .)
    COLON           reduce using rule 153 (saw_cparen -> .)
    SEMICOLON       reduce using rule 153 (saw_cparen -> .)

    saw_cparen                     shift and go to state 291

state 258

    (72) conditional -> IF cond2 THEN block . cond1 SEMICOLON bc_end
    (73) cond1 -> . ELSE saw_else block
    (74) cond1 -> . empty
    (128) empty -> .

    ELSE            shift and go to state 293
    SEMICOLON       reduce using rule 128 (empty -> .)

    cond1                          shift and go to state 292
    empty                          shift and go to state 294

state 259

    (75) cond2 -> OPAREN exp CPAREN .

    THEN            reduce using rule 75 (cond2 -> OPAREN exp CPAREN .)


state 260

    (77) write -> PRINT saw_print OPAREN exp . e1 CPAREN saw_print_end
    (78) e1 -> . COMMA exp e1
    (79) e1 -> . empty
    (128) empty -> .

    COMMA           shift and go to state 296
    CPAREN          reduce using rule 128 (empty -> .)

    e1                             shift and go to state 295
    empty                          shift and go to state 297

state 261

    (80) read -> READ saw_read OPAREN variable . saw_read_exp l1 CPAREN saw_read_end
    (161) saw_read_exp -> .

    COMMA           reduce using rule 161 (saw_read_exp -> .)
    CPAREN          reduce using rule 161 (saw_read_exp -> .)

    saw_read_exp                   shift and go to state 298

state 262

    (20) while_loop -> WHILE saw_while cond2 THEN . block SEMICOLON saw_while_end
    (52) block -> . OCURLY b1 CCURLY
    (53) block -> . OCURLY decs count_vars b1 CCURLY

    OCURLY          shift and go to state 87

    block                          shift and go to state 299

state 263

    (21) for_loop -> FOR OPAREN variable FROM . for_loop1 TO for_loop1 BY for_loop1 CPAREN THEN block SEMICOLON
    (22) for_loop1 -> . CSTINT
    (23) for_loop1 -> . variable
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2

    CSTINT          shift and go to state 302
    ID              shift and go to state 220

    variable                       shift and go to state 300
    for_loop1                      shift and go to state 301

state 264

    (85) variable -> ID saw_id . saw_called_var
    (86) variable -> ID saw_id . OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> ID saw_id . variable2
    (138) saw_called_var -> .
    (90) variable2 -> . PERIOD ID saw_called_var_from_class
    (91) variable2 -> . PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1

    OBRACKET        shift and go to state 210
    FROM            reduce using rule 138 (saw_called_var -> .)
    COMMA           reduce using rule 138 (saw_called_var -> .)
    CPAREN          reduce using rule 138 (saw_called_var -> .)
    TO              reduce using rule 138 (saw_called_var -> .)
    BY              reduce using rule 138 (saw_called_var -> .)
    PERIOD          shift and go to state 212

    saw_called_var                 shift and go to state 209
    variable2                      shift and go to state 211

state 265

    (97) exp1 -> OR saw_or texp . exp1
    (97) exp1 -> . OR saw_or texp exp1
    (98) exp1 -> . empty
    (128) empty -> .

    OR              shift and go to state 166
    QUESTION        reduce using rule 128 (empty -> .)
    RETURN          reduce using rule 128 (empty -> .)
    ID              reduce using rule 128 (empty -> .)
    IF              reduce using rule 128 (empty -> .)
    PRINT           reduce using rule 128 (empty -> .)
    READ            reduce using rule 128 (empty -> .)
    WHILE           reduce using rule 128 (empty -> .)
    FOR             reduce using rule 128 (empty -> .)
    OPAREN          reduce using rule 128 (empty -> .)
    CSTINT          reduce using rule 128 (empty -> .)
    CSTFLT          reduce using rule 128 (empty -> .)
    CSTCHAR         reduce using rule 128 (empty -> .)
    CSTSTRING       reduce using rule 128 (empty -> .)
    TRUE            reduce using rule 128 (empty -> .)
    FALSE           reduce using rule 128 (empty -> .)
    CCURLY          reduce using rule 128 (empty -> .)
    CPAREN          reduce using rule 128 (empty -> .)
    CBRACKET        reduce using rule 128 (empty -> .)
    COMMA           reduce using rule 128 (empty -> .)
    COLON           reduce using rule 128 (empty -> .)
    SEMICOLON       reduce using rule 128 (empty -> .)

    exp1                           shift and go to state 303
    empty                          shift and go to state 167

state 266

    (100) texp1 -> AND saw_and gexp . texp1
    (100) texp1 -> . AND saw_and gexp texp1
    (101) texp1 -> . empty
    (128) empty -> .

    AND             shift and go to state 169
    OR              reduce using rule 128 (empty -> .)
    QUESTION        reduce using rule 128 (empty -> .)
    RETURN          reduce using rule 128 (empty -> .)
    ID              reduce using rule 128 (empty -> .)
    IF              reduce using rule 128 (empty -> .)
    PRINT           reduce using rule 128 (empty -> .)
    READ            reduce using rule 128 (empty -> .)
    WHILE           reduce using rule 128 (empty -> .)
    FOR             reduce using rule 128 (empty -> .)
    OPAREN          reduce using rule 128 (empty -> .)
    CSTINT          reduce using rule 128 (empty -> .)
    CSTFLT          reduce using rule 128 (empty -> .)
    CSTCHAR         reduce using rule 128 (empty -> .)
    CSTSTRING       reduce using rule 128 (empty -> .)
    TRUE            reduce using rule 128 (empty -> .)
    FALSE           reduce using rule 128 (empty -> .)
    CCURLY          reduce using rule 128 (empty -> .)
    CPAREN          reduce using rule 128 (empty -> .)
    CBRACKET        reduce using rule 128 (empty -> .)
    COMMA           reduce using rule 128 (empty -> .)
    COLON           reduce using rule 128 (empty -> .)
    SEMICOLON       reduce using rule 128 (empty -> .)

    texp1                          shift and go to state 304
    empty                          shift and go to state 170

state 267

    (103) gexp1 -> LT saw_relational_operator mexp .

    AND             reduce using rule 103 (gexp1 -> LT saw_relational_operator mexp .)
    OR              reduce using rule 103 (gexp1 -> LT saw_relational_operator mexp .)
    QUESTION        reduce using rule 103 (gexp1 -> LT saw_relational_operator mexp .)
    RETURN          reduce using rule 103 (gexp1 -> LT saw_relational_operator mexp .)
    ID              reduce using rule 103 (gexp1 -> LT saw_relational_operator mexp .)
    IF              reduce using rule 103 (gexp1 -> LT saw_relational_operator mexp .)
    PRINT           reduce using rule 103 (gexp1 -> LT saw_relational_operator mexp .)
    READ            reduce using rule 103 (gexp1 -> LT saw_relational_operator mexp .)
    WHILE           reduce using rule 103 (gexp1 -> LT saw_relational_operator mexp .)
    FOR             reduce using rule 103 (gexp1 -> LT saw_relational_operator mexp .)
    OPAREN          reduce using rule 103 (gexp1 -> LT saw_relational_operator mexp .)
    CSTINT          reduce using rule 103 (gexp1 -> LT saw_relational_operator mexp .)
    CSTFLT          reduce using rule 103 (gexp1 -> LT saw_relational_operator mexp .)
    CSTCHAR         reduce using rule 103 (gexp1 -> LT saw_relational_operator mexp .)
    CSTSTRING       reduce using rule 103 (gexp1 -> LT saw_relational_operator mexp .)
    TRUE            reduce using rule 103 (gexp1 -> LT saw_relational_operator mexp .)
    FALSE           reduce using rule 103 (gexp1 -> LT saw_relational_operator mexp .)
    CCURLY          reduce using rule 103 (gexp1 -> LT saw_relational_operator mexp .)
    CPAREN          reduce using rule 103 (gexp1 -> LT saw_relational_operator mexp .)
    CBRACKET        reduce using rule 103 (gexp1 -> LT saw_relational_operator mexp .)
    COMMA           reduce using rule 103 (gexp1 -> LT saw_relational_operator mexp .)
    COLON           reduce using rule 103 (gexp1 -> LT saw_relational_operator mexp .)
    SEMICOLON       reduce using rule 103 (gexp1 -> LT saw_relational_operator mexp .)


state 268

    (104) gexp1 -> GT saw_relational_operator mexp .

    AND             reduce using rule 104 (gexp1 -> GT saw_relational_operator mexp .)
    OR              reduce using rule 104 (gexp1 -> GT saw_relational_operator mexp .)
    QUESTION        reduce using rule 104 (gexp1 -> GT saw_relational_operator mexp .)
    RETURN          reduce using rule 104 (gexp1 -> GT saw_relational_operator mexp .)
    ID              reduce using rule 104 (gexp1 -> GT saw_relational_operator mexp .)
    IF              reduce using rule 104 (gexp1 -> GT saw_relational_operator mexp .)
    PRINT           reduce using rule 104 (gexp1 -> GT saw_relational_operator mexp .)
    READ            reduce using rule 104 (gexp1 -> GT saw_relational_operator mexp .)
    WHILE           reduce using rule 104 (gexp1 -> GT saw_relational_operator mexp .)
    FOR             reduce using rule 104 (gexp1 -> GT saw_relational_operator mexp .)
    OPAREN          reduce using rule 104 (gexp1 -> GT saw_relational_operator mexp .)
    CSTINT          reduce using rule 104 (gexp1 -> GT saw_relational_operator mexp .)
    CSTFLT          reduce using rule 104 (gexp1 -> GT saw_relational_operator mexp .)
    CSTCHAR         reduce using rule 104 (gexp1 -> GT saw_relational_operator mexp .)
    CSTSTRING       reduce using rule 104 (gexp1 -> GT saw_relational_operator mexp .)
    TRUE            reduce using rule 104 (gexp1 -> GT saw_relational_operator mexp .)
    FALSE           reduce using rule 104 (gexp1 -> GT saw_relational_operator mexp .)
    CCURLY          reduce using rule 104 (gexp1 -> GT saw_relational_operator mexp .)
    CPAREN          reduce using rule 104 (gexp1 -> GT saw_relational_operator mexp .)
    CBRACKET        reduce using rule 104 (gexp1 -> GT saw_relational_operator mexp .)
    COMMA           reduce using rule 104 (gexp1 -> GT saw_relational_operator mexp .)
    COLON           reduce using rule 104 (gexp1 -> GT saw_relational_operator mexp .)
    SEMICOLON       reduce using rule 104 (gexp1 -> GT saw_relational_operator mexp .)


state 269

    (105) gexp1 -> GTE saw_relational_operator mexp .

    AND             reduce using rule 105 (gexp1 -> GTE saw_relational_operator mexp .)
    OR              reduce using rule 105 (gexp1 -> GTE saw_relational_operator mexp .)
    QUESTION        reduce using rule 105 (gexp1 -> GTE saw_relational_operator mexp .)
    RETURN          reduce using rule 105 (gexp1 -> GTE saw_relational_operator mexp .)
    ID              reduce using rule 105 (gexp1 -> GTE saw_relational_operator mexp .)
    IF              reduce using rule 105 (gexp1 -> GTE saw_relational_operator mexp .)
    PRINT           reduce using rule 105 (gexp1 -> GTE saw_relational_operator mexp .)
    READ            reduce using rule 105 (gexp1 -> GTE saw_relational_operator mexp .)
    WHILE           reduce using rule 105 (gexp1 -> GTE saw_relational_operator mexp .)
    FOR             reduce using rule 105 (gexp1 -> GTE saw_relational_operator mexp .)
    OPAREN          reduce using rule 105 (gexp1 -> GTE saw_relational_operator mexp .)
    CSTINT          reduce using rule 105 (gexp1 -> GTE saw_relational_operator mexp .)
    CSTFLT          reduce using rule 105 (gexp1 -> GTE saw_relational_operator mexp .)
    CSTCHAR         reduce using rule 105 (gexp1 -> GTE saw_relational_operator mexp .)
    CSTSTRING       reduce using rule 105 (gexp1 -> GTE saw_relational_operator mexp .)
    TRUE            reduce using rule 105 (gexp1 -> GTE saw_relational_operator mexp .)
    FALSE           reduce using rule 105 (gexp1 -> GTE saw_relational_operator mexp .)
    CCURLY          reduce using rule 105 (gexp1 -> GTE saw_relational_operator mexp .)
    CPAREN          reduce using rule 105 (gexp1 -> GTE saw_relational_operator mexp .)
    CBRACKET        reduce using rule 105 (gexp1 -> GTE saw_relational_operator mexp .)
    COMMA           reduce using rule 105 (gexp1 -> GTE saw_relational_operator mexp .)
    COLON           reduce using rule 105 (gexp1 -> GTE saw_relational_operator mexp .)
    SEMICOLON       reduce using rule 105 (gexp1 -> GTE saw_relational_operator mexp .)


state 270

    (106) gexp1 -> LTE saw_relational_operator mexp .

    AND             reduce using rule 106 (gexp1 -> LTE saw_relational_operator mexp .)
    OR              reduce using rule 106 (gexp1 -> LTE saw_relational_operator mexp .)
    QUESTION        reduce using rule 106 (gexp1 -> LTE saw_relational_operator mexp .)
    RETURN          reduce using rule 106 (gexp1 -> LTE saw_relational_operator mexp .)
    ID              reduce using rule 106 (gexp1 -> LTE saw_relational_operator mexp .)
    IF              reduce using rule 106 (gexp1 -> LTE saw_relational_operator mexp .)
    PRINT           reduce using rule 106 (gexp1 -> LTE saw_relational_operator mexp .)
    READ            reduce using rule 106 (gexp1 -> LTE saw_relational_operator mexp .)
    WHILE           reduce using rule 106 (gexp1 -> LTE saw_relational_operator mexp .)
    FOR             reduce using rule 106 (gexp1 -> LTE saw_relational_operator mexp .)
    OPAREN          reduce using rule 106 (gexp1 -> LTE saw_relational_operator mexp .)
    CSTINT          reduce using rule 106 (gexp1 -> LTE saw_relational_operator mexp .)
    CSTFLT          reduce using rule 106 (gexp1 -> LTE saw_relational_operator mexp .)
    CSTCHAR         reduce using rule 106 (gexp1 -> LTE saw_relational_operator mexp .)
    CSTSTRING       reduce using rule 106 (gexp1 -> LTE saw_relational_operator mexp .)
    TRUE            reduce using rule 106 (gexp1 -> LTE saw_relational_operator mexp .)
    FALSE           reduce using rule 106 (gexp1 -> LTE saw_relational_operator mexp .)
    CCURLY          reduce using rule 106 (gexp1 -> LTE saw_relational_operator mexp .)
    CPAREN          reduce using rule 106 (gexp1 -> LTE saw_relational_operator mexp .)
    CBRACKET        reduce using rule 106 (gexp1 -> LTE saw_relational_operator mexp .)
    COMMA           reduce using rule 106 (gexp1 -> LTE saw_relational_operator mexp .)
    COLON           reduce using rule 106 (gexp1 -> LTE saw_relational_operator mexp .)
    SEMICOLON       reduce using rule 106 (gexp1 -> LTE saw_relational_operator mexp .)


state 271

    (107) gexp1 -> EQ saw_relational_operator mexp .

    AND             reduce using rule 107 (gexp1 -> EQ saw_relational_operator mexp .)
    OR              reduce using rule 107 (gexp1 -> EQ saw_relational_operator mexp .)
    QUESTION        reduce using rule 107 (gexp1 -> EQ saw_relational_operator mexp .)
    RETURN          reduce using rule 107 (gexp1 -> EQ saw_relational_operator mexp .)
    ID              reduce using rule 107 (gexp1 -> EQ saw_relational_operator mexp .)
    IF              reduce using rule 107 (gexp1 -> EQ saw_relational_operator mexp .)
    PRINT           reduce using rule 107 (gexp1 -> EQ saw_relational_operator mexp .)
    READ            reduce using rule 107 (gexp1 -> EQ saw_relational_operator mexp .)
    WHILE           reduce using rule 107 (gexp1 -> EQ saw_relational_operator mexp .)
    FOR             reduce using rule 107 (gexp1 -> EQ saw_relational_operator mexp .)
    OPAREN          reduce using rule 107 (gexp1 -> EQ saw_relational_operator mexp .)
    CSTINT          reduce using rule 107 (gexp1 -> EQ saw_relational_operator mexp .)
    CSTFLT          reduce using rule 107 (gexp1 -> EQ saw_relational_operator mexp .)
    CSTCHAR         reduce using rule 107 (gexp1 -> EQ saw_relational_operator mexp .)
    CSTSTRING       reduce using rule 107 (gexp1 -> EQ saw_relational_operator mexp .)
    TRUE            reduce using rule 107 (gexp1 -> EQ saw_relational_operator mexp .)
    FALSE           reduce using rule 107 (gexp1 -> EQ saw_relational_operator mexp .)
    CCURLY          reduce using rule 107 (gexp1 -> EQ saw_relational_operator mexp .)
    CPAREN          reduce using rule 107 (gexp1 -> EQ saw_relational_operator mexp .)
    CBRACKET        reduce using rule 107 (gexp1 -> EQ saw_relational_operator mexp .)
    COMMA           reduce using rule 107 (gexp1 -> EQ saw_relational_operator mexp .)
    COLON           reduce using rule 107 (gexp1 -> EQ saw_relational_operator mexp .)
    SEMICOLON       reduce using rule 107 (gexp1 -> EQ saw_relational_operator mexp .)


state 272

    (108) gexp1 -> NE saw_relational_operator mexp .

    AND             reduce using rule 108 (gexp1 -> NE saw_relational_operator mexp .)
    OR              reduce using rule 108 (gexp1 -> NE saw_relational_operator mexp .)
    QUESTION        reduce using rule 108 (gexp1 -> NE saw_relational_operator mexp .)
    RETURN          reduce using rule 108 (gexp1 -> NE saw_relational_operator mexp .)
    ID              reduce using rule 108 (gexp1 -> NE saw_relational_operator mexp .)
    IF              reduce using rule 108 (gexp1 -> NE saw_relational_operator mexp .)
    PRINT           reduce using rule 108 (gexp1 -> NE saw_relational_operator mexp .)
    READ            reduce using rule 108 (gexp1 -> NE saw_relational_operator mexp .)
    WHILE           reduce using rule 108 (gexp1 -> NE saw_relational_operator mexp .)
    FOR             reduce using rule 108 (gexp1 -> NE saw_relational_operator mexp .)
    OPAREN          reduce using rule 108 (gexp1 -> NE saw_relational_operator mexp .)
    CSTINT          reduce using rule 108 (gexp1 -> NE saw_relational_operator mexp .)
    CSTFLT          reduce using rule 108 (gexp1 -> NE saw_relational_operator mexp .)
    CSTCHAR         reduce using rule 108 (gexp1 -> NE saw_relational_operator mexp .)
    CSTSTRING       reduce using rule 108 (gexp1 -> NE saw_relational_operator mexp .)
    TRUE            reduce using rule 108 (gexp1 -> NE saw_relational_operator mexp .)
    FALSE           reduce using rule 108 (gexp1 -> NE saw_relational_operator mexp .)
    CCURLY          reduce using rule 108 (gexp1 -> NE saw_relational_operator mexp .)
    CPAREN          reduce using rule 108 (gexp1 -> NE saw_relational_operator mexp .)
    CBRACKET        reduce using rule 108 (gexp1 -> NE saw_relational_operator mexp .)
    COMMA           reduce using rule 108 (gexp1 -> NE saw_relational_operator mexp .)
    COLON           reduce using rule 108 (gexp1 -> NE saw_relational_operator mexp .)
    SEMICOLON       reduce using rule 108 (gexp1 -> NE saw_relational_operator mexp .)


state 273

    (111) mexp1 -> PLUS saw_plusminus_operator termino . mexp1
    (111) mexp1 -> . PLUS saw_plusminus_operator termino mexp1
    (112) mexp1 -> . MINUS saw_plusminus_operator termino mexp1
    (113) mexp1 -> . empty
    (128) empty -> .

    PLUS            shift and go to state 180
    MINUS           shift and go to state 181
    LT              reduce using rule 128 (empty -> .)
    GT              reduce using rule 128 (empty -> .)
    GTE             reduce using rule 128 (empty -> .)
    LTE             reduce using rule 128 (empty -> .)
    EQ              reduce using rule 128 (empty -> .)
    NE              reduce using rule 128 (empty -> .)
    AND             reduce using rule 128 (empty -> .)
    OR              reduce using rule 128 (empty -> .)
    QUESTION        reduce using rule 128 (empty -> .)
    RETURN          reduce using rule 128 (empty -> .)
    ID              reduce using rule 128 (empty -> .)
    IF              reduce using rule 128 (empty -> .)
    PRINT           reduce using rule 128 (empty -> .)
    READ            reduce using rule 128 (empty -> .)
    WHILE           reduce using rule 128 (empty -> .)
    FOR             reduce using rule 128 (empty -> .)
    OPAREN          reduce using rule 128 (empty -> .)
    CSTINT          reduce using rule 128 (empty -> .)
    CSTFLT          reduce using rule 128 (empty -> .)
    CSTCHAR         reduce using rule 128 (empty -> .)
    CSTSTRING       reduce using rule 128 (empty -> .)
    TRUE            reduce using rule 128 (empty -> .)
    FALSE           reduce using rule 128 (empty -> .)
    CCURLY          reduce using rule 128 (empty -> .)
    CPAREN          reduce using rule 128 (empty -> .)
    CBRACKET        reduce using rule 128 (empty -> .)
    COMMA           reduce using rule 128 (empty -> .)
    COLON           reduce using rule 128 (empty -> .)
    SEMICOLON       reduce using rule 128 (empty -> .)

    mexp1                          shift and go to state 305
    empty                          shift and go to state 182

state 274

    (112) mexp1 -> MINUS saw_plusminus_operator termino . mexp1
    (111) mexp1 -> . PLUS saw_plusminus_operator termino mexp1
    (112) mexp1 -> . MINUS saw_plusminus_operator termino mexp1
    (113) mexp1 -> . empty
    (128) empty -> .

    PLUS            shift and go to state 180
    MINUS           shift and go to state 181
    LT              reduce using rule 128 (empty -> .)
    GT              reduce using rule 128 (empty -> .)
    GTE             reduce using rule 128 (empty -> .)
    LTE             reduce using rule 128 (empty -> .)
    EQ              reduce using rule 128 (empty -> .)
    NE              reduce using rule 128 (empty -> .)
    AND             reduce using rule 128 (empty -> .)
    OR              reduce using rule 128 (empty -> .)
    QUESTION        reduce using rule 128 (empty -> .)
    RETURN          reduce using rule 128 (empty -> .)
    ID              reduce using rule 128 (empty -> .)
    IF              reduce using rule 128 (empty -> .)
    PRINT           reduce using rule 128 (empty -> .)
    READ            reduce using rule 128 (empty -> .)
    WHILE           reduce using rule 128 (empty -> .)
    FOR             reduce using rule 128 (empty -> .)
    OPAREN          reduce using rule 128 (empty -> .)
    CSTINT          reduce using rule 128 (empty -> .)
    CSTFLT          reduce using rule 128 (empty -> .)
    CSTCHAR         reduce using rule 128 (empty -> .)
    CSTSTRING       reduce using rule 128 (empty -> .)
    TRUE            reduce using rule 128 (empty -> .)
    FALSE           reduce using rule 128 (empty -> .)
    CCURLY          reduce using rule 128 (empty -> .)
    CPAREN          reduce using rule 128 (empty -> .)
    CBRACKET        reduce using rule 128 (empty -> .)
    COMMA           reduce using rule 128 (empty -> .)
    COLON           reduce using rule 128 (empty -> .)
    SEMICOLON       reduce using rule 128 (empty -> .)

    mexp1                          shift and go to state 306
    empty                          shift and go to state 182

state 275

    (115) term1 -> MULT saw_multdiv_operator factor . term1
    (115) term1 -> . MULT saw_multdiv_operator factor term1
    (116) term1 -> . DIV saw_multdiv_operator factor term1
    (117) term1 -> . empty
    (128) empty -> .

    MULT            shift and go to state 184
    DIV             shift and go to state 185
    PLUS            reduce using rule 128 (empty -> .)
    MINUS           reduce using rule 128 (empty -> .)
    LT              reduce using rule 128 (empty -> .)
    GT              reduce using rule 128 (empty -> .)
    GTE             reduce using rule 128 (empty -> .)
    LTE             reduce using rule 128 (empty -> .)
    EQ              reduce using rule 128 (empty -> .)
    NE              reduce using rule 128 (empty -> .)
    AND             reduce using rule 128 (empty -> .)
    OR              reduce using rule 128 (empty -> .)
    QUESTION        reduce using rule 128 (empty -> .)
    RETURN          reduce using rule 128 (empty -> .)
    ID              reduce using rule 128 (empty -> .)
    IF              reduce using rule 128 (empty -> .)
    PRINT           reduce using rule 128 (empty -> .)
    READ            reduce using rule 128 (empty -> .)
    WHILE           reduce using rule 128 (empty -> .)
    FOR             reduce using rule 128 (empty -> .)
    OPAREN          reduce using rule 128 (empty -> .)
    CSTINT          reduce using rule 128 (empty -> .)
    CSTFLT          reduce using rule 128 (empty -> .)
    CSTCHAR         reduce using rule 128 (empty -> .)
    CSTSTRING       reduce using rule 128 (empty -> .)
    TRUE            reduce using rule 128 (empty -> .)
    FALSE           reduce using rule 128 (empty -> .)
    CCURLY          reduce using rule 128 (empty -> .)
    CPAREN          reduce using rule 128 (empty -> .)
    CBRACKET        reduce using rule 128 (empty -> .)
    COMMA           reduce using rule 128 (empty -> .)
    COLON           reduce using rule 128 (empty -> .)
    SEMICOLON       reduce using rule 128 (empty -> .)

    term1                          shift and go to state 307
    empty                          shift and go to state 186

state 276

    (116) term1 -> DIV saw_multdiv_operator factor . term1
    (115) term1 -> . MULT saw_multdiv_operator factor term1
    (116) term1 -> . DIV saw_multdiv_operator factor term1
    (117) term1 -> . empty
    (128) empty -> .

    MULT            shift and go to state 184
    DIV             shift and go to state 185
    PLUS            reduce using rule 128 (empty -> .)
    MINUS           reduce using rule 128 (empty -> .)
    LT              reduce using rule 128 (empty -> .)
    GT              reduce using rule 128 (empty -> .)
    GTE             reduce using rule 128 (empty -> .)
    LTE             reduce using rule 128 (empty -> .)
    EQ              reduce using rule 128 (empty -> .)
    NE              reduce using rule 128 (empty -> .)
    AND             reduce using rule 128 (empty -> .)
    OR              reduce using rule 128 (empty -> .)
    QUESTION        reduce using rule 128 (empty -> .)
    RETURN          reduce using rule 128 (empty -> .)
    ID              reduce using rule 128 (empty -> .)
    IF              reduce using rule 128 (empty -> .)
    PRINT           reduce using rule 128 (empty -> .)
    READ            reduce using rule 128 (empty -> .)
    WHILE           reduce using rule 128 (empty -> .)
    FOR             reduce using rule 128 (empty -> .)
    OPAREN          reduce using rule 128 (empty -> .)
    CSTINT          reduce using rule 128 (empty -> .)
    CSTFLT          reduce using rule 128 (empty -> .)
    CSTCHAR         reduce using rule 128 (empty -> .)
    CSTSTRING       reduce using rule 128 (empty -> .)
    TRUE            reduce using rule 128 (empty -> .)
    FALSE           reduce using rule 128 (empty -> .)
    CCURLY          reduce using rule 128 (empty -> .)
    CPAREN          reduce using rule 128 (empty -> .)
    CBRACKET        reduce using rule 128 (empty -> .)
    COMMA           reduce using rule 128 (empty -> .)
    COLON           reduce using rule 128 (empty -> .)
    SEMICOLON       reduce using rule 128 (empty -> .)

    term1                          shift and go to state 308
    empty                          shift and go to state 186

state 277

    (37) type3 -> OBRACKET CSTINT CBRACKET . saw_dimension
    (137) saw_dimension -> .

    COMMA           reduce using rule 137 (saw_dimension -> .)
    SEMICOLON       reduce using rule 137 (saw_dimension -> .)
    CPAREN          reduce using rule 137 (saw_dimension -> .)

    saw_dimension                  shift and go to state 309

state 278

    (32) type -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable type2 .

    SEMICOLON       reduce using rule 32 (type -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable type2 .)


state 279

    (35) type2 -> COMMA . ID saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable

    ID              shift and go to state 310


state 280

    (36) type2 -> empty .

    SEMICOLON       reduce using rule 36 (type2 -> empty .)


state 281

    (19) class_block -> OCURLY ATTRIBUTES COLON decs METHODS COLON . functions CCURLY
    (7) functions -> . function functions
    (8) functions -> . empty
    (9) function -> . FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN block saw_function_end scope_end
    (128) empty -> .

    FUNCTION        shift and go to state 13
    CCURLY          reduce using rule 128 (empty -> .)

    functions                      shift and go to state 311
    function                       shift and go to state 312
    empty                          shift and go to state 313

state 282

    (9) function -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN block saw_function_end scope_end .

    VAR             reduce using rule 9 (function -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN block saw_function_end scope_end .)
    CLASS           reduce using rule 9 (function -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN block saw_function_end scope_end .)
    FUNCTION        reduce using rule 9 (function -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN block saw_function_end scope_end .)
    INT             reduce using rule 9 (function -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN block saw_function_end scope_end .)
    CCURLY          reduce using rule 9 (function -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN block saw_function_end scope_end .)


state 283

    (17) param2 -> multiple ID saw_id OBRACKET CSTINT . CBRACKET saw_dimension type3 saw_variable_param

    CBRACKET        shift and go to state 314


state 284

    (76) ternary -> exp QUESTION saw_cond estatuto_redux COLON . saw_else estatuto_redux SEMICOLON bc_end
    (164) saw_else -> .

    RETURN          reduce using rule 164 (saw_else -> .)
    ID              reduce using rule 164 (saw_else -> .)
    PRINT           reduce using rule 164 (saw_else -> .)
    READ            reduce using rule 164 (saw_else -> .)
    OPAREN          reduce using rule 164 (saw_else -> .)
    CSTINT          reduce using rule 164 (saw_else -> .)
    CSTFLT          reduce using rule 164 (saw_else -> .)
    CSTCHAR         reduce using rule 164 (saw_else -> .)
    CSTSTRING       reduce using rule 164 (saw_else -> .)
    TRUE            reduce using rule 164 (saw_else -> .)
    FALSE           reduce using rule 164 (saw_else -> .)

    saw_else                       shift and go to state 315

state 285

    (70) estatuto_redux -> RETURN exp .

    COLON           reduce using rule 70 (estatuto_redux -> RETURN exp .)
    SEMICOLON       reduce using rule 70 (estatuto_redux -> RETURN exp .)


state 286

    (71) assign -> variable saw_var_factor AS saw_asig exp .

    RETURN          reduce using rule 71 (assign -> variable saw_var_factor AS saw_asig exp .)
    ID              reduce using rule 71 (assign -> variable saw_var_factor AS saw_asig exp .)
    IF              reduce using rule 71 (assign -> variable saw_var_factor AS saw_asig exp .)
    PRINT           reduce using rule 71 (assign -> variable saw_var_factor AS saw_asig exp .)
    READ            reduce using rule 71 (assign -> variable saw_var_factor AS saw_asig exp .)
    WHILE           reduce using rule 71 (assign -> variable saw_var_factor AS saw_asig exp .)
    FOR             reduce using rule 71 (assign -> variable saw_var_factor AS saw_asig exp .)
    OPAREN          reduce using rule 71 (assign -> variable saw_var_factor AS saw_asig exp .)
    CSTINT          reduce using rule 71 (assign -> variable saw_var_factor AS saw_asig exp .)
    CSTFLT          reduce using rule 71 (assign -> variable saw_var_factor AS saw_asig exp .)
    CSTCHAR         reduce using rule 71 (assign -> variable saw_var_factor AS saw_asig exp .)
    CSTSTRING       reduce using rule 71 (assign -> variable saw_var_factor AS saw_asig exp .)
    TRUE            reduce using rule 71 (assign -> variable saw_var_factor AS saw_asig exp .)
    FALSE           reduce using rule 71 (assign -> variable saw_var_factor AS saw_asig exp .)
    CCURLY          reduce using rule 71 (assign -> variable saw_var_factor AS saw_asig exp .)
    COLON           reduce using rule 71 (assign -> variable saw_var_factor AS saw_asig exp .)
    SEMICOLON       reduce using rule 71 (assign -> variable saw_var_factor AS saw_asig exp .)


state 287

    (92) function_call -> ID saw_id verify_func OPAREN exp . verify_param function_call1 CPAREN generate_gosub
    (169) verify_param -> .

    COMMA           reduce using rule 169 (verify_param -> .)
    CPAREN          reduce using rule 169 (verify_param -> .)

    verify_param                   shift and go to state 316

state 288

    (93) function_call -> ID saw_id verify_func OPAREN CPAREN . generate_gosub
    (171) generate_gosub -> .

    RETURN          reduce using rule 171 (generate_gosub -> .)
    ID              reduce using rule 171 (generate_gosub -> .)
    IF              reduce using rule 171 (generate_gosub -> .)
    PRINT           reduce using rule 171 (generate_gosub -> .)
    READ            reduce using rule 171 (generate_gosub -> .)
    WHILE           reduce using rule 171 (generate_gosub -> .)
    FOR             reduce using rule 171 (generate_gosub -> .)
    OPAREN          reduce using rule 171 (generate_gosub -> .)
    CSTINT          reduce using rule 171 (generate_gosub -> .)
    CSTFLT          reduce using rule 171 (generate_gosub -> .)
    CSTCHAR         reduce using rule 171 (generate_gosub -> .)
    CSTSTRING       reduce using rule 171 (generate_gosub -> .)
    TRUE            reduce using rule 171 (generate_gosub -> .)
    FALSE           reduce using rule 171 (generate_gosub -> .)
    CCURLY          reduce using rule 171 (generate_gosub -> .)
    MULT            reduce using rule 171 (generate_gosub -> .)
    DIV             reduce using rule 171 (generate_gosub -> .)
    PLUS            reduce using rule 171 (generate_gosub -> .)
    MINUS           reduce using rule 171 (generate_gosub -> .)
    LT              reduce using rule 171 (generate_gosub -> .)
    GT              reduce using rule 171 (generate_gosub -> .)
    GTE             reduce using rule 171 (generate_gosub -> .)
    LTE             reduce using rule 171 (generate_gosub -> .)
    EQ              reduce using rule 171 (generate_gosub -> .)
    NE              reduce using rule 171 (generate_gosub -> .)
    AND             reduce using rule 171 (generate_gosub -> .)
    OR              reduce using rule 171 (generate_gosub -> .)
    QUESTION        reduce using rule 171 (generate_gosub -> .)
    CPAREN          reduce using rule 171 (generate_gosub -> .)
    COLON           reduce using rule 171 (generate_gosub -> .)
    CBRACKET        reduce using rule 171 (generate_gosub -> .)
    COMMA           reduce using rule 171 (generate_gosub -> .)
    SEMICOLON       reduce using rule 171 (generate_gosub -> .)

    generate_gosub                 shift and go to state 317

state 289

    (86) variable -> ID saw_id OBRACKET exp CBRACKET . saw_dimension variable1 saw_called_var
    (137) saw_dimension -> .

    OBRACKET        reduce using rule 137 (saw_dimension -> .)
    AS              reduce using rule 137 (saw_dimension -> .)
    MULT            reduce using rule 137 (saw_dimension -> .)
    DIV             reduce using rule 137 (saw_dimension -> .)
    PLUS            reduce using rule 137 (saw_dimension -> .)
    MINUS           reduce using rule 137 (saw_dimension -> .)
    LT              reduce using rule 137 (saw_dimension -> .)
    GT              reduce using rule 137 (saw_dimension -> .)
    GTE             reduce using rule 137 (saw_dimension -> .)
    LTE             reduce using rule 137 (saw_dimension -> .)
    EQ              reduce using rule 137 (saw_dimension -> .)
    NE              reduce using rule 137 (saw_dimension -> .)
    AND             reduce using rule 137 (saw_dimension -> .)
    OR              reduce using rule 137 (saw_dimension -> .)
    QUESTION        reduce using rule 137 (saw_dimension -> .)
    RETURN          reduce using rule 137 (saw_dimension -> .)
    ID              reduce using rule 137 (saw_dimension -> .)
    IF              reduce using rule 137 (saw_dimension -> .)
    PRINT           reduce using rule 137 (saw_dimension -> .)
    READ            reduce using rule 137 (saw_dimension -> .)
    WHILE           reduce using rule 137 (saw_dimension -> .)
    FOR             reduce using rule 137 (saw_dimension -> .)
    OPAREN          reduce using rule 137 (saw_dimension -> .)
    CSTINT          reduce using rule 137 (saw_dimension -> .)
    CSTFLT          reduce using rule 137 (saw_dimension -> .)
    CSTCHAR         reduce using rule 137 (saw_dimension -> .)
    CSTSTRING       reduce using rule 137 (saw_dimension -> .)
    TRUE            reduce using rule 137 (saw_dimension -> .)
    FALSE           reduce using rule 137 (saw_dimension -> .)
    CCURLY          reduce using rule 137 (saw_dimension -> .)
    CPAREN          reduce using rule 137 (saw_dimension -> .)
    FROM            reduce using rule 137 (saw_dimension -> .)
    CBRACKET        reduce using rule 137 (saw_dimension -> .)
    COMMA           reduce using rule 137 (saw_dimension -> .)
    COLON           reduce using rule 137 (saw_dimension -> .)
    SEMICOLON       reduce using rule 137 (saw_dimension -> .)
    TO              reduce using rule 137 (saw_dimension -> .)
    BY              reduce using rule 137 (saw_dimension -> .)

    saw_dimension                  shift and go to state 318

state 290

    (90) variable2 -> PERIOD ID saw_called_var_from_class .
    (91) variable2 -> PERIOD ID saw_called_var_from_class . OBRACKET exp CBRACKET saw_dimension variable1

    AS              reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    MULT            reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    DIV             reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    PLUS            reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    MINUS           reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    LT              reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    GT              reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    GTE             reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    LTE             reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    EQ              reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    NE              reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    AND             reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    OR              reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    QUESTION        reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    RETURN          reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    ID              reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    IF              reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    PRINT           reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    READ            reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    WHILE           reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    FOR             reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    OPAREN          reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    CSTINT          reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    CSTFLT          reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    CSTCHAR         reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    CSTSTRING       reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    TRUE            reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    FALSE           reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    CCURLY          reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    CPAREN          reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    CBRACKET        reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    COMMA           reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    COLON           reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    SEMICOLON       reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    FROM            reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    TO              reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    BY              reduce using rule 90 (variable2 -> PERIOD ID saw_called_var_from_class .)
    OBRACKET        shift and go to state 319


state 291

    (118) factor -> OPAREN saw_oparen exp CPAREN saw_cparen . check_multdiv_operator
    (145) check_multdiv_operator -> .

    MULT            reduce using rule 145 (check_multdiv_operator -> .)
    DIV             reduce using rule 145 (check_multdiv_operator -> .)
    PLUS            reduce using rule 145 (check_multdiv_operator -> .)
    MINUS           reduce using rule 145 (check_multdiv_operator -> .)
    LT              reduce using rule 145 (check_multdiv_operator -> .)
    GT              reduce using rule 145 (check_multdiv_operator -> .)
    GTE             reduce using rule 145 (check_multdiv_operator -> .)
    LTE             reduce using rule 145 (check_multdiv_operator -> .)
    EQ              reduce using rule 145 (check_multdiv_operator -> .)
    NE              reduce using rule 145 (check_multdiv_operator -> .)
    AND             reduce using rule 145 (check_multdiv_operator -> .)
    OR              reduce using rule 145 (check_multdiv_operator -> .)
    QUESTION        reduce using rule 145 (check_multdiv_operator -> .)
    RETURN          reduce using rule 145 (check_multdiv_operator -> .)
    ID              reduce using rule 145 (check_multdiv_operator -> .)
    IF              reduce using rule 145 (check_multdiv_operator -> .)
    PRINT           reduce using rule 145 (check_multdiv_operator -> .)
    READ            reduce using rule 145 (check_multdiv_operator -> .)
    WHILE           reduce using rule 145 (check_multdiv_operator -> .)
    FOR             reduce using rule 145 (check_multdiv_operator -> .)
    OPAREN          reduce using rule 145 (check_multdiv_operator -> .)
    CSTINT          reduce using rule 145 (check_multdiv_operator -> .)
    CSTFLT          reduce using rule 145 (check_multdiv_operator -> .)
    CSTCHAR         reduce using rule 145 (check_multdiv_operator -> .)
    CSTSTRING       reduce using rule 145 (check_multdiv_operator -> .)
    TRUE            reduce using rule 145 (check_multdiv_operator -> .)
    FALSE           reduce using rule 145 (check_multdiv_operator -> .)
    CCURLY          reduce using rule 145 (check_multdiv_operator -> .)
    CPAREN          reduce using rule 145 (check_multdiv_operator -> .)
    CBRACKET        reduce using rule 145 (check_multdiv_operator -> .)
    COMMA           reduce using rule 145 (check_multdiv_operator -> .)
    COLON           reduce using rule 145 (check_multdiv_operator -> .)
    SEMICOLON       reduce using rule 145 (check_multdiv_operator -> .)

    check_multdiv_operator         shift and go to state 320

state 292

    (72) conditional -> IF cond2 THEN block cond1 . SEMICOLON bc_end

    SEMICOLON       shift and go to state 321


state 293

    (73) cond1 -> ELSE . saw_else block
    (164) saw_else -> .

    OCURLY          reduce using rule 164 (saw_else -> .)

    saw_else                       shift and go to state 322

state 294

    (74) cond1 -> empty .

    SEMICOLON       reduce using rule 74 (cond1 -> empty .)


state 295

    (77) write -> PRINT saw_print OPAREN exp e1 . CPAREN saw_print_end

    CPAREN          shift and go to state 323


state 296

    (78) e1 -> COMMA . exp e1
    (96) exp -> . texp exp1 check_or_operator
    (99) texp -> . gexp texp1 check_and_operator
    (102) gexp -> . mexp gexp1 check_relational_operator
    (110) mexp -> . termino mexp1
    (114) termino -> . factor term1 check_plusminus_operator
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    ID              shift and go to state 154
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    exp                            shift and go to state 324
    texp                           shift and go to state 121
    gexp                           shift and go to state 122
    mexp                           shift and go to state 123
    termino                        shift and go to state 124
    factor                         shift and go to state 125
    varcst                         shift and go to state 126
    variable                       shift and go to state 152
    function_call                  shift and go to state 153
    boolean                        shift and go to state 131

state 297

    (79) e1 -> empty .

    CPAREN          reduce using rule 79 (e1 -> empty .)


state 298

    (80) read -> READ saw_read OPAREN variable saw_read_exp . l1 CPAREN saw_read_end
    (81) l1 -> . COMMA variable saw_read_exp e1
    (82) l1 -> . empty
    (128) empty -> .

    COMMA           shift and go to state 326
    CPAREN          reduce using rule 128 (empty -> .)

    l1                             shift and go to state 325
    empty                          shift and go to state 327

state 299

    (20) while_loop -> WHILE saw_while cond2 THEN block . SEMICOLON saw_while_end

    SEMICOLON       shift and go to state 328


state 300

    (23) for_loop1 -> variable .

    TO              reduce using rule 23 (for_loop1 -> variable .)
    BY              reduce using rule 23 (for_loop1 -> variable .)
    CPAREN          reduce using rule 23 (for_loop1 -> variable .)


state 301

    (21) for_loop -> FOR OPAREN variable FROM for_loop1 . TO for_loop1 BY for_loop1 CPAREN THEN block SEMICOLON

    TO              shift and go to state 329


state 302

    (22) for_loop1 -> CSTINT .

    TO              reduce using rule 22 (for_loop1 -> CSTINT .)
    BY              reduce using rule 22 (for_loop1 -> CSTINT .)
    CPAREN          reduce using rule 22 (for_loop1 -> CSTINT .)


state 303

    (97) exp1 -> OR saw_or texp exp1 .

    QUESTION        reduce using rule 97 (exp1 -> OR saw_or texp exp1 .)
    RETURN          reduce using rule 97 (exp1 -> OR saw_or texp exp1 .)
    ID              reduce using rule 97 (exp1 -> OR saw_or texp exp1 .)
    IF              reduce using rule 97 (exp1 -> OR saw_or texp exp1 .)
    PRINT           reduce using rule 97 (exp1 -> OR saw_or texp exp1 .)
    READ            reduce using rule 97 (exp1 -> OR saw_or texp exp1 .)
    WHILE           reduce using rule 97 (exp1 -> OR saw_or texp exp1 .)
    FOR             reduce using rule 97 (exp1 -> OR saw_or texp exp1 .)
    OPAREN          reduce using rule 97 (exp1 -> OR saw_or texp exp1 .)
    CSTINT          reduce using rule 97 (exp1 -> OR saw_or texp exp1 .)
    CSTFLT          reduce using rule 97 (exp1 -> OR saw_or texp exp1 .)
    CSTCHAR         reduce using rule 97 (exp1 -> OR saw_or texp exp1 .)
    CSTSTRING       reduce using rule 97 (exp1 -> OR saw_or texp exp1 .)
    TRUE            reduce using rule 97 (exp1 -> OR saw_or texp exp1 .)
    FALSE           reduce using rule 97 (exp1 -> OR saw_or texp exp1 .)
    CCURLY          reduce using rule 97 (exp1 -> OR saw_or texp exp1 .)
    CPAREN          reduce using rule 97 (exp1 -> OR saw_or texp exp1 .)
    CBRACKET        reduce using rule 97 (exp1 -> OR saw_or texp exp1 .)
    COMMA           reduce using rule 97 (exp1 -> OR saw_or texp exp1 .)
    COLON           reduce using rule 97 (exp1 -> OR saw_or texp exp1 .)
    SEMICOLON       reduce using rule 97 (exp1 -> OR saw_or texp exp1 .)


state 304

    (100) texp1 -> AND saw_and gexp texp1 .

    OR              reduce using rule 100 (texp1 -> AND saw_and gexp texp1 .)
    QUESTION        reduce using rule 100 (texp1 -> AND saw_and gexp texp1 .)
    RETURN          reduce using rule 100 (texp1 -> AND saw_and gexp texp1 .)
    ID              reduce using rule 100 (texp1 -> AND saw_and gexp texp1 .)
    IF              reduce using rule 100 (texp1 -> AND saw_and gexp texp1 .)
    PRINT           reduce using rule 100 (texp1 -> AND saw_and gexp texp1 .)
    READ            reduce using rule 100 (texp1 -> AND saw_and gexp texp1 .)
    WHILE           reduce using rule 100 (texp1 -> AND saw_and gexp texp1 .)
    FOR             reduce using rule 100 (texp1 -> AND saw_and gexp texp1 .)
    OPAREN          reduce using rule 100 (texp1 -> AND saw_and gexp texp1 .)
    CSTINT          reduce using rule 100 (texp1 -> AND saw_and gexp texp1 .)
    CSTFLT          reduce using rule 100 (texp1 -> AND saw_and gexp texp1 .)
    CSTCHAR         reduce using rule 100 (texp1 -> AND saw_and gexp texp1 .)
    CSTSTRING       reduce using rule 100 (texp1 -> AND saw_and gexp texp1 .)
    TRUE            reduce using rule 100 (texp1 -> AND saw_and gexp texp1 .)
    FALSE           reduce using rule 100 (texp1 -> AND saw_and gexp texp1 .)
    CCURLY          reduce using rule 100 (texp1 -> AND saw_and gexp texp1 .)
    CPAREN          reduce using rule 100 (texp1 -> AND saw_and gexp texp1 .)
    CBRACKET        reduce using rule 100 (texp1 -> AND saw_and gexp texp1 .)
    COMMA           reduce using rule 100 (texp1 -> AND saw_and gexp texp1 .)
    COLON           reduce using rule 100 (texp1 -> AND saw_and gexp texp1 .)
    SEMICOLON       reduce using rule 100 (texp1 -> AND saw_and gexp texp1 .)


state 305

    (111) mexp1 -> PLUS saw_plusminus_operator termino mexp1 .

    LT              reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    GT              reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    GTE             reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    LTE             reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    EQ              reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    NE              reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    AND             reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    OR              reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    QUESTION        reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    RETURN          reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    ID              reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    IF              reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    PRINT           reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    READ            reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    WHILE           reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    FOR             reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    OPAREN          reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    CSTINT          reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    CSTFLT          reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    CSTCHAR         reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    CSTSTRING       reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    TRUE            reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    FALSE           reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    CCURLY          reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    CPAREN          reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    CBRACKET        reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    COMMA           reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    COLON           reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)
    SEMICOLON       reduce using rule 111 (mexp1 -> PLUS saw_plusminus_operator termino mexp1 .)


state 306

    (112) mexp1 -> MINUS saw_plusminus_operator termino mexp1 .

    LT              reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    GT              reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    GTE             reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    LTE             reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    EQ              reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    NE              reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    AND             reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    OR              reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    QUESTION        reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    RETURN          reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    ID              reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    IF              reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    PRINT           reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    READ            reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    WHILE           reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    FOR             reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    OPAREN          reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    CSTINT          reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    CSTFLT          reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    CSTCHAR         reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    CSTSTRING       reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    TRUE            reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    FALSE           reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    CCURLY          reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    CPAREN          reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    CBRACKET        reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    COMMA           reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    COLON           reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)
    SEMICOLON       reduce using rule 112 (mexp1 -> MINUS saw_plusminus_operator termino mexp1 .)


state 307

    (115) term1 -> MULT saw_multdiv_operator factor term1 .

    PLUS            reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    MINUS           reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    LT              reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    GT              reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    GTE             reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    LTE             reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    EQ              reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    NE              reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    AND             reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    OR              reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    QUESTION        reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    RETURN          reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    ID              reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    IF              reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    PRINT           reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    READ            reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    WHILE           reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    FOR             reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    OPAREN          reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    CSTINT          reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    CSTFLT          reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    CSTCHAR         reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    CSTSTRING       reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    TRUE            reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    FALSE           reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    CCURLY          reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    CPAREN          reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    CBRACKET        reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    COMMA           reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    COLON           reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)
    SEMICOLON       reduce using rule 115 (term1 -> MULT saw_multdiv_operator factor term1 .)


state 308

    (116) term1 -> DIV saw_multdiv_operator factor term1 .

    PLUS            reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    MINUS           reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    LT              reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    GT              reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    GTE             reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    LTE             reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    EQ              reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    NE              reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    AND             reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    OR              reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    QUESTION        reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    RETURN          reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    ID              reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    IF              reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    PRINT           reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    READ            reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    WHILE           reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    FOR             reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    OPAREN          reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    CSTINT          reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    CSTFLT          reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    CSTCHAR         reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    CSTSTRING       reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    TRUE            reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    FALSE           reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    CCURLY          reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    CPAREN          reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    CBRACKET        reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    COMMA           reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    COLON           reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)
    SEMICOLON       reduce using rule 116 (term1 -> DIV saw_multdiv_operator factor term1 .)


state 309

    (37) type3 -> OBRACKET CSTINT CBRACKET saw_dimension .

    COMMA           reduce using rule 37 (type3 -> OBRACKET CSTINT CBRACKET saw_dimension .)
    SEMICOLON       reduce using rule 37 (type3 -> OBRACKET CSTINT CBRACKET saw_dimension .)
    CPAREN          reduce using rule 37 (type3 -> OBRACKET CSTINT CBRACKET saw_dimension .)


state 310

    (35) type2 -> COMMA ID . saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable
    (134) saw_id -> .

    OBRACKET        reduce using rule 134 (saw_id -> .)

    saw_id                         shift and go to state 330

state 311

    (19) class_block -> OCURLY ATTRIBUTES COLON decs METHODS COLON functions . CCURLY

    CCURLY          shift and go to state 331


state 312

    (7) functions -> function . functions
    (7) functions -> . function functions
    (8) functions -> . empty
    (9) function -> . FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN block saw_function_end scope_end
    (128) empty -> .

    FUNCTION        shift and go to state 13
    CCURLY          reduce using rule 128 (empty -> .)

    function                       shift and go to state 312
    functions                      shift and go to state 332
    empty                          shift and go to state 313

state 313

    (8) functions -> empty .

    CCURLY          reduce using rule 8 (functions -> empty .)


state 314

    (17) param2 -> multiple ID saw_id OBRACKET CSTINT CBRACKET . saw_dimension type3 saw_variable_param
    (137) saw_dimension -> .

    OBRACKET        reduce using rule 137 (saw_dimension -> .)
    COMMA           reduce using rule 137 (saw_dimension -> .)
    CPAREN          reduce using rule 137 (saw_dimension -> .)

    saw_dimension                  shift and go to state 333

state 315

    (76) ternary -> exp QUESTION saw_cond estatuto_redux COLON saw_else . estatuto_redux SEMICOLON bc_end
    (65) estatuto_redux -> . assign
    (66) estatuto_redux -> . function_call
    (67) estatuto_redux -> . write
    (68) estatuto_redux -> . read
    (69) estatuto_redux -> . ternary
    (70) estatuto_redux -> . RETURN exp
    (71) assign -> . variable saw_var_factor AS saw_asig exp
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (77) write -> . PRINT saw_print OPAREN exp e1 CPAREN saw_print_end
    (80) read -> . READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end
    (76) ternary -> . exp QUESTION saw_cond estatuto_redux COLON saw_else estatuto_redux SEMICOLON bc_end
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (96) exp -> . texp exp1 check_or_operator
    (99) texp -> . gexp texp1 check_and_operator
    (102) gexp -> . mexp gexp1 check_relational_operator
    (110) mexp -> . termino mexp1
    (114) termino -> . factor term1 check_plusminus_operator
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    RETURN          shift and go to state 252
    ID              shift and go to state 114
    PRINT           shift and go to state 117
    READ            shift and go to state 118
    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    exp                            shift and go to state 112
    estatuto_redux                 shift and go to state 334
    assign                         shift and go to state 247
    function_call                  shift and go to state 248
    write                          shift and go to state 249
    read                           shift and go to state 250
    ternary                        shift and go to state 251
    variable                       shift and go to state 113
    texp                           shift and go to state 121
    gexp                           shift and go to state 122
    mexp                           shift and go to state 123
    termino                        shift and go to state 124
    factor                         shift and go to state 125
    varcst                         shift and go to state 126
    boolean                        shift and go to state 131

state 316

    (92) function_call -> ID saw_id verify_func OPAREN exp verify_param . function_call1 CPAREN generate_gosub
    (94) function_call1 -> . COMMA increment_cont exp verify_param function_call1
    (95) function_call1 -> . empty
    (128) empty -> .

    COMMA           shift and go to state 336
    CPAREN          reduce using rule 128 (empty -> .)

    function_call1                 shift and go to state 335
    empty                          shift and go to state 337

state 317

    (93) function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .

    RETURN          reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    ID              reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    IF              reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    PRINT           reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    READ            reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    WHILE           reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    FOR             reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    OPAREN          reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    CSTINT          reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    CSTFLT          reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    CSTCHAR         reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    CSTSTRING       reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    TRUE            reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    FALSE           reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    CCURLY          reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    MULT            reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    DIV             reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    PLUS            reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    MINUS           reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    LT              reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    GT              reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    GTE             reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    LTE             reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    EQ              reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    NE              reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    AND             reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    OR              reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    QUESTION        reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    CPAREN          reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    COLON           reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    CBRACKET        reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    COMMA           reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)
    SEMICOLON       reduce using rule 93 (function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub .)


state 318

    (86) variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension . variable1 saw_called_var
    (88) variable1 -> . OBRACKET exp CBRACKET saw_dimension
    (89) variable1 -> . empty
    (128) empty -> .

    OBRACKET        shift and go to state 338
    AS              reduce using rule 128 (empty -> .)
    MULT            reduce using rule 128 (empty -> .)
    DIV             reduce using rule 128 (empty -> .)
    PLUS            reduce using rule 128 (empty -> .)
    MINUS           reduce using rule 128 (empty -> .)
    LT              reduce using rule 128 (empty -> .)
    GT              reduce using rule 128 (empty -> .)
    GTE             reduce using rule 128 (empty -> .)
    LTE             reduce using rule 128 (empty -> .)
    EQ              reduce using rule 128 (empty -> .)
    NE              reduce using rule 128 (empty -> .)
    AND             reduce using rule 128 (empty -> .)
    OR              reduce using rule 128 (empty -> .)
    QUESTION        reduce using rule 128 (empty -> .)
    RETURN          reduce using rule 128 (empty -> .)
    ID              reduce using rule 128 (empty -> .)
    IF              reduce using rule 128 (empty -> .)
    PRINT           reduce using rule 128 (empty -> .)
    READ            reduce using rule 128 (empty -> .)
    WHILE           reduce using rule 128 (empty -> .)
    FOR             reduce using rule 128 (empty -> .)
    OPAREN          reduce using rule 128 (empty -> .)
    CSTINT          reduce using rule 128 (empty -> .)
    CSTFLT          reduce using rule 128 (empty -> .)
    CSTCHAR         reduce using rule 128 (empty -> .)
    CSTSTRING       reduce using rule 128 (empty -> .)
    TRUE            reduce using rule 128 (empty -> .)
    FALSE           reduce using rule 128 (empty -> .)
    CCURLY          reduce using rule 128 (empty -> .)
    CPAREN          reduce using rule 128 (empty -> .)
    FROM            reduce using rule 128 (empty -> .)
    CBRACKET        reduce using rule 128 (empty -> .)
    COMMA           reduce using rule 128 (empty -> .)
    COLON           reduce using rule 128 (empty -> .)
    SEMICOLON       reduce using rule 128 (empty -> .)
    TO              reduce using rule 128 (empty -> .)
    BY              reduce using rule 128 (empty -> .)

    variable1                      shift and go to state 339
    empty                          shift and go to state 340

state 319

    (91) variable2 -> PERIOD ID saw_called_var_from_class OBRACKET . exp CBRACKET saw_dimension variable1
    (96) exp -> . texp exp1 check_or_operator
    (99) texp -> . gexp texp1 check_and_operator
    (102) gexp -> . mexp gexp1 check_relational_operator
    (110) mexp -> . termino mexp1
    (114) termino -> . factor term1 check_plusminus_operator
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    ID              shift and go to state 154
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    exp                            shift and go to state 341
    texp                           shift and go to state 121
    gexp                           shift and go to state 122
    mexp                           shift and go to state 123
    termino                        shift and go to state 124
    factor                         shift and go to state 125
    varcst                         shift and go to state 126
    variable                       shift and go to state 152
    function_call                  shift and go to state 153
    boolean                        shift and go to state 131

state 320

    (118) factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .

    MULT            reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    DIV             reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    PLUS            reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    MINUS           reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    LT              reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    GT              reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    GTE             reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    LTE             reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    EQ              reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    NE              reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    AND             reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    OR              reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    QUESTION        reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    RETURN          reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    ID              reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    IF              reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    PRINT           reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    READ            reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    WHILE           reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    FOR             reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    OPAREN          reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    CSTINT          reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    CSTFLT          reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    CSTCHAR         reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    CSTSTRING       reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    TRUE            reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    FALSE           reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    CCURLY          reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    CPAREN          reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    CBRACKET        reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    COMMA           reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    COLON           reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)
    SEMICOLON       reduce using rule 118 (factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator .)


state 321

    (72) conditional -> IF cond2 THEN block cond1 SEMICOLON . bc_end
    (163) bc_end -> .

    RETURN          reduce using rule 163 (bc_end -> .)
    ID              reduce using rule 163 (bc_end -> .)
    IF              reduce using rule 163 (bc_end -> .)
    PRINT           reduce using rule 163 (bc_end -> .)
    READ            reduce using rule 163 (bc_end -> .)
    WHILE           reduce using rule 163 (bc_end -> .)
    FOR             reduce using rule 163 (bc_end -> .)
    OPAREN          reduce using rule 163 (bc_end -> .)
    CSTINT          reduce using rule 163 (bc_end -> .)
    CSTFLT          reduce using rule 163 (bc_end -> .)
    CSTCHAR         reduce using rule 163 (bc_end -> .)
    CSTSTRING       reduce using rule 163 (bc_end -> .)
    TRUE            reduce using rule 163 (bc_end -> .)
    FALSE           reduce using rule 163 (bc_end -> .)
    CCURLY          reduce using rule 163 (bc_end -> .)

    bc_end                         shift and go to state 342

state 322

    (73) cond1 -> ELSE saw_else . block
    (52) block -> . OCURLY b1 CCURLY
    (53) block -> . OCURLY decs count_vars b1 CCURLY

    OCURLY          shift and go to state 87

    block                          shift and go to state 343

state 323

    (77) write -> PRINT saw_print OPAREN exp e1 CPAREN . saw_print_end
    (159) saw_print_end -> .

    RETURN          reduce using rule 159 (saw_print_end -> .)
    ID              reduce using rule 159 (saw_print_end -> .)
    IF              reduce using rule 159 (saw_print_end -> .)
    PRINT           reduce using rule 159 (saw_print_end -> .)
    READ            reduce using rule 159 (saw_print_end -> .)
    WHILE           reduce using rule 159 (saw_print_end -> .)
    FOR             reduce using rule 159 (saw_print_end -> .)
    OPAREN          reduce using rule 159 (saw_print_end -> .)
    CSTINT          reduce using rule 159 (saw_print_end -> .)
    CSTFLT          reduce using rule 159 (saw_print_end -> .)
    CSTCHAR         reduce using rule 159 (saw_print_end -> .)
    CSTSTRING       reduce using rule 159 (saw_print_end -> .)
    TRUE            reduce using rule 159 (saw_print_end -> .)
    FALSE           reduce using rule 159 (saw_print_end -> .)
    CCURLY          reduce using rule 159 (saw_print_end -> .)
    COLON           reduce using rule 159 (saw_print_end -> .)
    SEMICOLON       reduce using rule 159 (saw_print_end -> .)

    saw_print_end                  shift and go to state 344

state 324

    (78) e1 -> COMMA exp . e1
    (78) e1 -> . COMMA exp e1
    (79) e1 -> . empty
    (128) empty -> .

    COMMA           shift and go to state 296
    CPAREN          reduce using rule 128 (empty -> .)

    e1                             shift and go to state 345
    empty                          shift and go to state 297

state 325

    (80) read -> READ saw_read OPAREN variable saw_read_exp l1 . CPAREN saw_read_end

    CPAREN          shift and go to state 346


state 326

    (81) l1 -> COMMA . variable saw_read_exp e1
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2

    ID              shift and go to state 220

    variable                       shift and go to state 347

state 327

    (82) l1 -> empty .

    CPAREN          reduce using rule 82 (l1 -> empty .)


state 328

    (20) while_loop -> WHILE saw_while cond2 THEN block SEMICOLON . saw_while_end
    (166) saw_while_end -> .

    RETURN          reduce using rule 166 (saw_while_end -> .)
    ID              reduce using rule 166 (saw_while_end -> .)
    IF              reduce using rule 166 (saw_while_end -> .)
    PRINT           reduce using rule 166 (saw_while_end -> .)
    READ            reduce using rule 166 (saw_while_end -> .)
    WHILE           reduce using rule 166 (saw_while_end -> .)
    FOR             reduce using rule 166 (saw_while_end -> .)
    OPAREN          reduce using rule 166 (saw_while_end -> .)
    CSTINT          reduce using rule 166 (saw_while_end -> .)
    CSTFLT          reduce using rule 166 (saw_while_end -> .)
    CSTCHAR         reduce using rule 166 (saw_while_end -> .)
    CSTSTRING       reduce using rule 166 (saw_while_end -> .)
    TRUE            reduce using rule 166 (saw_while_end -> .)
    FALSE           reduce using rule 166 (saw_while_end -> .)
    CCURLY          reduce using rule 166 (saw_while_end -> .)

    saw_while_end                  shift and go to state 348

state 329

    (21) for_loop -> FOR OPAREN variable FROM for_loop1 TO . for_loop1 BY for_loop1 CPAREN THEN block SEMICOLON
    (22) for_loop1 -> . CSTINT
    (23) for_loop1 -> . variable
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2

    CSTINT          shift and go to state 302
    ID              shift and go to state 220

    variable                       shift and go to state 300
    for_loop1                      shift and go to state 349

state 330

    (35) type2 -> COMMA ID saw_id . OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable

    OBRACKET        shift and go to state 350


state 331

    (19) class_block -> OCURLY ATTRIBUTES COLON decs METHODS COLON functions CCURLY .

    SEMICOLON       reduce using rule 19 (class_block -> OCURLY ATTRIBUTES COLON decs METHODS COLON functions CCURLY .)


state 332

    (7) functions -> function functions .

    CCURLY          reduce using rule 7 (functions -> function functions .)


state 333

    (17) param2 -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension . type3 saw_variable_param
    (37) type3 -> . OBRACKET CSTINT CBRACKET saw_dimension
    (38) type3 -> . empty
    (128) empty -> .

    OBRACKET        shift and go to state 194
    COMMA           reduce using rule 128 (empty -> .)
    CPAREN          reduce using rule 128 (empty -> .)

    type3                          shift and go to state 351
    empty                          shift and go to state 196

state 334

    (76) ternary -> exp QUESTION saw_cond estatuto_redux COLON saw_else estatuto_redux . SEMICOLON bc_end

    SEMICOLON       shift and go to state 352


state 335

    (92) function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 . CPAREN generate_gosub

    CPAREN          shift and go to state 353


state 336

    (94) function_call1 -> COMMA . increment_cont exp verify_param function_call1
    (170) increment_cont -> .

    OPAREN          reduce using rule 170 (increment_cont -> .)
    CSTINT          reduce using rule 170 (increment_cont -> .)
    CSTFLT          reduce using rule 170 (increment_cont -> .)
    CSTCHAR         reduce using rule 170 (increment_cont -> .)
    CSTSTRING       reduce using rule 170 (increment_cont -> .)
    ID              reduce using rule 170 (increment_cont -> .)
    TRUE            reduce using rule 170 (increment_cont -> .)
    FALSE           reduce using rule 170 (increment_cont -> .)

    increment_cont                 shift and go to state 354

state 337

    (95) function_call1 -> empty .

    CPAREN          reduce using rule 95 (function_call1 -> empty .)


state 338

    (88) variable1 -> OBRACKET . exp CBRACKET saw_dimension
    (96) exp -> . texp exp1 check_or_operator
    (99) texp -> . gexp texp1 check_and_operator
    (102) gexp -> . mexp gexp1 check_relational_operator
    (110) mexp -> . termino mexp1
    (114) termino -> . factor term1 check_plusminus_operator
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    ID              shift and go to state 154
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    exp                            shift and go to state 355
    texp                           shift and go to state 121
    gexp                           shift and go to state 122
    mexp                           shift and go to state 123
    termino                        shift and go to state 124
    factor                         shift and go to state 125
    varcst                         shift and go to state 126
    variable                       shift and go to state 152
    function_call                  shift and go to state 153
    boolean                        shift and go to state 131

state 339

    (86) variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 . saw_called_var
    (138) saw_called_var -> .

    AS              reduce using rule 138 (saw_called_var -> .)
    MULT            reduce using rule 138 (saw_called_var -> .)
    DIV             reduce using rule 138 (saw_called_var -> .)
    PLUS            reduce using rule 138 (saw_called_var -> .)
    MINUS           reduce using rule 138 (saw_called_var -> .)
    LT              reduce using rule 138 (saw_called_var -> .)
    GT              reduce using rule 138 (saw_called_var -> .)
    GTE             reduce using rule 138 (saw_called_var -> .)
    LTE             reduce using rule 138 (saw_called_var -> .)
    EQ              reduce using rule 138 (saw_called_var -> .)
    NE              reduce using rule 138 (saw_called_var -> .)
    AND             reduce using rule 138 (saw_called_var -> .)
    OR              reduce using rule 138 (saw_called_var -> .)
    QUESTION        reduce using rule 138 (saw_called_var -> .)
    RETURN          reduce using rule 138 (saw_called_var -> .)
    ID              reduce using rule 138 (saw_called_var -> .)
    IF              reduce using rule 138 (saw_called_var -> .)
    PRINT           reduce using rule 138 (saw_called_var -> .)
    READ            reduce using rule 138 (saw_called_var -> .)
    WHILE           reduce using rule 138 (saw_called_var -> .)
    FOR             reduce using rule 138 (saw_called_var -> .)
    OPAREN          reduce using rule 138 (saw_called_var -> .)
    CSTINT          reduce using rule 138 (saw_called_var -> .)
    CSTFLT          reduce using rule 138 (saw_called_var -> .)
    CSTCHAR         reduce using rule 138 (saw_called_var -> .)
    CSTSTRING       reduce using rule 138 (saw_called_var -> .)
    TRUE            reduce using rule 138 (saw_called_var -> .)
    FALSE           reduce using rule 138 (saw_called_var -> .)
    CCURLY          reduce using rule 138 (saw_called_var -> .)
    CPAREN          reduce using rule 138 (saw_called_var -> .)
    FROM            reduce using rule 138 (saw_called_var -> .)
    CBRACKET        reduce using rule 138 (saw_called_var -> .)
    COMMA           reduce using rule 138 (saw_called_var -> .)
    COLON           reduce using rule 138 (saw_called_var -> .)
    SEMICOLON       reduce using rule 138 (saw_called_var -> .)
    TO              reduce using rule 138 (saw_called_var -> .)
    BY              reduce using rule 138 (saw_called_var -> .)

    saw_called_var                 shift and go to state 356

state 340

    (89) variable1 -> empty .

    AS              reduce using rule 89 (variable1 -> empty .)
    MULT            reduce using rule 89 (variable1 -> empty .)
    DIV             reduce using rule 89 (variable1 -> empty .)
    PLUS            reduce using rule 89 (variable1 -> empty .)
    MINUS           reduce using rule 89 (variable1 -> empty .)
    LT              reduce using rule 89 (variable1 -> empty .)
    GT              reduce using rule 89 (variable1 -> empty .)
    GTE             reduce using rule 89 (variable1 -> empty .)
    LTE             reduce using rule 89 (variable1 -> empty .)
    EQ              reduce using rule 89 (variable1 -> empty .)
    NE              reduce using rule 89 (variable1 -> empty .)
    AND             reduce using rule 89 (variable1 -> empty .)
    OR              reduce using rule 89 (variable1 -> empty .)
    QUESTION        reduce using rule 89 (variable1 -> empty .)
    RETURN          reduce using rule 89 (variable1 -> empty .)
    ID              reduce using rule 89 (variable1 -> empty .)
    IF              reduce using rule 89 (variable1 -> empty .)
    PRINT           reduce using rule 89 (variable1 -> empty .)
    READ            reduce using rule 89 (variable1 -> empty .)
    WHILE           reduce using rule 89 (variable1 -> empty .)
    FOR             reduce using rule 89 (variable1 -> empty .)
    OPAREN          reduce using rule 89 (variable1 -> empty .)
    CSTINT          reduce using rule 89 (variable1 -> empty .)
    CSTFLT          reduce using rule 89 (variable1 -> empty .)
    CSTCHAR         reduce using rule 89 (variable1 -> empty .)
    CSTSTRING       reduce using rule 89 (variable1 -> empty .)
    TRUE            reduce using rule 89 (variable1 -> empty .)
    FALSE           reduce using rule 89 (variable1 -> empty .)
    CCURLY          reduce using rule 89 (variable1 -> empty .)
    CPAREN          reduce using rule 89 (variable1 -> empty .)
    FROM            reduce using rule 89 (variable1 -> empty .)
    CBRACKET        reduce using rule 89 (variable1 -> empty .)
    COMMA           reduce using rule 89 (variable1 -> empty .)
    COLON           reduce using rule 89 (variable1 -> empty .)
    SEMICOLON       reduce using rule 89 (variable1 -> empty .)
    TO              reduce using rule 89 (variable1 -> empty .)
    BY              reduce using rule 89 (variable1 -> empty .)


state 341

    (91) variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp . CBRACKET saw_dimension variable1

    CBRACKET        shift and go to state 357


state 342

    (72) conditional -> IF cond2 THEN block cond1 SEMICOLON bc_end .

    RETURN          reduce using rule 72 (conditional -> IF cond2 THEN block cond1 SEMICOLON bc_end .)
    ID              reduce using rule 72 (conditional -> IF cond2 THEN block cond1 SEMICOLON bc_end .)
    IF              reduce using rule 72 (conditional -> IF cond2 THEN block cond1 SEMICOLON bc_end .)
    PRINT           reduce using rule 72 (conditional -> IF cond2 THEN block cond1 SEMICOLON bc_end .)
    READ            reduce using rule 72 (conditional -> IF cond2 THEN block cond1 SEMICOLON bc_end .)
    WHILE           reduce using rule 72 (conditional -> IF cond2 THEN block cond1 SEMICOLON bc_end .)
    FOR             reduce using rule 72 (conditional -> IF cond2 THEN block cond1 SEMICOLON bc_end .)
    OPAREN          reduce using rule 72 (conditional -> IF cond2 THEN block cond1 SEMICOLON bc_end .)
    CSTINT          reduce using rule 72 (conditional -> IF cond2 THEN block cond1 SEMICOLON bc_end .)
    CSTFLT          reduce using rule 72 (conditional -> IF cond2 THEN block cond1 SEMICOLON bc_end .)
    CSTCHAR         reduce using rule 72 (conditional -> IF cond2 THEN block cond1 SEMICOLON bc_end .)
    CSTSTRING       reduce using rule 72 (conditional -> IF cond2 THEN block cond1 SEMICOLON bc_end .)
    TRUE            reduce using rule 72 (conditional -> IF cond2 THEN block cond1 SEMICOLON bc_end .)
    FALSE           reduce using rule 72 (conditional -> IF cond2 THEN block cond1 SEMICOLON bc_end .)
    CCURLY          reduce using rule 72 (conditional -> IF cond2 THEN block cond1 SEMICOLON bc_end .)


state 343

    (73) cond1 -> ELSE saw_else block .

    SEMICOLON       reduce using rule 73 (cond1 -> ELSE saw_else block .)


state 344

    (77) write -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .

    RETURN          reduce using rule 77 (write -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    ID              reduce using rule 77 (write -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    IF              reduce using rule 77 (write -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    PRINT           reduce using rule 77 (write -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    READ            reduce using rule 77 (write -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    WHILE           reduce using rule 77 (write -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    FOR             reduce using rule 77 (write -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    OPAREN          reduce using rule 77 (write -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    CSTINT          reduce using rule 77 (write -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    CSTFLT          reduce using rule 77 (write -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    CSTCHAR         reduce using rule 77 (write -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    CSTSTRING       reduce using rule 77 (write -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    TRUE            reduce using rule 77 (write -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    FALSE           reduce using rule 77 (write -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    CCURLY          reduce using rule 77 (write -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    COLON           reduce using rule 77 (write -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)
    SEMICOLON       reduce using rule 77 (write -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end .)


state 345

    (78) e1 -> COMMA exp e1 .

    CPAREN          reduce using rule 78 (e1 -> COMMA exp e1 .)


state 346

    (80) read -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN . saw_read_end
    (162) saw_read_end -> .

    RETURN          reduce using rule 162 (saw_read_end -> .)
    ID              reduce using rule 162 (saw_read_end -> .)
    IF              reduce using rule 162 (saw_read_end -> .)
    PRINT           reduce using rule 162 (saw_read_end -> .)
    READ            reduce using rule 162 (saw_read_end -> .)
    WHILE           reduce using rule 162 (saw_read_end -> .)
    FOR             reduce using rule 162 (saw_read_end -> .)
    OPAREN          reduce using rule 162 (saw_read_end -> .)
    CSTINT          reduce using rule 162 (saw_read_end -> .)
    CSTFLT          reduce using rule 162 (saw_read_end -> .)
    CSTCHAR         reduce using rule 162 (saw_read_end -> .)
    CSTSTRING       reduce using rule 162 (saw_read_end -> .)
    TRUE            reduce using rule 162 (saw_read_end -> .)
    FALSE           reduce using rule 162 (saw_read_end -> .)
    CCURLY          reduce using rule 162 (saw_read_end -> .)
    COLON           reduce using rule 162 (saw_read_end -> .)
    SEMICOLON       reduce using rule 162 (saw_read_end -> .)

    saw_read_end                   shift and go to state 358

state 347

    (81) l1 -> COMMA variable . saw_read_exp e1
    (161) saw_read_exp -> .

    COMMA           reduce using rule 161 (saw_read_exp -> .)
    CPAREN          reduce using rule 161 (saw_read_exp -> .)

    saw_read_exp                   shift and go to state 359

state 348

    (20) while_loop -> WHILE saw_while cond2 THEN block SEMICOLON saw_while_end .

    RETURN          reduce using rule 20 (while_loop -> WHILE saw_while cond2 THEN block SEMICOLON saw_while_end .)
    ID              reduce using rule 20 (while_loop -> WHILE saw_while cond2 THEN block SEMICOLON saw_while_end .)
    IF              reduce using rule 20 (while_loop -> WHILE saw_while cond2 THEN block SEMICOLON saw_while_end .)
    PRINT           reduce using rule 20 (while_loop -> WHILE saw_while cond2 THEN block SEMICOLON saw_while_end .)
    READ            reduce using rule 20 (while_loop -> WHILE saw_while cond2 THEN block SEMICOLON saw_while_end .)
    WHILE           reduce using rule 20 (while_loop -> WHILE saw_while cond2 THEN block SEMICOLON saw_while_end .)
    FOR             reduce using rule 20 (while_loop -> WHILE saw_while cond2 THEN block SEMICOLON saw_while_end .)
    OPAREN          reduce using rule 20 (while_loop -> WHILE saw_while cond2 THEN block SEMICOLON saw_while_end .)
    CSTINT          reduce using rule 20 (while_loop -> WHILE saw_while cond2 THEN block SEMICOLON saw_while_end .)
    CSTFLT          reduce using rule 20 (while_loop -> WHILE saw_while cond2 THEN block SEMICOLON saw_while_end .)
    CSTCHAR         reduce using rule 20 (while_loop -> WHILE saw_while cond2 THEN block SEMICOLON saw_while_end .)
    CSTSTRING       reduce using rule 20 (while_loop -> WHILE saw_while cond2 THEN block SEMICOLON saw_while_end .)
    TRUE            reduce using rule 20 (while_loop -> WHILE saw_while cond2 THEN block SEMICOLON saw_while_end .)
    FALSE           reduce using rule 20 (while_loop -> WHILE saw_while cond2 THEN block SEMICOLON saw_while_end .)
    CCURLY          reduce using rule 20 (while_loop -> WHILE saw_while cond2 THEN block SEMICOLON saw_while_end .)


state 349

    (21) for_loop -> FOR OPAREN variable FROM for_loop1 TO for_loop1 . BY for_loop1 CPAREN THEN block SEMICOLON

    BY              shift and go to state 360


state 350

    (35) type2 -> COMMA ID saw_id OBRACKET . CSTINT CBRACKET saw_dimension type3 saw_variable

    CSTINT          shift and go to state 361


state 351

    (17) param2 -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 . saw_variable_param
    (136) saw_variable_param -> .

    COMMA           reduce using rule 136 (saw_variable_param -> .)
    CPAREN          reduce using rule 136 (saw_variable_param -> .)

    saw_variable_param             shift and go to state 362

state 352

    (76) ternary -> exp QUESTION saw_cond estatuto_redux COLON saw_else estatuto_redux SEMICOLON . bc_end
    (163) bc_end -> .

    RETURN          reduce using rule 163 (bc_end -> .)
    ID              reduce using rule 163 (bc_end -> .)
    IF              reduce using rule 163 (bc_end -> .)
    PRINT           reduce using rule 163 (bc_end -> .)
    READ            reduce using rule 163 (bc_end -> .)
    WHILE           reduce using rule 163 (bc_end -> .)
    FOR             reduce using rule 163 (bc_end -> .)
    OPAREN          reduce using rule 163 (bc_end -> .)
    CSTINT          reduce using rule 163 (bc_end -> .)
    CSTFLT          reduce using rule 163 (bc_end -> .)
    CSTCHAR         reduce using rule 163 (bc_end -> .)
    CSTSTRING       reduce using rule 163 (bc_end -> .)
    TRUE            reduce using rule 163 (bc_end -> .)
    FALSE           reduce using rule 163 (bc_end -> .)
    CCURLY          reduce using rule 163 (bc_end -> .)
    COLON           reduce using rule 163 (bc_end -> .)
    SEMICOLON       reduce using rule 163 (bc_end -> .)

    bc_end                         shift and go to state 363

state 353

    (92) function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN . generate_gosub
    (171) generate_gosub -> .

    RETURN          reduce using rule 171 (generate_gosub -> .)
    ID              reduce using rule 171 (generate_gosub -> .)
    IF              reduce using rule 171 (generate_gosub -> .)
    PRINT           reduce using rule 171 (generate_gosub -> .)
    READ            reduce using rule 171 (generate_gosub -> .)
    WHILE           reduce using rule 171 (generate_gosub -> .)
    FOR             reduce using rule 171 (generate_gosub -> .)
    OPAREN          reduce using rule 171 (generate_gosub -> .)
    CSTINT          reduce using rule 171 (generate_gosub -> .)
    CSTFLT          reduce using rule 171 (generate_gosub -> .)
    CSTCHAR         reduce using rule 171 (generate_gosub -> .)
    CSTSTRING       reduce using rule 171 (generate_gosub -> .)
    TRUE            reduce using rule 171 (generate_gosub -> .)
    FALSE           reduce using rule 171 (generate_gosub -> .)
    CCURLY          reduce using rule 171 (generate_gosub -> .)
    MULT            reduce using rule 171 (generate_gosub -> .)
    DIV             reduce using rule 171 (generate_gosub -> .)
    PLUS            reduce using rule 171 (generate_gosub -> .)
    MINUS           reduce using rule 171 (generate_gosub -> .)
    LT              reduce using rule 171 (generate_gosub -> .)
    GT              reduce using rule 171 (generate_gosub -> .)
    GTE             reduce using rule 171 (generate_gosub -> .)
    LTE             reduce using rule 171 (generate_gosub -> .)
    EQ              reduce using rule 171 (generate_gosub -> .)
    NE              reduce using rule 171 (generate_gosub -> .)
    AND             reduce using rule 171 (generate_gosub -> .)
    OR              reduce using rule 171 (generate_gosub -> .)
    QUESTION        reduce using rule 171 (generate_gosub -> .)
    CPAREN          reduce using rule 171 (generate_gosub -> .)
    COLON           reduce using rule 171 (generate_gosub -> .)
    CBRACKET        reduce using rule 171 (generate_gosub -> .)
    COMMA           reduce using rule 171 (generate_gosub -> .)
    SEMICOLON       reduce using rule 171 (generate_gosub -> .)

    generate_gosub                 shift and go to state 364

state 354

    (94) function_call1 -> COMMA increment_cont . exp verify_param function_call1
    (96) exp -> . texp exp1 check_or_operator
    (99) texp -> . gexp texp1 check_and_operator
    (102) gexp -> . mexp gexp1 check_relational_operator
    (110) mexp -> . termino mexp1
    (114) termino -> . factor term1 check_plusminus_operator
    (118) factor -> . OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator
    (119) factor -> . varcst check_multdiv_operator
    (120) factor -> . variable saw_var_factor check_multdiv_operator
    (121) factor -> . function_call
    (123) varcst -> . CSTINT saw_end_value
    (124) varcst -> . CSTFLT saw_end_value
    (125) varcst -> . CSTCHAR saw_end_value
    (126) varcst -> . CSTSTRING saw_end_value
    (127) varcst -> . boolean saw_end_value
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2
    (92) function_call -> . ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub
    (93) function_call -> . ID saw_id verify_func OPAREN CPAREN generate_gosub
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE

    OPAREN          shift and go to state 115
    CSTINT          shift and go to state 127
    CSTFLT          shift and go to state 128
    CSTCHAR         shift and go to state 129
    CSTSTRING       shift and go to state 130
    ID              shift and go to state 154
    TRUE            shift and go to state 132
    FALSE           shift and go to state 133

    exp                            shift and go to state 365
    texp                           shift and go to state 121
    gexp                           shift and go to state 122
    mexp                           shift and go to state 123
    termino                        shift and go to state 124
    factor                         shift and go to state 125
    varcst                         shift and go to state 126
    variable                       shift and go to state 152
    function_call                  shift and go to state 153
    boolean                        shift and go to state 131

state 355

    (88) variable1 -> OBRACKET exp . CBRACKET saw_dimension

    CBRACKET        shift and go to state 366


state 356

    (86) variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .

    AS              reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    MULT            reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    DIV             reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    PLUS            reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    MINUS           reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    LT              reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    GT              reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    GTE             reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    LTE             reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    EQ              reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    NE              reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    AND             reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    OR              reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    QUESTION        reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    RETURN          reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    ID              reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    IF              reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    PRINT           reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    READ            reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    WHILE           reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    FOR             reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    OPAREN          reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    CSTINT          reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    CSTFLT          reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    CSTCHAR         reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    CSTSTRING       reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    TRUE            reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    FALSE           reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    CCURLY          reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    CPAREN          reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    FROM            reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    CBRACKET        reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    COMMA           reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    COLON           reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    SEMICOLON       reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    TO              reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)
    BY              reduce using rule 86 (variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var .)


state 357

    (91) variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET . saw_dimension variable1
    (137) saw_dimension -> .

    OBRACKET        reduce using rule 137 (saw_dimension -> .)
    AS              reduce using rule 137 (saw_dimension -> .)
    MULT            reduce using rule 137 (saw_dimension -> .)
    DIV             reduce using rule 137 (saw_dimension -> .)
    PLUS            reduce using rule 137 (saw_dimension -> .)
    MINUS           reduce using rule 137 (saw_dimension -> .)
    LT              reduce using rule 137 (saw_dimension -> .)
    GT              reduce using rule 137 (saw_dimension -> .)
    GTE             reduce using rule 137 (saw_dimension -> .)
    LTE             reduce using rule 137 (saw_dimension -> .)
    EQ              reduce using rule 137 (saw_dimension -> .)
    NE              reduce using rule 137 (saw_dimension -> .)
    AND             reduce using rule 137 (saw_dimension -> .)
    OR              reduce using rule 137 (saw_dimension -> .)
    QUESTION        reduce using rule 137 (saw_dimension -> .)
    RETURN          reduce using rule 137 (saw_dimension -> .)
    ID              reduce using rule 137 (saw_dimension -> .)
    IF              reduce using rule 137 (saw_dimension -> .)
    PRINT           reduce using rule 137 (saw_dimension -> .)
    READ            reduce using rule 137 (saw_dimension -> .)
    WHILE           reduce using rule 137 (saw_dimension -> .)
    FOR             reduce using rule 137 (saw_dimension -> .)
    OPAREN          reduce using rule 137 (saw_dimension -> .)
    CSTINT          reduce using rule 137 (saw_dimension -> .)
    CSTFLT          reduce using rule 137 (saw_dimension -> .)
    CSTCHAR         reduce using rule 137 (saw_dimension -> .)
    CSTSTRING       reduce using rule 137 (saw_dimension -> .)
    TRUE            reduce using rule 137 (saw_dimension -> .)
    FALSE           reduce using rule 137 (saw_dimension -> .)
    CCURLY          reduce using rule 137 (saw_dimension -> .)
    CPAREN          reduce using rule 137 (saw_dimension -> .)
    CBRACKET        reduce using rule 137 (saw_dimension -> .)
    COMMA           reduce using rule 137 (saw_dimension -> .)
    COLON           reduce using rule 137 (saw_dimension -> .)
    SEMICOLON       reduce using rule 137 (saw_dimension -> .)
    FROM            reduce using rule 137 (saw_dimension -> .)
    TO              reduce using rule 137 (saw_dimension -> .)
    BY              reduce using rule 137 (saw_dimension -> .)

    saw_dimension                  shift and go to state 367

state 358

    (80) read -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .

    RETURN          reduce using rule 80 (read -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    ID              reduce using rule 80 (read -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    IF              reduce using rule 80 (read -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    PRINT           reduce using rule 80 (read -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    READ            reduce using rule 80 (read -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    WHILE           reduce using rule 80 (read -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    FOR             reduce using rule 80 (read -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    OPAREN          reduce using rule 80 (read -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    CSTINT          reduce using rule 80 (read -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    CSTFLT          reduce using rule 80 (read -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    CSTCHAR         reduce using rule 80 (read -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    CSTSTRING       reduce using rule 80 (read -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    TRUE            reduce using rule 80 (read -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    FALSE           reduce using rule 80 (read -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    CCURLY          reduce using rule 80 (read -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    COLON           reduce using rule 80 (read -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)
    SEMICOLON       reduce using rule 80 (read -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end .)


state 359

    (81) l1 -> COMMA variable saw_read_exp . e1
    (78) e1 -> . COMMA exp e1
    (79) e1 -> . empty
    (128) empty -> .

    COMMA           shift and go to state 296
    CPAREN          reduce using rule 128 (empty -> .)

    e1                             shift and go to state 368
    empty                          shift and go to state 297

state 360

    (21) for_loop -> FOR OPAREN variable FROM for_loop1 TO for_loop1 BY . for_loop1 CPAREN THEN block SEMICOLON
    (22) for_loop1 -> . CSTINT
    (23) for_loop1 -> . variable
    (85) variable -> . ID saw_id saw_called_var
    (86) variable -> . ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var
    (87) variable -> . ID saw_id variable2

    CSTINT          shift and go to state 302
    ID              shift and go to state 220

    variable                       shift and go to state 300
    for_loop1                      shift and go to state 369

state 361

    (35) type2 -> COMMA ID saw_id OBRACKET CSTINT . CBRACKET saw_dimension type3 saw_variable

    CBRACKET        shift and go to state 370


state 362

    (17) param2 -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable_param .

    COMMA           reduce using rule 17 (param2 -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable_param .)
    CPAREN          reduce using rule 17 (param2 -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable_param .)


state 363

    (76) ternary -> exp QUESTION saw_cond estatuto_redux COLON saw_else estatuto_redux SEMICOLON bc_end .

    RETURN          reduce using rule 76 (ternary -> exp QUESTION saw_cond estatuto_redux COLON saw_else estatuto_redux SEMICOLON bc_end .)
    ID              reduce using rule 76 (ternary -> exp QUESTION saw_cond estatuto_redux COLON saw_else estatuto_redux SEMICOLON bc_end .)
    IF              reduce using rule 76 (ternary -> exp QUESTION saw_cond estatuto_redux COLON saw_else estatuto_redux SEMICOLON bc_end .)
    PRINT           reduce using rule 76 (ternary -> exp QUESTION saw_cond estatuto_redux COLON saw_else estatuto_redux SEMICOLON bc_end .)
    READ            reduce using rule 76 (ternary -> exp QUESTION saw_cond estatuto_redux COLON saw_else estatuto_redux SEMICOLON bc_end .)
    WHILE           reduce using rule 76 (ternary -> exp QUESTION saw_cond estatuto_redux COLON saw_else estatuto_redux SEMICOLON bc_end .)
    FOR             reduce using rule 76 (ternary -> exp QUESTION saw_cond estatuto_redux COLON saw_else estatuto_redux SEMICOLON bc_end .)
    OPAREN          reduce using rule 76 (ternary -> exp QUESTION saw_cond estatuto_redux COLON saw_else estatuto_redux SEMICOLON bc_end .)
    CSTINT          reduce using rule 76 (ternary -> exp QUESTION saw_cond estatuto_redux COLON saw_else estatuto_redux SEMICOLON bc_end .)
    CSTFLT          reduce using rule 76 (ternary -> exp QUESTION saw_cond estatuto_redux COLON saw_else estatuto_redux SEMICOLON bc_end .)
    CSTCHAR         reduce using rule 76 (ternary -> exp QUESTION saw_cond estatuto_redux COLON saw_else estatuto_redux SEMICOLON bc_end .)
    CSTSTRING       reduce using rule 76 (ternary -> exp QUESTION saw_cond estatuto_redux COLON saw_else estatuto_redux SEMICOLON bc_end .)
    TRUE            reduce using rule 76 (ternary -> exp QUESTION saw_cond estatuto_redux COLON saw_else estatuto_redux SEMICOLON bc_end .)
    FALSE           reduce using rule 76 (ternary -> exp QUESTION saw_cond estatuto_redux COLON saw_else estatuto_redux SEMICOLON bc_end .)
    CCURLY          reduce using rule 76 (ternary -> exp QUESTION saw_cond estatuto_redux COLON saw_else estatuto_redux SEMICOLON bc_end .)
    COLON           reduce using rule 76 (ternary -> exp QUESTION saw_cond estatuto_redux COLON saw_else estatuto_redux SEMICOLON bc_end .)
    SEMICOLON       reduce using rule 76 (ternary -> exp QUESTION saw_cond estatuto_redux COLON saw_else estatuto_redux SEMICOLON bc_end .)


state 364

    (92) function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .

    RETURN          reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    ID              reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    IF              reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    PRINT           reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    READ            reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    WHILE           reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    FOR             reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    OPAREN          reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    CSTINT          reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    CSTFLT          reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    CSTCHAR         reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    CSTSTRING       reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    TRUE            reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    FALSE           reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    CCURLY          reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    MULT            reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    DIV             reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    PLUS            reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    MINUS           reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    LT              reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    GT              reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    GTE             reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    LTE             reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    EQ              reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    NE              reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    AND             reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    OR              reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    QUESTION        reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    CPAREN          reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    COLON           reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    CBRACKET        reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    COMMA           reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)
    SEMICOLON       reduce using rule 92 (function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub .)


state 365

    (94) function_call1 -> COMMA increment_cont exp . verify_param function_call1
    (169) verify_param -> .

    COMMA           reduce using rule 169 (verify_param -> .)
    CPAREN          reduce using rule 169 (verify_param -> .)

    verify_param                   shift and go to state 371

state 366

    (88) variable1 -> OBRACKET exp CBRACKET . saw_dimension
    (137) saw_dimension -> .

    AS              reduce using rule 137 (saw_dimension -> .)
    MULT            reduce using rule 137 (saw_dimension -> .)
    DIV             reduce using rule 137 (saw_dimension -> .)
    PLUS            reduce using rule 137 (saw_dimension -> .)
    MINUS           reduce using rule 137 (saw_dimension -> .)
    LT              reduce using rule 137 (saw_dimension -> .)
    GT              reduce using rule 137 (saw_dimension -> .)
    GTE             reduce using rule 137 (saw_dimension -> .)
    LTE             reduce using rule 137 (saw_dimension -> .)
    EQ              reduce using rule 137 (saw_dimension -> .)
    NE              reduce using rule 137 (saw_dimension -> .)
    AND             reduce using rule 137 (saw_dimension -> .)
    OR              reduce using rule 137 (saw_dimension -> .)
    QUESTION        reduce using rule 137 (saw_dimension -> .)
    RETURN          reduce using rule 137 (saw_dimension -> .)
    ID              reduce using rule 137 (saw_dimension -> .)
    IF              reduce using rule 137 (saw_dimension -> .)
    PRINT           reduce using rule 137 (saw_dimension -> .)
    READ            reduce using rule 137 (saw_dimension -> .)
    WHILE           reduce using rule 137 (saw_dimension -> .)
    FOR             reduce using rule 137 (saw_dimension -> .)
    OPAREN          reduce using rule 137 (saw_dimension -> .)
    CSTINT          reduce using rule 137 (saw_dimension -> .)
    CSTFLT          reduce using rule 137 (saw_dimension -> .)
    CSTCHAR         reduce using rule 137 (saw_dimension -> .)
    CSTSTRING       reduce using rule 137 (saw_dimension -> .)
    TRUE            reduce using rule 137 (saw_dimension -> .)
    FALSE           reduce using rule 137 (saw_dimension -> .)
    CCURLY          reduce using rule 137 (saw_dimension -> .)
    CPAREN          reduce using rule 137 (saw_dimension -> .)
    FROM            reduce using rule 137 (saw_dimension -> .)
    CBRACKET        reduce using rule 137 (saw_dimension -> .)
    COMMA           reduce using rule 137 (saw_dimension -> .)
    COLON           reduce using rule 137 (saw_dimension -> .)
    SEMICOLON       reduce using rule 137 (saw_dimension -> .)
    TO              reduce using rule 137 (saw_dimension -> .)
    BY              reduce using rule 137 (saw_dimension -> .)

    saw_dimension                  shift and go to state 372

state 367

    (91) variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension . variable1
    (88) variable1 -> . OBRACKET exp CBRACKET saw_dimension
    (89) variable1 -> . empty
    (128) empty -> .

    OBRACKET        shift and go to state 338
    AS              reduce using rule 128 (empty -> .)
    MULT            reduce using rule 128 (empty -> .)
    DIV             reduce using rule 128 (empty -> .)
    PLUS            reduce using rule 128 (empty -> .)
    MINUS           reduce using rule 128 (empty -> .)
    LT              reduce using rule 128 (empty -> .)
    GT              reduce using rule 128 (empty -> .)
    GTE             reduce using rule 128 (empty -> .)
    LTE             reduce using rule 128 (empty -> .)
    EQ              reduce using rule 128 (empty -> .)
    NE              reduce using rule 128 (empty -> .)
    AND             reduce using rule 128 (empty -> .)
    OR              reduce using rule 128 (empty -> .)
    QUESTION        reduce using rule 128 (empty -> .)
    RETURN          reduce using rule 128 (empty -> .)
    ID              reduce using rule 128 (empty -> .)
    IF              reduce using rule 128 (empty -> .)
    PRINT           reduce using rule 128 (empty -> .)
    READ            reduce using rule 128 (empty -> .)
    WHILE           reduce using rule 128 (empty -> .)
    FOR             reduce using rule 128 (empty -> .)
    OPAREN          reduce using rule 128 (empty -> .)
    CSTINT          reduce using rule 128 (empty -> .)
    CSTFLT          reduce using rule 128 (empty -> .)
    CSTCHAR         reduce using rule 128 (empty -> .)
    CSTSTRING       reduce using rule 128 (empty -> .)
    TRUE            reduce using rule 128 (empty -> .)
    FALSE           reduce using rule 128 (empty -> .)
    CCURLY          reduce using rule 128 (empty -> .)
    CPAREN          reduce using rule 128 (empty -> .)
    CBRACKET        reduce using rule 128 (empty -> .)
    COMMA           reduce using rule 128 (empty -> .)
    COLON           reduce using rule 128 (empty -> .)
    SEMICOLON       reduce using rule 128 (empty -> .)
    FROM            reduce using rule 128 (empty -> .)
    TO              reduce using rule 128 (empty -> .)
    BY              reduce using rule 128 (empty -> .)

    variable1                      shift and go to state 373
    empty                          shift and go to state 340

state 368

    (81) l1 -> COMMA variable saw_read_exp e1 .

    CPAREN          reduce using rule 81 (l1 -> COMMA variable saw_read_exp e1 .)


state 369

    (21) for_loop -> FOR OPAREN variable FROM for_loop1 TO for_loop1 BY for_loop1 . CPAREN THEN block SEMICOLON

    CPAREN          shift and go to state 374


state 370

    (35) type2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET . saw_dimension type3 saw_variable
    (137) saw_dimension -> .

    OBRACKET        reduce using rule 137 (saw_dimension -> .)
    SEMICOLON       reduce using rule 137 (saw_dimension -> .)

    saw_dimension                  shift and go to state 375

state 371

    (94) function_call1 -> COMMA increment_cont exp verify_param . function_call1
    (94) function_call1 -> . COMMA increment_cont exp verify_param function_call1
    (95) function_call1 -> . empty
    (128) empty -> .

    COMMA           shift and go to state 336
    CPAREN          reduce using rule 128 (empty -> .)

    function_call1                 shift and go to state 376
    empty                          shift and go to state 337

state 372

    (88) variable1 -> OBRACKET exp CBRACKET saw_dimension .

    AS              reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    MULT            reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    DIV             reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    PLUS            reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    MINUS           reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    LT              reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    GT              reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    GTE             reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    LTE             reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    EQ              reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    NE              reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    AND             reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    OR              reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    QUESTION        reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    RETURN          reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    ID              reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    IF              reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    PRINT           reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    READ            reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    WHILE           reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    FOR             reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    OPAREN          reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    CSTINT          reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    CSTFLT          reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    CSTCHAR         reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    CSTSTRING       reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    TRUE            reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    FALSE           reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    CCURLY          reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    CPAREN          reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    FROM            reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    CBRACKET        reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    COMMA           reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    COLON           reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    SEMICOLON       reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    TO              reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)
    BY              reduce using rule 88 (variable1 -> OBRACKET exp CBRACKET saw_dimension .)


state 373

    (91) variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .

    AS              reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    MULT            reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    DIV             reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    PLUS            reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    MINUS           reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    LT              reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    GT              reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    GTE             reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    LTE             reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    EQ              reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    NE              reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    AND             reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    OR              reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    QUESTION        reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    RETURN          reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    ID              reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    IF              reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    PRINT           reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    READ            reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    WHILE           reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    FOR             reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    OPAREN          reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    CSTINT          reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    CSTFLT          reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    CSTCHAR         reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    CSTSTRING       reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    TRUE            reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    FALSE           reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    CCURLY          reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    CPAREN          reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    CBRACKET        reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    COMMA           reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    COLON           reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    SEMICOLON       reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    FROM            reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    TO              reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)
    BY              reduce using rule 91 (variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1 .)


state 374

    (21) for_loop -> FOR OPAREN variable FROM for_loop1 TO for_loop1 BY for_loop1 CPAREN . THEN block SEMICOLON

    THEN            shift and go to state 377


state 375

    (35) type2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET saw_dimension . type3 saw_variable
    (37) type3 -> . OBRACKET CSTINT CBRACKET saw_dimension
    (38) type3 -> . empty
    (128) empty -> .

    OBRACKET        shift and go to state 194
    SEMICOLON       reduce using rule 128 (empty -> .)

    type3                          shift and go to state 378
    empty                          shift and go to state 196

state 376

    (94) function_call1 -> COMMA increment_cont exp verify_param function_call1 .

    CPAREN          reduce using rule 94 (function_call1 -> COMMA increment_cont exp verify_param function_call1 .)


state 377

    (21) for_loop -> FOR OPAREN variable FROM for_loop1 TO for_loop1 BY for_loop1 CPAREN THEN . block SEMICOLON
    (52) block -> . OCURLY b1 CCURLY
    (53) block -> . OCURLY decs count_vars b1 CCURLY

    OCURLY          shift and go to state 87

    block                          shift and go to state 379

state 378

    (35) type2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 . saw_variable
    (135) saw_variable -> .

    SEMICOLON       reduce using rule 135 (saw_variable -> .)

    saw_variable                   shift and go to state 380

state 379

    (21) for_loop -> FOR OPAREN variable FROM for_loop1 TO for_loop1 BY for_loop1 CPAREN THEN block . SEMICOLON

    SEMICOLON       shift and go to state 381


state 380

    (35) type2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable .

    SEMICOLON       reduce using rule 35 (type2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable .)


state 381

    (21) for_loop -> FOR OPAREN variable FROM for_loop1 TO for_loop1 BY for_loop1 CPAREN THEN block SEMICOLON .

    RETURN          reduce using rule 21 (for_loop -> FOR OPAREN variable FROM for_loop1 TO for_loop1 BY for_loop1 CPAREN THEN block SEMICOLON .)
    ID              reduce using rule 21 (for_loop -> FOR OPAREN variable FROM for_loop1 TO for_loop1 BY for_loop1 CPAREN THEN block SEMICOLON .)
    IF              reduce using rule 21 (for_loop -> FOR OPAREN variable FROM for_loop1 TO for_loop1 BY for_loop1 CPAREN THEN block SEMICOLON .)
    PRINT           reduce using rule 21 (for_loop -> FOR OPAREN variable FROM for_loop1 TO for_loop1 BY for_loop1 CPAREN THEN block SEMICOLON .)
    READ            reduce using rule 21 (for_loop -> FOR OPAREN variable FROM for_loop1 TO for_loop1 BY for_loop1 CPAREN THEN block SEMICOLON .)
    WHILE           reduce using rule 21 (for_loop -> FOR OPAREN variable FROM for_loop1 TO for_loop1 BY for_loop1 CPAREN THEN block SEMICOLON .)
    FOR             reduce using rule 21 (for_loop -> FOR OPAREN variable FROM for_loop1 TO for_loop1 BY for_loop1 CPAREN THEN block SEMICOLON .)
    OPAREN          reduce using rule 21 (for_loop -> FOR OPAREN variable FROM for_loop1 TO for_loop1 BY for_loop1 CPAREN THEN block SEMICOLON .)
    CSTINT          reduce using rule 21 (for_loop -> FOR OPAREN variable FROM for_loop1 TO for_loop1 BY for_loop1 CPAREN THEN block SEMICOLON .)
    CSTFLT          reduce using rule 21 (for_loop -> FOR OPAREN variable FROM for_loop1 TO for_loop1 BY for_loop1 CPAREN THEN block SEMICOLON .)
    CSTCHAR         reduce using rule 21 (for_loop -> FOR OPAREN variable FROM for_loop1 TO for_loop1 BY for_loop1 CPAREN THEN block SEMICOLON .)
    CSTSTRING       reduce using rule 21 (for_loop -> FOR OPAREN variable FROM for_loop1 TO for_loop1 BY for_loop1 CPAREN THEN block SEMICOLON .)
    TRUE            reduce using rule 21 (for_loop -> FOR OPAREN variable FROM for_loop1 TO for_loop1 BY for_loop1 CPAREN THEN block SEMICOLON .)
    FALSE           reduce using rule 21 (for_loop -> FOR OPAREN variable FROM for_loop1 TO for_loop1 BY for_loop1 CPAREN THEN block SEMICOLON .)
    CCURLY          reduce using rule 21 (for_loop -> FOR OPAREN variable FROM for_loop1 TO for_loop1 BY for_loop1 CPAREN THEN block SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 42 resolved as shift
WARNING: reduce/reduce conflict in state 204 resolved using rule (saw_called_var -> <empty>)
WARNING: rejected rule (verify_func -> <empty>) in state 204
