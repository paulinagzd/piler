Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON bloque
Rule 2     programa -> PROGRAM ID SEMICOLON dec bloque
Rule 3     funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque
Rule 4     func1 -> simple
Rule 5     func1 -> VOID
Rule 6     param -> simple ID variable2 param1
Rule 7     param -> multiple ID variable1 variable1 variable2 param1
Rule 8     param -> empty
Rule 9     param1 -> COMMA param
Rule 10    param1 -> empty
Rule 11    clase -> CLASS ID COLON clase_bloque SEMICOLON
Rule 12    clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque CCURLY
Rule 13    clase_bloque1 -> dec
Rule 14    clase_bloque1 -> empty
Rule 15    clase_metodos_bloque -> funcion clase_metodos_bloque
Rule 16    clase_metodos_bloque -> empty
Rule 17    ciclo_while -> WHILE cond2 THEN bloque SEMICOLON
Rule 18    ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
Rule 19    ciclo_for1 -> CSTINT
Rule 20    ciclo_for1 -> variable
Rule 21    dec -> VAR tipo SEMICOLON dec1
Rule 22    dec1 -> dec
Rule 23    dec1 -> empty
Rule 24    tipo -> compuesto ID tipo1
Rule 25    tipo -> simple ID tipo1
Rule 26    tipo -> multiple ID tipo3 tipo3 tipo2
Rule 27    tipo1 -> COMMA ID tipo1
Rule 28    tipo1 -> empty
Rule 29    tipo2 -> COMMA ID tipo3 tipo3
Rule 30    tipo2 -> empty
Rule 31    tipo3 -> OBRACKET CSTINT CBRACKET
Rule 32    tipo3 -> empty
Rule 33    simple -> INT
Rule 34    simple -> FLOAT
Rule 35    simple -> BOOL
Rule 36    simple -> STRING
Rule 37    multiple -> INTS
Rule 38    multiple -> FLOATS
Rule 39    multiple -> BOOLS
Rule 40    multiple -> STRINGS
Rule 41    compuesto -> ID
Rule 42    compuesto -> DATAFRAME
Rule 43    compuesto -> FILE
Rule 44    bloque -> OCURLY b1 CCURLY
Rule 45    b1 -> estatuto b1
Rule 46    b1 -> empty
Rule 47    estatuto -> asignacion
Rule 48    estatuto -> llamada
Rule 49    estatuto -> condicion
Rule 50    estatuto -> escritura
Rule 51    estatuto -> leer
Rule 52    estatuto -> ciclo_while
Rule 53    estatuto -> ciclo_for
Rule 54    estatuto -> ternaria
Rule 55    estatuto -> bloque
Rule 56    estatuto -> funcion
Rule 57    estatuto -> clase
Rule 58    estatuto -> dec
Rule 59    asignacion -> variable AS exp SEMICOLON
Rule 60    condicion -> IF cond2 THEN bloque cond1 SEMICOLON
Rule 61    cond1 -> ELSE bloque
Rule 62    cond1 -> ELSE IF cond2 THEN bloque
Rule 63    cond1 -> empty
Rule 64    cond2 -> OPAREN exp CPAREN
Rule 65    ternaria -> exp QUESTION estatuto COLON estatuto SEMICOLON
Rule 66    escritura -> PRINT OPAREN exp e1 CPAREN SEMICOLON
Rule 67    e1 -> COMMA exp e1
Rule 68    e1 -> empty
Rule 69    leer -> READ OPAREN exp e1 CPAREN SEMICOLON
Rule 70    boolean -> TRUE
Rule 71    boolean -> FALSE
Rule 72    variable -> ID variable1 variable1 variable2
Rule 73    variable1 -> OBRACKET exp CBRACKET
Rule 74    variable1 -> empty
Rule 75    variable2 -> PERIOD ID variable1 variable1 variable2
Rule 76    variable2 -> empty
Rule 77    llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON
Rule 78    llamada -> ID OPAREN CPAREN SEMICOLON
Rule 79    llamada1 -> COMMA exp llamada1
Rule 80    llamada1 -> empty
Rule 81    exp -> texp exp1
Rule 82    exp1 -> OR texp exp1
Rule 83    exp1 -> empty
Rule 84    texp -> gexp texp1
Rule 85    texp1 -> AND gexp texp1
Rule 86    texp1 -> empty
Rule 87    gexp -> mexp gexp1
Rule 88    gexp1 -> LT mexp
Rule 89    gexp1 -> GT mexp
Rule 90    gexp1 -> EQ mexp
Rule 91    gexp1 -> NE mexp
Rule 92    gexp1 -> empty
Rule 93    mexp -> termino mexp1
Rule 94    mexp1 -> PLUS termino mexp1
Rule 95    mexp1 -> MINUS termino mexp1
Rule 96    mexp1 -> empty
Rule 97    termino -> factor term1
Rule 98    term1 -> MULT factor term1
Rule 99    term1 -> DIV factor term1
Rule 100   term1 -> empty
Rule 101   factor -> OPAREN exp CPAREN
Rule 102   factor -> varcst
Rule 103   factor -> variable
Rule 104   factor -> llamada
Rule 105   varcst -> CSTINT
Rule 106   varcst -> CSTFLT
Rule 107   varcst -> CSTSTRING
Rule 108   varcst -> boolean
Rule 109   empty -> <empty>

Terminals, with rules where they appear

AND                  : 85
AS                   : 59
ATTRIBUTES           : 12
BOOL                 : 35
BOOLS                : 39
BY                   : 18
CBRACKET             : 31 73
CCURLY               : 12 44
CLASS                : 11
COLON                : 11 12 12 65
COMMA                : 9 27 29 67 79
CPAREN               : 3 18 64 66 69 77 78 101
CSTFLT               : 106
CSTINT               : 19 31 105
CSTSTRING            : 107
DATAFRAME            : 42
DIV                  : 99
ELSE                 : 61 62
EQ                   : 90
FALSE                : 71
FILE                 : 43
FLOAT                : 34
FLOATS               : 38
FOR                  : 18
FROM                 : 18
FUNCTION             : 3
GT                   : 89
ID                   : 1 2 3 6 7 11 24 25 26 27 29 41 72 75 77 78
IF                   : 60 62
INT                  : 33
INTS                 : 37
LT                   : 88
METHODS              : 12
MINUS                : 95
MULT                 : 98
NE                   : 91
OBRACKET             : 31 73
OCURLY               : 12 44
OPAREN               : 3 18 64 66 69 77 78 101
OR                   : 82
PERIOD               : 75
PLUS                 : 94
PRINT                : 66
PROGRAM              : 1 2
QUESTION             : 65
READ                 : 69
SEMICOLON            : 1 2 11 17 18 21 59 60 65 66 69 77 78
STRING               : 36
STRINGS              : 40
THEN                 : 17 18 60 62
TO                   : 18
TRUE                 : 70
VAR                  : 21
VOID                 : 5
WHILE                : 17
error                : 

Nonterminals, with rules where they appear

asignacion           : 47
b1                   : 44 45
bloque               : 1 2 3 17 18 55 60 61 62
boolean              : 108
ciclo_for            : 53
ciclo_for1           : 18 18 18
ciclo_while          : 52
clase                : 57
clase_bloque         : 11
clase_bloque1        : 12
clase_metodos_bloque : 12 15
compuesto            : 24
cond1                : 60
cond2                : 17 60 62
condicion            : 49
dec                  : 2 13 22 58
dec1                 : 21
e1                   : 66 67 69
empty                : 8 10 14 16 23 28 30 32 46 63 68 74 76 80 83 86 92 96 100
escritura            : 50
estatuto             : 45 65 65
exp                  : 59 64 65 66 67 69 73 77 79 101
exp1                 : 81 82
factor               : 97 98 99
func1                : 3
funcion              : 15 56
gexp                 : 84 85
gexp1                : 87
leer                 : 51
llamada              : 48 104
llamada1             : 77 79
mexp                 : 87 88 89 90 91
mexp1                : 93 94 95
multiple             : 7 26
param                : 3 9
param1               : 6 7
programa             : 0
simple               : 4 6 25
term1                : 97 98 99
termino              : 93 94 95
ternaria             : 54
texp                 : 81 82
texp1                : 84 85
tipo                 : 21
tipo1                : 24 25 27
tipo2                : 26
tipo3                : 26 26 29 29
varcst               : 102
variable             : 18 20 59 103
variable1            : 7 7 72 72 75 75
variable2            : 6 7 72 75

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON bloque
    (2) programa -> . PROGRAM ID SEMICOLON dec bloque

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SEMICOLON bloque
    (2) programa -> PROGRAM . ID SEMICOLON dec bloque

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SEMICOLON bloque
    (2) programa -> PROGRAM ID . SEMICOLON dec bloque

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . bloque
    (2) programa -> PROGRAM ID SEMICOLON . dec bloque
    (44) bloque -> . OCURLY b1 CCURLY
    (21) dec -> . VAR tipo SEMICOLON dec1

    OCURLY          shift and go to state 7
    VAR             shift and go to state 8

    bloque                         shift and go to state 5
    dec                            shift and go to state 6

state 5

    (1) programa -> PROGRAM ID SEMICOLON bloque .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON bloque .)


state 6

    (2) programa -> PROGRAM ID SEMICOLON dec . bloque
    (44) bloque -> . OCURLY b1 CCURLY

    OCURLY          shift and go to state 7

    bloque                         shift and go to state 9

state 7

    (44) bloque -> OCURLY . b1 CCURLY
    (45) b1 -> . estatuto b1
    (46) b1 -> . empty
    (47) estatuto -> . asignacion
    (48) estatuto -> . llamada
    (49) estatuto -> . condicion
    (50) estatuto -> . escritura
    (51) estatuto -> . leer
    (52) estatuto -> . ciclo_while
    (53) estatuto -> . ciclo_for
    (54) estatuto -> . ternaria
    (55) estatuto -> . bloque
    (56) estatuto -> . funcion
    (57) estatuto -> . clase
    (58) estatuto -> . dec
    (109) empty -> .
    (59) asignacion -> . variable AS exp SEMICOLON
    (77) llamada -> . ID OPAREN exp llamada1 CPAREN SEMICOLON
    (78) llamada -> . ID OPAREN CPAREN SEMICOLON
    (60) condicion -> . IF cond2 THEN bloque cond1 SEMICOLON
    (66) escritura -> . PRINT OPAREN exp e1 CPAREN SEMICOLON
    (69) leer -> . READ OPAREN exp e1 CPAREN SEMICOLON
    (17) ciclo_while -> . WHILE cond2 THEN bloque SEMICOLON
    (18) ciclo_for -> . FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
    (65) ternaria -> . exp QUESTION estatuto COLON estatuto SEMICOLON
    (44) bloque -> . OCURLY b1 CCURLY
    (3) funcion -> . FUNCTION func1 ID OPAREN param CPAREN bloque
    (11) clase -> . CLASS ID COLON clase_bloque SEMICOLON
    (21) dec -> . VAR tipo SEMICOLON dec1
    (72) variable -> . ID variable1 variable1 variable2
    (81) exp -> . texp exp1
    (84) texp -> . gexp texp1
    (87) gexp -> . mexp gexp1
    (93) mexp -> . termino mexp1
    (97) termino -> . factor term1
    (101) factor -> . OPAREN exp CPAREN
    (102) factor -> . varcst
    (103) factor -> . variable
    (104) factor -> . llamada
    (105) varcst -> . CSTINT
    (106) varcst -> . CSTFLT
    (107) varcst -> . CSTSTRING
    (108) varcst -> . boolean
    (70) boolean -> . TRUE
    (71) boolean -> . FALSE

    CCURLY          reduce using rule 109 (empty -> .)
    ID              shift and go to state 27
    IF              shift and go to state 29
    PRINT           shift and go to state 30
    READ            shift and go to state 31
    WHILE           shift and go to state 32
    FOR             shift and go to state 33
    OCURLY          shift and go to state 7
    FUNCTION        shift and go to state 34
    CLASS           shift and go to state 35
    VAR             shift and go to state 8
    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTSTRING       shift and go to state 44
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47

    b1                             shift and go to state 10
    estatuto                       shift and go to state 11
    empty                          shift and go to state 12
    asignacion                     shift and go to state 13
    llamada                        shift and go to state 14
    condicion                      shift and go to state 15
    escritura                      shift and go to state 16
    leer                           shift and go to state 17
    ciclo_while                    shift and go to state 18
    ciclo_for                      shift and go to state 19
    ternaria                       shift and go to state 20
    bloque                         shift and go to state 21
    funcion                        shift and go to state 22
    clase                          shift and go to state 23
    dec                            shift and go to state 24
    variable                       shift and go to state 25
    exp                            shift and go to state 26
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    boolean                        shift and go to state 45

state 8

    (21) dec -> VAR . tipo SEMICOLON dec1
    (24) tipo -> . compuesto ID tipo1
    (25) tipo -> . simple ID tipo1
    (26) tipo -> . multiple ID tipo3 tipo3 tipo2
    (41) compuesto -> . ID
    (42) compuesto -> . DATAFRAME
    (43) compuesto -> . FILE
    (33) simple -> . INT
    (34) simple -> . FLOAT
    (35) simple -> . BOOL
    (36) simple -> . STRING
    (37) multiple -> . INTS
    (38) multiple -> . FLOATS
    (39) multiple -> . BOOLS
    (40) multiple -> . STRINGS

    ID              shift and go to state 50
    DATAFRAME       shift and go to state 53
    FILE            shift and go to state 54
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    BOOL            shift and go to state 57
    STRING          shift and go to state 58
    INTS            shift and go to state 59
    FLOATS          shift and go to state 60
    BOOLS           shift and go to state 61
    STRINGS         shift and go to state 62

    tipo                           shift and go to state 48
    compuesto                      shift and go to state 49
    simple                         shift and go to state 51
    multiple                       shift and go to state 52

state 9

    (2) programa -> PROGRAM ID SEMICOLON dec bloque .

    $end            reduce using rule 2 (programa -> PROGRAM ID SEMICOLON dec bloque .)


state 10

    (44) bloque -> OCURLY b1 . CCURLY

    CCURLY          shift and go to state 63


state 11

    (45) b1 -> estatuto . b1
    (45) b1 -> . estatuto b1
    (46) b1 -> . empty
    (47) estatuto -> . asignacion
    (48) estatuto -> . llamada
    (49) estatuto -> . condicion
    (50) estatuto -> . escritura
    (51) estatuto -> . leer
    (52) estatuto -> . ciclo_while
    (53) estatuto -> . ciclo_for
    (54) estatuto -> . ternaria
    (55) estatuto -> . bloque
    (56) estatuto -> . funcion
    (57) estatuto -> . clase
    (58) estatuto -> . dec
    (109) empty -> .
    (59) asignacion -> . variable AS exp SEMICOLON
    (77) llamada -> . ID OPAREN exp llamada1 CPAREN SEMICOLON
    (78) llamada -> . ID OPAREN CPAREN SEMICOLON
    (60) condicion -> . IF cond2 THEN bloque cond1 SEMICOLON
    (66) escritura -> . PRINT OPAREN exp e1 CPAREN SEMICOLON
    (69) leer -> . READ OPAREN exp e1 CPAREN SEMICOLON
    (17) ciclo_while -> . WHILE cond2 THEN bloque SEMICOLON
    (18) ciclo_for -> . FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
    (65) ternaria -> . exp QUESTION estatuto COLON estatuto SEMICOLON
    (44) bloque -> . OCURLY b1 CCURLY
    (3) funcion -> . FUNCTION func1 ID OPAREN param CPAREN bloque
    (11) clase -> . CLASS ID COLON clase_bloque SEMICOLON
    (21) dec -> . VAR tipo SEMICOLON dec1
    (72) variable -> . ID variable1 variable1 variable2
    (81) exp -> . texp exp1
    (84) texp -> . gexp texp1
    (87) gexp -> . mexp gexp1
    (93) mexp -> . termino mexp1
    (97) termino -> . factor term1
    (101) factor -> . OPAREN exp CPAREN
    (102) factor -> . varcst
    (103) factor -> . variable
    (104) factor -> . llamada
    (105) varcst -> . CSTINT
    (106) varcst -> . CSTFLT
    (107) varcst -> . CSTSTRING
    (108) varcst -> . boolean
    (70) boolean -> . TRUE
    (71) boolean -> . FALSE

    CCURLY          reduce using rule 109 (empty -> .)
    ID              shift and go to state 27
    IF              shift and go to state 29
    PRINT           shift and go to state 30
    READ            shift and go to state 31
    WHILE           shift and go to state 32
    FOR             shift and go to state 33
    OCURLY          shift and go to state 7
    FUNCTION        shift and go to state 34
    CLASS           shift and go to state 35
    VAR             shift and go to state 8
    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTSTRING       shift and go to state 44
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47

    estatuto                       shift and go to state 11
    b1                             shift and go to state 64
    empty                          shift and go to state 12
    asignacion                     shift and go to state 13
    llamada                        shift and go to state 14
    condicion                      shift and go to state 15
    escritura                      shift and go to state 16
    leer                           shift and go to state 17
    ciclo_while                    shift and go to state 18
    ciclo_for                      shift and go to state 19
    ternaria                       shift and go to state 20
    bloque                         shift and go to state 21
    funcion                        shift and go to state 22
    clase                          shift and go to state 23
    dec                            shift and go to state 24
    variable                       shift and go to state 25
    exp                            shift and go to state 26
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    boolean                        shift and go to state 45

state 12

    (46) b1 -> empty .

    CCURLY          reduce using rule 46 (b1 -> empty .)


state 13

    (47) estatuto -> asignacion .

    ID              reduce using rule 47 (estatuto -> asignacion .)
    IF              reduce using rule 47 (estatuto -> asignacion .)
    PRINT           reduce using rule 47 (estatuto -> asignacion .)
    READ            reduce using rule 47 (estatuto -> asignacion .)
    WHILE           reduce using rule 47 (estatuto -> asignacion .)
    FOR             reduce using rule 47 (estatuto -> asignacion .)
    OCURLY          reduce using rule 47 (estatuto -> asignacion .)
    FUNCTION        reduce using rule 47 (estatuto -> asignacion .)
    CLASS           reduce using rule 47 (estatuto -> asignacion .)
    VAR             reduce using rule 47 (estatuto -> asignacion .)
    OPAREN          reduce using rule 47 (estatuto -> asignacion .)
    CSTINT          reduce using rule 47 (estatuto -> asignacion .)
    CSTFLT          reduce using rule 47 (estatuto -> asignacion .)
    CSTSTRING       reduce using rule 47 (estatuto -> asignacion .)
    TRUE            reduce using rule 47 (estatuto -> asignacion .)
    FALSE           reduce using rule 47 (estatuto -> asignacion .)
    CCURLY          reduce using rule 47 (estatuto -> asignacion .)
    COLON           reduce using rule 47 (estatuto -> asignacion .)
    SEMICOLON       reduce using rule 47 (estatuto -> asignacion .)


state 14

    (48) estatuto -> llamada .
    (104) factor -> llamada .

    ID              reduce using rule 48 (estatuto -> llamada .)
    IF              reduce using rule 48 (estatuto -> llamada .)
    PRINT           reduce using rule 48 (estatuto -> llamada .)
    READ            reduce using rule 48 (estatuto -> llamada .)
    WHILE           reduce using rule 48 (estatuto -> llamada .)
    FOR             reduce using rule 48 (estatuto -> llamada .)
    OCURLY          reduce using rule 48 (estatuto -> llamada .)
    FUNCTION        reduce using rule 48 (estatuto -> llamada .)
    CLASS           reduce using rule 48 (estatuto -> llamada .)
    VAR             reduce using rule 48 (estatuto -> llamada .)
    OPAREN          reduce using rule 48 (estatuto -> llamada .)
    CSTINT          reduce using rule 48 (estatuto -> llamada .)
    CSTFLT          reduce using rule 48 (estatuto -> llamada .)
    CSTSTRING       reduce using rule 48 (estatuto -> llamada .)
    TRUE            reduce using rule 48 (estatuto -> llamada .)
    FALSE           reduce using rule 48 (estatuto -> llamada .)
    CCURLY          reduce using rule 48 (estatuto -> llamada .)
    COLON           reduce using rule 48 (estatuto -> llamada .)
    SEMICOLON       reduce using rule 48 (estatuto -> llamada .)
    MULT            reduce using rule 104 (factor -> llamada .)
    DIV             reduce using rule 104 (factor -> llamada .)
    PLUS            reduce using rule 104 (factor -> llamada .)
    MINUS           reduce using rule 104 (factor -> llamada .)
    LT              reduce using rule 104 (factor -> llamada .)
    GT              reduce using rule 104 (factor -> llamada .)
    EQ              reduce using rule 104 (factor -> llamada .)
    NE              reduce using rule 104 (factor -> llamada .)
    AND             reduce using rule 104 (factor -> llamada .)
    OR              reduce using rule 104 (factor -> llamada .)
    QUESTION        reduce using rule 104 (factor -> llamada .)


state 15

    (49) estatuto -> condicion .

    ID              reduce using rule 49 (estatuto -> condicion .)
    IF              reduce using rule 49 (estatuto -> condicion .)
    PRINT           reduce using rule 49 (estatuto -> condicion .)
    READ            reduce using rule 49 (estatuto -> condicion .)
    WHILE           reduce using rule 49 (estatuto -> condicion .)
    FOR             reduce using rule 49 (estatuto -> condicion .)
    OCURLY          reduce using rule 49 (estatuto -> condicion .)
    FUNCTION        reduce using rule 49 (estatuto -> condicion .)
    CLASS           reduce using rule 49 (estatuto -> condicion .)
    VAR             reduce using rule 49 (estatuto -> condicion .)
    OPAREN          reduce using rule 49 (estatuto -> condicion .)
    CSTINT          reduce using rule 49 (estatuto -> condicion .)
    CSTFLT          reduce using rule 49 (estatuto -> condicion .)
    CSTSTRING       reduce using rule 49 (estatuto -> condicion .)
    TRUE            reduce using rule 49 (estatuto -> condicion .)
    FALSE           reduce using rule 49 (estatuto -> condicion .)
    CCURLY          reduce using rule 49 (estatuto -> condicion .)
    COLON           reduce using rule 49 (estatuto -> condicion .)
    SEMICOLON       reduce using rule 49 (estatuto -> condicion .)


state 16

    (50) estatuto -> escritura .

    ID              reduce using rule 50 (estatuto -> escritura .)
    IF              reduce using rule 50 (estatuto -> escritura .)
    PRINT           reduce using rule 50 (estatuto -> escritura .)
    READ            reduce using rule 50 (estatuto -> escritura .)
    WHILE           reduce using rule 50 (estatuto -> escritura .)
    FOR             reduce using rule 50 (estatuto -> escritura .)
    OCURLY          reduce using rule 50 (estatuto -> escritura .)
    FUNCTION        reduce using rule 50 (estatuto -> escritura .)
    CLASS           reduce using rule 50 (estatuto -> escritura .)
    VAR             reduce using rule 50 (estatuto -> escritura .)
    OPAREN          reduce using rule 50 (estatuto -> escritura .)
    CSTINT          reduce using rule 50 (estatuto -> escritura .)
    CSTFLT          reduce using rule 50 (estatuto -> escritura .)
    CSTSTRING       reduce using rule 50 (estatuto -> escritura .)
    TRUE            reduce using rule 50 (estatuto -> escritura .)
    FALSE           reduce using rule 50 (estatuto -> escritura .)
    CCURLY          reduce using rule 50 (estatuto -> escritura .)
    COLON           reduce using rule 50 (estatuto -> escritura .)
    SEMICOLON       reduce using rule 50 (estatuto -> escritura .)


state 17

    (51) estatuto -> leer .

    ID              reduce using rule 51 (estatuto -> leer .)
    IF              reduce using rule 51 (estatuto -> leer .)
    PRINT           reduce using rule 51 (estatuto -> leer .)
    READ            reduce using rule 51 (estatuto -> leer .)
    WHILE           reduce using rule 51 (estatuto -> leer .)
    FOR             reduce using rule 51 (estatuto -> leer .)
    OCURLY          reduce using rule 51 (estatuto -> leer .)
    FUNCTION        reduce using rule 51 (estatuto -> leer .)
    CLASS           reduce using rule 51 (estatuto -> leer .)
    VAR             reduce using rule 51 (estatuto -> leer .)
    OPAREN          reduce using rule 51 (estatuto -> leer .)
    CSTINT          reduce using rule 51 (estatuto -> leer .)
    CSTFLT          reduce using rule 51 (estatuto -> leer .)
    CSTSTRING       reduce using rule 51 (estatuto -> leer .)
    TRUE            reduce using rule 51 (estatuto -> leer .)
    FALSE           reduce using rule 51 (estatuto -> leer .)
    CCURLY          reduce using rule 51 (estatuto -> leer .)
    COLON           reduce using rule 51 (estatuto -> leer .)
    SEMICOLON       reduce using rule 51 (estatuto -> leer .)


state 18

    (52) estatuto -> ciclo_while .

    ID              reduce using rule 52 (estatuto -> ciclo_while .)
    IF              reduce using rule 52 (estatuto -> ciclo_while .)
    PRINT           reduce using rule 52 (estatuto -> ciclo_while .)
    READ            reduce using rule 52 (estatuto -> ciclo_while .)
    WHILE           reduce using rule 52 (estatuto -> ciclo_while .)
    FOR             reduce using rule 52 (estatuto -> ciclo_while .)
    OCURLY          reduce using rule 52 (estatuto -> ciclo_while .)
    FUNCTION        reduce using rule 52 (estatuto -> ciclo_while .)
    CLASS           reduce using rule 52 (estatuto -> ciclo_while .)
    VAR             reduce using rule 52 (estatuto -> ciclo_while .)
    OPAREN          reduce using rule 52 (estatuto -> ciclo_while .)
    CSTINT          reduce using rule 52 (estatuto -> ciclo_while .)
    CSTFLT          reduce using rule 52 (estatuto -> ciclo_while .)
    CSTSTRING       reduce using rule 52 (estatuto -> ciclo_while .)
    TRUE            reduce using rule 52 (estatuto -> ciclo_while .)
    FALSE           reduce using rule 52 (estatuto -> ciclo_while .)
    CCURLY          reduce using rule 52 (estatuto -> ciclo_while .)
    COLON           reduce using rule 52 (estatuto -> ciclo_while .)
    SEMICOLON       reduce using rule 52 (estatuto -> ciclo_while .)


state 19

    (53) estatuto -> ciclo_for .

    ID              reduce using rule 53 (estatuto -> ciclo_for .)
    IF              reduce using rule 53 (estatuto -> ciclo_for .)
    PRINT           reduce using rule 53 (estatuto -> ciclo_for .)
    READ            reduce using rule 53 (estatuto -> ciclo_for .)
    WHILE           reduce using rule 53 (estatuto -> ciclo_for .)
    FOR             reduce using rule 53 (estatuto -> ciclo_for .)
    OCURLY          reduce using rule 53 (estatuto -> ciclo_for .)
    FUNCTION        reduce using rule 53 (estatuto -> ciclo_for .)
    CLASS           reduce using rule 53 (estatuto -> ciclo_for .)
    VAR             reduce using rule 53 (estatuto -> ciclo_for .)
    OPAREN          reduce using rule 53 (estatuto -> ciclo_for .)
    CSTINT          reduce using rule 53 (estatuto -> ciclo_for .)
    CSTFLT          reduce using rule 53 (estatuto -> ciclo_for .)
    CSTSTRING       reduce using rule 53 (estatuto -> ciclo_for .)
    TRUE            reduce using rule 53 (estatuto -> ciclo_for .)
    FALSE           reduce using rule 53 (estatuto -> ciclo_for .)
    CCURLY          reduce using rule 53 (estatuto -> ciclo_for .)
    COLON           reduce using rule 53 (estatuto -> ciclo_for .)
    SEMICOLON       reduce using rule 53 (estatuto -> ciclo_for .)


state 20

    (54) estatuto -> ternaria .

    ID              reduce using rule 54 (estatuto -> ternaria .)
    IF              reduce using rule 54 (estatuto -> ternaria .)
    PRINT           reduce using rule 54 (estatuto -> ternaria .)
    READ            reduce using rule 54 (estatuto -> ternaria .)
    WHILE           reduce using rule 54 (estatuto -> ternaria .)
    FOR             reduce using rule 54 (estatuto -> ternaria .)
    OCURLY          reduce using rule 54 (estatuto -> ternaria .)
    FUNCTION        reduce using rule 54 (estatuto -> ternaria .)
    CLASS           reduce using rule 54 (estatuto -> ternaria .)
    VAR             reduce using rule 54 (estatuto -> ternaria .)
    OPAREN          reduce using rule 54 (estatuto -> ternaria .)
    CSTINT          reduce using rule 54 (estatuto -> ternaria .)
    CSTFLT          reduce using rule 54 (estatuto -> ternaria .)
    CSTSTRING       reduce using rule 54 (estatuto -> ternaria .)
    TRUE            reduce using rule 54 (estatuto -> ternaria .)
    FALSE           reduce using rule 54 (estatuto -> ternaria .)
    CCURLY          reduce using rule 54 (estatuto -> ternaria .)
    COLON           reduce using rule 54 (estatuto -> ternaria .)
    SEMICOLON       reduce using rule 54 (estatuto -> ternaria .)


state 21

    (55) estatuto -> bloque .

    ID              reduce using rule 55 (estatuto -> bloque .)
    IF              reduce using rule 55 (estatuto -> bloque .)
    PRINT           reduce using rule 55 (estatuto -> bloque .)
    READ            reduce using rule 55 (estatuto -> bloque .)
    WHILE           reduce using rule 55 (estatuto -> bloque .)
    FOR             reduce using rule 55 (estatuto -> bloque .)
    OCURLY          reduce using rule 55 (estatuto -> bloque .)
    FUNCTION        reduce using rule 55 (estatuto -> bloque .)
    CLASS           reduce using rule 55 (estatuto -> bloque .)
    VAR             reduce using rule 55 (estatuto -> bloque .)
    OPAREN          reduce using rule 55 (estatuto -> bloque .)
    CSTINT          reduce using rule 55 (estatuto -> bloque .)
    CSTFLT          reduce using rule 55 (estatuto -> bloque .)
    CSTSTRING       reduce using rule 55 (estatuto -> bloque .)
    TRUE            reduce using rule 55 (estatuto -> bloque .)
    FALSE           reduce using rule 55 (estatuto -> bloque .)
    CCURLY          reduce using rule 55 (estatuto -> bloque .)
    COLON           reduce using rule 55 (estatuto -> bloque .)
    SEMICOLON       reduce using rule 55 (estatuto -> bloque .)


state 22

    (56) estatuto -> funcion .

    ID              reduce using rule 56 (estatuto -> funcion .)
    IF              reduce using rule 56 (estatuto -> funcion .)
    PRINT           reduce using rule 56 (estatuto -> funcion .)
    READ            reduce using rule 56 (estatuto -> funcion .)
    WHILE           reduce using rule 56 (estatuto -> funcion .)
    FOR             reduce using rule 56 (estatuto -> funcion .)
    OCURLY          reduce using rule 56 (estatuto -> funcion .)
    FUNCTION        reduce using rule 56 (estatuto -> funcion .)
    CLASS           reduce using rule 56 (estatuto -> funcion .)
    VAR             reduce using rule 56 (estatuto -> funcion .)
    OPAREN          reduce using rule 56 (estatuto -> funcion .)
    CSTINT          reduce using rule 56 (estatuto -> funcion .)
    CSTFLT          reduce using rule 56 (estatuto -> funcion .)
    CSTSTRING       reduce using rule 56 (estatuto -> funcion .)
    TRUE            reduce using rule 56 (estatuto -> funcion .)
    FALSE           reduce using rule 56 (estatuto -> funcion .)
    CCURLY          reduce using rule 56 (estatuto -> funcion .)
    COLON           reduce using rule 56 (estatuto -> funcion .)
    SEMICOLON       reduce using rule 56 (estatuto -> funcion .)


state 23

    (57) estatuto -> clase .

    ID              reduce using rule 57 (estatuto -> clase .)
    IF              reduce using rule 57 (estatuto -> clase .)
    PRINT           reduce using rule 57 (estatuto -> clase .)
    READ            reduce using rule 57 (estatuto -> clase .)
    WHILE           reduce using rule 57 (estatuto -> clase .)
    FOR             reduce using rule 57 (estatuto -> clase .)
    OCURLY          reduce using rule 57 (estatuto -> clase .)
    FUNCTION        reduce using rule 57 (estatuto -> clase .)
    CLASS           reduce using rule 57 (estatuto -> clase .)
    VAR             reduce using rule 57 (estatuto -> clase .)
    OPAREN          reduce using rule 57 (estatuto -> clase .)
    CSTINT          reduce using rule 57 (estatuto -> clase .)
    CSTFLT          reduce using rule 57 (estatuto -> clase .)
    CSTSTRING       reduce using rule 57 (estatuto -> clase .)
    TRUE            reduce using rule 57 (estatuto -> clase .)
    FALSE           reduce using rule 57 (estatuto -> clase .)
    CCURLY          reduce using rule 57 (estatuto -> clase .)
    COLON           reduce using rule 57 (estatuto -> clase .)
    SEMICOLON       reduce using rule 57 (estatuto -> clase .)


state 24

    (58) estatuto -> dec .

    ID              reduce using rule 58 (estatuto -> dec .)
    IF              reduce using rule 58 (estatuto -> dec .)
    PRINT           reduce using rule 58 (estatuto -> dec .)
    READ            reduce using rule 58 (estatuto -> dec .)
    WHILE           reduce using rule 58 (estatuto -> dec .)
    FOR             reduce using rule 58 (estatuto -> dec .)
    OCURLY          reduce using rule 58 (estatuto -> dec .)
    FUNCTION        reduce using rule 58 (estatuto -> dec .)
    CLASS           reduce using rule 58 (estatuto -> dec .)
    VAR             reduce using rule 58 (estatuto -> dec .)
    OPAREN          reduce using rule 58 (estatuto -> dec .)
    CSTINT          reduce using rule 58 (estatuto -> dec .)
    CSTFLT          reduce using rule 58 (estatuto -> dec .)
    CSTSTRING       reduce using rule 58 (estatuto -> dec .)
    TRUE            reduce using rule 58 (estatuto -> dec .)
    FALSE           reduce using rule 58 (estatuto -> dec .)
    CCURLY          reduce using rule 58 (estatuto -> dec .)
    COLON           reduce using rule 58 (estatuto -> dec .)
    SEMICOLON       reduce using rule 58 (estatuto -> dec .)


state 25

    (59) asignacion -> variable . AS exp SEMICOLON
    (103) factor -> variable .

    AS              shift and go to state 65
    MULT            reduce using rule 103 (factor -> variable .)
    DIV             reduce using rule 103 (factor -> variable .)
    PLUS            reduce using rule 103 (factor -> variable .)
    MINUS           reduce using rule 103 (factor -> variable .)
    LT              reduce using rule 103 (factor -> variable .)
    GT              reduce using rule 103 (factor -> variable .)
    EQ              reduce using rule 103 (factor -> variable .)
    NE              reduce using rule 103 (factor -> variable .)
    AND             reduce using rule 103 (factor -> variable .)
    OR              reduce using rule 103 (factor -> variable .)
    QUESTION        reduce using rule 103 (factor -> variable .)


state 26

    (65) ternaria -> exp . QUESTION estatuto COLON estatuto SEMICOLON

    QUESTION        shift and go to state 66


state 27

    (77) llamada -> ID . OPAREN exp llamada1 CPAREN SEMICOLON
    (78) llamada -> ID . OPAREN CPAREN SEMICOLON
    (72) variable -> ID . variable1 variable1 variable2
    (73) variable1 -> . OBRACKET exp CBRACKET
    (74) variable1 -> . empty
    (109) empty -> .

  ! shift/reduce conflict for OBRACKET resolved as shift
    OPAREN          shift and go to state 67
    OBRACKET        shift and go to state 69
    PERIOD          reduce using rule 109 (empty -> .)
    AS              reduce using rule 109 (empty -> .)
    MULT            reduce using rule 109 (empty -> .)
    DIV             reduce using rule 109 (empty -> .)
    PLUS            reduce using rule 109 (empty -> .)
    MINUS           reduce using rule 109 (empty -> .)
    LT              reduce using rule 109 (empty -> .)
    GT              reduce using rule 109 (empty -> .)
    EQ              reduce using rule 109 (empty -> .)
    NE              reduce using rule 109 (empty -> .)
    AND             reduce using rule 109 (empty -> .)
    OR              reduce using rule 109 (empty -> .)
    QUESTION        reduce using rule 109 (empty -> .)

  ! OBRACKET        [ reduce using rule 109 (empty -> .) ]

    variable1                      shift and go to state 68
    empty                          shift and go to state 70

state 28

    (101) factor -> OPAREN . exp CPAREN
    (81) exp -> . texp exp1
    (84) texp -> . gexp texp1
    (87) gexp -> . mexp gexp1
    (93) mexp -> . termino mexp1
    (97) termino -> . factor term1
    (101) factor -> . OPAREN exp CPAREN
    (102) factor -> . varcst
    (103) factor -> . variable
    (104) factor -> . llamada
    (105) varcst -> . CSTINT
    (106) varcst -> . CSTFLT
    (107) varcst -> . CSTSTRING
    (108) varcst -> . boolean
    (72) variable -> . ID variable1 variable1 variable2
    (77) llamada -> . ID OPAREN exp llamada1 CPAREN SEMICOLON
    (78) llamada -> . ID OPAREN CPAREN SEMICOLON
    (70) boolean -> . TRUE
    (71) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTSTRING       shift and go to state 44
    ID              shift and go to state 74
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47

    exp                            shift and go to state 71
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 45

state 29

    (60) condicion -> IF . cond2 THEN bloque cond1 SEMICOLON
    (64) cond2 -> . OPAREN exp CPAREN

    OPAREN          shift and go to state 76

    cond2                          shift and go to state 75

state 30

    (66) escritura -> PRINT . OPAREN exp e1 CPAREN SEMICOLON

    OPAREN          shift and go to state 77


state 31

    (69) leer -> READ . OPAREN exp e1 CPAREN SEMICOLON

    OPAREN          shift and go to state 78


state 32

    (17) ciclo_while -> WHILE . cond2 THEN bloque SEMICOLON
    (64) cond2 -> . OPAREN exp CPAREN

    OPAREN          shift and go to state 76

    cond2                          shift and go to state 79

state 33

    (18) ciclo_for -> FOR . OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON

    OPAREN          shift and go to state 80


state 34

    (3) funcion -> FUNCTION . func1 ID OPAREN param CPAREN bloque
    (4) func1 -> . simple
    (5) func1 -> . VOID
    (33) simple -> . INT
    (34) simple -> . FLOAT
    (35) simple -> . BOOL
    (36) simple -> . STRING

    VOID            shift and go to state 83
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    BOOL            shift and go to state 57
    STRING          shift and go to state 58

    func1                          shift and go to state 81
    simple                         shift and go to state 82

state 35

    (11) clase -> CLASS . ID COLON clase_bloque SEMICOLON

    ID              shift and go to state 84


state 36

    (81) exp -> texp . exp1
    (82) exp1 -> . OR texp exp1
    (83) exp1 -> . empty
    (109) empty -> .

    OR              shift and go to state 86
    QUESTION        reduce using rule 109 (empty -> .)
    CPAREN          reduce using rule 109 (empty -> .)
    SEMICOLON       reduce using rule 109 (empty -> .)
    COMMA           reduce using rule 109 (empty -> .)
    CBRACKET        reduce using rule 109 (empty -> .)

    exp1                           shift and go to state 85
    empty                          shift and go to state 87

state 37

    (84) texp -> gexp . texp1
    (85) texp1 -> . AND gexp texp1
    (86) texp1 -> . empty
    (109) empty -> .

    AND             shift and go to state 89
    OR              reduce using rule 109 (empty -> .)
    QUESTION        reduce using rule 109 (empty -> .)
    CPAREN          reduce using rule 109 (empty -> .)
    SEMICOLON       reduce using rule 109 (empty -> .)
    COMMA           reduce using rule 109 (empty -> .)
    CBRACKET        reduce using rule 109 (empty -> .)

    texp1                          shift and go to state 88
    empty                          shift and go to state 90

state 38

    (87) gexp -> mexp . gexp1
    (88) gexp1 -> . LT mexp
    (89) gexp1 -> . GT mexp
    (90) gexp1 -> . EQ mexp
    (91) gexp1 -> . NE mexp
    (92) gexp1 -> . empty
    (109) empty -> .

    LT              shift and go to state 92
    GT              shift and go to state 93
    EQ              shift and go to state 94
    NE              shift and go to state 95
    AND             reduce using rule 109 (empty -> .)
    OR              reduce using rule 109 (empty -> .)
    QUESTION        reduce using rule 109 (empty -> .)
    CPAREN          reduce using rule 109 (empty -> .)
    SEMICOLON       reduce using rule 109 (empty -> .)
    COMMA           reduce using rule 109 (empty -> .)
    CBRACKET        reduce using rule 109 (empty -> .)

    gexp1                          shift and go to state 91
    empty                          shift and go to state 96

state 39

    (93) mexp -> termino . mexp1
    (94) mexp1 -> . PLUS termino mexp1
    (95) mexp1 -> . MINUS termino mexp1
    (96) mexp1 -> . empty
    (109) empty -> .

    PLUS            shift and go to state 98
    MINUS           shift and go to state 99
    LT              reduce using rule 109 (empty -> .)
    GT              reduce using rule 109 (empty -> .)
    EQ              reduce using rule 109 (empty -> .)
    NE              reduce using rule 109 (empty -> .)
    AND             reduce using rule 109 (empty -> .)
    OR              reduce using rule 109 (empty -> .)
    QUESTION        reduce using rule 109 (empty -> .)
    CPAREN          reduce using rule 109 (empty -> .)
    SEMICOLON       reduce using rule 109 (empty -> .)
    COMMA           reduce using rule 109 (empty -> .)
    CBRACKET        reduce using rule 109 (empty -> .)

    mexp1                          shift and go to state 97
    empty                          shift and go to state 100

state 40

    (97) termino -> factor . term1
    (98) term1 -> . MULT factor term1
    (99) term1 -> . DIV factor term1
    (100) term1 -> . empty
    (109) empty -> .

    MULT            shift and go to state 102
    DIV             shift and go to state 103
    PLUS            reduce using rule 109 (empty -> .)
    MINUS           reduce using rule 109 (empty -> .)
    LT              reduce using rule 109 (empty -> .)
    GT              reduce using rule 109 (empty -> .)
    EQ              reduce using rule 109 (empty -> .)
    NE              reduce using rule 109 (empty -> .)
    AND             reduce using rule 109 (empty -> .)
    OR              reduce using rule 109 (empty -> .)
    QUESTION        reduce using rule 109 (empty -> .)
    CPAREN          reduce using rule 109 (empty -> .)
    SEMICOLON       reduce using rule 109 (empty -> .)
    COMMA           reduce using rule 109 (empty -> .)
    CBRACKET        reduce using rule 109 (empty -> .)

    term1                          shift and go to state 101
    empty                          shift and go to state 104

state 41

    (102) factor -> varcst .

    MULT            reduce using rule 102 (factor -> varcst .)
    DIV             reduce using rule 102 (factor -> varcst .)
    PLUS            reduce using rule 102 (factor -> varcst .)
    MINUS           reduce using rule 102 (factor -> varcst .)
    LT              reduce using rule 102 (factor -> varcst .)
    GT              reduce using rule 102 (factor -> varcst .)
    EQ              reduce using rule 102 (factor -> varcst .)
    NE              reduce using rule 102 (factor -> varcst .)
    AND             reduce using rule 102 (factor -> varcst .)
    OR              reduce using rule 102 (factor -> varcst .)
    QUESTION        reduce using rule 102 (factor -> varcst .)
    CPAREN          reduce using rule 102 (factor -> varcst .)
    SEMICOLON       reduce using rule 102 (factor -> varcst .)
    COMMA           reduce using rule 102 (factor -> varcst .)
    CBRACKET        reduce using rule 102 (factor -> varcst .)


state 42

    (105) varcst -> CSTINT .

    MULT            reduce using rule 105 (varcst -> CSTINT .)
    DIV             reduce using rule 105 (varcst -> CSTINT .)
    PLUS            reduce using rule 105 (varcst -> CSTINT .)
    MINUS           reduce using rule 105 (varcst -> CSTINT .)
    LT              reduce using rule 105 (varcst -> CSTINT .)
    GT              reduce using rule 105 (varcst -> CSTINT .)
    EQ              reduce using rule 105 (varcst -> CSTINT .)
    NE              reduce using rule 105 (varcst -> CSTINT .)
    AND             reduce using rule 105 (varcst -> CSTINT .)
    OR              reduce using rule 105 (varcst -> CSTINT .)
    QUESTION        reduce using rule 105 (varcst -> CSTINT .)
    CPAREN          reduce using rule 105 (varcst -> CSTINT .)
    SEMICOLON       reduce using rule 105 (varcst -> CSTINT .)
    COMMA           reduce using rule 105 (varcst -> CSTINT .)
    CBRACKET        reduce using rule 105 (varcst -> CSTINT .)


state 43

    (106) varcst -> CSTFLT .

    MULT            reduce using rule 106 (varcst -> CSTFLT .)
    DIV             reduce using rule 106 (varcst -> CSTFLT .)
    PLUS            reduce using rule 106 (varcst -> CSTFLT .)
    MINUS           reduce using rule 106 (varcst -> CSTFLT .)
    LT              reduce using rule 106 (varcst -> CSTFLT .)
    GT              reduce using rule 106 (varcst -> CSTFLT .)
    EQ              reduce using rule 106 (varcst -> CSTFLT .)
    NE              reduce using rule 106 (varcst -> CSTFLT .)
    AND             reduce using rule 106 (varcst -> CSTFLT .)
    OR              reduce using rule 106 (varcst -> CSTFLT .)
    QUESTION        reduce using rule 106 (varcst -> CSTFLT .)
    CPAREN          reduce using rule 106 (varcst -> CSTFLT .)
    SEMICOLON       reduce using rule 106 (varcst -> CSTFLT .)
    COMMA           reduce using rule 106 (varcst -> CSTFLT .)
    CBRACKET        reduce using rule 106 (varcst -> CSTFLT .)


state 44

    (107) varcst -> CSTSTRING .

    MULT            reduce using rule 107 (varcst -> CSTSTRING .)
    DIV             reduce using rule 107 (varcst -> CSTSTRING .)
    PLUS            reduce using rule 107 (varcst -> CSTSTRING .)
    MINUS           reduce using rule 107 (varcst -> CSTSTRING .)
    LT              reduce using rule 107 (varcst -> CSTSTRING .)
    GT              reduce using rule 107 (varcst -> CSTSTRING .)
    EQ              reduce using rule 107 (varcst -> CSTSTRING .)
    NE              reduce using rule 107 (varcst -> CSTSTRING .)
    AND             reduce using rule 107 (varcst -> CSTSTRING .)
    OR              reduce using rule 107 (varcst -> CSTSTRING .)
    QUESTION        reduce using rule 107 (varcst -> CSTSTRING .)
    CPAREN          reduce using rule 107 (varcst -> CSTSTRING .)
    SEMICOLON       reduce using rule 107 (varcst -> CSTSTRING .)
    COMMA           reduce using rule 107 (varcst -> CSTSTRING .)
    CBRACKET        reduce using rule 107 (varcst -> CSTSTRING .)


state 45

    (108) varcst -> boolean .

    MULT            reduce using rule 108 (varcst -> boolean .)
    DIV             reduce using rule 108 (varcst -> boolean .)
    PLUS            reduce using rule 108 (varcst -> boolean .)
    MINUS           reduce using rule 108 (varcst -> boolean .)
    LT              reduce using rule 108 (varcst -> boolean .)
    GT              reduce using rule 108 (varcst -> boolean .)
    EQ              reduce using rule 108 (varcst -> boolean .)
    NE              reduce using rule 108 (varcst -> boolean .)
    AND             reduce using rule 108 (varcst -> boolean .)
    OR              reduce using rule 108 (varcst -> boolean .)
    QUESTION        reduce using rule 108 (varcst -> boolean .)
    CPAREN          reduce using rule 108 (varcst -> boolean .)
    SEMICOLON       reduce using rule 108 (varcst -> boolean .)
    COMMA           reduce using rule 108 (varcst -> boolean .)
    CBRACKET        reduce using rule 108 (varcst -> boolean .)


state 46

    (70) boolean -> TRUE .

    MULT            reduce using rule 70 (boolean -> TRUE .)
    DIV             reduce using rule 70 (boolean -> TRUE .)
    PLUS            reduce using rule 70 (boolean -> TRUE .)
    MINUS           reduce using rule 70 (boolean -> TRUE .)
    LT              reduce using rule 70 (boolean -> TRUE .)
    GT              reduce using rule 70 (boolean -> TRUE .)
    EQ              reduce using rule 70 (boolean -> TRUE .)
    NE              reduce using rule 70 (boolean -> TRUE .)
    AND             reduce using rule 70 (boolean -> TRUE .)
    OR              reduce using rule 70 (boolean -> TRUE .)
    QUESTION        reduce using rule 70 (boolean -> TRUE .)
    CPAREN          reduce using rule 70 (boolean -> TRUE .)
    SEMICOLON       reduce using rule 70 (boolean -> TRUE .)
    COMMA           reduce using rule 70 (boolean -> TRUE .)
    CBRACKET        reduce using rule 70 (boolean -> TRUE .)


state 47

    (71) boolean -> FALSE .

    MULT            reduce using rule 71 (boolean -> FALSE .)
    DIV             reduce using rule 71 (boolean -> FALSE .)
    PLUS            reduce using rule 71 (boolean -> FALSE .)
    MINUS           reduce using rule 71 (boolean -> FALSE .)
    LT              reduce using rule 71 (boolean -> FALSE .)
    GT              reduce using rule 71 (boolean -> FALSE .)
    EQ              reduce using rule 71 (boolean -> FALSE .)
    NE              reduce using rule 71 (boolean -> FALSE .)
    AND             reduce using rule 71 (boolean -> FALSE .)
    OR              reduce using rule 71 (boolean -> FALSE .)
    QUESTION        reduce using rule 71 (boolean -> FALSE .)
    CPAREN          reduce using rule 71 (boolean -> FALSE .)
    SEMICOLON       reduce using rule 71 (boolean -> FALSE .)
    COMMA           reduce using rule 71 (boolean -> FALSE .)
    CBRACKET        reduce using rule 71 (boolean -> FALSE .)


state 48

    (21) dec -> VAR tipo . SEMICOLON dec1

    SEMICOLON       shift and go to state 105


state 49

    (24) tipo -> compuesto . ID tipo1

    ID              shift and go to state 106


state 50

    (41) compuesto -> ID .

    ID              reduce using rule 41 (compuesto -> ID .)


state 51

    (25) tipo -> simple . ID tipo1

    ID              shift and go to state 107


state 52

    (26) tipo -> multiple . ID tipo3 tipo3 tipo2

    ID              shift and go to state 108


state 53

    (42) compuesto -> DATAFRAME .

    ID              reduce using rule 42 (compuesto -> DATAFRAME .)


state 54

    (43) compuesto -> FILE .

    ID              reduce using rule 43 (compuesto -> FILE .)


state 55

    (33) simple -> INT .

    ID              reduce using rule 33 (simple -> INT .)


state 56

    (34) simple -> FLOAT .

    ID              reduce using rule 34 (simple -> FLOAT .)


state 57

    (35) simple -> BOOL .

    ID              reduce using rule 35 (simple -> BOOL .)


state 58

    (36) simple -> STRING .

    ID              reduce using rule 36 (simple -> STRING .)


state 59

    (37) multiple -> INTS .

    ID              reduce using rule 37 (multiple -> INTS .)


state 60

    (38) multiple -> FLOATS .

    ID              reduce using rule 38 (multiple -> FLOATS .)


state 61

    (39) multiple -> BOOLS .

    ID              reduce using rule 39 (multiple -> BOOLS .)


state 62

    (40) multiple -> STRINGS .

    ID              reduce using rule 40 (multiple -> STRINGS .)


state 63

    (44) bloque -> OCURLY b1 CCURLY .

    $end            reduce using rule 44 (bloque -> OCURLY b1 CCURLY .)
    ID              reduce using rule 44 (bloque -> OCURLY b1 CCURLY .)
    IF              reduce using rule 44 (bloque -> OCURLY b1 CCURLY .)
    PRINT           reduce using rule 44 (bloque -> OCURLY b1 CCURLY .)
    READ            reduce using rule 44 (bloque -> OCURLY b1 CCURLY .)
    WHILE           reduce using rule 44 (bloque -> OCURLY b1 CCURLY .)
    FOR             reduce using rule 44 (bloque -> OCURLY b1 CCURLY .)
    OCURLY          reduce using rule 44 (bloque -> OCURLY b1 CCURLY .)
    FUNCTION        reduce using rule 44 (bloque -> OCURLY b1 CCURLY .)
    CLASS           reduce using rule 44 (bloque -> OCURLY b1 CCURLY .)
    VAR             reduce using rule 44 (bloque -> OCURLY b1 CCURLY .)
    OPAREN          reduce using rule 44 (bloque -> OCURLY b1 CCURLY .)
    CSTINT          reduce using rule 44 (bloque -> OCURLY b1 CCURLY .)
    CSTFLT          reduce using rule 44 (bloque -> OCURLY b1 CCURLY .)
    CSTSTRING       reduce using rule 44 (bloque -> OCURLY b1 CCURLY .)
    TRUE            reduce using rule 44 (bloque -> OCURLY b1 CCURLY .)
    FALSE           reduce using rule 44 (bloque -> OCURLY b1 CCURLY .)
    CCURLY          reduce using rule 44 (bloque -> OCURLY b1 CCURLY .)
    COLON           reduce using rule 44 (bloque -> OCURLY b1 CCURLY .)
    ELSE            reduce using rule 44 (bloque -> OCURLY b1 CCURLY .)
    SEMICOLON       reduce using rule 44 (bloque -> OCURLY b1 CCURLY .)


state 64

    (45) b1 -> estatuto b1 .

    CCURLY          reduce using rule 45 (b1 -> estatuto b1 .)


state 65

    (59) asignacion -> variable AS . exp SEMICOLON
    (81) exp -> . texp exp1
    (84) texp -> . gexp texp1
    (87) gexp -> . mexp gexp1
    (93) mexp -> . termino mexp1
    (97) termino -> . factor term1
    (101) factor -> . OPAREN exp CPAREN
    (102) factor -> . varcst
    (103) factor -> . variable
    (104) factor -> . llamada
    (105) varcst -> . CSTINT
    (106) varcst -> . CSTFLT
    (107) varcst -> . CSTSTRING
    (108) varcst -> . boolean
    (72) variable -> . ID variable1 variable1 variable2
    (77) llamada -> . ID OPAREN exp llamada1 CPAREN SEMICOLON
    (78) llamada -> . ID OPAREN CPAREN SEMICOLON
    (70) boolean -> . TRUE
    (71) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTSTRING       shift and go to state 44
    ID              shift and go to state 74
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47

    variable                       shift and go to state 72
    exp                            shift and go to state 109
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    llamada                        shift and go to state 73
    boolean                        shift and go to state 45

state 66

    (65) ternaria -> exp QUESTION . estatuto COLON estatuto SEMICOLON
    (47) estatuto -> . asignacion
    (48) estatuto -> . llamada
    (49) estatuto -> . condicion
    (50) estatuto -> . escritura
    (51) estatuto -> . leer
    (52) estatuto -> . ciclo_while
    (53) estatuto -> . ciclo_for
    (54) estatuto -> . ternaria
    (55) estatuto -> . bloque
    (56) estatuto -> . funcion
    (57) estatuto -> . clase
    (58) estatuto -> . dec
    (59) asignacion -> . variable AS exp SEMICOLON
    (77) llamada -> . ID OPAREN exp llamada1 CPAREN SEMICOLON
    (78) llamada -> . ID OPAREN CPAREN SEMICOLON
    (60) condicion -> . IF cond2 THEN bloque cond1 SEMICOLON
    (66) escritura -> . PRINT OPAREN exp e1 CPAREN SEMICOLON
    (69) leer -> . READ OPAREN exp e1 CPAREN SEMICOLON
    (17) ciclo_while -> . WHILE cond2 THEN bloque SEMICOLON
    (18) ciclo_for -> . FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
    (65) ternaria -> . exp QUESTION estatuto COLON estatuto SEMICOLON
    (44) bloque -> . OCURLY b1 CCURLY
    (3) funcion -> . FUNCTION func1 ID OPAREN param CPAREN bloque
    (11) clase -> . CLASS ID COLON clase_bloque SEMICOLON
    (21) dec -> . VAR tipo SEMICOLON dec1
    (72) variable -> . ID variable1 variable1 variable2
    (81) exp -> . texp exp1
    (84) texp -> . gexp texp1
    (87) gexp -> . mexp gexp1
    (93) mexp -> . termino mexp1
    (97) termino -> . factor term1
    (101) factor -> . OPAREN exp CPAREN
    (102) factor -> . varcst
    (103) factor -> . variable
    (104) factor -> . llamada
    (105) varcst -> . CSTINT
    (106) varcst -> . CSTFLT
    (107) varcst -> . CSTSTRING
    (108) varcst -> . boolean
    (70) boolean -> . TRUE
    (71) boolean -> . FALSE

    ID              shift and go to state 27
    IF              shift and go to state 29
    PRINT           shift and go to state 30
    READ            shift and go to state 31
    WHILE           shift and go to state 32
    FOR             shift and go to state 33
    OCURLY          shift and go to state 7
    FUNCTION        shift and go to state 34
    CLASS           shift and go to state 35
    VAR             shift and go to state 8
    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTSTRING       shift and go to state 44
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47

    exp                            shift and go to state 26
    estatuto                       shift and go to state 110
    asignacion                     shift and go to state 13
    llamada                        shift and go to state 14
    condicion                      shift and go to state 15
    escritura                      shift and go to state 16
    leer                           shift and go to state 17
    ciclo_while                    shift and go to state 18
    ciclo_for                      shift and go to state 19
    ternaria                       shift and go to state 20
    bloque                         shift and go to state 21
    funcion                        shift and go to state 22
    clase                          shift and go to state 23
    dec                            shift and go to state 24
    variable                       shift and go to state 25
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    boolean                        shift and go to state 45

state 67

    (77) llamada -> ID OPAREN . exp llamada1 CPAREN SEMICOLON
    (78) llamada -> ID OPAREN . CPAREN SEMICOLON
    (81) exp -> . texp exp1
    (84) texp -> . gexp texp1
    (87) gexp -> . mexp gexp1
    (93) mexp -> . termino mexp1
    (97) termino -> . factor term1
    (101) factor -> . OPAREN exp CPAREN
    (102) factor -> . varcst
    (103) factor -> . variable
    (104) factor -> . llamada
    (105) varcst -> . CSTINT
    (106) varcst -> . CSTFLT
    (107) varcst -> . CSTSTRING
    (108) varcst -> . boolean
    (72) variable -> . ID variable1 variable1 variable2
    (77) llamada -> . ID OPAREN exp llamada1 CPAREN SEMICOLON
    (78) llamada -> . ID OPAREN CPAREN SEMICOLON
    (70) boolean -> . TRUE
    (71) boolean -> . FALSE

    CPAREN          shift and go to state 112
    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTSTRING       shift and go to state 44
    ID              shift and go to state 74
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47

    exp                            shift and go to state 111
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 45

state 68

    (72) variable -> ID variable1 . variable1 variable2
    (73) variable1 -> . OBRACKET exp CBRACKET
    (74) variable1 -> . empty
    (109) empty -> .

    OBRACKET        shift and go to state 69
    PERIOD          reduce using rule 109 (empty -> .)
    AS              reduce using rule 109 (empty -> .)
    MULT            reduce using rule 109 (empty -> .)
    DIV             reduce using rule 109 (empty -> .)
    PLUS            reduce using rule 109 (empty -> .)
    MINUS           reduce using rule 109 (empty -> .)
    LT              reduce using rule 109 (empty -> .)
    GT              reduce using rule 109 (empty -> .)
    EQ              reduce using rule 109 (empty -> .)
    NE              reduce using rule 109 (empty -> .)
    AND             reduce using rule 109 (empty -> .)
    OR              reduce using rule 109 (empty -> .)
    QUESTION        reduce using rule 109 (empty -> .)
    CPAREN          reduce using rule 109 (empty -> .)
    SEMICOLON       reduce using rule 109 (empty -> .)
    COMMA           reduce using rule 109 (empty -> .)
    CBRACKET        reduce using rule 109 (empty -> .)
    FROM            reduce using rule 109 (empty -> .)
    TO              reduce using rule 109 (empty -> .)
    BY              reduce using rule 109 (empty -> .)

    variable1                      shift and go to state 113
    empty                          shift and go to state 70

state 69

    (73) variable1 -> OBRACKET . exp CBRACKET
    (81) exp -> . texp exp1
    (84) texp -> . gexp texp1
    (87) gexp -> . mexp gexp1
    (93) mexp -> . termino mexp1
    (97) termino -> . factor term1
    (101) factor -> . OPAREN exp CPAREN
    (102) factor -> . varcst
    (103) factor -> . variable
    (104) factor -> . llamada
    (105) varcst -> . CSTINT
    (106) varcst -> . CSTFLT
    (107) varcst -> . CSTSTRING
    (108) varcst -> . boolean
    (72) variable -> . ID variable1 variable1 variable2
    (77) llamada -> . ID OPAREN exp llamada1 CPAREN SEMICOLON
    (78) llamada -> . ID OPAREN CPAREN SEMICOLON
    (70) boolean -> . TRUE
    (71) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTSTRING       shift and go to state 44
    ID              shift and go to state 74
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47

    exp                            shift and go to state 114
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 45

state 70

    (74) variable1 -> empty .

    OBRACKET        reduce using rule 74 (variable1 -> empty .)
    PERIOD          reduce using rule 74 (variable1 -> empty .)
    AS              reduce using rule 74 (variable1 -> empty .)
    MULT            reduce using rule 74 (variable1 -> empty .)
    DIV             reduce using rule 74 (variable1 -> empty .)
    PLUS            reduce using rule 74 (variable1 -> empty .)
    MINUS           reduce using rule 74 (variable1 -> empty .)
    LT              reduce using rule 74 (variable1 -> empty .)
    GT              reduce using rule 74 (variable1 -> empty .)
    EQ              reduce using rule 74 (variable1 -> empty .)
    NE              reduce using rule 74 (variable1 -> empty .)
    AND             reduce using rule 74 (variable1 -> empty .)
    OR              reduce using rule 74 (variable1 -> empty .)
    QUESTION        reduce using rule 74 (variable1 -> empty .)
    CPAREN          reduce using rule 74 (variable1 -> empty .)
    SEMICOLON       reduce using rule 74 (variable1 -> empty .)
    COMMA           reduce using rule 74 (variable1 -> empty .)
    CBRACKET        reduce using rule 74 (variable1 -> empty .)
    FROM            reduce using rule 74 (variable1 -> empty .)
    TO              reduce using rule 74 (variable1 -> empty .)
    BY              reduce using rule 74 (variable1 -> empty .)


state 71

    (101) factor -> OPAREN exp . CPAREN

    CPAREN          shift and go to state 115


state 72

    (103) factor -> variable .

    MULT            reduce using rule 103 (factor -> variable .)
    DIV             reduce using rule 103 (factor -> variable .)
    PLUS            reduce using rule 103 (factor -> variable .)
    MINUS           reduce using rule 103 (factor -> variable .)
    LT              reduce using rule 103 (factor -> variable .)
    GT              reduce using rule 103 (factor -> variable .)
    EQ              reduce using rule 103 (factor -> variable .)
    NE              reduce using rule 103 (factor -> variable .)
    AND             reduce using rule 103 (factor -> variable .)
    OR              reduce using rule 103 (factor -> variable .)
    CPAREN          reduce using rule 103 (factor -> variable .)
    SEMICOLON       reduce using rule 103 (factor -> variable .)
    COMMA           reduce using rule 103 (factor -> variable .)
    CBRACKET        reduce using rule 103 (factor -> variable .)
    QUESTION        reduce using rule 103 (factor -> variable .)


state 73

    (104) factor -> llamada .

    MULT            reduce using rule 104 (factor -> llamada .)
    DIV             reduce using rule 104 (factor -> llamada .)
    PLUS            reduce using rule 104 (factor -> llamada .)
    MINUS           reduce using rule 104 (factor -> llamada .)
    LT              reduce using rule 104 (factor -> llamada .)
    GT              reduce using rule 104 (factor -> llamada .)
    EQ              reduce using rule 104 (factor -> llamada .)
    NE              reduce using rule 104 (factor -> llamada .)
    AND             reduce using rule 104 (factor -> llamada .)
    OR              reduce using rule 104 (factor -> llamada .)
    CPAREN          reduce using rule 104 (factor -> llamada .)
    SEMICOLON       reduce using rule 104 (factor -> llamada .)
    COMMA           reduce using rule 104 (factor -> llamada .)
    CBRACKET        reduce using rule 104 (factor -> llamada .)
    QUESTION        reduce using rule 104 (factor -> llamada .)


state 74

    (72) variable -> ID . variable1 variable1 variable2
    (77) llamada -> ID . OPAREN exp llamada1 CPAREN SEMICOLON
    (78) llamada -> ID . OPAREN CPAREN SEMICOLON
    (73) variable1 -> . OBRACKET exp CBRACKET
    (74) variable1 -> . empty
    (109) empty -> .

  ! shift/reduce conflict for OBRACKET resolved as shift
    OPAREN          shift and go to state 67
    OBRACKET        shift and go to state 69
    PERIOD          reduce using rule 109 (empty -> .)
    MULT            reduce using rule 109 (empty -> .)
    DIV             reduce using rule 109 (empty -> .)
    PLUS            reduce using rule 109 (empty -> .)
    MINUS           reduce using rule 109 (empty -> .)
    LT              reduce using rule 109 (empty -> .)
    GT              reduce using rule 109 (empty -> .)
    EQ              reduce using rule 109 (empty -> .)
    NE              reduce using rule 109 (empty -> .)
    AND             reduce using rule 109 (empty -> .)
    OR              reduce using rule 109 (empty -> .)
    CPAREN          reduce using rule 109 (empty -> .)
    SEMICOLON       reduce using rule 109 (empty -> .)
    COMMA           reduce using rule 109 (empty -> .)
    CBRACKET        reduce using rule 109 (empty -> .)
    QUESTION        reduce using rule 109 (empty -> .)

  ! OBRACKET        [ reduce using rule 109 (empty -> .) ]

    variable1                      shift and go to state 68
    empty                          shift and go to state 70

state 75

    (60) condicion -> IF cond2 . THEN bloque cond1 SEMICOLON

    THEN            shift and go to state 116


state 76

    (64) cond2 -> OPAREN . exp CPAREN
    (81) exp -> . texp exp1
    (84) texp -> . gexp texp1
    (87) gexp -> . mexp gexp1
    (93) mexp -> . termino mexp1
    (97) termino -> . factor term1
    (101) factor -> . OPAREN exp CPAREN
    (102) factor -> . varcst
    (103) factor -> . variable
    (104) factor -> . llamada
    (105) varcst -> . CSTINT
    (106) varcst -> . CSTFLT
    (107) varcst -> . CSTSTRING
    (108) varcst -> . boolean
    (72) variable -> . ID variable1 variable1 variable2
    (77) llamada -> . ID OPAREN exp llamada1 CPAREN SEMICOLON
    (78) llamada -> . ID OPAREN CPAREN SEMICOLON
    (70) boolean -> . TRUE
    (71) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTSTRING       shift and go to state 44
    ID              shift and go to state 74
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47

    exp                            shift and go to state 117
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 45

state 77

    (66) escritura -> PRINT OPAREN . exp e1 CPAREN SEMICOLON
    (81) exp -> . texp exp1
    (84) texp -> . gexp texp1
    (87) gexp -> . mexp gexp1
    (93) mexp -> . termino mexp1
    (97) termino -> . factor term1
    (101) factor -> . OPAREN exp CPAREN
    (102) factor -> . varcst
    (103) factor -> . variable
    (104) factor -> . llamada
    (105) varcst -> . CSTINT
    (106) varcst -> . CSTFLT
    (107) varcst -> . CSTSTRING
    (108) varcst -> . boolean
    (72) variable -> . ID variable1 variable1 variable2
    (77) llamada -> . ID OPAREN exp llamada1 CPAREN SEMICOLON
    (78) llamada -> . ID OPAREN CPAREN SEMICOLON
    (70) boolean -> . TRUE
    (71) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTSTRING       shift and go to state 44
    ID              shift and go to state 74
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47

    exp                            shift and go to state 118
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 45

state 78

    (69) leer -> READ OPAREN . exp e1 CPAREN SEMICOLON
    (81) exp -> . texp exp1
    (84) texp -> . gexp texp1
    (87) gexp -> . mexp gexp1
    (93) mexp -> . termino mexp1
    (97) termino -> . factor term1
    (101) factor -> . OPAREN exp CPAREN
    (102) factor -> . varcst
    (103) factor -> . variable
    (104) factor -> . llamada
    (105) varcst -> . CSTINT
    (106) varcst -> . CSTFLT
    (107) varcst -> . CSTSTRING
    (108) varcst -> . boolean
    (72) variable -> . ID variable1 variable1 variable2
    (77) llamada -> . ID OPAREN exp llamada1 CPAREN SEMICOLON
    (78) llamada -> . ID OPAREN CPAREN SEMICOLON
    (70) boolean -> . TRUE
    (71) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTSTRING       shift and go to state 44
    ID              shift and go to state 74
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47

    exp                            shift and go to state 119
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 45

state 79

    (17) ciclo_while -> WHILE cond2 . THEN bloque SEMICOLON

    THEN            shift and go to state 120


state 80

    (18) ciclo_for -> FOR OPAREN . variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
    (72) variable -> . ID variable1 variable1 variable2

    ID              shift and go to state 122

    variable                       shift and go to state 121

state 81

    (3) funcion -> FUNCTION func1 . ID OPAREN param CPAREN bloque

    ID              shift and go to state 123


state 82

    (4) func1 -> simple .

    ID              reduce using rule 4 (func1 -> simple .)


state 83

    (5) func1 -> VOID .

    ID              reduce using rule 5 (func1 -> VOID .)


state 84

    (11) clase -> CLASS ID . COLON clase_bloque SEMICOLON

    COLON           shift and go to state 124


state 85

    (81) exp -> texp exp1 .

    QUESTION        reduce using rule 81 (exp -> texp exp1 .)
    CPAREN          reduce using rule 81 (exp -> texp exp1 .)
    SEMICOLON       reduce using rule 81 (exp -> texp exp1 .)
    COMMA           reduce using rule 81 (exp -> texp exp1 .)
    CBRACKET        reduce using rule 81 (exp -> texp exp1 .)


state 86

    (82) exp1 -> OR . texp exp1
    (84) texp -> . gexp texp1
    (87) gexp -> . mexp gexp1
    (93) mexp -> . termino mexp1
    (97) termino -> . factor term1
    (101) factor -> . OPAREN exp CPAREN
    (102) factor -> . varcst
    (103) factor -> . variable
    (104) factor -> . llamada
    (105) varcst -> . CSTINT
    (106) varcst -> . CSTFLT
    (107) varcst -> . CSTSTRING
    (108) varcst -> . boolean
    (72) variable -> . ID variable1 variable1 variable2
    (77) llamada -> . ID OPAREN exp llamada1 CPAREN SEMICOLON
    (78) llamada -> . ID OPAREN CPAREN SEMICOLON
    (70) boolean -> . TRUE
    (71) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTSTRING       shift and go to state 44
    ID              shift and go to state 74
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47

    texp                           shift and go to state 125
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 45

state 87

    (83) exp1 -> empty .

    QUESTION        reduce using rule 83 (exp1 -> empty .)
    CPAREN          reduce using rule 83 (exp1 -> empty .)
    SEMICOLON       reduce using rule 83 (exp1 -> empty .)
    COMMA           reduce using rule 83 (exp1 -> empty .)
    CBRACKET        reduce using rule 83 (exp1 -> empty .)


state 88

    (84) texp -> gexp texp1 .

    OR              reduce using rule 84 (texp -> gexp texp1 .)
    QUESTION        reduce using rule 84 (texp -> gexp texp1 .)
    CPAREN          reduce using rule 84 (texp -> gexp texp1 .)
    SEMICOLON       reduce using rule 84 (texp -> gexp texp1 .)
    COMMA           reduce using rule 84 (texp -> gexp texp1 .)
    CBRACKET        reduce using rule 84 (texp -> gexp texp1 .)


state 89

    (85) texp1 -> AND . gexp texp1
    (87) gexp -> . mexp gexp1
    (93) mexp -> . termino mexp1
    (97) termino -> . factor term1
    (101) factor -> . OPAREN exp CPAREN
    (102) factor -> . varcst
    (103) factor -> . variable
    (104) factor -> . llamada
    (105) varcst -> . CSTINT
    (106) varcst -> . CSTFLT
    (107) varcst -> . CSTSTRING
    (108) varcst -> . boolean
    (72) variable -> . ID variable1 variable1 variable2
    (77) llamada -> . ID OPAREN exp llamada1 CPAREN SEMICOLON
    (78) llamada -> . ID OPAREN CPAREN SEMICOLON
    (70) boolean -> . TRUE
    (71) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTSTRING       shift and go to state 44
    ID              shift and go to state 74
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47

    gexp                           shift and go to state 126
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 45

state 90

    (86) texp1 -> empty .

    OR              reduce using rule 86 (texp1 -> empty .)
    QUESTION        reduce using rule 86 (texp1 -> empty .)
    CPAREN          reduce using rule 86 (texp1 -> empty .)
    SEMICOLON       reduce using rule 86 (texp1 -> empty .)
    COMMA           reduce using rule 86 (texp1 -> empty .)
    CBRACKET        reduce using rule 86 (texp1 -> empty .)


state 91

    (87) gexp -> mexp gexp1 .

    AND             reduce using rule 87 (gexp -> mexp gexp1 .)
    OR              reduce using rule 87 (gexp -> mexp gexp1 .)
    QUESTION        reduce using rule 87 (gexp -> mexp gexp1 .)
    CPAREN          reduce using rule 87 (gexp -> mexp gexp1 .)
    SEMICOLON       reduce using rule 87 (gexp -> mexp gexp1 .)
    COMMA           reduce using rule 87 (gexp -> mexp gexp1 .)
    CBRACKET        reduce using rule 87 (gexp -> mexp gexp1 .)


state 92

    (88) gexp1 -> LT . mexp
    (93) mexp -> . termino mexp1
    (97) termino -> . factor term1
    (101) factor -> . OPAREN exp CPAREN
    (102) factor -> . varcst
    (103) factor -> . variable
    (104) factor -> . llamada
    (105) varcst -> . CSTINT
    (106) varcst -> . CSTFLT
    (107) varcst -> . CSTSTRING
    (108) varcst -> . boolean
    (72) variable -> . ID variable1 variable1 variable2
    (77) llamada -> . ID OPAREN exp llamada1 CPAREN SEMICOLON
    (78) llamada -> . ID OPAREN CPAREN SEMICOLON
    (70) boolean -> . TRUE
    (71) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTSTRING       shift and go to state 44
    ID              shift and go to state 74
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47

    mexp                           shift and go to state 127
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 45

state 93

    (89) gexp1 -> GT . mexp
    (93) mexp -> . termino mexp1
    (97) termino -> . factor term1
    (101) factor -> . OPAREN exp CPAREN
    (102) factor -> . varcst
    (103) factor -> . variable
    (104) factor -> . llamada
    (105) varcst -> . CSTINT
    (106) varcst -> . CSTFLT
    (107) varcst -> . CSTSTRING
    (108) varcst -> . boolean
    (72) variable -> . ID variable1 variable1 variable2
    (77) llamada -> . ID OPAREN exp llamada1 CPAREN SEMICOLON
    (78) llamada -> . ID OPAREN CPAREN SEMICOLON
    (70) boolean -> . TRUE
    (71) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTSTRING       shift and go to state 44
    ID              shift and go to state 74
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47

    mexp                           shift and go to state 128
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 45

state 94

    (90) gexp1 -> EQ . mexp
    (93) mexp -> . termino mexp1
    (97) termino -> . factor term1
    (101) factor -> . OPAREN exp CPAREN
    (102) factor -> . varcst
    (103) factor -> . variable
    (104) factor -> . llamada
    (105) varcst -> . CSTINT
    (106) varcst -> . CSTFLT
    (107) varcst -> . CSTSTRING
    (108) varcst -> . boolean
    (72) variable -> . ID variable1 variable1 variable2
    (77) llamada -> . ID OPAREN exp llamada1 CPAREN SEMICOLON
    (78) llamada -> . ID OPAREN CPAREN SEMICOLON
    (70) boolean -> . TRUE
    (71) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTSTRING       shift and go to state 44
    ID              shift and go to state 74
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47

    mexp                           shift and go to state 129
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 45

state 95

    (91) gexp1 -> NE . mexp
    (93) mexp -> . termino mexp1
    (97) termino -> . factor term1
    (101) factor -> . OPAREN exp CPAREN
    (102) factor -> . varcst
    (103) factor -> . variable
    (104) factor -> . llamada
    (105) varcst -> . CSTINT
    (106) varcst -> . CSTFLT
    (107) varcst -> . CSTSTRING
    (108) varcst -> . boolean
    (72) variable -> . ID variable1 variable1 variable2
    (77) llamada -> . ID OPAREN exp llamada1 CPAREN SEMICOLON
    (78) llamada -> . ID OPAREN CPAREN SEMICOLON
    (70) boolean -> . TRUE
    (71) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTSTRING       shift and go to state 44
    ID              shift and go to state 74
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47

    mexp                           shift and go to state 130
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 45

state 96

    (92) gexp1 -> empty .

    AND             reduce using rule 92 (gexp1 -> empty .)
    OR              reduce using rule 92 (gexp1 -> empty .)
    QUESTION        reduce using rule 92 (gexp1 -> empty .)
    CPAREN          reduce using rule 92 (gexp1 -> empty .)
    SEMICOLON       reduce using rule 92 (gexp1 -> empty .)
    COMMA           reduce using rule 92 (gexp1 -> empty .)
    CBRACKET        reduce using rule 92 (gexp1 -> empty .)


state 97

    (93) mexp -> termino mexp1 .

    LT              reduce using rule 93 (mexp -> termino mexp1 .)
    GT              reduce using rule 93 (mexp -> termino mexp1 .)
    EQ              reduce using rule 93 (mexp -> termino mexp1 .)
    NE              reduce using rule 93 (mexp -> termino mexp1 .)
    AND             reduce using rule 93 (mexp -> termino mexp1 .)
    OR              reduce using rule 93 (mexp -> termino mexp1 .)
    QUESTION        reduce using rule 93 (mexp -> termino mexp1 .)
    CPAREN          reduce using rule 93 (mexp -> termino mexp1 .)
    SEMICOLON       reduce using rule 93 (mexp -> termino mexp1 .)
    COMMA           reduce using rule 93 (mexp -> termino mexp1 .)
    CBRACKET        reduce using rule 93 (mexp -> termino mexp1 .)


state 98

    (94) mexp1 -> PLUS . termino mexp1
    (97) termino -> . factor term1
    (101) factor -> . OPAREN exp CPAREN
    (102) factor -> . varcst
    (103) factor -> . variable
    (104) factor -> . llamada
    (105) varcst -> . CSTINT
    (106) varcst -> . CSTFLT
    (107) varcst -> . CSTSTRING
    (108) varcst -> . boolean
    (72) variable -> . ID variable1 variable1 variable2
    (77) llamada -> . ID OPAREN exp llamada1 CPAREN SEMICOLON
    (78) llamada -> . ID OPAREN CPAREN SEMICOLON
    (70) boolean -> . TRUE
    (71) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTSTRING       shift and go to state 44
    ID              shift and go to state 74
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47

    termino                        shift and go to state 131
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 45

state 99

    (95) mexp1 -> MINUS . termino mexp1
    (97) termino -> . factor term1
    (101) factor -> . OPAREN exp CPAREN
    (102) factor -> . varcst
    (103) factor -> . variable
    (104) factor -> . llamada
    (105) varcst -> . CSTINT
    (106) varcst -> . CSTFLT
    (107) varcst -> . CSTSTRING
    (108) varcst -> . boolean
    (72) variable -> . ID variable1 variable1 variable2
    (77) llamada -> . ID OPAREN exp llamada1 CPAREN SEMICOLON
    (78) llamada -> . ID OPAREN CPAREN SEMICOLON
    (70) boolean -> . TRUE
    (71) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTSTRING       shift and go to state 44
    ID              shift and go to state 74
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47

    termino                        shift and go to state 132
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 45

state 100

    (96) mexp1 -> empty .

    LT              reduce using rule 96 (mexp1 -> empty .)
    GT              reduce using rule 96 (mexp1 -> empty .)
    EQ              reduce using rule 96 (mexp1 -> empty .)
    NE              reduce using rule 96 (mexp1 -> empty .)
    AND             reduce using rule 96 (mexp1 -> empty .)
    OR              reduce using rule 96 (mexp1 -> empty .)
    QUESTION        reduce using rule 96 (mexp1 -> empty .)
    CPAREN          reduce using rule 96 (mexp1 -> empty .)
    SEMICOLON       reduce using rule 96 (mexp1 -> empty .)
    COMMA           reduce using rule 96 (mexp1 -> empty .)
    CBRACKET        reduce using rule 96 (mexp1 -> empty .)


state 101

    (97) termino -> factor term1 .

    PLUS            reduce using rule 97 (termino -> factor term1 .)
    MINUS           reduce using rule 97 (termino -> factor term1 .)
    LT              reduce using rule 97 (termino -> factor term1 .)
    GT              reduce using rule 97 (termino -> factor term1 .)
    EQ              reduce using rule 97 (termino -> factor term1 .)
    NE              reduce using rule 97 (termino -> factor term1 .)
    AND             reduce using rule 97 (termino -> factor term1 .)
    OR              reduce using rule 97 (termino -> factor term1 .)
    QUESTION        reduce using rule 97 (termino -> factor term1 .)
    CPAREN          reduce using rule 97 (termino -> factor term1 .)
    SEMICOLON       reduce using rule 97 (termino -> factor term1 .)
    COMMA           reduce using rule 97 (termino -> factor term1 .)
    CBRACKET        reduce using rule 97 (termino -> factor term1 .)


state 102

    (98) term1 -> MULT . factor term1
    (101) factor -> . OPAREN exp CPAREN
    (102) factor -> . varcst
    (103) factor -> . variable
    (104) factor -> . llamada
    (105) varcst -> . CSTINT
    (106) varcst -> . CSTFLT
    (107) varcst -> . CSTSTRING
    (108) varcst -> . boolean
    (72) variable -> . ID variable1 variable1 variable2
    (77) llamada -> . ID OPAREN exp llamada1 CPAREN SEMICOLON
    (78) llamada -> . ID OPAREN CPAREN SEMICOLON
    (70) boolean -> . TRUE
    (71) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTSTRING       shift and go to state 44
    ID              shift and go to state 74
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47

    factor                         shift and go to state 133
    varcst                         shift and go to state 41
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 45

state 103

    (99) term1 -> DIV . factor term1
    (101) factor -> . OPAREN exp CPAREN
    (102) factor -> . varcst
    (103) factor -> . variable
    (104) factor -> . llamada
    (105) varcst -> . CSTINT
    (106) varcst -> . CSTFLT
    (107) varcst -> . CSTSTRING
    (108) varcst -> . boolean
    (72) variable -> . ID variable1 variable1 variable2
    (77) llamada -> . ID OPAREN exp llamada1 CPAREN SEMICOLON
    (78) llamada -> . ID OPAREN CPAREN SEMICOLON
    (70) boolean -> . TRUE
    (71) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTSTRING       shift and go to state 44
    ID              shift and go to state 74
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47

    factor                         shift and go to state 134
    varcst                         shift and go to state 41
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 45

state 104

    (100) term1 -> empty .

    PLUS            reduce using rule 100 (term1 -> empty .)
    MINUS           reduce using rule 100 (term1 -> empty .)
    LT              reduce using rule 100 (term1 -> empty .)
    GT              reduce using rule 100 (term1 -> empty .)
    EQ              reduce using rule 100 (term1 -> empty .)
    NE              reduce using rule 100 (term1 -> empty .)
    AND             reduce using rule 100 (term1 -> empty .)
    OR              reduce using rule 100 (term1 -> empty .)
    QUESTION        reduce using rule 100 (term1 -> empty .)
    CPAREN          reduce using rule 100 (term1 -> empty .)
    SEMICOLON       reduce using rule 100 (term1 -> empty .)
    COMMA           reduce using rule 100 (term1 -> empty .)
    CBRACKET        reduce using rule 100 (term1 -> empty .)


state 105

    (21) dec -> VAR tipo SEMICOLON . dec1
    (22) dec1 -> . dec
    (23) dec1 -> . empty
    (21) dec -> . VAR tipo SEMICOLON dec1
    (109) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 8
    OCURLY          reduce using rule 109 (empty -> .)
    ID              reduce using rule 109 (empty -> .)
    IF              reduce using rule 109 (empty -> .)
    PRINT           reduce using rule 109 (empty -> .)
    READ            reduce using rule 109 (empty -> .)
    WHILE           reduce using rule 109 (empty -> .)
    FOR             reduce using rule 109 (empty -> .)
    FUNCTION        reduce using rule 109 (empty -> .)
    CLASS           reduce using rule 109 (empty -> .)
    OPAREN          reduce using rule 109 (empty -> .)
    CSTINT          reduce using rule 109 (empty -> .)
    CSTFLT          reduce using rule 109 (empty -> .)
    CSTSTRING       reduce using rule 109 (empty -> .)
    TRUE            reduce using rule 109 (empty -> .)
    FALSE           reduce using rule 109 (empty -> .)
    CCURLY          reduce using rule 109 (empty -> .)
    COLON           reduce using rule 109 (empty -> .)
    SEMICOLON       reduce using rule 109 (empty -> .)
    METHODS         reduce using rule 109 (empty -> .)

  ! VAR             [ reduce using rule 109 (empty -> .) ]

    dec1                           shift and go to state 135
    dec                            shift and go to state 136
    empty                          shift and go to state 137

state 106

    (24) tipo -> compuesto ID . tipo1
    (27) tipo1 -> . COMMA ID tipo1
    (28) tipo1 -> . empty
    (109) empty -> .

    COMMA           shift and go to state 139
    SEMICOLON       reduce using rule 109 (empty -> .)

    tipo1                          shift and go to state 138
    empty                          shift and go to state 140

state 107

    (25) tipo -> simple ID . tipo1
    (27) tipo1 -> . COMMA ID tipo1
    (28) tipo1 -> . empty
    (109) empty -> .

    COMMA           shift and go to state 139
    SEMICOLON       reduce using rule 109 (empty -> .)

    tipo1                          shift and go to state 141
    empty                          shift and go to state 140

state 108

    (26) tipo -> multiple ID . tipo3 tipo3 tipo2
    (31) tipo3 -> . OBRACKET CSTINT CBRACKET
    (32) tipo3 -> . empty
    (109) empty -> .

  ! shift/reduce conflict for OBRACKET resolved as shift
    OBRACKET        shift and go to state 143
    COMMA           reduce using rule 109 (empty -> .)
    SEMICOLON       reduce using rule 109 (empty -> .)

  ! OBRACKET        [ reduce using rule 109 (empty -> .) ]

    tipo3                          shift and go to state 142
    empty                          shift and go to state 144

state 109

    (59) asignacion -> variable AS exp . SEMICOLON

    SEMICOLON       shift and go to state 145


state 110

    (65) ternaria -> exp QUESTION estatuto . COLON estatuto SEMICOLON

    COLON           shift and go to state 146


state 111

    (77) llamada -> ID OPAREN exp . llamada1 CPAREN SEMICOLON
    (79) llamada1 -> . COMMA exp llamada1
    (80) llamada1 -> . empty
    (109) empty -> .

    COMMA           shift and go to state 148
    CPAREN          reduce using rule 109 (empty -> .)

    llamada1                       shift and go to state 147
    empty                          shift and go to state 149

state 112

    (78) llamada -> ID OPAREN CPAREN . SEMICOLON

    SEMICOLON       shift and go to state 150


state 113

    (72) variable -> ID variable1 variable1 . variable2
    (75) variable2 -> . PERIOD ID variable1 variable1 variable2
    (76) variable2 -> . empty
    (109) empty -> .

    PERIOD          shift and go to state 152
    AS              reduce using rule 109 (empty -> .)
    MULT            reduce using rule 109 (empty -> .)
    DIV             reduce using rule 109 (empty -> .)
    PLUS            reduce using rule 109 (empty -> .)
    MINUS           reduce using rule 109 (empty -> .)
    LT              reduce using rule 109 (empty -> .)
    GT              reduce using rule 109 (empty -> .)
    EQ              reduce using rule 109 (empty -> .)
    NE              reduce using rule 109 (empty -> .)
    AND             reduce using rule 109 (empty -> .)
    OR              reduce using rule 109 (empty -> .)
    QUESTION        reduce using rule 109 (empty -> .)
    CPAREN          reduce using rule 109 (empty -> .)
    SEMICOLON       reduce using rule 109 (empty -> .)
    COMMA           reduce using rule 109 (empty -> .)
    CBRACKET        reduce using rule 109 (empty -> .)
    FROM            reduce using rule 109 (empty -> .)
    TO              reduce using rule 109 (empty -> .)
    BY              reduce using rule 109 (empty -> .)

    variable2                      shift and go to state 151
    empty                          shift and go to state 153

state 114

    (73) variable1 -> OBRACKET exp . CBRACKET

    CBRACKET        shift and go to state 154


state 115

    (101) factor -> OPAREN exp CPAREN .

    MULT            reduce using rule 101 (factor -> OPAREN exp CPAREN .)
    DIV             reduce using rule 101 (factor -> OPAREN exp CPAREN .)
    PLUS            reduce using rule 101 (factor -> OPAREN exp CPAREN .)
    MINUS           reduce using rule 101 (factor -> OPAREN exp CPAREN .)
    LT              reduce using rule 101 (factor -> OPAREN exp CPAREN .)
    GT              reduce using rule 101 (factor -> OPAREN exp CPAREN .)
    EQ              reduce using rule 101 (factor -> OPAREN exp CPAREN .)
    NE              reduce using rule 101 (factor -> OPAREN exp CPAREN .)
    AND             reduce using rule 101 (factor -> OPAREN exp CPAREN .)
    OR              reduce using rule 101 (factor -> OPAREN exp CPAREN .)
    QUESTION        reduce using rule 101 (factor -> OPAREN exp CPAREN .)
    CPAREN          reduce using rule 101 (factor -> OPAREN exp CPAREN .)
    SEMICOLON       reduce using rule 101 (factor -> OPAREN exp CPAREN .)
    COMMA           reduce using rule 101 (factor -> OPAREN exp CPAREN .)
    CBRACKET        reduce using rule 101 (factor -> OPAREN exp CPAREN .)


state 116

    (60) condicion -> IF cond2 THEN . bloque cond1 SEMICOLON
    (44) bloque -> . OCURLY b1 CCURLY

    OCURLY          shift and go to state 7

    bloque                         shift and go to state 155

state 117

    (64) cond2 -> OPAREN exp . CPAREN

    CPAREN          shift and go to state 156


state 118

    (66) escritura -> PRINT OPAREN exp . e1 CPAREN SEMICOLON
    (67) e1 -> . COMMA exp e1
    (68) e1 -> . empty
    (109) empty -> .

    COMMA           shift and go to state 158
    CPAREN          reduce using rule 109 (empty -> .)

    e1                             shift and go to state 157
    empty                          shift and go to state 159

state 119

    (69) leer -> READ OPAREN exp . e1 CPAREN SEMICOLON
    (67) e1 -> . COMMA exp e1
    (68) e1 -> . empty
    (109) empty -> .

    COMMA           shift and go to state 158
    CPAREN          reduce using rule 109 (empty -> .)

    e1                             shift and go to state 160
    empty                          shift and go to state 159

state 120

    (17) ciclo_while -> WHILE cond2 THEN . bloque SEMICOLON
    (44) bloque -> . OCURLY b1 CCURLY

    OCURLY          shift and go to state 7

    bloque                         shift and go to state 161

state 121

    (18) ciclo_for -> FOR OPAREN variable . FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON

    FROM            shift and go to state 162


state 122

    (72) variable -> ID . variable1 variable1 variable2
    (73) variable1 -> . OBRACKET exp CBRACKET
    (74) variable1 -> . empty
    (109) empty -> .

  ! shift/reduce conflict for OBRACKET resolved as shift
    OBRACKET        shift and go to state 69
    PERIOD          reduce using rule 109 (empty -> .)
    FROM            reduce using rule 109 (empty -> .)
    TO              reduce using rule 109 (empty -> .)
    BY              reduce using rule 109 (empty -> .)
    CPAREN          reduce using rule 109 (empty -> .)

  ! OBRACKET        [ reduce using rule 109 (empty -> .) ]

    variable1                      shift and go to state 68
    empty                          shift and go to state 70

state 123

    (3) funcion -> FUNCTION func1 ID . OPAREN param CPAREN bloque

    OPAREN          shift and go to state 163


state 124

    (11) clase -> CLASS ID COLON . clase_bloque SEMICOLON
    (12) clase_bloque -> . OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque CCURLY

    OCURLY          shift and go to state 165

    clase_bloque                   shift and go to state 164

state 125

    (82) exp1 -> OR texp . exp1
    (82) exp1 -> . OR texp exp1
    (83) exp1 -> . empty
    (109) empty -> .

    OR              shift and go to state 86
    QUESTION        reduce using rule 109 (empty -> .)
    CPAREN          reduce using rule 109 (empty -> .)
    SEMICOLON       reduce using rule 109 (empty -> .)
    COMMA           reduce using rule 109 (empty -> .)
    CBRACKET        reduce using rule 109 (empty -> .)

    exp1                           shift and go to state 166
    empty                          shift and go to state 87

state 126

    (85) texp1 -> AND gexp . texp1
    (85) texp1 -> . AND gexp texp1
    (86) texp1 -> . empty
    (109) empty -> .

    AND             shift and go to state 89
    OR              reduce using rule 109 (empty -> .)
    QUESTION        reduce using rule 109 (empty -> .)
    CPAREN          reduce using rule 109 (empty -> .)
    SEMICOLON       reduce using rule 109 (empty -> .)
    COMMA           reduce using rule 109 (empty -> .)
    CBRACKET        reduce using rule 109 (empty -> .)

    texp1                          shift and go to state 167
    empty                          shift and go to state 90

state 127

    (88) gexp1 -> LT mexp .

    AND             reduce using rule 88 (gexp1 -> LT mexp .)
    OR              reduce using rule 88 (gexp1 -> LT mexp .)
    QUESTION        reduce using rule 88 (gexp1 -> LT mexp .)
    CPAREN          reduce using rule 88 (gexp1 -> LT mexp .)
    SEMICOLON       reduce using rule 88 (gexp1 -> LT mexp .)
    COMMA           reduce using rule 88 (gexp1 -> LT mexp .)
    CBRACKET        reduce using rule 88 (gexp1 -> LT mexp .)


state 128

    (89) gexp1 -> GT mexp .

    AND             reduce using rule 89 (gexp1 -> GT mexp .)
    OR              reduce using rule 89 (gexp1 -> GT mexp .)
    QUESTION        reduce using rule 89 (gexp1 -> GT mexp .)
    CPAREN          reduce using rule 89 (gexp1 -> GT mexp .)
    SEMICOLON       reduce using rule 89 (gexp1 -> GT mexp .)
    COMMA           reduce using rule 89 (gexp1 -> GT mexp .)
    CBRACKET        reduce using rule 89 (gexp1 -> GT mexp .)


state 129

    (90) gexp1 -> EQ mexp .

    AND             reduce using rule 90 (gexp1 -> EQ mexp .)
    OR              reduce using rule 90 (gexp1 -> EQ mexp .)
    QUESTION        reduce using rule 90 (gexp1 -> EQ mexp .)
    CPAREN          reduce using rule 90 (gexp1 -> EQ mexp .)
    SEMICOLON       reduce using rule 90 (gexp1 -> EQ mexp .)
    COMMA           reduce using rule 90 (gexp1 -> EQ mexp .)
    CBRACKET        reduce using rule 90 (gexp1 -> EQ mexp .)


state 130

    (91) gexp1 -> NE mexp .

    AND             reduce using rule 91 (gexp1 -> NE mexp .)
    OR              reduce using rule 91 (gexp1 -> NE mexp .)
    QUESTION        reduce using rule 91 (gexp1 -> NE mexp .)
    CPAREN          reduce using rule 91 (gexp1 -> NE mexp .)
    SEMICOLON       reduce using rule 91 (gexp1 -> NE mexp .)
    COMMA           reduce using rule 91 (gexp1 -> NE mexp .)
    CBRACKET        reduce using rule 91 (gexp1 -> NE mexp .)


state 131

    (94) mexp1 -> PLUS termino . mexp1
    (94) mexp1 -> . PLUS termino mexp1
    (95) mexp1 -> . MINUS termino mexp1
    (96) mexp1 -> . empty
    (109) empty -> .

    PLUS            shift and go to state 98
    MINUS           shift and go to state 99
    LT              reduce using rule 109 (empty -> .)
    GT              reduce using rule 109 (empty -> .)
    EQ              reduce using rule 109 (empty -> .)
    NE              reduce using rule 109 (empty -> .)
    AND             reduce using rule 109 (empty -> .)
    OR              reduce using rule 109 (empty -> .)
    QUESTION        reduce using rule 109 (empty -> .)
    CPAREN          reduce using rule 109 (empty -> .)
    SEMICOLON       reduce using rule 109 (empty -> .)
    COMMA           reduce using rule 109 (empty -> .)
    CBRACKET        reduce using rule 109 (empty -> .)

    mexp1                          shift and go to state 168
    empty                          shift and go to state 100

state 132

    (95) mexp1 -> MINUS termino . mexp1
    (94) mexp1 -> . PLUS termino mexp1
    (95) mexp1 -> . MINUS termino mexp1
    (96) mexp1 -> . empty
    (109) empty -> .

    PLUS            shift and go to state 98
    MINUS           shift and go to state 99
    LT              reduce using rule 109 (empty -> .)
    GT              reduce using rule 109 (empty -> .)
    EQ              reduce using rule 109 (empty -> .)
    NE              reduce using rule 109 (empty -> .)
    AND             reduce using rule 109 (empty -> .)
    OR              reduce using rule 109 (empty -> .)
    QUESTION        reduce using rule 109 (empty -> .)
    CPAREN          reduce using rule 109 (empty -> .)
    SEMICOLON       reduce using rule 109 (empty -> .)
    COMMA           reduce using rule 109 (empty -> .)
    CBRACKET        reduce using rule 109 (empty -> .)

    mexp1                          shift and go to state 169
    empty                          shift and go to state 100

state 133

    (98) term1 -> MULT factor . term1
    (98) term1 -> . MULT factor term1
    (99) term1 -> . DIV factor term1
    (100) term1 -> . empty
    (109) empty -> .

    MULT            shift and go to state 102
    DIV             shift and go to state 103
    PLUS            reduce using rule 109 (empty -> .)
    MINUS           reduce using rule 109 (empty -> .)
    LT              reduce using rule 109 (empty -> .)
    GT              reduce using rule 109 (empty -> .)
    EQ              reduce using rule 109 (empty -> .)
    NE              reduce using rule 109 (empty -> .)
    AND             reduce using rule 109 (empty -> .)
    OR              reduce using rule 109 (empty -> .)
    QUESTION        reduce using rule 109 (empty -> .)
    CPAREN          reduce using rule 109 (empty -> .)
    SEMICOLON       reduce using rule 109 (empty -> .)
    COMMA           reduce using rule 109 (empty -> .)
    CBRACKET        reduce using rule 109 (empty -> .)

    term1                          shift and go to state 170
    empty                          shift and go to state 104

state 134

    (99) term1 -> DIV factor . term1
    (98) term1 -> . MULT factor term1
    (99) term1 -> . DIV factor term1
    (100) term1 -> . empty
    (109) empty -> .

    MULT            shift and go to state 102
    DIV             shift and go to state 103
    PLUS            reduce using rule 109 (empty -> .)
    MINUS           reduce using rule 109 (empty -> .)
    LT              reduce using rule 109 (empty -> .)
    GT              reduce using rule 109 (empty -> .)
    EQ              reduce using rule 109 (empty -> .)
    NE              reduce using rule 109 (empty -> .)
    AND             reduce using rule 109 (empty -> .)
    OR              reduce using rule 109 (empty -> .)
    QUESTION        reduce using rule 109 (empty -> .)
    CPAREN          reduce using rule 109 (empty -> .)
    SEMICOLON       reduce using rule 109 (empty -> .)
    COMMA           reduce using rule 109 (empty -> .)
    CBRACKET        reduce using rule 109 (empty -> .)

    term1                          shift and go to state 171
    empty                          shift and go to state 104

state 135

    (21) dec -> VAR tipo SEMICOLON dec1 .

    OCURLY          reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    ID              reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    IF              reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    PRINT           reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    READ            reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    WHILE           reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    FOR             reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    FUNCTION        reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    CLASS           reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    VAR             reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    OPAREN          reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    CSTINT          reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    CSTFLT          reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    CSTSTRING       reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    TRUE            reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    FALSE           reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    CCURLY          reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    COLON           reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    SEMICOLON       reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)
    METHODS         reduce using rule 21 (dec -> VAR tipo SEMICOLON dec1 .)


state 136

    (22) dec1 -> dec .

    OCURLY          reduce using rule 22 (dec1 -> dec .)
    ID              reduce using rule 22 (dec1 -> dec .)
    IF              reduce using rule 22 (dec1 -> dec .)
    PRINT           reduce using rule 22 (dec1 -> dec .)
    READ            reduce using rule 22 (dec1 -> dec .)
    WHILE           reduce using rule 22 (dec1 -> dec .)
    FOR             reduce using rule 22 (dec1 -> dec .)
    FUNCTION        reduce using rule 22 (dec1 -> dec .)
    CLASS           reduce using rule 22 (dec1 -> dec .)
    VAR             reduce using rule 22 (dec1 -> dec .)
    OPAREN          reduce using rule 22 (dec1 -> dec .)
    CSTINT          reduce using rule 22 (dec1 -> dec .)
    CSTFLT          reduce using rule 22 (dec1 -> dec .)
    CSTSTRING       reduce using rule 22 (dec1 -> dec .)
    TRUE            reduce using rule 22 (dec1 -> dec .)
    FALSE           reduce using rule 22 (dec1 -> dec .)
    CCURLY          reduce using rule 22 (dec1 -> dec .)
    COLON           reduce using rule 22 (dec1 -> dec .)
    SEMICOLON       reduce using rule 22 (dec1 -> dec .)
    METHODS         reduce using rule 22 (dec1 -> dec .)


state 137

    (23) dec1 -> empty .

    OCURLY          reduce using rule 23 (dec1 -> empty .)
    ID              reduce using rule 23 (dec1 -> empty .)
    IF              reduce using rule 23 (dec1 -> empty .)
    PRINT           reduce using rule 23 (dec1 -> empty .)
    READ            reduce using rule 23 (dec1 -> empty .)
    WHILE           reduce using rule 23 (dec1 -> empty .)
    FOR             reduce using rule 23 (dec1 -> empty .)
    FUNCTION        reduce using rule 23 (dec1 -> empty .)
    CLASS           reduce using rule 23 (dec1 -> empty .)
    VAR             reduce using rule 23 (dec1 -> empty .)
    OPAREN          reduce using rule 23 (dec1 -> empty .)
    CSTINT          reduce using rule 23 (dec1 -> empty .)
    CSTFLT          reduce using rule 23 (dec1 -> empty .)
    CSTSTRING       reduce using rule 23 (dec1 -> empty .)
    TRUE            reduce using rule 23 (dec1 -> empty .)
    FALSE           reduce using rule 23 (dec1 -> empty .)
    CCURLY          reduce using rule 23 (dec1 -> empty .)
    COLON           reduce using rule 23 (dec1 -> empty .)
    SEMICOLON       reduce using rule 23 (dec1 -> empty .)
    METHODS         reduce using rule 23 (dec1 -> empty .)


state 138

    (24) tipo -> compuesto ID tipo1 .

    SEMICOLON       reduce using rule 24 (tipo -> compuesto ID tipo1 .)


state 139

    (27) tipo1 -> COMMA . ID tipo1

    ID              shift and go to state 172


state 140

    (28) tipo1 -> empty .

    SEMICOLON       reduce using rule 28 (tipo1 -> empty .)


state 141

    (25) tipo -> simple ID tipo1 .

    SEMICOLON       reduce using rule 25 (tipo -> simple ID tipo1 .)


state 142

    (26) tipo -> multiple ID tipo3 . tipo3 tipo2
    (31) tipo3 -> . OBRACKET CSTINT CBRACKET
    (32) tipo3 -> . empty
    (109) empty -> .

    OBRACKET        shift and go to state 143
    COMMA           reduce using rule 109 (empty -> .)
    SEMICOLON       reduce using rule 109 (empty -> .)

    tipo3                          shift and go to state 173
    empty                          shift and go to state 144

state 143

    (31) tipo3 -> OBRACKET . CSTINT CBRACKET

    CSTINT          shift and go to state 174


state 144

    (32) tipo3 -> empty .

    OBRACKET        reduce using rule 32 (tipo3 -> empty .)
    COMMA           reduce using rule 32 (tipo3 -> empty .)
    SEMICOLON       reduce using rule 32 (tipo3 -> empty .)


state 145

    (59) asignacion -> variable AS exp SEMICOLON .

    ID              reduce using rule 59 (asignacion -> variable AS exp SEMICOLON .)
    IF              reduce using rule 59 (asignacion -> variable AS exp SEMICOLON .)
    PRINT           reduce using rule 59 (asignacion -> variable AS exp SEMICOLON .)
    READ            reduce using rule 59 (asignacion -> variable AS exp SEMICOLON .)
    WHILE           reduce using rule 59 (asignacion -> variable AS exp SEMICOLON .)
    FOR             reduce using rule 59 (asignacion -> variable AS exp SEMICOLON .)
    OCURLY          reduce using rule 59 (asignacion -> variable AS exp SEMICOLON .)
    FUNCTION        reduce using rule 59 (asignacion -> variable AS exp SEMICOLON .)
    CLASS           reduce using rule 59 (asignacion -> variable AS exp SEMICOLON .)
    VAR             reduce using rule 59 (asignacion -> variable AS exp SEMICOLON .)
    OPAREN          reduce using rule 59 (asignacion -> variable AS exp SEMICOLON .)
    CSTINT          reduce using rule 59 (asignacion -> variable AS exp SEMICOLON .)
    CSTFLT          reduce using rule 59 (asignacion -> variable AS exp SEMICOLON .)
    CSTSTRING       reduce using rule 59 (asignacion -> variable AS exp SEMICOLON .)
    TRUE            reduce using rule 59 (asignacion -> variable AS exp SEMICOLON .)
    FALSE           reduce using rule 59 (asignacion -> variable AS exp SEMICOLON .)
    CCURLY          reduce using rule 59 (asignacion -> variable AS exp SEMICOLON .)
    COLON           reduce using rule 59 (asignacion -> variable AS exp SEMICOLON .)
    SEMICOLON       reduce using rule 59 (asignacion -> variable AS exp SEMICOLON .)


state 146

    (65) ternaria -> exp QUESTION estatuto COLON . estatuto SEMICOLON
    (47) estatuto -> . asignacion
    (48) estatuto -> . llamada
    (49) estatuto -> . condicion
    (50) estatuto -> . escritura
    (51) estatuto -> . leer
    (52) estatuto -> . ciclo_while
    (53) estatuto -> . ciclo_for
    (54) estatuto -> . ternaria
    (55) estatuto -> . bloque
    (56) estatuto -> . funcion
    (57) estatuto -> . clase
    (58) estatuto -> . dec
    (59) asignacion -> . variable AS exp SEMICOLON
    (77) llamada -> . ID OPAREN exp llamada1 CPAREN SEMICOLON
    (78) llamada -> . ID OPAREN CPAREN SEMICOLON
    (60) condicion -> . IF cond2 THEN bloque cond1 SEMICOLON
    (66) escritura -> . PRINT OPAREN exp e1 CPAREN SEMICOLON
    (69) leer -> . READ OPAREN exp e1 CPAREN SEMICOLON
    (17) ciclo_while -> . WHILE cond2 THEN bloque SEMICOLON
    (18) ciclo_for -> . FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
    (65) ternaria -> . exp QUESTION estatuto COLON estatuto SEMICOLON
    (44) bloque -> . OCURLY b1 CCURLY
    (3) funcion -> . FUNCTION func1 ID OPAREN param CPAREN bloque
    (11) clase -> . CLASS ID COLON clase_bloque SEMICOLON
    (21) dec -> . VAR tipo SEMICOLON dec1
    (72) variable -> . ID variable1 variable1 variable2
    (81) exp -> . texp exp1
    (84) texp -> . gexp texp1
    (87) gexp -> . mexp gexp1
    (93) mexp -> . termino mexp1
    (97) termino -> . factor term1
    (101) factor -> . OPAREN exp CPAREN
    (102) factor -> . varcst
    (103) factor -> . variable
    (104) factor -> . llamada
    (105) varcst -> . CSTINT
    (106) varcst -> . CSTFLT
    (107) varcst -> . CSTSTRING
    (108) varcst -> . boolean
    (70) boolean -> . TRUE
    (71) boolean -> . FALSE

    ID              shift and go to state 27
    IF              shift and go to state 29
    PRINT           shift and go to state 30
    READ            shift and go to state 31
    WHILE           shift and go to state 32
    FOR             shift and go to state 33
    OCURLY          shift and go to state 7
    FUNCTION        shift and go to state 34
    CLASS           shift and go to state 35
    VAR             shift and go to state 8
    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTSTRING       shift and go to state 44
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47

    exp                            shift and go to state 26
    estatuto                       shift and go to state 175
    asignacion                     shift and go to state 13
    llamada                        shift and go to state 14
    condicion                      shift and go to state 15
    escritura                      shift and go to state 16
    leer                           shift and go to state 17
    ciclo_while                    shift and go to state 18
    ciclo_for                      shift and go to state 19
    ternaria                       shift and go to state 20
    bloque                         shift and go to state 21
    funcion                        shift and go to state 22
    clase                          shift and go to state 23
    dec                            shift and go to state 24
    variable                       shift and go to state 25
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    boolean                        shift and go to state 45

state 147

    (77) llamada -> ID OPAREN exp llamada1 . CPAREN SEMICOLON

    CPAREN          shift and go to state 176


state 148

    (79) llamada1 -> COMMA . exp llamada1
    (81) exp -> . texp exp1
    (84) texp -> . gexp texp1
    (87) gexp -> . mexp gexp1
    (93) mexp -> . termino mexp1
    (97) termino -> . factor term1
    (101) factor -> . OPAREN exp CPAREN
    (102) factor -> . varcst
    (103) factor -> . variable
    (104) factor -> . llamada
    (105) varcst -> . CSTINT
    (106) varcst -> . CSTFLT
    (107) varcst -> . CSTSTRING
    (108) varcst -> . boolean
    (72) variable -> . ID variable1 variable1 variable2
    (77) llamada -> . ID OPAREN exp llamada1 CPAREN SEMICOLON
    (78) llamada -> . ID OPAREN CPAREN SEMICOLON
    (70) boolean -> . TRUE
    (71) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTSTRING       shift and go to state 44
    ID              shift and go to state 74
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47

    exp                            shift and go to state 177
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 45

state 149

    (80) llamada1 -> empty .

    CPAREN          reduce using rule 80 (llamada1 -> empty .)


state 150

    (78) llamada -> ID OPAREN CPAREN SEMICOLON .

    ID              reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    IF              reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    PRINT           reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    READ            reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    WHILE           reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    FOR             reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    OCURLY          reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    FUNCTION        reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    CLASS           reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    VAR             reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    OPAREN          reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    CSTINT          reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    CSTFLT          reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    CSTSTRING       reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    TRUE            reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    FALSE           reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    CCURLY          reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    MULT            reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    DIV             reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    PLUS            reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    MINUS           reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    LT              reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    GT              reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    EQ              reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    NE              reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    AND             reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    OR              reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    QUESTION        reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    CPAREN          reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    COLON           reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    COMMA           reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)
    CBRACKET        reduce using rule 78 (llamada -> ID OPAREN CPAREN SEMICOLON .)


state 151

    (72) variable -> ID variable1 variable1 variable2 .

    AS              reduce using rule 72 (variable -> ID variable1 variable1 variable2 .)
    MULT            reduce using rule 72 (variable -> ID variable1 variable1 variable2 .)
    DIV             reduce using rule 72 (variable -> ID variable1 variable1 variable2 .)
    PLUS            reduce using rule 72 (variable -> ID variable1 variable1 variable2 .)
    MINUS           reduce using rule 72 (variable -> ID variable1 variable1 variable2 .)
    LT              reduce using rule 72 (variable -> ID variable1 variable1 variable2 .)
    GT              reduce using rule 72 (variable -> ID variable1 variable1 variable2 .)
    EQ              reduce using rule 72 (variable -> ID variable1 variable1 variable2 .)
    NE              reduce using rule 72 (variable -> ID variable1 variable1 variable2 .)
    AND             reduce using rule 72 (variable -> ID variable1 variable1 variable2 .)
    OR              reduce using rule 72 (variable -> ID variable1 variable1 variable2 .)
    QUESTION        reduce using rule 72 (variable -> ID variable1 variable1 variable2 .)
    CPAREN          reduce using rule 72 (variable -> ID variable1 variable1 variable2 .)
    SEMICOLON       reduce using rule 72 (variable -> ID variable1 variable1 variable2 .)
    COMMA           reduce using rule 72 (variable -> ID variable1 variable1 variable2 .)
    CBRACKET        reduce using rule 72 (variable -> ID variable1 variable1 variable2 .)
    FROM            reduce using rule 72 (variable -> ID variable1 variable1 variable2 .)
    TO              reduce using rule 72 (variable -> ID variable1 variable1 variable2 .)
    BY              reduce using rule 72 (variable -> ID variable1 variable1 variable2 .)


state 152

    (75) variable2 -> PERIOD . ID variable1 variable1 variable2

    ID              shift and go to state 178


state 153

    (76) variable2 -> empty .

    AS              reduce using rule 76 (variable2 -> empty .)
    MULT            reduce using rule 76 (variable2 -> empty .)
    DIV             reduce using rule 76 (variable2 -> empty .)
    PLUS            reduce using rule 76 (variable2 -> empty .)
    MINUS           reduce using rule 76 (variable2 -> empty .)
    LT              reduce using rule 76 (variable2 -> empty .)
    GT              reduce using rule 76 (variable2 -> empty .)
    EQ              reduce using rule 76 (variable2 -> empty .)
    NE              reduce using rule 76 (variable2 -> empty .)
    AND             reduce using rule 76 (variable2 -> empty .)
    OR              reduce using rule 76 (variable2 -> empty .)
    QUESTION        reduce using rule 76 (variable2 -> empty .)
    CPAREN          reduce using rule 76 (variable2 -> empty .)
    SEMICOLON       reduce using rule 76 (variable2 -> empty .)
    COMMA           reduce using rule 76 (variable2 -> empty .)
    CBRACKET        reduce using rule 76 (variable2 -> empty .)
    FROM            reduce using rule 76 (variable2 -> empty .)
    TO              reduce using rule 76 (variable2 -> empty .)
    BY              reduce using rule 76 (variable2 -> empty .)


state 154

    (73) variable1 -> OBRACKET exp CBRACKET .

    OBRACKET        reduce using rule 73 (variable1 -> OBRACKET exp CBRACKET .)
    PERIOD          reduce using rule 73 (variable1 -> OBRACKET exp CBRACKET .)
    AS              reduce using rule 73 (variable1 -> OBRACKET exp CBRACKET .)
    MULT            reduce using rule 73 (variable1 -> OBRACKET exp CBRACKET .)
    DIV             reduce using rule 73 (variable1 -> OBRACKET exp CBRACKET .)
    PLUS            reduce using rule 73 (variable1 -> OBRACKET exp CBRACKET .)
    MINUS           reduce using rule 73 (variable1 -> OBRACKET exp CBRACKET .)
    LT              reduce using rule 73 (variable1 -> OBRACKET exp CBRACKET .)
    GT              reduce using rule 73 (variable1 -> OBRACKET exp CBRACKET .)
    EQ              reduce using rule 73 (variable1 -> OBRACKET exp CBRACKET .)
    NE              reduce using rule 73 (variable1 -> OBRACKET exp CBRACKET .)
    AND             reduce using rule 73 (variable1 -> OBRACKET exp CBRACKET .)
    OR              reduce using rule 73 (variable1 -> OBRACKET exp CBRACKET .)
    QUESTION        reduce using rule 73 (variable1 -> OBRACKET exp CBRACKET .)
    CPAREN          reduce using rule 73 (variable1 -> OBRACKET exp CBRACKET .)
    SEMICOLON       reduce using rule 73 (variable1 -> OBRACKET exp CBRACKET .)
    COMMA           reduce using rule 73 (variable1 -> OBRACKET exp CBRACKET .)
    CBRACKET        reduce using rule 73 (variable1 -> OBRACKET exp CBRACKET .)
    FROM            reduce using rule 73 (variable1 -> OBRACKET exp CBRACKET .)
    TO              reduce using rule 73 (variable1 -> OBRACKET exp CBRACKET .)
    BY              reduce using rule 73 (variable1 -> OBRACKET exp CBRACKET .)


state 155

    (60) condicion -> IF cond2 THEN bloque . cond1 SEMICOLON
    (61) cond1 -> . ELSE bloque
    (62) cond1 -> . ELSE IF cond2 THEN bloque
    (63) cond1 -> . empty
    (109) empty -> .

    ELSE            shift and go to state 180
    SEMICOLON       reduce using rule 109 (empty -> .)

    cond1                          shift and go to state 179
    empty                          shift and go to state 181

state 156

    (64) cond2 -> OPAREN exp CPAREN .

    THEN            reduce using rule 64 (cond2 -> OPAREN exp CPAREN .)


state 157

    (66) escritura -> PRINT OPAREN exp e1 . CPAREN SEMICOLON

    CPAREN          shift and go to state 182


state 158

    (67) e1 -> COMMA . exp e1
    (81) exp -> . texp exp1
    (84) texp -> . gexp texp1
    (87) gexp -> . mexp gexp1
    (93) mexp -> . termino mexp1
    (97) termino -> . factor term1
    (101) factor -> . OPAREN exp CPAREN
    (102) factor -> . varcst
    (103) factor -> . variable
    (104) factor -> . llamada
    (105) varcst -> . CSTINT
    (106) varcst -> . CSTFLT
    (107) varcst -> . CSTSTRING
    (108) varcst -> . boolean
    (72) variable -> . ID variable1 variable1 variable2
    (77) llamada -> . ID OPAREN exp llamada1 CPAREN SEMICOLON
    (78) llamada -> . ID OPAREN CPAREN SEMICOLON
    (70) boolean -> . TRUE
    (71) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTSTRING       shift and go to state 44
    ID              shift and go to state 74
    TRUE            shift and go to state 46
    FALSE           shift and go to state 47

    exp                            shift and go to state 183
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 72
    llamada                        shift and go to state 73
    boolean                        shift and go to state 45

state 159

    (68) e1 -> empty .

    CPAREN          reduce using rule 68 (e1 -> empty .)


state 160

    (69) leer -> READ OPAREN exp e1 . CPAREN SEMICOLON

    CPAREN          shift and go to state 184


state 161

    (17) ciclo_while -> WHILE cond2 THEN bloque . SEMICOLON

    SEMICOLON       shift and go to state 185


state 162

    (18) ciclo_for -> FOR OPAREN variable FROM . ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
    (19) ciclo_for1 -> . CSTINT
    (20) ciclo_for1 -> . variable
    (72) variable -> . ID variable1 variable1 variable2

    CSTINT          shift and go to state 188
    ID              shift and go to state 122

    variable                       shift and go to state 186
    ciclo_for1                     shift and go to state 187

state 163

    (3) funcion -> FUNCTION func1 ID OPAREN . param CPAREN bloque
    (6) param -> . simple ID variable2 param1
    (7) param -> . multiple ID variable1 variable1 variable2 param1
    (8) param -> . empty
    (33) simple -> . INT
    (34) simple -> . FLOAT
    (35) simple -> . BOOL
    (36) simple -> . STRING
    (37) multiple -> . INTS
    (38) multiple -> . FLOATS
    (39) multiple -> . BOOLS
    (40) multiple -> . STRINGS
    (109) empty -> .

    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    BOOL            shift and go to state 57
    STRING          shift and go to state 58
    INTS            shift and go to state 59
    FLOATS          shift and go to state 60
    BOOLS           shift and go to state 61
    STRINGS         shift and go to state 62
    CPAREN          reduce using rule 109 (empty -> .)

    param                          shift and go to state 189
    simple                         shift and go to state 190
    multiple                       shift and go to state 191
    empty                          shift and go to state 192

state 164

    (11) clase -> CLASS ID COLON clase_bloque . SEMICOLON

    SEMICOLON       shift and go to state 193


state 165

    (12) clase_bloque -> OCURLY . ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque CCURLY

    ATTRIBUTES      shift and go to state 194


state 166

    (82) exp1 -> OR texp exp1 .

    QUESTION        reduce using rule 82 (exp1 -> OR texp exp1 .)
    CPAREN          reduce using rule 82 (exp1 -> OR texp exp1 .)
    SEMICOLON       reduce using rule 82 (exp1 -> OR texp exp1 .)
    COMMA           reduce using rule 82 (exp1 -> OR texp exp1 .)
    CBRACKET        reduce using rule 82 (exp1 -> OR texp exp1 .)


state 167

    (85) texp1 -> AND gexp texp1 .

    OR              reduce using rule 85 (texp1 -> AND gexp texp1 .)
    QUESTION        reduce using rule 85 (texp1 -> AND gexp texp1 .)
    CPAREN          reduce using rule 85 (texp1 -> AND gexp texp1 .)
    SEMICOLON       reduce using rule 85 (texp1 -> AND gexp texp1 .)
    COMMA           reduce using rule 85 (texp1 -> AND gexp texp1 .)
    CBRACKET        reduce using rule 85 (texp1 -> AND gexp texp1 .)


state 168

    (94) mexp1 -> PLUS termino mexp1 .

    LT              reduce using rule 94 (mexp1 -> PLUS termino mexp1 .)
    GT              reduce using rule 94 (mexp1 -> PLUS termino mexp1 .)
    EQ              reduce using rule 94 (mexp1 -> PLUS termino mexp1 .)
    NE              reduce using rule 94 (mexp1 -> PLUS termino mexp1 .)
    AND             reduce using rule 94 (mexp1 -> PLUS termino mexp1 .)
    OR              reduce using rule 94 (mexp1 -> PLUS termino mexp1 .)
    QUESTION        reduce using rule 94 (mexp1 -> PLUS termino mexp1 .)
    CPAREN          reduce using rule 94 (mexp1 -> PLUS termino mexp1 .)
    SEMICOLON       reduce using rule 94 (mexp1 -> PLUS termino mexp1 .)
    COMMA           reduce using rule 94 (mexp1 -> PLUS termino mexp1 .)
    CBRACKET        reduce using rule 94 (mexp1 -> PLUS termino mexp1 .)


state 169

    (95) mexp1 -> MINUS termino mexp1 .

    LT              reduce using rule 95 (mexp1 -> MINUS termino mexp1 .)
    GT              reduce using rule 95 (mexp1 -> MINUS termino mexp1 .)
    EQ              reduce using rule 95 (mexp1 -> MINUS termino mexp1 .)
    NE              reduce using rule 95 (mexp1 -> MINUS termino mexp1 .)
    AND             reduce using rule 95 (mexp1 -> MINUS termino mexp1 .)
    OR              reduce using rule 95 (mexp1 -> MINUS termino mexp1 .)
    QUESTION        reduce using rule 95 (mexp1 -> MINUS termino mexp1 .)
    CPAREN          reduce using rule 95 (mexp1 -> MINUS termino mexp1 .)
    SEMICOLON       reduce using rule 95 (mexp1 -> MINUS termino mexp1 .)
    COMMA           reduce using rule 95 (mexp1 -> MINUS termino mexp1 .)
    CBRACKET        reduce using rule 95 (mexp1 -> MINUS termino mexp1 .)


state 170

    (98) term1 -> MULT factor term1 .

    PLUS            reduce using rule 98 (term1 -> MULT factor term1 .)
    MINUS           reduce using rule 98 (term1 -> MULT factor term1 .)
    LT              reduce using rule 98 (term1 -> MULT factor term1 .)
    GT              reduce using rule 98 (term1 -> MULT factor term1 .)
    EQ              reduce using rule 98 (term1 -> MULT factor term1 .)
    NE              reduce using rule 98 (term1 -> MULT factor term1 .)
    AND             reduce using rule 98 (term1 -> MULT factor term1 .)
    OR              reduce using rule 98 (term1 -> MULT factor term1 .)
    QUESTION        reduce using rule 98 (term1 -> MULT factor term1 .)
    CPAREN          reduce using rule 98 (term1 -> MULT factor term1 .)
    SEMICOLON       reduce using rule 98 (term1 -> MULT factor term1 .)
    COMMA           reduce using rule 98 (term1 -> MULT factor term1 .)
    CBRACKET        reduce using rule 98 (term1 -> MULT factor term1 .)


state 171

    (99) term1 -> DIV factor term1 .

    PLUS            reduce using rule 99 (term1 -> DIV factor term1 .)
    MINUS           reduce using rule 99 (term1 -> DIV factor term1 .)
    LT              reduce using rule 99 (term1 -> DIV factor term1 .)
    GT              reduce using rule 99 (term1 -> DIV factor term1 .)
    EQ              reduce using rule 99 (term1 -> DIV factor term1 .)
    NE              reduce using rule 99 (term1 -> DIV factor term1 .)
    AND             reduce using rule 99 (term1 -> DIV factor term1 .)
    OR              reduce using rule 99 (term1 -> DIV factor term1 .)
    QUESTION        reduce using rule 99 (term1 -> DIV factor term1 .)
    CPAREN          reduce using rule 99 (term1 -> DIV factor term1 .)
    SEMICOLON       reduce using rule 99 (term1 -> DIV factor term1 .)
    COMMA           reduce using rule 99 (term1 -> DIV factor term1 .)
    CBRACKET        reduce using rule 99 (term1 -> DIV factor term1 .)


state 172

    (27) tipo1 -> COMMA ID . tipo1
    (27) tipo1 -> . COMMA ID tipo1
    (28) tipo1 -> . empty
    (109) empty -> .

    COMMA           shift and go to state 139
    SEMICOLON       reduce using rule 109 (empty -> .)

    tipo1                          shift and go to state 195
    empty                          shift and go to state 140

state 173

    (26) tipo -> multiple ID tipo3 tipo3 . tipo2
    (29) tipo2 -> . COMMA ID tipo3 tipo3
    (30) tipo2 -> . empty
    (109) empty -> .

    COMMA           shift and go to state 197
    SEMICOLON       reduce using rule 109 (empty -> .)

    tipo2                          shift and go to state 196
    empty                          shift and go to state 198

state 174

    (31) tipo3 -> OBRACKET CSTINT . CBRACKET

    CBRACKET        shift and go to state 199


state 175

    (65) ternaria -> exp QUESTION estatuto COLON estatuto . SEMICOLON

    SEMICOLON       shift and go to state 200


state 176

    (77) llamada -> ID OPAREN exp llamada1 CPAREN . SEMICOLON

    SEMICOLON       shift and go to state 201


state 177

    (79) llamada1 -> COMMA exp . llamada1
    (79) llamada1 -> . COMMA exp llamada1
    (80) llamada1 -> . empty
    (109) empty -> .

    COMMA           shift and go to state 148
    CPAREN          reduce using rule 109 (empty -> .)

    llamada1                       shift and go to state 202
    empty                          shift and go to state 149

state 178

    (75) variable2 -> PERIOD ID . variable1 variable1 variable2
    (73) variable1 -> . OBRACKET exp CBRACKET
    (74) variable1 -> . empty
    (109) empty -> .

  ! shift/reduce conflict for OBRACKET resolved as shift
    OBRACKET        shift and go to state 69
    PERIOD          reduce using rule 109 (empty -> .)
    AS              reduce using rule 109 (empty -> .)
    MULT            reduce using rule 109 (empty -> .)
    DIV             reduce using rule 109 (empty -> .)
    PLUS            reduce using rule 109 (empty -> .)
    MINUS           reduce using rule 109 (empty -> .)
    LT              reduce using rule 109 (empty -> .)
    GT              reduce using rule 109 (empty -> .)
    EQ              reduce using rule 109 (empty -> .)
    NE              reduce using rule 109 (empty -> .)
    AND             reduce using rule 109 (empty -> .)
    OR              reduce using rule 109 (empty -> .)
    QUESTION        reduce using rule 109 (empty -> .)
    CPAREN          reduce using rule 109 (empty -> .)
    SEMICOLON       reduce using rule 109 (empty -> .)
    COMMA           reduce using rule 109 (empty -> .)
    CBRACKET        reduce using rule 109 (empty -> .)
    FROM            reduce using rule 109 (empty -> .)
    TO              reduce using rule 109 (empty -> .)
    BY              reduce using rule 109 (empty -> .)

  ! OBRACKET        [ reduce using rule 109 (empty -> .) ]

    variable1                      shift and go to state 203
    empty                          shift and go to state 70

state 179

    (60) condicion -> IF cond2 THEN bloque cond1 . SEMICOLON

    SEMICOLON       shift and go to state 204


state 180

    (61) cond1 -> ELSE . bloque
    (62) cond1 -> ELSE . IF cond2 THEN bloque
    (44) bloque -> . OCURLY b1 CCURLY

    IF              shift and go to state 206
    OCURLY          shift and go to state 7

    bloque                         shift and go to state 205

state 181

    (63) cond1 -> empty .

    SEMICOLON       reduce using rule 63 (cond1 -> empty .)


state 182

    (66) escritura -> PRINT OPAREN exp e1 CPAREN . SEMICOLON

    SEMICOLON       shift and go to state 207


state 183

    (67) e1 -> COMMA exp . e1
    (67) e1 -> . COMMA exp e1
    (68) e1 -> . empty
    (109) empty -> .

    COMMA           shift and go to state 158
    CPAREN          reduce using rule 109 (empty -> .)

    e1                             shift and go to state 208
    empty                          shift and go to state 159

state 184

    (69) leer -> READ OPAREN exp e1 CPAREN . SEMICOLON

    SEMICOLON       shift and go to state 209


state 185

    (17) ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .

    ID              reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    IF              reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    PRINT           reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    READ            reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    WHILE           reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    FOR             reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    OCURLY          reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    FUNCTION        reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CLASS           reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    VAR             reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    OPAREN          reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CSTINT          reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CSTFLT          reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CSTSTRING       reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    TRUE            reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    FALSE           reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CCURLY          reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    COLON           reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    SEMICOLON       reduce using rule 17 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)


state 186

    (20) ciclo_for1 -> variable .

    TO              reduce using rule 20 (ciclo_for1 -> variable .)
    BY              reduce using rule 20 (ciclo_for1 -> variable .)
    CPAREN          reduce using rule 20 (ciclo_for1 -> variable .)


state 187

    (18) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 . TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON

    TO              shift and go to state 210


state 188

    (19) ciclo_for1 -> CSTINT .

    TO              reduce using rule 19 (ciclo_for1 -> CSTINT .)
    BY              reduce using rule 19 (ciclo_for1 -> CSTINT .)
    CPAREN          reduce using rule 19 (ciclo_for1 -> CSTINT .)


state 189

    (3) funcion -> FUNCTION func1 ID OPAREN param . CPAREN bloque

    CPAREN          shift and go to state 211


state 190

    (6) param -> simple . ID variable2 param1

    ID              shift and go to state 212


state 191

    (7) param -> multiple . ID variable1 variable1 variable2 param1

    ID              shift and go to state 213


state 192

    (8) param -> empty .

    CPAREN          reduce using rule 8 (param -> empty .)


state 193

    (11) clase -> CLASS ID COLON clase_bloque SEMICOLON .

    ID              reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    IF              reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    PRINT           reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    READ            reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    WHILE           reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    FOR             reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    OCURLY          reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    FUNCTION        reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    CLASS           reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    VAR             reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    OPAREN          reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    CSTINT          reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    CSTFLT          reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    CSTSTRING       reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    TRUE            reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    FALSE           reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    CCURLY          reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    COLON           reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    SEMICOLON       reduce using rule 11 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)


state 194

    (12) clase_bloque -> OCURLY ATTRIBUTES . COLON clase_bloque1 METHODS COLON clase_metodos_bloque CCURLY

    COLON           shift and go to state 214


state 195

    (27) tipo1 -> COMMA ID tipo1 .

    SEMICOLON       reduce using rule 27 (tipo1 -> COMMA ID tipo1 .)


state 196

    (26) tipo -> multiple ID tipo3 tipo3 tipo2 .

    SEMICOLON       reduce using rule 26 (tipo -> multiple ID tipo3 tipo3 tipo2 .)


state 197

    (29) tipo2 -> COMMA . ID tipo3 tipo3

    ID              shift and go to state 215


state 198

    (30) tipo2 -> empty .

    SEMICOLON       reduce using rule 30 (tipo2 -> empty .)


state 199

    (31) tipo3 -> OBRACKET CSTINT CBRACKET .

    OBRACKET        reduce using rule 31 (tipo3 -> OBRACKET CSTINT CBRACKET .)
    COMMA           reduce using rule 31 (tipo3 -> OBRACKET CSTINT CBRACKET .)
    SEMICOLON       reduce using rule 31 (tipo3 -> OBRACKET CSTINT CBRACKET .)


state 200

    (65) ternaria -> exp QUESTION estatuto COLON estatuto SEMICOLON .

    ID              reduce using rule 65 (ternaria -> exp QUESTION estatuto COLON estatuto SEMICOLON .)
    IF              reduce using rule 65 (ternaria -> exp QUESTION estatuto COLON estatuto SEMICOLON .)
    PRINT           reduce using rule 65 (ternaria -> exp QUESTION estatuto COLON estatuto SEMICOLON .)
    READ            reduce using rule 65 (ternaria -> exp QUESTION estatuto COLON estatuto SEMICOLON .)
    WHILE           reduce using rule 65 (ternaria -> exp QUESTION estatuto COLON estatuto SEMICOLON .)
    FOR             reduce using rule 65 (ternaria -> exp QUESTION estatuto COLON estatuto SEMICOLON .)
    OCURLY          reduce using rule 65 (ternaria -> exp QUESTION estatuto COLON estatuto SEMICOLON .)
    FUNCTION        reduce using rule 65 (ternaria -> exp QUESTION estatuto COLON estatuto SEMICOLON .)
    CLASS           reduce using rule 65 (ternaria -> exp QUESTION estatuto COLON estatuto SEMICOLON .)
    VAR             reduce using rule 65 (ternaria -> exp QUESTION estatuto COLON estatuto SEMICOLON .)
    OPAREN          reduce using rule 65 (ternaria -> exp QUESTION estatuto COLON estatuto SEMICOLON .)
    CSTINT          reduce using rule 65 (ternaria -> exp QUESTION estatuto COLON estatuto SEMICOLON .)
    CSTFLT          reduce using rule 65 (ternaria -> exp QUESTION estatuto COLON estatuto SEMICOLON .)
    CSTSTRING       reduce using rule 65 (ternaria -> exp QUESTION estatuto COLON estatuto SEMICOLON .)
    TRUE            reduce using rule 65 (ternaria -> exp QUESTION estatuto COLON estatuto SEMICOLON .)
    FALSE           reduce using rule 65 (ternaria -> exp QUESTION estatuto COLON estatuto SEMICOLON .)
    CCURLY          reduce using rule 65 (ternaria -> exp QUESTION estatuto COLON estatuto SEMICOLON .)
    COLON           reduce using rule 65 (ternaria -> exp QUESTION estatuto COLON estatuto SEMICOLON .)
    SEMICOLON       reduce using rule 65 (ternaria -> exp QUESTION estatuto COLON estatuto SEMICOLON .)


state 201

    (77) llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .

    ID              reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    IF              reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    PRINT           reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    READ            reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    WHILE           reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    FOR             reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    OCURLY          reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    FUNCTION        reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    CLASS           reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    VAR             reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    OPAREN          reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    CSTINT          reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    CSTFLT          reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    CSTSTRING       reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    TRUE            reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    FALSE           reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    CCURLY          reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    MULT            reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    DIV             reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    PLUS            reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    MINUS           reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    LT              reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    GT              reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    EQ              reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    NE              reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    AND             reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    OR              reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    QUESTION        reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    CPAREN          reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    COLON           reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    COMMA           reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)
    CBRACKET        reduce using rule 77 (llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON .)


state 202

    (79) llamada1 -> COMMA exp llamada1 .

    CPAREN          reduce using rule 79 (llamada1 -> COMMA exp llamada1 .)


state 203

    (75) variable2 -> PERIOD ID variable1 . variable1 variable2
    (73) variable1 -> . OBRACKET exp CBRACKET
    (74) variable1 -> . empty
    (109) empty -> .

    OBRACKET        shift and go to state 69
    PERIOD          reduce using rule 109 (empty -> .)
    AS              reduce using rule 109 (empty -> .)
    MULT            reduce using rule 109 (empty -> .)
    DIV             reduce using rule 109 (empty -> .)
    PLUS            reduce using rule 109 (empty -> .)
    MINUS           reduce using rule 109 (empty -> .)
    LT              reduce using rule 109 (empty -> .)
    GT              reduce using rule 109 (empty -> .)
    EQ              reduce using rule 109 (empty -> .)
    NE              reduce using rule 109 (empty -> .)
    AND             reduce using rule 109 (empty -> .)
    OR              reduce using rule 109 (empty -> .)
    QUESTION        reduce using rule 109 (empty -> .)
    CPAREN          reduce using rule 109 (empty -> .)
    SEMICOLON       reduce using rule 109 (empty -> .)
    COMMA           reduce using rule 109 (empty -> .)
    CBRACKET        reduce using rule 109 (empty -> .)
    FROM            reduce using rule 109 (empty -> .)
    TO              reduce using rule 109 (empty -> .)
    BY              reduce using rule 109 (empty -> .)

    variable1                      shift and go to state 216
    empty                          shift and go to state 70

state 204

    (60) condicion -> IF cond2 THEN bloque cond1 SEMICOLON .

    ID              reduce using rule 60 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    IF              reduce using rule 60 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    PRINT           reduce using rule 60 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    READ            reduce using rule 60 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    WHILE           reduce using rule 60 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    FOR             reduce using rule 60 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    OCURLY          reduce using rule 60 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    FUNCTION        reduce using rule 60 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CLASS           reduce using rule 60 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    VAR             reduce using rule 60 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    OPAREN          reduce using rule 60 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CSTINT          reduce using rule 60 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CSTFLT          reduce using rule 60 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CSTSTRING       reduce using rule 60 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    TRUE            reduce using rule 60 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    FALSE           reduce using rule 60 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CCURLY          reduce using rule 60 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    COLON           reduce using rule 60 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    SEMICOLON       reduce using rule 60 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)


state 205

    (61) cond1 -> ELSE bloque .

    SEMICOLON       reduce using rule 61 (cond1 -> ELSE bloque .)


state 206

    (62) cond1 -> ELSE IF . cond2 THEN bloque
    (64) cond2 -> . OPAREN exp CPAREN

    OPAREN          shift and go to state 76

    cond2                          shift and go to state 217

state 207

    (66) escritura -> PRINT OPAREN exp e1 CPAREN SEMICOLON .

    ID              reduce using rule 66 (escritura -> PRINT OPAREN exp e1 CPAREN SEMICOLON .)
    IF              reduce using rule 66 (escritura -> PRINT OPAREN exp e1 CPAREN SEMICOLON .)
    PRINT           reduce using rule 66 (escritura -> PRINT OPAREN exp e1 CPAREN SEMICOLON .)
    READ            reduce using rule 66 (escritura -> PRINT OPAREN exp e1 CPAREN SEMICOLON .)
    WHILE           reduce using rule 66 (escritura -> PRINT OPAREN exp e1 CPAREN SEMICOLON .)
    FOR             reduce using rule 66 (escritura -> PRINT OPAREN exp e1 CPAREN SEMICOLON .)
    OCURLY          reduce using rule 66 (escritura -> PRINT OPAREN exp e1 CPAREN SEMICOLON .)
    FUNCTION        reduce using rule 66 (escritura -> PRINT OPAREN exp e1 CPAREN SEMICOLON .)
    CLASS           reduce using rule 66 (escritura -> PRINT OPAREN exp e1 CPAREN SEMICOLON .)
    VAR             reduce using rule 66 (escritura -> PRINT OPAREN exp e1 CPAREN SEMICOLON .)
    OPAREN          reduce using rule 66 (escritura -> PRINT OPAREN exp e1 CPAREN SEMICOLON .)
    CSTINT          reduce using rule 66 (escritura -> PRINT OPAREN exp e1 CPAREN SEMICOLON .)
    CSTFLT          reduce using rule 66 (escritura -> PRINT OPAREN exp e1 CPAREN SEMICOLON .)
    CSTSTRING       reduce using rule 66 (escritura -> PRINT OPAREN exp e1 CPAREN SEMICOLON .)
    TRUE            reduce using rule 66 (escritura -> PRINT OPAREN exp e1 CPAREN SEMICOLON .)
    FALSE           reduce using rule 66 (escritura -> PRINT OPAREN exp e1 CPAREN SEMICOLON .)
    CCURLY          reduce using rule 66 (escritura -> PRINT OPAREN exp e1 CPAREN SEMICOLON .)
    COLON           reduce using rule 66 (escritura -> PRINT OPAREN exp e1 CPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 66 (escritura -> PRINT OPAREN exp e1 CPAREN SEMICOLON .)


state 208

    (67) e1 -> COMMA exp e1 .

    CPAREN          reduce using rule 67 (e1 -> COMMA exp e1 .)


state 209

    (69) leer -> READ OPAREN exp e1 CPAREN SEMICOLON .

    ID              reduce using rule 69 (leer -> READ OPAREN exp e1 CPAREN SEMICOLON .)
    IF              reduce using rule 69 (leer -> READ OPAREN exp e1 CPAREN SEMICOLON .)
    PRINT           reduce using rule 69 (leer -> READ OPAREN exp e1 CPAREN SEMICOLON .)
    READ            reduce using rule 69 (leer -> READ OPAREN exp e1 CPAREN SEMICOLON .)
    WHILE           reduce using rule 69 (leer -> READ OPAREN exp e1 CPAREN SEMICOLON .)
    FOR             reduce using rule 69 (leer -> READ OPAREN exp e1 CPAREN SEMICOLON .)
    OCURLY          reduce using rule 69 (leer -> READ OPAREN exp e1 CPAREN SEMICOLON .)
    FUNCTION        reduce using rule 69 (leer -> READ OPAREN exp e1 CPAREN SEMICOLON .)
    CLASS           reduce using rule 69 (leer -> READ OPAREN exp e1 CPAREN SEMICOLON .)
    VAR             reduce using rule 69 (leer -> READ OPAREN exp e1 CPAREN SEMICOLON .)
    OPAREN          reduce using rule 69 (leer -> READ OPAREN exp e1 CPAREN SEMICOLON .)
    CSTINT          reduce using rule 69 (leer -> READ OPAREN exp e1 CPAREN SEMICOLON .)
    CSTFLT          reduce using rule 69 (leer -> READ OPAREN exp e1 CPAREN SEMICOLON .)
    CSTSTRING       reduce using rule 69 (leer -> READ OPAREN exp e1 CPAREN SEMICOLON .)
    TRUE            reduce using rule 69 (leer -> READ OPAREN exp e1 CPAREN SEMICOLON .)
    FALSE           reduce using rule 69 (leer -> READ OPAREN exp e1 CPAREN SEMICOLON .)
    CCURLY          reduce using rule 69 (leer -> READ OPAREN exp e1 CPAREN SEMICOLON .)
    COLON           reduce using rule 69 (leer -> READ OPAREN exp e1 CPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 69 (leer -> READ OPAREN exp e1 CPAREN SEMICOLON .)


state 210

    (18) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO . ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
    (19) ciclo_for1 -> . CSTINT
    (20) ciclo_for1 -> . variable
    (72) variable -> . ID variable1 variable1 variable2

    CSTINT          shift and go to state 188
    ID              shift and go to state 122

    variable                       shift and go to state 186
    ciclo_for1                     shift and go to state 218

state 211

    (3) funcion -> FUNCTION func1 ID OPAREN param CPAREN . bloque
    (44) bloque -> . OCURLY b1 CCURLY

    OCURLY          shift and go to state 7

    bloque                         shift and go to state 219

state 212

    (6) param -> simple ID . variable2 param1
    (75) variable2 -> . PERIOD ID variable1 variable1 variable2
    (76) variable2 -> . empty
    (109) empty -> .

    PERIOD          shift and go to state 152
    COMMA           reduce using rule 109 (empty -> .)
    CPAREN          reduce using rule 109 (empty -> .)

    variable2                      shift and go to state 220
    empty                          shift and go to state 153

state 213

    (7) param -> multiple ID . variable1 variable1 variable2 param1
    (73) variable1 -> . OBRACKET exp CBRACKET
    (74) variable1 -> . empty
    (109) empty -> .

  ! shift/reduce conflict for OBRACKET resolved as shift
    OBRACKET        shift and go to state 69
    PERIOD          reduce using rule 109 (empty -> .)
    COMMA           reduce using rule 109 (empty -> .)
    CPAREN          reduce using rule 109 (empty -> .)

  ! OBRACKET        [ reduce using rule 109 (empty -> .) ]

    variable1                      shift and go to state 221
    empty                          shift and go to state 70

state 214

    (12) clase_bloque -> OCURLY ATTRIBUTES COLON . clase_bloque1 METHODS COLON clase_metodos_bloque CCURLY
    (13) clase_bloque1 -> . dec
    (14) clase_bloque1 -> . empty
    (21) dec -> . VAR tipo SEMICOLON dec1
    (109) empty -> .

    VAR             shift and go to state 8
    METHODS         reduce using rule 109 (empty -> .)

    clase_bloque1                  shift and go to state 222
    dec                            shift and go to state 223
    empty                          shift and go to state 224

state 215

    (29) tipo2 -> COMMA ID . tipo3 tipo3
    (31) tipo3 -> . OBRACKET CSTINT CBRACKET
    (32) tipo3 -> . empty
    (109) empty -> .

  ! shift/reduce conflict for OBRACKET resolved as shift
    OBRACKET        shift and go to state 143
    SEMICOLON       reduce using rule 109 (empty -> .)

  ! OBRACKET        [ reduce using rule 109 (empty -> .) ]

    tipo3                          shift and go to state 225
    empty                          shift and go to state 144

state 216

    (75) variable2 -> PERIOD ID variable1 variable1 . variable2
    (75) variable2 -> . PERIOD ID variable1 variable1 variable2
    (76) variable2 -> . empty
    (109) empty -> .

    PERIOD          shift and go to state 152
    AS              reduce using rule 109 (empty -> .)
    MULT            reduce using rule 109 (empty -> .)
    DIV             reduce using rule 109 (empty -> .)
    PLUS            reduce using rule 109 (empty -> .)
    MINUS           reduce using rule 109 (empty -> .)
    LT              reduce using rule 109 (empty -> .)
    GT              reduce using rule 109 (empty -> .)
    EQ              reduce using rule 109 (empty -> .)
    NE              reduce using rule 109 (empty -> .)
    AND             reduce using rule 109 (empty -> .)
    OR              reduce using rule 109 (empty -> .)
    QUESTION        reduce using rule 109 (empty -> .)
    CPAREN          reduce using rule 109 (empty -> .)
    SEMICOLON       reduce using rule 109 (empty -> .)
    COMMA           reduce using rule 109 (empty -> .)
    CBRACKET        reduce using rule 109 (empty -> .)
    FROM            reduce using rule 109 (empty -> .)
    TO              reduce using rule 109 (empty -> .)
    BY              reduce using rule 109 (empty -> .)

    variable2                      shift and go to state 226
    empty                          shift and go to state 153

state 217

    (62) cond1 -> ELSE IF cond2 . THEN bloque

    THEN            shift and go to state 227


state 218

    (18) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 . BY ciclo_for1 CPAREN THEN bloque SEMICOLON

    BY              shift and go to state 228


state 219

    (3) funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .

    ID              reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    IF              reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    PRINT           reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    READ            reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    WHILE           reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    FOR             reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    OCURLY          reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    FUNCTION        reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    CLASS           reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    VAR             reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    OPAREN          reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    CSTINT          reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    CSTFLT          reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    CSTSTRING       reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    TRUE            reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    FALSE           reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    CCURLY          reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    COLON           reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    SEMICOLON       reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)


state 220

    (6) param -> simple ID variable2 . param1
    (9) param1 -> . COMMA param
    (10) param1 -> . empty
    (109) empty -> .

    COMMA           shift and go to state 230
    CPAREN          reduce using rule 109 (empty -> .)

    param1                         shift and go to state 229
    empty                          shift and go to state 231

state 221

    (7) param -> multiple ID variable1 . variable1 variable2 param1
    (73) variable1 -> . OBRACKET exp CBRACKET
    (74) variable1 -> . empty
    (109) empty -> .

    OBRACKET        shift and go to state 69
    PERIOD          reduce using rule 109 (empty -> .)
    COMMA           reduce using rule 109 (empty -> .)
    CPAREN          reduce using rule 109 (empty -> .)

    variable1                      shift and go to state 232
    empty                          shift and go to state 70

state 222

    (12) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 . METHODS COLON clase_metodos_bloque CCURLY

    METHODS         shift and go to state 233


state 223

    (13) clase_bloque1 -> dec .

    METHODS         reduce using rule 13 (clase_bloque1 -> dec .)


state 224

    (14) clase_bloque1 -> empty .

    METHODS         reduce using rule 14 (clase_bloque1 -> empty .)


state 225

    (29) tipo2 -> COMMA ID tipo3 . tipo3
    (31) tipo3 -> . OBRACKET CSTINT CBRACKET
    (32) tipo3 -> . empty
    (109) empty -> .

    OBRACKET        shift and go to state 143
    SEMICOLON       reduce using rule 109 (empty -> .)

    tipo3                          shift and go to state 234
    empty                          shift and go to state 144

state 226

    (75) variable2 -> PERIOD ID variable1 variable1 variable2 .

    AS              reduce using rule 75 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    MULT            reduce using rule 75 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    DIV             reduce using rule 75 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    PLUS            reduce using rule 75 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    MINUS           reduce using rule 75 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    LT              reduce using rule 75 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    GT              reduce using rule 75 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    EQ              reduce using rule 75 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    NE              reduce using rule 75 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    AND             reduce using rule 75 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    OR              reduce using rule 75 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    QUESTION        reduce using rule 75 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    CPAREN          reduce using rule 75 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    SEMICOLON       reduce using rule 75 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    COMMA           reduce using rule 75 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    CBRACKET        reduce using rule 75 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    FROM            reduce using rule 75 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    TO              reduce using rule 75 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    BY              reduce using rule 75 (variable2 -> PERIOD ID variable1 variable1 variable2 .)


state 227

    (62) cond1 -> ELSE IF cond2 THEN . bloque
    (44) bloque -> . OCURLY b1 CCURLY

    OCURLY          shift and go to state 7

    bloque                         shift and go to state 235

state 228

    (18) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY . ciclo_for1 CPAREN THEN bloque SEMICOLON
    (19) ciclo_for1 -> . CSTINT
    (20) ciclo_for1 -> . variable
    (72) variable -> . ID variable1 variable1 variable2

    CSTINT          shift and go to state 188
    ID              shift and go to state 122

    variable                       shift and go to state 186
    ciclo_for1                     shift and go to state 236

state 229

    (6) param -> simple ID variable2 param1 .

    CPAREN          reduce using rule 6 (param -> simple ID variable2 param1 .)


state 230

    (9) param1 -> COMMA . param
    (6) param -> . simple ID variable2 param1
    (7) param -> . multiple ID variable1 variable1 variable2 param1
    (8) param -> . empty
    (33) simple -> . INT
    (34) simple -> . FLOAT
    (35) simple -> . BOOL
    (36) simple -> . STRING
    (37) multiple -> . INTS
    (38) multiple -> . FLOATS
    (39) multiple -> . BOOLS
    (40) multiple -> . STRINGS
    (109) empty -> .

    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    BOOL            shift and go to state 57
    STRING          shift and go to state 58
    INTS            shift and go to state 59
    FLOATS          shift and go to state 60
    BOOLS           shift and go to state 61
    STRINGS         shift and go to state 62
    CPAREN          reduce using rule 109 (empty -> .)

    param                          shift and go to state 237
    simple                         shift and go to state 190
    multiple                       shift and go to state 191
    empty                          shift and go to state 192

state 231

    (10) param1 -> empty .

    CPAREN          reduce using rule 10 (param1 -> empty .)


state 232

    (7) param -> multiple ID variable1 variable1 . variable2 param1
    (75) variable2 -> . PERIOD ID variable1 variable1 variable2
    (76) variable2 -> . empty
    (109) empty -> .

    PERIOD          shift and go to state 152
    COMMA           reduce using rule 109 (empty -> .)
    CPAREN          reduce using rule 109 (empty -> .)

    variable2                      shift and go to state 238
    empty                          shift and go to state 153

state 233

    (12) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS . COLON clase_metodos_bloque CCURLY

    COLON           shift and go to state 239


state 234

    (29) tipo2 -> COMMA ID tipo3 tipo3 .

    SEMICOLON       reduce using rule 29 (tipo2 -> COMMA ID tipo3 tipo3 .)


state 235

    (62) cond1 -> ELSE IF cond2 THEN bloque .

    SEMICOLON       reduce using rule 62 (cond1 -> ELSE IF cond2 THEN bloque .)


state 236

    (18) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 . CPAREN THEN bloque SEMICOLON

    CPAREN          shift and go to state 240


state 237

    (9) param1 -> COMMA param .

    CPAREN          reduce using rule 9 (param1 -> COMMA param .)


state 238

    (7) param -> multiple ID variable1 variable1 variable2 . param1
    (9) param1 -> . COMMA param
    (10) param1 -> . empty
    (109) empty -> .

    COMMA           shift and go to state 230
    CPAREN          reduce using rule 109 (empty -> .)

    param1                         shift and go to state 241
    empty                          shift and go to state 231

state 239

    (12) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON . clase_metodos_bloque CCURLY
    (15) clase_metodos_bloque -> . funcion clase_metodos_bloque
    (16) clase_metodos_bloque -> . empty
    (3) funcion -> . FUNCTION func1 ID OPAREN param CPAREN bloque
    (109) empty -> .

    FUNCTION        shift and go to state 34
    CCURLY          reduce using rule 109 (empty -> .)

    clase_metodos_bloque           shift and go to state 242
    funcion                        shift and go to state 243
    empty                          shift and go to state 244

state 240

    (18) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN . THEN bloque SEMICOLON

    THEN            shift and go to state 245


state 241

    (7) param -> multiple ID variable1 variable1 variable2 param1 .

    CPAREN          reduce using rule 7 (param -> multiple ID variable1 variable1 variable2 param1 .)


state 242

    (12) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque . CCURLY

    CCURLY          shift and go to state 246


state 243

    (15) clase_metodos_bloque -> funcion . clase_metodos_bloque
    (15) clase_metodos_bloque -> . funcion clase_metodos_bloque
    (16) clase_metodos_bloque -> . empty
    (3) funcion -> . FUNCTION func1 ID OPAREN param CPAREN bloque
    (109) empty -> .

    FUNCTION        shift and go to state 34
    CCURLY          reduce using rule 109 (empty -> .)

    funcion                        shift and go to state 243
    clase_metodos_bloque           shift and go to state 247
    empty                          shift and go to state 244

state 244

    (16) clase_metodos_bloque -> empty .

    CCURLY          reduce using rule 16 (clase_metodos_bloque -> empty .)


state 245

    (18) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN . bloque SEMICOLON
    (44) bloque -> . OCURLY b1 CCURLY

    OCURLY          shift and go to state 7

    bloque                         shift and go to state 248

state 246

    (12) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque CCURLY .

    SEMICOLON       reduce using rule 12 (clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque CCURLY .)


state 247

    (15) clase_metodos_bloque -> funcion clase_metodos_bloque .

    CCURLY          reduce using rule 15 (clase_metodos_bloque -> funcion clase_metodos_bloque .)


state 248

    (18) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque . SEMICOLON

    SEMICOLON       shift and go to state 249


state 249

    (18) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .

    ID              reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    IF              reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    PRINT           reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    READ            reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    WHILE           reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    FOR             reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    OCURLY          reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    FUNCTION        reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CLASS           reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    VAR             reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    OPAREN          reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CSTINT          reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CSTFLT          reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CSTSTRING       reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    TRUE            reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    FALSE           reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CCURLY          reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    COLON           reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    SEMICOLON       reduce using rule 18 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OBRACKET in state 27 resolved as shift
WARNING: shift/reduce conflict for OBRACKET in state 74 resolved as shift
WARNING: shift/reduce conflict for VAR in state 105 resolved as shift
WARNING: shift/reduce conflict for OBRACKET in state 108 resolved as shift
WARNING: shift/reduce conflict for OBRACKET in state 122 resolved as shift
WARNING: shift/reduce conflict for OBRACKET in state 178 resolved as shift
WARNING: shift/reduce conflict for OBRACKET in state 213 resolved as shift
WARNING: shift/reduce conflict for OBRACKET in state 215 resolved as shift
