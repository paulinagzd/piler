Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON bloque
Rule 2     programa -> PROGRAM ID SEMICOLON dec bloque
Rule 3     funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque
Rule 4     func1 -> simple
Rule 5     func1 -> VOID
Rule 6     param -> param2 param1
Rule 7     param -> empty
Rule 8     param1 -> COMMA param2 param1
Rule 9     param1 -> empty
Rule 10    param2 -> simple ID
Rule 11    param2 -> multiple ID variable1 variable1
Rule 12    clase -> CLASS ID COLON clase_bloque SEMICOLON
Rule 13    clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque CCURLY
Rule 14    clase_bloque1 -> dec
Rule 15    clase_bloque1 -> empty
Rule 16    clase_metodos_bloque -> funcion clase_metodos_bloque
Rule 17    clase_metodos_bloque -> empty
Rule 18    ciclo_while -> WHILE cond2 THEN bloque SEMICOLON
Rule 19    ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
Rule 20    ciclo_for1 -> CSTINT
Rule 21    ciclo_for1 -> variable
Rule 22    dec -> VAR tipo SEMICOLON dec1
Rule 23    dec1 -> dec
Rule 24    dec1 -> empty
Rule 25    tipo -> compuesto ID tipo1
Rule 26    tipo -> simple ID tipo1
Rule 27    tipo -> multiple ID OBRACKET CSTINT CBRACKET tipo3 tipo2
Rule 28    tipo1 -> COMMA ID tipo1
Rule 29    tipo1 -> empty
Rule 30    tipo2 -> COMMA ID OBRACKET CSTINT CBRACKET tipo3
Rule 31    tipo2 -> empty
Rule 32    tipo3 -> OBRACKET CSTINT CBRACKET
Rule 33    tipo3 -> empty
Rule 34    simple -> INT
Rule 35    simple -> FLOAT
Rule 36    simple -> BOOL
Rule 37    simple -> STRING
Rule 38    simple -> CHAR
Rule 39    multiple -> INTS
Rule 40    multiple -> FLOATS
Rule 41    multiple -> BOOLS
Rule 42    multiple -> STRINGS
Rule 43    multiple -> CHARS
Rule 44    compuesto -> ID
Rule 45    compuesto -> DATAFRAME
Rule 46    compuesto -> FILE
Rule 47    bloque -> OCURLY b1 CCURLY
Rule 48    b1 -> estatuto b1
Rule 49    b1 -> empty
Rule 50    estatuto -> asignacion
Rule 51    estatuto -> llamada
Rule 52    estatuto -> condicion
Rule 53    estatuto -> escritura
Rule 54    estatuto -> leer
Rule 55    estatuto -> ciclo_while
Rule 56    estatuto -> ciclo_for
Rule 57    estatuto -> ternaria
Rule 58    estatuto -> bloque
Rule 59    estatuto -> funcion
Rule 60    estatuto -> clase
Rule 61    estatuto -> dec
Rule 62    estatuto_redux -> asignacion
Rule 63    estatuto_redux -> llamada
Rule 64    estatuto_redux -> escritura
Rule 65    estatuto_redux -> leer
Rule 66    estatuto_redux -> ternaria
Rule 67    asignacion -> variable AS exp
Rule 68    condicion -> IF cond2 THEN bloque cond1 SEMICOLON
Rule 69    cond1 -> ELSE bloque
Rule 70    cond1 -> ELSE IF cond2 THEN bloque cond1
Rule 71    cond1 -> empty
Rule 72    cond2 -> OPAREN exp CPAREN
Rule 73    ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON
Rule 74    escritura -> PRINT OPAREN exp e1 CPAREN
Rule 75    e1 -> COMMA exp e1
Rule 76    e1 -> empty
Rule 77    leer -> READ OPAREN exp e1 CPAREN
Rule 78    boolean -> TRUE
Rule 79    boolean -> FALSE
Rule 80    variable -> ID variable1 variable1 variable2
Rule 81    variable1 -> OBRACKET exp CBRACKET
Rule 82    variable1 -> empty
Rule 83    variable2 -> PERIOD ID variable1 variable1 variable2
Rule 84    variable2 -> empty
Rule 85    llamada -> ID OPAREN exp llamada1 CPAREN
Rule 86    llamada -> ID OPAREN CPAREN
Rule 87    llamada1 -> COMMA exp llamada1
Rule 88    llamada1 -> empty
Rule 89    exp -> texp exp1
Rule 90    exp1 -> OR texp exp1
Rule 91    exp1 -> empty
Rule 92    texp -> gexp texp1
Rule 93    texp1 -> AND gexp texp1
Rule 94    texp1 -> empty
Rule 95    gexp -> mexp gexp1
Rule 96    gexp1 -> LT mexp
Rule 97    gexp1 -> GT mexp
Rule 98    gexp1 -> GTE mexp
Rule 99    gexp1 -> LTE mexp
Rule 100   gexp1 -> EQ mexp
Rule 101   gexp1 -> NE mexp
Rule 102   gexp1 -> empty
Rule 103   mexp -> termino mexp1
Rule 104   mexp1 -> PLUS termino mexp1
Rule 105   mexp1 -> MINUS termino mexp1
Rule 106   mexp1 -> empty
Rule 107   termino -> factor term1
Rule 108   term1 -> MULT factor term1
Rule 109   term1 -> DIV factor term1
Rule 110   term1 -> empty
Rule 111   factor -> OPAREN exp CPAREN
Rule 112   factor -> varcst
Rule 113   factor -> variable
Rule 114   factor -> llamada
Rule 115   varcst -> CSTINT
Rule 116   varcst -> CSTFLT
Rule 117   varcst -> CSTCHAR
Rule 118   varcst -> CSTSTRING
Rule 119   varcst -> boolean
Rule 120   empty -> <empty>

Terminals, with rules where they appear

AND                  : 93
AS                   : 67
ATTRIBUTES           : 13
BOOL                 : 36
BOOLS                : 41
BY                   : 19
CBRACKET             : 27 30 32 81
CCURLY               : 13 47
CHAR                 : 38
CHARS                : 43
CLASS                : 12
COLON                : 12 13 13 73
COMMA                : 8 28 30 75 87
COMMENT              : 
CPAREN               : 3 19 72 74 77 85 86 111
CSTCHAR              : 117
CSTFLT               : 116
CSTINT               : 20 27 30 32 115
CSTSTRING            : 118
DATAFRAME            : 45
DIV                  : 109
ELSE                 : 69 70
EQ                   : 100
FALSE                : 79
FILE                 : 46
FLOAT                : 35
FLOATS               : 40
FOR                  : 19
FROM                 : 19
FUNCTION             : 3
GT                   : 97
GTE                  : 98
ID                   : 1 2 3 10 11 12 25 26 27 28 30 44 80 83 85 86
IF                   : 68 70
INT                  : 34
INTS                 : 39
LT                   : 96
LTE                  : 99
METHODS              : 13
MINUS                : 105
MULT                 : 108
NE                   : 101
OBRACKET             : 27 30 32 81
OCURLY               : 13 47
OPAREN               : 3 19 72 74 77 85 86 111
OR                   : 90
PERIOD               : 83
PLUS                 : 104
PRINT                : 74
PROGRAM              : 1 2
QUESTION             : 73
READ                 : 77
SEMICOLON            : 1 2 12 18 19 22 68 73
STRING               : 37
STRINGS              : 42
THEN                 : 18 19 68 70
TO                   : 19
TRUE                 : 78
VAR                  : 22
VOID                 : 5
WHILE                : 18
error                : 

Nonterminals, with rules where they appear

asignacion           : 50 62
b1                   : 47 48
bloque               : 1 2 3 18 19 58 68 69 70
boolean              : 119
ciclo_for            : 56
ciclo_for1           : 19 19 19
ciclo_while          : 55
clase                : 60
clase_bloque         : 12
clase_bloque1        : 13
clase_metodos_bloque : 13 16
compuesto            : 25
cond1                : 68 70
cond2                : 18 68 70
condicion            : 52
dec                  : 2 14 23 61
dec1                 : 22
e1                   : 74 75 77
empty                : 7 9 15 17 24 29 31 33 49 71 76 82 84 88 91 94 102 106 110
escritura            : 53 64
estatuto             : 48
estatuto_redux       : 73 73
exp                  : 67 72 73 74 75 77 81 85 87 111
exp1                 : 89 90
factor               : 107 108 109
func1                : 3
funcion              : 16 59
gexp                 : 92 93
gexp1                : 95
leer                 : 54 65
llamada              : 51 63 114
llamada1             : 85 87
mexp                 : 95 96 97 98 99 100 101
mexp1                : 103 104 105
multiple             : 11 27
param                : 3
param1               : 6 8
param2               : 6 8
programa             : 0
simple               : 4 10 26
term1                : 107 108 109
termino              : 103 104 105
ternaria             : 57 66
texp                 : 89 90
texp1                : 92 93
tipo                 : 22
tipo1                : 25 26 28
tipo2                : 27
tipo3                : 27 30
varcst               : 112
variable             : 19 21 67 113
variable1            : 11 11 80 80 83 83
variable2            : 80 83

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON bloque
    (2) programa -> . PROGRAM ID SEMICOLON dec bloque

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SEMICOLON bloque
    (2) programa -> PROGRAM . ID SEMICOLON dec bloque

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SEMICOLON bloque
    (2) programa -> PROGRAM ID . SEMICOLON dec bloque

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . bloque
    (2) programa -> PROGRAM ID SEMICOLON . dec bloque
    (47) bloque -> . OCURLY b1 CCURLY
    (22) dec -> . VAR tipo SEMICOLON dec1

    OCURLY          shift and go to state 7
    VAR             shift and go to state 8

    bloque                         shift and go to state 5
    dec                            shift and go to state 6

state 5

    (1) programa -> PROGRAM ID SEMICOLON bloque .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON bloque .)


state 6

    (2) programa -> PROGRAM ID SEMICOLON dec . bloque
    (47) bloque -> . OCURLY b1 CCURLY

    OCURLY          shift and go to state 7

    bloque                         shift and go to state 9

state 7

    (47) bloque -> OCURLY . b1 CCURLY
    (48) b1 -> . estatuto b1
    (49) b1 -> . empty
    (50) estatuto -> . asignacion
    (51) estatuto -> . llamada
    (52) estatuto -> . condicion
    (53) estatuto -> . escritura
    (54) estatuto -> . leer
    (55) estatuto -> . ciclo_while
    (56) estatuto -> . ciclo_for
    (57) estatuto -> . ternaria
    (58) estatuto -> . bloque
    (59) estatuto -> . funcion
    (60) estatuto -> . clase
    (61) estatuto -> . dec
    (120) empty -> .
    (67) asignacion -> . variable AS exp
    (85) llamada -> . ID OPAREN exp llamada1 CPAREN
    (86) llamada -> . ID OPAREN CPAREN
    (68) condicion -> . IF cond2 THEN bloque cond1 SEMICOLON
    (74) escritura -> . PRINT OPAREN exp e1 CPAREN
    (77) leer -> . READ OPAREN exp e1 CPAREN
    (18) ciclo_while -> . WHILE cond2 THEN bloque SEMICOLON
    (19) ciclo_for -> . FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
    (73) ternaria -> . exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON
    (47) bloque -> . OCURLY b1 CCURLY
    (3) funcion -> . FUNCTION func1 ID OPAREN param CPAREN bloque
    (12) clase -> . CLASS ID COLON clase_bloque SEMICOLON
    (22) dec -> . VAR tipo SEMICOLON dec1
    (80) variable -> . ID variable1 variable1 variable2
    (89) exp -> . texp exp1
    (92) texp -> . gexp texp1
    (95) gexp -> . mexp gexp1
    (103) mexp -> . termino mexp1
    (107) termino -> . factor term1
    (111) factor -> . OPAREN exp CPAREN
    (112) factor -> . varcst
    (113) factor -> . variable
    (114) factor -> . llamada
    (115) varcst -> . CSTINT
    (116) varcst -> . CSTFLT
    (117) varcst -> . CSTCHAR
    (118) varcst -> . CSTSTRING
    (119) varcst -> . boolean
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    CCURLY          reduce using rule 120 (empty -> .)
    ID              shift and go to state 27
    IF              shift and go to state 29
    PRINT           shift and go to state 30
    READ            shift and go to state 31
    WHILE           shift and go to state 32
    FOR             shift and go to state 33
    OCURLY          shift and go to state 7
    FUNCTION        shift and go to state 34
    CLASS           shift and go to state 35
    VAR             shift and go to state 8
    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    b1                             shift and go to state 10
    estatuto                       shift and go to state 11
    empty                          shift and go to state 12
    asignacion                     shift and go to state 13
    llamada                        shift and go to state 14
    condicion                      shift and go to state 15
    escritura                      shift and go to state 16
    leer                           shift and go to state 17
    ciclo_while                    shift and go to state 18
    ciclo_for                      shift and go to state 19
    ternaria                       shift and go to state 20
    bloque                         shift and go to state 21
    funcion                        shift and go to state 22
    clase                          shift and go to state 23
    dec                            shift and go to state 24
    variable                       shift and go to state 25
    exp                            shift and go to state 26
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    boolean                        shift and go to state 46

state 8

    (22) dec -> VAR . tipo SEMICOLON dec1
    (25) tipo -> . compuesto ID tipo1
    (26) tipo -> . simple ID tipo1
    (27) tipo -> . multiple ID OBRACKET CSTINT CBRACKET tipo3 tipo2
    (44) compuesto -> . ID
    (45) compuesto -> . DATAFRAME
    (46) compuesto -> . FILE
    (34) simple -> . INT
    (35) simple -> . FLOAT
    (36) simple -> . BOOL
    (37) simple -> . STRING
    (38) simple -> . CHAR
    (39) multiple -> . INTS
    (40) multiple -> . FLOATS
    (41) multiple -> . BOOLS
    (42) multiple -> . STRINGS
    (43) multiple -> . CHARS

    ID              shift and go to state 51
    DATAFRAME       shift and go to state 54
    FILE            shift and go to state 55
    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    BOOL            shift and go to state 58
    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    INTS            shift and go to state 61
    FLOATS          shift and go to state 62
    BOOLS           shift and go to state 63
    STRINGS         shift and go to state 64
    CHARS           shift and go to state 65

    tipo                           shift and go to state 49
    compuesto                      shift and go to state 50
    simple                         shift and go to state 52
    multiple                       shift and go to state 53

state 9

    (2) programa -> PROGRAM ID SEMICOLON dec bloque .

    $end            reduce using rule 2 (programa -> PROGRAM ID SEMICOLON dec bloque .)


state 10

    (47) bloque -> OCURLY b1 . CCURLY

    CCURLY          shift and go to state 66


state 11

    (48) b1 -> estatuto . b1
    (48) b1 -> . estatuto b1
    (49) b1 -> . empty
    (50) estatuto -> . asignacion
    (51) estatuto -> . llamada
    (52) estatuto -> . condicion
    (53) estatuto -> . escritura
    (54) estatuto -> . leer
    (55) estatuto -> . ciclo_while
    (56) estatuto -> . ciclo_for
    (57) estatuto -> . ternaria
    (58) estatuto -> . bloque
    (59) estatuto -> . funcion
    (60) estatuto -> . clase
    (61) estatuto -> . dec
    (120) empty -> .
    (67) asignacion -> . variable AS exp
    (85) llamada -> . ID OPAREN exp llamada1 CPAREN
    (86) llamada -> . ID OPAREN CPAREN
    (68) condicion -> . IF cond2 THEN bloque cond1 SEMICOLON
    (74) escritura -> . PRINT OPAREN exp e1 CPAREN
    (77) leer -> . READ OPAREN exp e1 CPAREN
    (18) ciclo_while -> . WHILE cond2 THEN bloque SEMICOLON
    (19) ciclo_for -> . FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
    (73) ternaria -> . exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON
    (47) bloque -> . OCURLY b1 CCURLY
    (3) funcion -> . FUNCTION func1 ID OPAREN param CPAREN bloque
    (12) clase -> . CLASS ID COLON clase_bloque SEMICOLON
    (22) dec -> . VAR tipo SEMICOLON dec1
    (80) variable -> . ID variable1 variable1 variable2
    (89) exp -> . texp exp1
    (92) texp -> . gexp texp1
    (95) gexp -> . mexp gexp1
    (103) mexp -> . termino mexp1
    (107) termino -> . factor term1
    (111) factor -> . OPAREN exp CPAREN
    (112) factor -> . varcst
    (113) factor -> . variable
    (114) factor -> . llamada
    (115) varcst -> . CSTINT
    (116) varcst -> . CSTFLT
    (117) varcst -> . CSTCHAR
    (118) varcst -> . CSTSTRING
    (119) varcst -> . boolean
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    CCURLY          reduce using rule 120 (empty -> .)
    ID              shift and go to state 27
    IF              shift and go to state 29
    PRINT           shift and go to state 30
    READ            shift and go to state 31
    WHILE           shift and go to state 32
    FOR             shift and go to state 33
    OCURLY          shift and go to state 7
    FUNCTION        shift and go to state 34
    CLASS           shift and go to state 35
    VAR             shift and go to state 8
    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    estatuto                       shift and go to state 11
    b1                             shift and go to state 67
    empty                          shift and go to state 12
    asignacion                     shift and go to state 13
    llamada                        shift and go to state 14
    condicion                      shift and go to state 15
    escritura                      shift and go to state 16
    leer                           shift and go to state 17
    ciclo_while                    shift and go to state 18
    ciclo_for                      shift and go to state 19
    ternaria                       shift and go to state 20
    bloque                         shift and go to state 21
    funcion                        shift and go to state 22
    clase                          shift and go to state 23
    dec                            shift and go to state 24
    variable                       shift and go to state 25
    exp                            shift and go to state 26
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    boolean                        shift and go to state 46

state 12

    (49) b1 -> empty .

    CCURLY          reduce using rule 49 (b1 -> empty .)


state 13

    (50) estatuto -> asignacion .

    ID              reduce using rule 50 (estatuto -> asignacion .)
    IF              reduce using rule 50 (estatuto -> asignacion .)
    PRINT           reduce using rule 50 (estatuto -> asignacion .)
    READ            reduce using rule 50 (estatuto -> asignacion .)
    WHILE           reduce using rule 50 (estatuto -> asignacion .)
    FOR             reduce using rule 50 (estatuto -> asignacion .)
    OCURLY          reduce using rule 50 (estatuto -> asignacion .)
    FUNCTION        reduce using rule 50 (estatuto -> asignacion .)
    CLASS           reduce using rule 50 (estatuto -> asignacion .)
    VAR             reduce using rule 50 (estatuto -> asignacion .)
    OPAREN          reduce using rule 50 (estatuto -> asignacion .)
    CSTINT          reduce using rule 50 (estatuto -> asignacion .)
    CSTFLT          reduce using rule 50 (estatuto -> asignacion .)
    CSTCHAR         reduce using rule 50 (estatuto -> asignacion .)
    CSTSTRING       reduce using rule 50 (estatuto -> asignacion .)
    TRUE            reduce using rule 50 (estatuto -> asignacion .)
    FALSE           reduce using rule 50 (estatuto -> asignacion .)
    CCURLY          reduce using rule 50 (estatuto -> asignacion .)


state 14

    (51) estatuto -> llamada .
    (114) factor -> llamada .

    ID              reduce using rule 51 (estatuto -> llamada .)
    IF              reduce using rule 51 (estatuto -> llamada .)
    PRINT           reduce using rule 51 (estatuto -> llamada .)
    READ            reduce using rule 51 (estatuto -> llamada .)
    WHILE           reduce using rule 51 (estatuto -> llamada .)
    FOR             reduce using rule 51 (estatuto -> llamada .)
    OCURLY          reduce using rule 51 (estatuto -> llamada .)
    FUNCTION        reduce using rule 51 (estatuto -> llamada .)
    CLASS           reduce using rule 51 (estatuto -> llamada .)
    VAR             reduce using rule 51 (estatuto -> llamada .)
    OPAREN          reduce using rule 51 (estatuto -> llamada .)
    CSTINT          reduce using rule 51 (estatuto -> llamada .)
    CSTFLT          reduce using rule 51 (estatuto -> llamada .)
    CSTCHAR         reduce using rule 51 (estatuto -> llamada .)
    CSTSTRING       reduce using rule 51 (estatuto -> llamada .)
    TRUE            reduce using rule 51 (estatuto -> llamada .)
    FALSE           reduce using rule 51 (estatuto -> llamada .)
    CCURLY          reduce using rule 51 (estatuto -> llamada .)
    MULT            reduce using rule 114 (factor -> llamada .)
    DIV             reduce using rule 114 (factor -> llamada .)
    PLUS            reduce using rule 114 (factor -> llamada .)
    MINUS           reduce using rule 114 (factor -> llamada .)
    LT              reduce using rule 114 (factor -> llamada .)
    GT              reduce using rule 114 (factor -> llamada .)
    GTE             reduce using rule 114 (factor -> llamada .)
    LTE             reduce using rule 114 (factor -> llamada .)
    EQ              reduce using rule 114 (factor -> llamada .)
    NE              reduce using rule 114 (factor -> llamada .)
    AND             reduce using rule 114 (factor -> llamada .)
    OR              reduce using rule 114 (factor -> llamada .)
    QUESTION        reduce using rule 114 (factor -> llamada .)


state 15

    (52) estatuto -> condicion .

    ID              reduce using rule 52 (estatuto -> condicion .)
    IF              reduce using rule 52 (estatuto -> condicion .)
    PRINT           reduce using rule 52 (estatuto -> condicion .)
    READ            reduce using rule 52 (estatuto -> condicion .)
    WHILE           reduce using rule 52 (estatuto -> condicion .)
    FOR             reduce using rule 52 (estatuto -> condicion .)
    OCURLY          reduce using rule 52 (estatuto -> condicion .)
    FUNCTION        reduce using rule 52 (estatuto -> condicion .)
    CLASS           reduce using rule 52 (estatuto -> condicion .)
    VAR             reduce using rule 52 (estatuto -> condicion .)
    OPAREN          reduce using rule 52 (estatuto -> condicion .)
    CSTINT          reduce using rule 52 (estatuto -> condicion .)
    CSTFLT          reduce using rule 52 (estatuto -> condicion .)
    CSTCHAR         reduce using rule 52 (estatuto -> condicion .)
    CSTSTRING       reduce using rule 52 (estatuto -> condicion .)
    TRUE            reduce using rule 52 (estatuto -> condicion .)
    FALSE           reduce using rule 52 (estatuto -> condicion .)
    CCURLY          reduce using rule 52 (estatuto -> condicion .)


state 16

    (53) estatuto -> escritura .

    ID              reduce using rule 53 (estatuto -> escritura .)
    IF              reduce using rule 53 (estatuto -> escritura .)
    PRINT           reduce using rule 53 (estatuto -> escritura .)
    READ            reduce using rule 53 (estatuto -> escritura .)
    WHILE           reduce using rule 53 (estatuto -> escritura .)
    FOR             reduce using rule 53 (estatuto -> escritura .)
    OCURLY          reduce using rule 53 (estatuto -> escritura .)
    FUNCTION        reduce using rule 53 (estatuto -> escritura .)
    CLASS           reduce using rule 53 (estatuto -> escritura .)
    VAR             reduce using rule 53 (estatuto -> escritura .)
    OPAREN          reduce using rule 53 (estatuto -> escritura .)
    CSTINT          reduce using rule 53 (estatuto -> escritura .)
    CSTFLT          reduce using rule 53 (estatuto -> escritura .)
    CSTCHAR         reduce using rule 53 (estatuto -> escritura .)
    CSTSTRING       reduce using rule 53 (estatuto -> escritura .)
    TRUE            reduce using rule 53 (estatuto -> escritura .)
    FALSE           reduce using rule 53 (estatuto -> escritura .)
    CCURLY          reduce using rule 53 (estatuto -> escritura .)


state 17

    (54) estatuto -> leer .

    ID              reduce using rule 54 (estatuto -> leer .)
    IF              reduce using rule 54 (estatuto -> leer .)
    PRINT           reduce using rule 54 (estatuto -> leer .)
    READ            reduce using rule 54 (estatuto -> leer .)
    WHILE           reduce using rule 54 (estatuto -> leer .)
    FOR             reduce using rule 54 (estatuto -> leer .)
    OCURLY          reduce using rule 54 (estatuto -> leer .)
    FUNCTION        reduce using rule 54 (estatuto -> leer .)
    CLASS           reduce using rule 54 (estatuto -> leer .)
    VAR             reduce using rule 54 (estatuto -> leer .)
    OPAREN          reduce using rule 54 (estatuto -> leer .)
    CSTINT          reduce using rule 54 (estatuto -> leer .)
    CSTFLT          reduce using rule 54 (estatuto -> leer .)
    CSTCHAR         reduce using rule 54 (estatuto -> leer .)
    CSTSTRING       reduce using rule 54 (estatuto -> leer .)
    TRUE            reduce using rule 54 (estatuto -> leer .)
    FALSE           reduce using rule 54 (estatuto -> leer .)
    CCURLY          reduce using rule 54 (estatuto -> leer .)


state 18

    (55) estatuto -> ciclo_while .

    ID              reduce using rule 55 (estatuto -> ciclo_while .)
    IF              reduce using rule 55 (estatuto -> ciclo_while .)
    PRINT           reduce using rule 55 (estatuto -> ciclo_while .)
    READ            reduce using rule 55 (estatuto -> ciclo_while .)
    WHILE           reduce using rule 55 (estatuto -> ciclo_while .)
    FOR             reduce using rule 55 (estatuto -> ciclo_while .)
    OCURLY          reduce using rule 55 (estatuto -> ciclo_while .)
    FUNCTION        reduce using rule 55 (estatuto -> ciclo_while .)
    CLASS           reduce using rule 55 (estatuto -> ciclo_while .)
    VAR             reduce using rule 55 (estatuto -> ciclo_while .)
    OPAREN          reduce using rule 55 (estatuto -> ciclo_while .)
    CSTINT          reduce using rule 55 (estatuto -> ciclo_while .)
    CSTFLT          reduce using rule 55 (estatuto -> ciclo_while .)
    CSTCHAR         reduce using rule 55 (estatuto -> ciclo_while .)
    CSTSTRING       reduce using rule 55 (estatuto -> ciclo_while .)
    TRUE            reduce using rule 55 (estatuto -> ciclo_while .)
    FALSE           reduce using rule 55 (estatuto -> ciclo_while .)
    CCURLY          reduce using rule 55 (estatuto -> ciclo_while .)


state 19

    (56) estatuto -> ciclo_for .

    ID              reduce using rule 56 (estatuto -> ciclo_for .)
    IF              reduce using rule 56 (estatuto -> ciclo_for .)
    PRINT           reduce using rule 56 (estatuto -> ciclo_for .)
    READ            reduce using rule 56 (estatuto -> ciclo_for .)
    WHILE           reduce using rule 56 (estatuto -> ciclo_for .)
    FOR             reduce using rule 56 (estatuto -> ciclo_for .)
    OCURLY          reduce using rule 56 (estatuto -> ciclo_for .)
    FUNCTION        reduce using rule 56 (estatuto -> ciclo_for .)
    CLASS           reduce using rule 56 (estatuto -> ciclo_for .)
    VAR             reduce using rule 56 (estatuto -> ciclo_for .)
    OPAREN          reduce using rule 56 (estatuto -> ciclo_for .)
    CSTINT          reduce using rule 56 (estatuto -> ciclo_for .)
    CSTFLT          reduce using rule 56 (estatuto -> ciclo_for .)
    CSTCHAR         reduce using rule 56 (estatuto -> ciclo_for .)
    CSTSTRING       reduce using rule 56 (estatuto -> ciclo_for .)
    TRUE            reduce using rule 56 (estatuto -> ciclo_for .)
    FALSE           reduce using rule 56 (estatuto -> ciclo_for .)
    CCURLY          reduce using rule 56 (estatuto -> ciclo_for .)


state 20

    (57) estatuto -> ternaria .

    ID              reduce using rule 57 (estatuto -> ternaria .)
    IF              reduce using rule 57 (estatuto -> ternaria .)
    PRINT           reduce using rule 57 (estatuto -> ternaria .)
    READ            reduce using rule 57 (estatuto -> ternaria .)
    WHILE           reduce using rule 57 (estatuto -> ternaria .)
    FOR             reduce using rule 57 (estatuto -> ternaria .)
    OCURLY          reduce using rule 57 (estatuto -> ternaria .)
    FUNCTION        reduce using rule 57 (estatuto -> ternaria .)
    CLASS           reduce using rule 57 (estatuto -> ternaria .)
    VAR             reduce using rule 57 (estatuto -> ternaria .)
    OPAREN          reduce using rule 57 (estatuto -> ternaria .)
    CSTINT          reduce using rule 57 (estatuto -> ternaria .)
    CSTFLT          reduce using rule 57 (estatuto -> ternaria .)
    CSTCHAR         reduce using rule 57 (estatuto -> ternaria .)
    CSTSTRING       reduce using rule 57 (estatuto -> ternaria .)
    TRUE            reduce using rule 57 (estatuto -> ternaria .)
    FALSE           reduce using rule 57 (estatuto -> ternaria .)
    CCURLY          reduce using rule 57 (estatuto -> ternaria .)


state 21

    (58) estatuto -> bloque .

    ID              reduce using rule 58 (estatuto -> bloque .)
    IF              reduce using rule 58 (estatuto -> bloque .)
    PRINT           reduce using rule 58 (estatuto -> bloque .)
    READ            reduce using rule 58 (estatuto -> bloque .)
    WHILE           reduce using rule 58 (estatuto -> bloque .)
    FOR             reduce using rule 58 (estatuto -> bloque .)
    OCURLY          reduce using rule 58 (estatuto -> bloque .)
    FUNCTION        reduce using rule 58 (estatuto -> bloque .)
    CLASS           reduce using rule 58 (estatuto -> bloque .)
    VAR             reduce using rule 58 (estatuto -> bloque .)
    OPAREN          reduce using rule 58 (estatuto -> bloque .)
    CSTINT          reduce using rule 58 (estatuto -> bloque .)
    CSTFLT          reduce using rule 58 (estatuto -> bloque .)
    CSTCHAR         reduce using rule 58 (estatuto -> bloque .)
    CSTSTRING       reduce using rule 58 (estatuto -> bloque .)
    TRUE            reduce using rule 58 (estatuto -> bloque .)
    FALSE           reduce using rule 58 (estatuto -> bloque .)
    CCURLY          reduce using rule 58 (estatuto -> bloque .)


state 22

    (59) estatuto -> funcion .

    ID              reduce using rule 59 (estatuto -> funcion .)
    IF              reduce using rule 59 (estatuto -> funcion .)
    PRINT           reduce using rule 59 (estatuto -> funcion .)
    READ            reduce using rule 59 (estatuto -> funcion .)
    WHILE           reduce using rule 59 (estatuto -> funcion .)
    FOR             reduce using rule 59 (estatuto -> funcion .)
    OCURLY          reduce using rule 59 (estatuto -> funcion .)
    FUNCTION        reduce using rule 59 (estatuto -> funcion .)
    CLASS           reduce using rule 59 (estatuto -> funcion .)
    VAR             reduce using rule 59 (estatuto -> funcion .)
    OPAREN          reduce using rule 59 (estatuto -> funcion .)
    CSTINT          reduce using rule 59 (estatuto -> funcion .)
    CSTFLT          reduce using rule 59 (estatuto -> funcion .)
    CSTCHAR         reduce using rule 59 (estatuto -> funcion .)
    CSTSTRING       reduce using rule 59 (estatuto -> funcion .)
    TRUE            reduce using rule 59 (estatuto -> funcion .)
    FALSE           reduce using rule 59 (estatuto -> funcion .)
    CCURLY          reduce using rule 59 (estatuto -> funcion .)


state 23

    (60) estatuto -> clase .

    ID              reduce using rule 60 (estatuto -> clase .)
    IF              reduce using rule 60 (estatuto -> clase .)
    PRINT           reduce using rule 60 (estatuto -> clase .)
    READ            reduce using rule 60 (estatuto -> clase .)
    WHILE           reduce using rule 60 (estatuto -> clase .)
    FOR             reduce using rule 60 (estatuto -> clase .)
    OCURLY          reduce using rule 60 (estatuto -> clase .)
    FUNCTION        reduce using rule 60 (estatuto -> clase .)
    CLASS           reduce using rule 60 (estatuto -> clase .)
    VAR             reduce using rule 60 (estatuto -> clase .)
    OPAREN          reduce using rule 60 (estatuto -> clase .)
    CSTINT          reduce using rule 60 (estatuto -> clase .)
    CSTFLT          reduce using rule 60 (estatuto -> clase .)
    CSTCHAR         reduce using rule 60 (estatuto -> clase .)
    CSTSTRING       reduce using rule 60 (estatuto -> clase .)
    TRUE            reduce using rule 60 (estatuto -> clase .)
    FALSE           reduce using rule 60 (estatuto -> clase .)
    CCURLY          reduce using rule 60 (estatuto -> clase .)


state 24

    (61) estatuto -> dec .

    ID              reduce using rule 61 (estatuto -> dec .)
    IF              reduce using rule 61 (estatuto -> dec .)
    PRINT           reduce using rule 61 (estatuto -> dec .)
    READ            reduce using rule 61 (estatuto -> dec .)
    WHILE           reduce using rule 61 (estatuto -> dec .)
    FOR             reduce using rule 61 (estatuto -> dec .)
    OCURLY          reduce using rule 61 (estatuto -> dec .)
    FUNCTION        reduce using rule 61 (estatuto -> dec .)
    CLASS           reduce using rule 61 (estatuto -> dec .)
    VAR             reduce using rule 61 (estatuto -> dec .)
    OPAREN          reduce using rule 61 (estatuto -> dec .)
    CSTINT          reduce using rule 61 (estatuto -> dec .)
    CSTFLT          reduce using rule 61 (estatuto -> dec .)
    CSTCHAR         reduce using rule 61 (estatuto -> dec .)
    CSTSTRING       reduce using rule 61 (estatuto -> dec .)
    TRUE            reduce using rule 61 (estatuto -> dec .)
    FALSE           reduce using rule 61 (estatuto -> dec .)
    CCURLY          reduce using rule 61 (estatuto -> dec .)


state 25

    (67) asignacion -> variable . AS exp
    (113) factor -> variable .

    AS              shift and go to state 68
    MULT            reduce using rule 113 (factor -> variable .)
    DIV             reduce using rule 113 (factor -> variable .)
    PLUS            reduce using rule 113 (factor -> variable .)
    MINUS           reduce using rule 113 (factor -> variable .)
    LT              reduce using rule 113 (factor -> variable .)
    GT              reduce using rule 113 (factor -> variable .)
    GTE             reduce using rule 113 (factor -> variable .)
    LTE             reduce using rule 113 (factor -> variable .)
    EQ              reduce using rule 113 (factor -> variable .)
    NE              reduce using rule 113 (factor -> variable .)
    AND             reduce using rule 113 (factor -> variable .)
    OR              reduce using rule 113 (factor -> variable .)
    QUESTION        reduce using rule 113 (factor -> variable .)


state 26

    (73) ternaria -> exp . QUESTION estatuto_redux COLON estatuto_redux SEMICOLON

    QUESTION        shift and go to state 69


state 27

    (85) llamada -> ID . OPAREN exp llamada1 CPAREN
    (86) llamada -> ID . OPAREN CPAREN
    (80) variable -> ID . variable1 variable1 variable2
    (81) variable1 -> . OBRACKET exp CBRACKET
    (82) variable1 -> . empty
    (120) empty -> .

  ! shift/reduce conflict for OBRACKET resolved as shift
    OPAREN          shift and go to state 70
    OBRACKET        shift and go to state 72
    PERIOD          reduce using rule 120 (empty -> .)
    AS              reduce using rule 120 (empty -> .)
    MULT            reduce using rule 120 (empty -> .)
    DIV             reduce using rule 120 (empty -> .)
    PLUS            reduce using rule 120 (empty -> .)
    MINUS           reduce using rule 120 (empty -> .)
    LT              reduce using rule 120 (empty -> .)
    GT              reduce using rule 120 (empty -> .)
    GTE             reduce using rule 120 (empty -> .)
    LTE             reduce using rule 120 (empty -> .)
    EQ              reduce using rule 120 (empty -> .)
    NE              reduce using rule 120 (empty -> .)
    AND             reduce using rule 120 (empty -> .)
    OR              reduce using rule 120 (empty -> .)
    QUESTION        reduce using rule 120 (empty -> .)

  ! OBRACKET        [ reduce using rule 120 (empty -> .) ]

    variable1                      shift and go to state 71
    empty                          shift and go to state 73

state 28

    (111) factor -> OPAREN . exp CPAREN
    (89) exp -> . texp exp1
    (92) texp -> . gexp texp1
    (95) gexp -> . mexp gexp1
    (103) mexp -> . termino mexp1
    (107) termino -> . factor term1
    (111) factor -> . OPAREN exp CPAREN
    (112) factor -> . varcst
    (113) factor -> . variable
    (114) factor -> . llamada
    (115) varcst -> . CSTINT
    (116) varcst -> . CSTFLT
    (117) varcst -> . CSTCHAR
    (118) varcst -> . CSTSTRING
    (119) varcst -> . boolean
    (80) variable -> . ID variable1 variable1 variable2
    (85) llamada -> . ID OPAREN exp llamada1 CPAREN
    (86) llamada -> . ID OPAREN CPAREN
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 74
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 29

    (68) condicion -> IF . cond2 THEN bloque cond1 SEMICOLON
    (72) cond2 -> . OPAREN exp CPAREN

    OPAREN          shift and go to state 79

    cond2                          shift and go to state 78

state 30

    (74) escritura -> PRINT . OPAREN exp e1 CPAREN

    OPAREN          shift and go to state 80


state 31

    (77) leer -> READ . OPAREN exp e1 CPAREN

    OPAREN          shift and go to state 81


state 32

    (18) ciclo_while -> WHILE . cond2 THEN bloque SEMICOLON
    (72) cond2 -> . OPAREN exp CPAREN

    OPAREN          shift and go to state 79

    cond2                          shift and go to state 82

state 33

    (19) ciclo_for -> FOR . OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON

    OPAREN          shift and go to state 83


state 34

    (3) funcion -> FUNCTION . func1 ID OPAREN param CPAREN bloque
    (4) func1 -> . simple
    (5) func1 -> . VOID
    (34) simple -> . INT
    (35) simple -> . FLOAT
    (36) simple -> . BOOL
    (37) simple -> . STRING
    (38) simple -> . CHAR

    VOID            shift and go to state 86
    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    BOOL            shift and go to state 58
    STRING          shift and go to state 59
    CHAR            shift and go to state 60

    func1                          shift and go to state 84
    simple                         shift and go to state 85

state 35

    (12) clase -> CLASS . ID COLON clase_bloque SEMICOLON

    ID              shift and go to state 87


state 36

    (89) exp -> texp . exp1
    (90) exp1 -> . OR texp exp1
    (91) exp1 -> . empty
    (120) empty -> .

    OR              shift and go to state 89
    QUESTION        reduce using rule 120 (empty -> .)
    CPAREN          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    PRINT           reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    FOR             reduce using rule 120 (empty -> .)
    OCURLY          reduce using rule 120 (empty -> .)
    FUNCTION        reduce using rule 120 (empty -> .)
    CLASS           reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    OPAREN          reduce using rule 120 (empty -> .)
    CSTINT          reduce using rule 120 (empty -> .)
    CSTFLT          reduce using rule 120 (empty -> .)
    CSTCHAR         reduce using rule 120 (empty -> .)
    CSTSTRING       reduce using rule 120 (empty -> .)
    TRUE            reduce using rule 120 (empty -> .)
    FALSE           reduce using rule 120 (empty -> .)
    CCURLY          reduce using rule 120 (empty -> .)
    COLON           reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    CBRACKET        reduce using rule 120 (empty -> .)

    exp1                           shift and go to state 88
    empty                          shift and go to state 90

state 37

    (92) texp -> gexp . texp1
    (93) texp1 -> . AND gexp texp1
    (94) texp1 -> . empty
    (120) empty -> .

    AND             shift and go to state 92
    OR              reduce using rule 120 (empty -> .)
    QUESTION        reduce using rule 120 (empty -> .)
    CPAREN          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    PRINT           reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    FOR             reduce using rule 120 (empty -> .)
    OCURLY          reduce using rule 120 (empty -> .)
    FUNCTION        reduce using rule 120 (empty -> .)
    CLASS           reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    OPAREN          reduce using rule 120 (empty -> .)
    CSTINT          reduce using rule 120 (empty -> .)
    CSTFLT          reduce using rule 120 (empty -> .)
    CSTCHAR         reduce using rule 120 (empty -> .)
    CSTSTRING       reduce using rule 120 (empty -> .)
    TRUE            reduce using rule 120 (empty -> .)
    FALSE           reduce using rule 120 (empty -> .)
    CCURLY          reduce using rule 120 (empty -> .)
    COLON           reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    CBRACKET        reduce using rule 120 (empty -> .)

    texp1                          shift and go to state 91
    empty                          shift and go to state 93

state 38

    (95) gexp -> mexp . gexp1
    (96) gexp1 -> . LT mexp
    (97) gexp1 -> . GT mexp
    (98) gexp1 -> . GTE mexp
    (99) gexp1 -> . LTE mexp
    (100) gexp1 -> . EQ mexp
    (101) gexp1 -> . NE mexp
    (102) gexp1 -> . empty
    (120) empty -> .

    LT              shift and go to state 95
    GT              shift and go to state 96
    GTE             shift and go to state 97
    LTE             shift and go to state 98
    EQ              shift and go to state 99
    NE              shift and go to state 100
    AND             reduce using rule 120 (empty -> .)
    OR              reduce using rule 120 (empty -> .)
    QUESTION        reduce using rule 120 (empty -> .)
    CPAREN          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    PRINT           reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    FOR             reduce using rule 120 (empty -> .)
    OCURLY          reduce using rule 120 (empty -> .)
    FUNCTION        reduce using rule 120 (empty -> .)
    CLASS           reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    OPAREN          reduce using rule 120 (empty -> .)
    CSTINT          reduce using rule 120 (empty -> .)
    CSTFLT          reduce using rule 120 (empty -> .)
    CSTCHAR         reduce using rule 120 (empty -> .)
    CSTSTRING       reduce using rule 120 (empty -> .)
    TRUE            reduce using rule 120 (empty -> .)
    FALSE           reduce using rule 120 (empty -> .)
    CCURLY          reduce using rule 120 (empty -> .)
    COLON           reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    CBRACKET        reduce using rule 120 (empty -> .)

    gexp1                          shift and go to state 94
    empty                          shift and go to state 101

state 39

    (103) mexp -> termino . mexp1
    (104) mexp1 -> . PLUS termino mexp1
    (105) mexp1 -> . MINUS termino mexp1
    (106) mexp1 -> . empty
    (120) empty -> .

    PLUS            shift and go to state 103
    MINUS           shift and go to state 104
    LT              reduce using rule 120 (empty -> .)
    GT              reduce using rule 120 (empty -> .)
    GTE             reduce using rule 120 (empty -> .)
    LTE             reduce using rule 120 (empty -> .)
    EQ              reduce using rule 120 (empty -> .)
    NE              reduce using rule 120 (empty -> .)
    AND             reduce using rule 120 (empty -> .)
    OR              reduce using rule 120 (empty -> .)
    QUESTION        reduce using rule 120 (empty -> .)
    CPAREN          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    PRINT           reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    FOR             reduce using rule 120 (empty -> .)
    OCURLY          reduce using rule 120 (empty -> .)
    FUNCTION        reduce using rule 120 (empty -> .)
    CLASS           reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    OPAREN          reduce using rule 120 (empty -> .)
    CSTINT          reduce using rule 120 (empty -> .)
    CSTFLT          reduce using rule 120 (empty -> .)
    CSTCHAR         reduce using rule 120 (empty -> .)
    CSTSTRING       reduce using rule 120 (empty -> .)
    TRUE            reduce using rule 120 (empty -> .)
    FALSE           reduce using rule 120 (empty -> .)
    CCURLY          reduce using rule 120 (empty -> .)
    COLON           reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    CBRACKET        reduce using rule 120 (empty -> .)

    mexp1                          shift and go to state 102
    empty                          shift and go to state 105

state 40

    (107) termino -> factor . term1
    (108) term1 -> . MULT factor term1
    (109) term1 -> . DIV factor term1
    (110) term1 -> . empty
    (120) empty -> .

    MULT            shift and go to state 107
    DIV             shift and go to state 108
    PLUS            reduce using rule 120 (empty -> .)
    MINUS           reduce using rule 120 (empty -> .)
    LT              reduce using rule 120 (empty -> .)
    GT              reduce using rule 120 (empty -> .)
    GTE             reduce using rule 120 (empty -> .)
    LTE             reduce using rule 120 (empty -> .)
    EQ              reduce using rule 120 (empty -> .)
    NE              reduce using rule 120 (empty -> .)
    AND             reduce using rule 120 (empty -> .)
    OR              reduce using rule 120 (empty -> .)
    QUESTION        reduce using rule 120 (empty -> .)
    CPAREN          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    PRINT           reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    FOR             reduce using rule 120 (empty -> .)
    OCURLY          reduce using rule 120 (empty -> .)
    FUNCTION        reduce using rule 120 (empty -> .)
    CLASS           reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    OPAREN          reduce using rule 120 (empty -> .)
    CSTINT          reduce using rule 120 (empty -> .)
    CSTFLT          reduce using rule 120 (empty -> .)
    CSTCHAR         reduce using rule 120 (empty -> .)
    CSTSTRING       reduce using rule 120 (empty -> .)
    TRUE            reduce using rule 120 (empty -> .)
    FALSE           reduce using rule 120 (empty -> .)
    CCURLY          reduce using rule 120 (empty -> .)
    COLON           reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    CBRACKET        reduce using rule 120 (empty -> .)

    term1                          shift and go to state 106
    empty                          shift and go to state 109

state 41

    (112) factor -> varcst .

    MULT            reduce using rule 112 (factor -> varcst .)
    DIV             reduce using rule 112 (factor -> varcst .)
    PLUS            reduce using rule 112 (factor -> varcst .)
    MINUS           reduce using rule 112 (factor -> varcst .)
    LT              reduce using rule 112 (factor -> varcst .)
    GT              reduce using rule 112 (factor -> varcst .)
    GTE             reduce using rule 112 (factor -> varcst .)
    LTE             reduce using rule 112 (factor -> varcst .)
    EQ              reduce using rule 112 (factor -> varcst .)
    NE              reduce using rule 112 (factor -> varcst .)
    AND             reduce using rule 112 (factor -> varcst .)
    OR              reduce using rule 112 (factor -> varcst .)
    QUESTION        reduce using rule 112 (factor -> varcst .)
    CPAREN          reduce using rule 112 (factor -> varcst .)
    ID              reduce using rule 112 (factor -> varcst .)
    IF              reduce using rule 112 (factor -> varcst .)
    PRINT           reduce using rule 112 (factor -> varcst .)
    READ            reduce using rule 112 (factor -> varcst .)
    WHILE           reduce using rule 112 (factor -> varcst .)
    FOR             reduce using rule 112 (factor -> varcst .)
    OCURLY          reduce using rule 112 (factor -> varcst .)
    FUNCTION        reduce using rule 112 (factor -> varcst .)
    CLASS           reduce using rule 112 (factor -> varcst .)
    VAR             reduce using rule 112 (factor -> varcst .)
    OPAREN          reduce using rule 112 (factor -> varcst .)
    CSTINT          reduce using rule 112 (factor -> varcst .)
    CSTFLT          reduce using rule 112 (factor -> varcst .)
    CSTCHAR         reduce using rule 112 (factor -> varcst .)
    CSTSTRING       reduce using rule 112 (factor -> varcst .)
    TRUE            reduce using rule 112 (factor -> varcst .)
    FALSE           reduce using rule 112 (factor -> varcst .)
    CCURLY          reduce using rule 112 (factor -> varcst .)
    COLON           reduce using rule 112 (factor -> varcst .)
    SEMICOLON       reduce using rule 112 (factor -> varcst .)
    COMMA           reduce using rule 112 (factor -> varcst .)
    CBRACKET        reduce using rule 112 (factor -> varcst .)


state 42

    (115) varcst -> CSTINT .

    MULT            reduce using rule 115 (varcst -> CSTINT .)
    DIV             reduce using rule 115 (varcst -> CSTINT .)
    PLUS            reduce using rule 115 (varcst -> CSTINT .)
    MINUS           reduce using rule 115 (varcst -> CSTINT .)
    LT              reduce using rule 115 (varcst -> CSTINT .)
    GT              reduce using rule 115 (varcst -> CSTINT .)
    GTE             reduce using rule 115 (varcst -> CSTINT .)
    LTE             reduce using rule 115 (varcst -> CSTINT .)
    EQ              reduce using rule 115 (varcst -> CSTINT .)
    NE              reduce using rule 115 (varcst -> CSTINT .)
    AND             reduce using rule 115 (varcst -> CSTINT .)
    OR              reduce using rule 115 (varcst -> CSTINT .)
    QUESTION        reduce using rule 115 (varcst -> CSTINT .)
    CPAREN          reduce using rule 115 (varcst -> CSTINT .)
    ID              reduce using rule 115 (varcst -> CSTINT .)
    IF              reduce using rule 115 (varcst -> CSTINT .)
    PRINT           reduce using rule 115 (varcst -> CSTINT .)
    READ            reduce using rule 115 (varcst -> CSTINT .)
    WHILE           reduce using rule 115 (varcst -> CSTINT .)
    FOR             reduce using rule 115 (varcst -> CSTINT .)
    OCURLY          reduce using rule 115 (varcst -> CSTINT .)
    FUNCTION        reduce using rule 115 (varcst -> CSTINT .)
    CLASS           reduce using rule 115 (varcst -> CSTINT .)
    VAR             reduce using rule 115 (varcst -> CSTINT .)
    OPAREN          reduce using rule 115 (varcst -> CSTINT .)
    CSTINT          reduce using rule 115 (varcst -> CSTINT .)
    CSTFLT          reduce using rule 115 (varcst -> CSTINT .)
    CSTCHAR         reduce using rule 115 (varcst -> CSTINT .)
    CSTSTRING       reduce using rule 115 (varcst -> CSTINT .)
    TRUE            reduce using rule 115 (varcst -> CSTINT .)
    FALSE           reduce using rule 115 (varcst -> CSTINT .)
    CCURLY          reduce using rule 115 (varcst -> CSTINT .)
    COLON           reduce using rule 115 (varcst -> CSTINT .)
    SEMICOLON       reduce using rule 115 (varcst -> CSTINT .)
    COMMA           reduce using rule 115 (varcst -> CSTINT .)
    CBRACKET        reduce using rule 115 (varcst -> CSTINT .)


state 43

    (116) varcst -> CSTFLT .

    MULT            reduce using rule 116 (varcst -> CSTFLT .)
    DIV             reduce using rule 116 (varcst -> CSTFLT .)
    PLUS            reduce using rule 116 (varcst -> CSTFLT .)
    MINUS           reduce using rule 116 (varcst -> CSTFLT .)
    LT              reduce using rule 116 (varcst -> CSTFLT .)
    GT              reduce using rule 116 (varcst -> CSTFLT .)
    GTE             reduce using rule 116 (varcst -> CSTFLT .)
    LTE             reduce using rule 116 (varcst -> CSTFLT .)
    EQ              reduce using rule 116 (varcst -> CSTFLT .)
    NE              reduce using rule 116 (varcst -> CSTFLT .)
    AND             reduce using rule 116 (varcst -> CSTFLT .)
    OR              reduce using rule 116 (varcst -> CSTFLT .)
    QUESTION        reduce using rule 116 (varcst -> CSTFLT .)
    CPAREN          reduce using rule 116 (varcst -> CSTFLT .)
    ID              reduce using rule 116 (varcst -> CSTFLT .)
    IF              reduce using rule 116 (varcst -> CSTFLT .)
    PRINT           reduce using rule 116 (varcst -> CSTFLT .)
    READ            reduce using rule 116 (varcst -> CSTFLT .)
    WHILE           reduce using rule 116 (varcst -> CSTFLT .)
    FOR             reduce using rule 116 (varcst -> CSTFLT .)
    OCURLY          reduce using rule 116 (varcst -> CSTFLT .)
    FUNCTION        reduce using rule 116 (varcst -> CSTFLT .)
    CLASS           reduce using rule 116 (varcst -> CSTFLT .)
    VAR             reduce using rule 116 (varcst -> CSTFLT .)
    OPAREN          reduce using rule 116 (varcst -> CSTFLT .)
    CSTINT          reduce using rule 116 (varcst -> CSTFLT .)
    CSTFLT          reduce using rule 116 (varcst -> CSTFLT .)
    CSTCHAR         reduce using rule 116 (varcst -> CSTFLT .)
    CSTSTRING       reduce using rule 116 (varcst -> CSTFLT .)
    TRUE            reduce using rule 116 (varcst -> CSTFLT .)
    FALSE           reduce using rule 116 (varcst -> CSTFLT .)
    CCURLY          reduce using rule 116 (varcst -> CSTFLT .)
    COLON           reduce using rule 116 (varcst -> CSTFLT .)
    SEMICOLON       reduce using rule 116 (varcst -> CSTFLT .)
    COMMA           reduce using rule 116 (varcst -> CSTFLT .)
    CBRACKET        reduce using rule 116 (varcst -> CSTFLT .)


state 44

    (117) varcst -> CSTCHAR .

    MULT            reduce using rule 117 (varcst -> CSTCHAR .)
    DIV             reduce using rule 117 (varcst -> CSTCHAR .)
    PLUS            reduce using rule 117 (varcst -> CSTCHAR .)
    MINUS           reduce using rule 117 (varcst -> CSTCHAR .)
    LT              reduce using rule 117 (varcst -> CSTCHAR .)
    GT              reduce using rule 117 (varcst -> CSTCHAR .)
    GTE             reduce using rule 117 (varcst -> CSTCHAR .)
    LTE             reduce using rule 117 (varcst -> CSTCHAR .)
    EQ              reduce using rule 117 (varcst -> CSTCHAR .)
    NE              reduce using rule 117 (varcst -> CSTCHAR .)
    AND             reduce using rule 117 (varcst -> CSTCHAR .)
    OR              reduce using rule 117 (varcst -> CSTCHAR .)
    QUESTION        reduce using rule 117 (varcst -> CSTCHAR .)
    CPAREN          reduce using rule 117 (varcst -> CSTCHAR .)
    ID              reduce using rule 117 (varcst -> CSTCHAR .)
    IF              reduce using rule 117 (varcst -> CSTCHAR .)
    PRINT           reduce using rule 117 (varcst -> CSTCHAR .)
    READ            reduce using rule 117 (varcst -> CSTCHAR .)
    WHILE           reduce using rule 117 (varcst -> CSTCHAR .)
    FOR             reduce using rule 117 (varcst -> CSTCHAR .)
    OCURLY          reduce using rule 117 (varcst -> CSTCHAR .)
    FUNCTION        reduce using rule 117 (varcst -> CSTCHAR .)
    CLASS           reduce using rule 117 (varcst -> CSTCHAR .)
    VAR             reduce using rule 117 (varcst -> CSTCHAR .)
    OPAREN          reduce using rule 117 (varcst -> CSTCHAR .)
    CSTINT          reduce using rule 117 (varcst -> CSTCHAR .)
    CSTFLT          reduce using rule 117 (varcst -> CSTCHAR .)
    CSTCHAR         reduce using rule 117 (varcst -> CSTCHAR .)
    CSTSTRING       reduce using rule 117 (varcst -> CSTCHAR .)
    TRUE            reduce using rule 117 (varcst -> CSTCHAR .)
    FALSE           reduce using rule 117 (varcst -> CSTCHAR .)
    CCURLY          reduce using rule 117 (varcst -> CSTCHAR .)
    COLON           reduce using rule 117 (varcst -> CSTCHAR .)
    SEMICOLON       reduce using rule 117 (varcst -> CSTCHAR .)
    COMMA           reduce using rule 117 (varcst -> CSTCHAR .)
    CBRACKET        reduce using rule 117 (varcst -> CSTCHAR .)


state 45

    (118) varcst -> CSTSTRING .

    MULT            reduce using rule 118 (varcst -> CSTSTRING .)
    DIV             reduce using rule 118 (varcst -> CSTSTRING .)
    PLUS            reduce using rule 118 (varcst -> CSTSTRING .)
    MINUS           reduce using rule 118 (varcst -> CSTSTRING .)
    LT              reduce using rule 118 (varcst -> CSTSTRING .)
    GT              reduce using rule 118 (varcst -> CSTSTRING .)
    GTE             reduce using rule 118 (varcst -> CSTSTRING .)
    LTE             reduce using rule 118 (varcst -> CSTSTRING .)
    EQ              reduce using rule 118 (varcst -> CSTSTRING .)
    NE              reduce using rule 118 (varcst -> CSTSTRING .)
    AND             reduce using rule 118 (varcst -> CSTSTRING .)
    OR              reduce using rule 118 (varcst -> CSTSTRING .)
    QUESTION        reduce using rule 118 (varcst -> CSTSTRING .)
    CPAREN          reduce using rule 118 (varcst -> CSTSTRING .)
    ID              reduce using rule 118 (varcst -> CSTSTRING .)
    IF              reduce using rule 118 (varcst -> CSTSTRING .)
    PRINT           reduce using rule 118 (varcst -> CSTSTRING .)
    READ            reduce using rule 118 (varcst -> CSTSTRING .)
    WHILE           reduce using rule 118 (varcst -> CSTSTRING .)
    FOR             reduce using rule 118 (varcst -> CSTSTRING .)
    OCURLY          reduce using rule 118 (varcst -> CSTSTRING .)
    FUNCTION        reduce using rule 118 (varcst -> CSTSTRING .)
    CLASS           reduce using rule 118 (varcst -> CSTSTRING .)
    VAR             reduce using rule 118 (varcst -> CSTSTRING .)
    OPAREN          reduce using rule 118 (varcst -> CSTSTRING .)
    CSTINT          reduce using rule 118 (varcst -> CSTSTRING .)
    CSTFLT          reduce using rule 118 (varcst -> CSTSTRING .)
    CSTCHAR         reduce using rule 118 (varcst -> CSTSTRING .)
    CSTSTRING       reduce using rule 118 (varcst -> CSTSTRING .)
    TRUE            reduce using rule 118 (varcst -> CSTSTRING .)
    FALSE           reduce using rule 118 (varcst -> CSTSTRING .)
    CCURLY          reduce using rule 118 (varcst -> CSTSTRING .)
    COLON           reduce using rule 118 (varcst -> CSTSTRING .)
    SEMICOLON       reduce using rule 118 (varcst -> CSTSTRING .)
    COMMA           reduce using rule 118 (varcst -> CSTSTRING .)
    CBRACKET        reduce using rule 118 (varcst -> CSTSTRING .)


state 46

    (119) varcst -> boolean .

    MULT            reduce using rule 119 (varcst -> boolean .)
    DIV             reduce using rule 119 (varcst -> boolean .)
    PLUS            reduce using rule 119 (varcst -> boolean .)
    MINUS           reduce using rule 119 (varcst -> boolean .)
    LT              reduce using rule 119 (varcst -> boolean .)
    GT              reduce using rule 119 (varcst -> boolean .)
    GTE             reduce using rule 119 (varcst -> boolean .)
    LTE             reduce using rule 119 (varcst -> boolean .)
    EQ              reduce using rule 119 (varcst -> boolean .)
    NE              reduce using rule 119 (varcst -> boolean .)
    AND             reduce using rule 119 (varcst -> boolean .)
    OR              reduce using rule 119 (varcst -> boolean .)
    QUESTION        reduce using rule 119 (varcst -> boolean .)
    CPAREN          reduce using rule 119 (varcst -> boolean .)
    ID              reduce using rule 119 (varcst -> boolean .)
    IF              reduce using rule 119 (varcst -> boolean .)
    PRINT           reduce using rule 119 (varcst -> boolean .)
    READ            reduce using rule 119 (varcst -> boolean .)
    WHILE           reduce using rule 119 (varcst -> boolean .)
    FOR             reduce using rule 119 (varcst -> boolean .)
    OCURLY          reduce using rule 119 (varcst -> boolean .)
    FUNCTION        reduce using rule 119 (varcst -> boolean .)
    CLASS           reduce using rule 119 (varcst -> boolean .)
    VAR             reduce using rule 119 (varcst -> boolean .)
    OPAREN          reduce using rule 119 (varcst -> boolean .)
    CSTINT          reduce using rule 119 (varcst -> boolean .)
    CSTFLT          reduce using rule 119 (varcst -> boolean .)
    CSTCHAR         reduce using rule 119 (varcst -> boolean .)
    CSTSTRING       reduce using rule 119 (varcst -> boolean .)
    TRUE            reduce using rule 119 (varcst -> boolean .)
    FALSE           reduce using rule 119 (varcst -> boolean .)
    CCURLY          reduce using rule 119 (varcst -> boolean .)
    COLON           reduce using rule 119 (varcst -> boolean .)
    SEMICOLON       reduce using rule 119 (varcst -> boolean .)
    COMMA           reduce using rule 119 (varcst -> boolean .)
    CBRACKET        reduce using rule 119 (varcst -> boolean .)


state 47

    (78) boolean -> TRUE .

    MULT            reduce using rule 78 (boolean -> TRUE .)
    DIV             reduce using rule 78 (boolean -> TRUE .)
    PLUS            reduce using rule 78 (boolean -> TRUE .)
    MINUS           reduce using rule 78 (boolean -> TRUE .)
    LT              reduce using rule 78 (boolean -> TRUE .)
    GT              reduce using rule 78 (boolean -> TRUE .)
    GTE             reduce using rule 78 (boolean -> TRUE .)
    LTE             reduce using rule 78 (boolean -> TRUE .)
    EQ              reduce using rule 78 (boolean -> TRUE .)
    NE              reduce using rule 78 (boolean -> TRUE .)
    AND             reduce using rule 78 (boolean -> TRUE .)
    OR              reduce using rule 78 (boolean -> TRUE .)
    QUESTION        reduce using rule 78 (boolean -> TRUE .)
    CPAREN          reduce using rule 78 (boolean -> TRUE .)
    ID              reduce using rule 78 (boolean -> TRUE .)
    IF              reduce using rule 78 (boolean -> TRUE .)
    PRINT           reduce using rule 78 (boolean -> TRUE .)
    READ            reduce using rule 78 (boolean -> TRUE .)
    WHILE           reduce using rule 78 (boolean -> TRUE .)
    FOR             reduce using rule 78 (boolean -> TRUE .)
    OCURLY          reduce using rule 78 (boolean -> TRUE .)
    FUNCTION        reduce using rule 78 (boolean -> TRUE .)
    CLASS           reduce using rule 78 (boolean -> TRUE .)
    VAR             reduce using rule 78 (boolean -> TRUE .)
    OPAREN          reduce using rule 78 (boolean -> TRUE .)
    CSTINT          reduce using rule 78 (boolean -> TRUE .)
    CSTFLT          reduce using rule 78 (boolean -> TRUE .)
    CSTCHAR         reduce using rule 78 (boolean -> TRUE .)
    CSTSTRING       reduce using rule 78 (boolean -> TRUE .)
    TRUE            reduce using rule 78 (boolean -> TRUE .)
    FALSE           reduce using rule 78 (boolean -> TRUE .)
    CCURLY          reduce using rule 78 (boolean -> TRUE .)
    COLON           reduce using rule 78 (boolean -> TRUE .)
    SEMICOLON       reduce using rule 78 (boolean -> TRUE .)
    COMMA           reduce using rule 78 (boolean -> TRUE .)
    CBRACKET        reduce using rule 78 (boolean -> TRUE .)


state 48

    (79) boolean -> FALSE .

    MULT            reduce using rule 79 (boolean -> FALSE .)
    DIV             reduce using rule 79 (boolean -> FALSE .)
    PLUS            reduce using rule 79 (boolean -> FALSE .)
    MINUS           reduce using rule 79 (boolean -> FALSE .)
    LT              reduce using rule 79 (boolean -> FALSE .)
    GT              reduce using rule 79 (boolean -> FALSE .)
    GTE             reduce using rule 79 (boolean -> FALSE .)
    LTE             reduce using rule 79 (boolean -> FALSE .)
    EQ              reduce using rule 79 (boolean -> FALSE .)
    NE              reduce using rule 79 (boolean -> FALSE .)
    AND             reduce using rule 79 (boolean -> FALSE .)
    OR              reduce using rule 79 (boolean -> FALSE .)
    QUESTION        reduce using rule 79 (boolean -> FALSE .)
    CPAREN          reduce using rule 79 (boolean -> FALSE .)
    ID              reduce using rule 79 (boolean -> FALSE .)
    IF              reduce using rule 79 (boolean -> FALSE .)
    PRINT           reduce using rule 79 (boolean -> FALSE .)
    READ            reduce using rule 79 (boolean -> FALSE .)
    WHILE           reduce using rule 79 (boolean -> FALSE .)
    FOR             reduce using rule 79 (boolean -> FALSE .)
    OCURLY          reduce using rule 79 (boolean -> FALSE .)
    FUNCTION        reduce using rule 79 (boolean -> FALSE .)
    CLASS           reduce using rule 79 (boolean -> FALSE .)
    VAR             reduce using rule 79 (boolean -> FALSE .)
    OPAREN          reduce using rule 79 (boolean -> FALSE .)
    CSTINT          reduce using rule 79 (boolean -> FALSE .)
    CSTFLT          reduce using rule 79 (boolean -> FALSE .)
    CSTCHAR         reduce using rule 79 (boolean -> FALSE .)
    CSTSTRING       reduce using rule 79 (boolean -> FALSE .)
    TRUE            reduce using rule 79 (boolean -> FALSE .)
    FALSE           reduce using rule 79 (boolean -> FALSE .)
    CCURLY          reduce using rule 79 (boolean -> FALSE .)
    COLON           reduce using rule 79 (boolean -> FALSE .)
    SEMICOLON       reduce using rule 79 (boolean -> FALSE .)
    COMMA           reduce using rule 79 (boolean -> FALSE .)
    CBRACKET        reduce using rule 79 (boolean -> FALSE .)


state 49

    (22) dec -> VAR tipo . SEMICOLON dec1

    SEMICOLON       shift and go to state 110


state 50

    (25) tipo -> compuesto . ID tipo1

    ID              shift and go to state 111


state 51

    (44) compuesto -> ID .

    ID              reduce using rule 44 (compuesto -> ID .)


state 52

    (26) tipo -> simple . ID tipo1

    ID              shift and go to state 112


state 53

    (27) tipo -> multiple . ID OBRACKET CSTINT CBRACKET tipo3 tipo2

    ID              shift and go to state 113


state 54

    (45) compuesto -> DATAFRAME .

    ID              reduce using rule 45 (compuesto -> DATAFRAME .)


state 55

    (46) compuesto -> FILE .

    ID              reduce using rule 46 (compuesto -> FILE .)


state 56

    (34) simple -> INT .

    ID              reduce using rule 34 (simple -> INT .)


state 57

    (35) simple -> FLOAT .

    ID              reduce using rule 35 (simple -> FLOAT .)


state 58

    (36) simple -> BOOL .

    ID              reduce using rule 36 (simple -> BOOL .)


state 59

    (37) simple -> STRING .

    ID              reduce using rule 37 (simple -> STRING .)


state 60

    (38) simple -> CHAR .

    ID              reduce using rule 38 (simple -> CHAR .)


state 61

    (39) multiple -> INTS .

    ID              reduce using rule 39 (multiple -> INTS .)


state 62

    (40) multiple -> FLOATS .

    ID              reduce using rule 40 (multiple -> FLOATS .)


state 63

    (41) multiple -> BOOLS .

    ID              reduce using rule 41 (multiple -> BOOLS .)


state 64

    (42) multiple -> STRINGS .

    ID              reduce using rule 42 (multiple -> STRINGS .)


state 65

    (43) multiple -> CHARS .

    ID              reduce using rule 43 (multiple -> CHARS .)


state 66

    (47) bloque -> OCURLY b1 CCURLY .

    $end            reduce using rule 47 (bloque -> OCURLY b1 CCURLY .)
    ID              reduce using rule 47 (bloque -> OCURLY b1 CCURLY .)
    IF              reduce using rule 47 (bloque -> OCURLY b1 CCURLY .)
    PRINT           reduce using rule 47 (bloque -> OCURLY b1 CCURLY .)
    READ            reduce using rule 47 (bloque -> OCURLY b1 CCURLY .)
    WHILE           reduce using rule 47 (bloque -> OCURLY b1 CCURLY .)
    FOR             reduce using rule 47 (bloque -> OCURLY b1 CCURLY .)
    OCURLY          reduce using rule 47 (bloque -> OCURLY b1 CCURLY .)
    FUNCTION        reduce using rule 47 (bloque -> OCURLY b1 CCURLY .)
    CLASS           reduce using rule 47 (bloque -> OCURLY b1 CCURLY .)
    VAR             reduce using rule 47 (bloque -> OCURLY b1 CCURLY .)
    OPAREN          reduce using rule 47 (bloque -> OCURLY b1 CCURLY .)
    CSTINT          reduce using rule 47 (bloque -> OCURLY b1 CCURLY .)
    CSTFLT          reduce using rule 47 (bloque -> OCURLY b1 CCURLY .)
    CSTCHAR         reduce using rule 47 (bloque -> OCURLY b1 CCURLY .)
    CSTSTRING       reduce using rule 47 (bloque -> OCURLY b1 CCURLY .)
    TRUE            reduce using rule 47 (bloque -> OCURLY b1 CCURLY .)
    FALSE           reduce using rule 47 (bloque -> OCURLY b1 CCURLY .)
    CCURLY          reduce using rule 47 (bloque -> OCURLY b1 CCURLY .)
    ELSE            reduce using rule 47 (bloque -> OCURLY b1 CCURLY .)
    SEMICOLON       reduce using rule 47 (bloque -> OCURLY b1 CCURLY .)


state 67

    (48) b1 -> estatuto b1 .

    CCURLY          reduce using rule 48 (b1 -> estatuto b1 .)


state 68

    (67) asignacion -> variable AS . exp
    (89) exp -> . texp exp1
    (92) texp -> . gexp texp1
    (95) gexp -> . mexp gexp1
    (103) mexp -> . termino mexp1
    (107) termino -> . factor term1
    (111) factor -> . OPAREN exp CPAREN
    (112) factor -> . varcst
    (113) factor -> . variable
    (114) factor -> . llamada
    (115) varcst -> . CSTINT
    (116) varcst -> . CSTFLT
    (117) varcst -> . CSTCHAR
    (118) varcst -> . CSTSTRING
    (119) varcst -> . boolean
    (80) variable -> . ID variable1 variable1 variable2
    (85) llamada -> . ID OPAREN exp llamada1 CPAREN
    (86) llamada -> . ID OPAREN CPAREN
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    variable                       shift and go to state 75
    exp                            shift and go to state 114
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 69

    (73) ternaria -> exp QUESTION . estatuto_redux COLON estatuto_redux SEMICOLON
    (62) estatuto_redux -> . asignacion
    (63) estatuto_redux -> . llamada
    (64) estatuto_redux -> . escritura
    (65) estatuto_redux -> . leer
    (66) estatuto_redux -> . ternaria
    (67) asignacion -> . variable AS exp
    (85) llamada -> . ID OPAREN exp llamada1 CPAREN
    (86) llamada -> . ID OPAREN CPAREN
    (74) escritura -> . PRINT OPAREN exp e1 CPAREN
    (77) leer -> . READ OPAREN exp e1 CPAREN
    (73) ternaria -> . exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON
    (80) variable -> . ID variable1 variable1 variable2
    (89) exp -> . texp exp1
    (92) texp -> . gexp texp1
    (95) gexp -> . mexp gexp1
    (103) mexp -> . termino mexp1
    (107) termino -> . factor term1
    (111) factor -> . OPAREN exp CPAREN
    (112) factor -> . varcst
    (113) factor -> . variable
    (114) factor -> . llamada
    (115) varcst -> . CSTINT
    (116) varcst -> . CSTFLT
    (117) varcst -> . CSTCHAR
    (118) varcst -> . CSTSTRING
    (119) varcst -> . boolean
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    ID              shift and go to state 27
    PRINT           shift and go to state 30
    READ            shift and go to state 31
    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 26
    estatuto_redux                 shift and go to state 115
    asignacion                     shift and go to state 116
    llamada                        shift and go to state 117
    escritura                      shift and go to state 118
    leer                           shift and go to state 119
    ternaria                       shift and go to state 120
    variable                       shift and go to state 25
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    boolean                        shift and go to state 46

state 70

    (85) llamada -> ID OPAREN . exp llamada1 CPAREN
    (86) llamada -> ID OPAREN . CPAREN
    (89) exp -> . texp exp1
    (92) texp -> . gexp texp1
    (95) gexp -> . mexp gexp1
    (103) mexp -> . termino mexp1
    (107) termino -> . factor term1
    (111) factor -> . OPAREN exp CPAREN
    (112) factor -> . varcst
    (113) factor -> . variable
    (114) factor -> . llamada
    (115) varcst -> . CSTINT
    (116) varcst -> . CSTFLT
    (117) varcst -> . CSTCHAR
    (118) varcst -> . CSTSTRING
    (119) varcst -> . boolean
    (80) variable -> . ID variable1 variable1 variable2
    (85) llamada -> . ID OPAREN exp llamada1 CPAREN
    (86) llamada -> . ID OPAREN CPAREN
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    CPAREN          shift and go to state 122
    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 121
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 71

    (80) variable -> ID variable1 . variable1 variable2
    (81) variable1 -> . OBRACKET exp CBRACKET
    (82) variable1 -> . empty
    (120) empty -> .

    OBRACKET        shift and go to state 72
    PERIOD          reduce using rule 120 (empty -> .)
    AS              reduce using rule 120 (empty -> .)
    MULT            reduce using rule 120 (empty -> .)
    DIV             reduce using rule 120 (empty -> .)
    PLUS            reduce using rule 120 (empty -> .)
    MINUS           reduce using rule 120 (empty -> .)
    LT              reduce using rule 120 (empty -> .)
    GT              reduce using rule 120 (empty -> .)
    GTE             reduce using rule 120 (empty -> .)
    LTE             reduce using rule 120 (empty -> .)
    EQ              reduce using rule 120 (empty -> .)
    NE              reduce using rule 120 (empty -> .)
    AND             reduce using rule 120 (empty -> .)
    OR              reduce using rule 120 (empty -> .)
    QUESTION        reduce using rule 120 (empty -> .)
    CPAREN          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    PRINT           reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    FOR             reduce using rule 120 (empty -> .)
    OCURLY          reduce using rule 120 (empty -> .)
    FUNCTION        reduce using rule 120 (empty -> .)
    CLASS           reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    OPAREN          reduce using rule 120 (empty -> .)
    CSTINT          reduce using rule 120 (empty -> .)
    CSTFLT          reduce using rule 120 (empty -> .)
    CSTCHAR         reduce using rule 120 (empty -> .)
    CSTSTRING       reduce using rule 120 (empty -> .)
    TRUE            reduce using rule 120 (empty -> .)
    FALSE           reduce using rule 120 (empty -> .)
    CCURLY          reduce using rule 120 (empty -> .)
    COLON           reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    CBRACKET        reduce using rule 120 (empty -> .)
    FROM            reduce using rule 120 (empty -> .)
    TO              reduce using rule 120 (empty -> .)
    BY              reduce using rule 120 (empty -> .)

    variable1                      shift and go to state 123
    empty                          shift and go to state 73

state 72

    (81) variable1 -> OBRACKET . exp CBRACKET
    (89) exp -> . texp exp1
    (92) texp -> . gexp texp1
    (95) gexp -> . mexp gexp1
    (103) mexp -> . termino mexp1
    (107) termino -> . factor term1
    (111) factor -> . OPAREN exp CPAREN
    (112) factor -> . varcst
    (113) factor -> . variable
    (114) factor -> . llamada
    (115) varcst -> . CSTINT
    (116) varcst -> . CSTFLT
    (117) varcst -> . CSTCHAR
    (118) varcst -> . CSTSTRING
    (119) varcst -> . boolean
    (80) variable -> . ID variable1 variable1 variable2
    (85) llamada -> . ID OPAREN exp llamada1 CPAREN
    (86) llamada -> . ID OPAREN CPAREN
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 124
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 73

    (82) variable1 -> empty .

    OBRACKET        reduce using rule 82 (variable1 -> empty .)
    PERIOD          reduce using rule 82 (variable1 -> empty .)
    AS              reduce using rule 82 (variable1 -> empty .)
    MULT            reduce using rule 82 (variable1 -> empty .)
    DIV             reduce using rule 82 (variable1 -> empty .)
    PLUS            reduce using rule 82 (variable1 -> empty .)
    MINUS           reduce using rule 82 (variable1 -> empty .)
    LT              reduce using rule 82 (variable1 -> empty .)
    GT              reduce using rule 82 (variable1 -> empty .)
    GTE             reduce using rule 82 (variable1 -> empty .)
    LTE             reduce using rule 82 (variable1 -> empty .)
    EQ              reduce using rule 82 (variable1 -> empty .)
    NE              reduce using rule 82 (variable1 -> empty .)
    AND             reduce using rule 82 (variable1 -> empty .)
    OR              reduce using rule 82 (variable1 -> empty .)
    QUESTION        reduce using rule 82 (variable1 -> empty .)
    CPAREN          reduce using rule 82 (variable1 -> empty .)
    ID              reduce using rule 82 (variable1 -> empty .)
    IF              reduce using rule 82 (variable1 -> empty .)
    PRINT           reduce using rule 82 (variable1 -> empty .)
    READ            reduce using rule 82 (variable1 -> empty .)
    WHILE           reduce using rule 82 (variable1 -> empty .)
    FOR             reduce using rule 82 (variable1 -> empty .)
    OCURLY          reduce using rule 82 (variable1 -> empty .)
    FUNCTION        reduce using rule 82 (variable1 -> empty .)
    CLASS           reduce using rule 82 (variable1 -> empty .)
    VAR             reduce using rule 82 (variable1 -> empty .)
    OPAREN          reduce using rule 82 (variable1 -> empty .)
    CSTINT          reduce using rule 82 (variable1 -> empty .)
    CSTFLT          reduce using rule 82 (variable1 -> empty .)
    CSTCHAR         reduce using rule 82 (variable1 -> empty .)
    CSTSTRING       reduce using rule 82 (variable1 -> empty .)
    TRUE            reduce using rule 82 (variable1 -> empty .)
    FALSE           reduce using rule 82 (variable1 -> empty .)
    CCURLY          reduce using rule 82 (variable1 -> empty .)
    COLON           reduce using rule 82 (variable1 -> empty .)
    SEMICOLON       reduce using rule 82 (variable1 -> empty .)
    COMMA           reduce using rule 82 (variable1 -> empty .)
    CBRACKET        reduce using rule 82 (variable1 -> empty .)
    FROM            reduce using rule 82 (variable1 -> empty .)
    TO              reduce using rule 82 (variable1 -> empty .)
    BY              reduce using rule 82 (variable1 -> empty .)


state 74

    (111) factor -> OPAREN exp . CPAREN

    CPAREN          shift and go to state 125


state 75

    (113) factor -> variable .

    MULT            reduce using rule 113 (factor -> variable .)
    DIV             reduce using rule 113 (factor -> variable .)
    PLUS            reduce using rule 113 (factor -> variable .)
    MINUS           reduce using rule 113 (factor -> variable .)
    LT              reduce using rule 113 (factor -> variable .)
    GT              reduce using rule 113 (factor -> variable .)
    GTE             reduce using rule 113 (factor -> variable .)
    LTE             reduce using rule 113 (factor -> variable .)
    EQ              reduce using rule 113 (factor -> variable .)
    NE              reduce using rule 113 (factor -> variable .)
    AND             reduce using rule 113 (factor -> variable .)
    OR              reduce using rule 113 (factor -> variable .)
    CPAREN          reduce using rule 113 (factor -> variable .)
    ID              reduce using rule 113 (factor -> variable .)
    IF              reduce using rule 113 (factor -> variable .)
    PRINT           reduce using rule 113 (factor -> variable .)
    READ            reduce using rule 113 (factor -> variable .)
    WHILE           reduce using rule 113 (factor -> variable .)
    FOR             reduce using rule 113 (factor -> variable .)
    OCURLY          reduce using rule 113 (factor -> variable .)
    FUNCTION        reduce using rule 113 (factor -> variable .)
    CLASS           reduce using rule 113 (factor -> variable .)
    VAR             reduce using rule 113 (factor -> variable .)
    OPAREN          reduce using rule 113 (factor -> variable .)
    CSTINT          reduce using rule 113 (factor -> variable .)
    CSTFLT          reduce using rule 113 (factor -> variable .)
    CSTCHAR         reduce using rule 113 (factor -> variable .)
    CSTSTRING       reduce using rule 113 (factor -> variable .)
    TRUE            reduce using rule 113 (factor -> variable .)
    FALSE           reduce using rule 113 (factor -> variable .)
    CCURLY          reduce using rule 113 (factor -> variable .)
    COLON           reduce using rule 113 (factor -> variable .)
    SEMICOLON       reduce using rule 113 (factor -> variable .)
    COMMA           reduce using rule 113 (factor -> variable .)
    CBRACKET        reduce using rule 113 (factor -> variable .)
    QUESTION        reduce using rule 113 (factor -> variable .)


state 76

    (114) factor -> llamada .

    MULT            reduce using rule 114 (factor -> llamada .)
    DIV             reduce using rule 114 (factor -> llamada .)
    PLUS            reduce using rule 114 (factor -> llamada .)
    MINUS           reduce using rule 114 (factor -> llamada .)
    LT              reduce using rule 114 (factor -> llamada .)
    GT              reduce using rule 114 (factor -> llamada .)
    GTE             reduce using rule 114 (factor -> llamada .)
    LTE             reduce using rule 114 (factor -> llamada .)
    EQ              reduce using rule 114 (factor -> llamada .)
    NE              reduce using rule 114 (factor -> llamada .)
    AND             reduce using rule 114 (factor -> llamada .)
    OR              reduce using rule 114 (factor -> llamada .)
    CPAREN          reduce using rule 114 (factor -> llamada .)
    ID              reduce using rule 114 (factor -> llamada .)
    IF              reduce using rule 114 (factor -> llamada .)
    PRINT           reduce using rule 114 (factor -> llamada .)
    READ            reduce using rule 114 (factor -> llamada .)
    WHILE           reduce using rule 114 (factor -> llamada .)
    FOR             reduce using rule 114 (factor -> llamada .)
    OCURLY          reduce using rule 114 (factor -> llamada .)
    FUNCTION        reduce using rule 114 (factor -> llamada .)
    CLASS           reduce using rule 114 (factor -> llamada .)
    VAR             reduce using rule 114 (factor -> llamada .)
    OPAREN          reduce using rule 114 (factor -> llamada .)
    CSTINT          reduce using rule 114 (factor -> llamada .)
    CSTFLT          reduce using rule 114 (factor -> llamada .)
    CSTCHAR         reduce using rule 114 (factor -> llamada .)
    CSTSTRING       reduce using rule 114 (factor -> llamada .)
    TRUE            reduce using rule 114 (factor -> llamada .)
    FALSE           reduce using rule 114 (factor -> llamada .)
    CCURLY          reduce using rule 114 (factor -> llamada .)
    COLON           reduce using rule 114 (factor -> llamada .)
    SEMICOLON       reduce using rule 114 (factor -> llamada .)
    COMMA           reduce using rule 114 (factor -> llamada .)
    CBRACKET        reduce using rule 114 (factor -> llamada .)
    QUESTION        reduce using rule 114 (factor -> llamada .)


state 77

    (80) variable -> ID . variable1 variable1 variable2
    (85) llamada -> ID . OPAREN exp llamada1 CPAREN
    (86) llamada -> ID . OPAREN CPAREN
    (81) variable1 -> . OBRACKET exp CBRACKET
    (82) variable1 -> . empty
    (120) empty -> .

  ! shift/reduce conflict for OBRACKET resolved as shift
  ! shift/reduce conflict for OPAREN resolved as shift
    OPAREN          shift and go to state 70
    OBRACKET        shift and go to state 72
    PERIOD          reduce using rule 120 (empty -> .)
    MULT            reduce using rule 120 (empty -> .)
    DIV             reduce using rule 120 (empty -> .)
    PLUS            reduce using rule 120 (empty -> .)
    MINUS           reduce using rule 120 (empty -> .)
    LT              reduce using rule 120 (empty -> .)
    GT              reduce using rule 120 (empty -> .)
    GTE             reduce using rule 120 (empty -> .)
    LTE             reduce using rule 120 (empty -> .)
    EQ              reduce using rule 120 (empty -> .)
    NE              reduce using rule 120 (empty -> .)
    AND             reduce using rule 120 (empty -> .)
    OR              reduce using rule 120 (empty -> .)
    CPAREN          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    PRINT           reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    FOR             reduce using rule 120 (empty -> .)
    OCURLY          reduce using rule 120 (empty -> .)
    FUNCTION        reduce using rule 120 (empty -> .)
    CLASS           reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    CSTINT          reduce using rule 120 (empty -> .)
    CSTFLT          reduce using rule 120 (empty -> .)
    CSTCHAR         reduce using rule 120 (empty -> .)
    CSTSTRING       reduce using rule 120 (empty -> .)
    TRUE            reduce using rule 120 (empty -> .)
    FALSE           reduce using rule 120 (empty -> .)
    CCURLY          reduce using rule 120 (empty -> .)
    COLON           reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    CBRACKET        reduce using rule 120 (empty -> .)
    QUESTION        reduce using rule 120 (empty -> .)

  ! OBRACKET        [ reduce using rule 120 (empty -> .) ]
  ! OPAREN          [ reduce using rule 120 (empty -> .) ]

    variable1                      shift and go to state 71
    empty                          shift and go to state 73

state 78

    (68) condicion -> IF cond2 . THEN bloque cond1 SEMICOLON

    THEN            shift and go to state 126


state 79

    (72) cond2 -> OPAREN . exp CPAREN
    (89) exp -> . texp exp1
    (92) texp -> . gexp texp1
    (95) gexp -> . mexp gexp1
    (103) mexp -> . termino mexp1
    (107) termino -> . factor term1
    (111) factor -> . OPAREN exp CPAREN
    (112) factor -> . varcst
    (113) factor -> . variable
    (114) factor -> . llamada
    (115) varcst -> . CSTINT
    (116) varcst -> . CSTFLT
    (117) varcst -> . CSTCHAR
    (118) varcst -> . CSTSTRING
    (119) varcst -> . boolean
    (80) variable -> . ID variable1 variable1 variable2
    (85) llamada -> . ID OPAREN exp llamada1 CPAREN
    (86) llamada -> . ID OPAREN CPAREN
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 127
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 80

    (74) escritura -> PRINT OPAREN . exp e1 CPAREN
    (89) exp -> . texp exp1
    (92) texp -> . gexp texp1
    (95) gexp -> . mexp gexp1
    (103) mexp -> . termino mexp1
    (107) termino -> . factor term1
    (111) factor -> . OPAREN exp CPAREN
    (112) factor -> . varcst
    (113) factor -> . variable
    (114) factor -> . llamada
    (115) varcst -> . CSTINT
    (116) varcst -> . CSTFLT
    (117) varcst -> . CSTCHAR
    (118) varcst -> . CSTSTRING
    (119) varcst -> . boolean
    (80) variable -> . ID variable1 variable1 variable2
    (85) llamada -> . ID OPAREN exp llamada1 CPAREN
    (86) llamada -> . ID OPAREN CPAREN
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 128
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 81

    (77) leer -> READ OPAREN . exp e1 CPAREN
    (89) exp -> . texp exp1
    (92) texp -> . gexp texp1
    (95) gexp -> . mexp gexp1
    (103) mexp -> . termino mexp1
    (107) termino -> . factor term1
    (111) factor -> . OPAREN exp CPAREN
    (112) factor -> . varcst
    (113) factor -> . variable
    (114) factor -> . llamada
    (115) varcst -> . CSTINT
    (116) varcst -> . CSTFLT
    (117) varcst -> . CSTCHAR
    (118) varcst -> . CSTSTRING
    (119) varcst -> . boolean
    (80) variable -> . ID variable1 variable1 variable2
    (85) llamada -> . ID OPAREN exp llamada1 CPAREN
    (86) llamada -> . ID OPAREN CPAREN
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 129
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 82

    (18) ciclo_while -> WHILE cond2 . THEN bloque SEMICOLON

    THEN            shift and go to state 130


state 83

    (19) ciclo_for -> FOR OPAREN . variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
    (80) variable -> . ID variable1 variable1 variable2

    ID              shift and go to state 132

    variable                       shift and go to state 131

state 84

    (3) funcion -> FUNCTION func1 . ID OPAREN param CPAREN bloque

    ID              shift and go to state 133


state 85

    (4) func1 -> simple .

    ID              reduce using rule 4 (func1 -> simple .)


state 86

    (5) func1 -> VOID .

    ID              reduce using rule 5 (func1 -> VOID .)


state 87

    (12) clase -> CLASS ID . COLON clase_bloque SEMICOLON

    COLON           shift and go to state 134


state 88

    (89) exp -> texp exp1 .

    QUESTION        reduce using rule 89 (exp -> texp exp1 .)
    CPAREN          reduce using rule 89 (exp -> texp exp1 .)
    ID              reduce using rule 89 (exp -> texp exp1 .)
    IF              reduce using rule 89 (exp -> texp exp1 .)
    PRINT           reduce using rule 89 (exp -> texp exp1 .)
    READ            reduce using rule 89 (exp -> texp exp1 .)
    WHILE           reduce using rule 89 (exp -> texp exp1 .)
    FOR             reduce using rule 89 (exp -> texp exp1 .)
    OCURLY          reduce using rule 89 (exp -> texp exp1 .)
    FUNCTION        reduce using rule 89 (exp -> texp exp1 .)
    CLASS           reduce using rule 89 (exp -> texp exp1 .)
    VAR             reduce using rule 89 (exp -> texp exp1 .)
    OPAREN          reduce using rule 89 (exp -> texp exp1 .)
    CSTINT          reduce using rule 89 (exp -> texp exp1 .)
    CSTFLT          reduce using rule 89 (exp -> texp exp1 .)
    CSTCHAR         reduce using rule 89 (exp -> texp exp1 .)
    CSTSTRING       reduce using rule 89 (exp -> texp exp1 .)
    TRUE            reduce using rule 89 (exp -> texp exp1 .)
    FALSE           reduce using rule 89 (exp -> texp exp1 .)
    CCURLY          reduce using rule 89 (exp -> texp exp1 .)
    COLON           reduce using rule 89 (exp -> texp exp1 .)
    SEMICOLON       reduce using rule 89 (exp -> texp exp1 .)
    COMMA           reduce using rule 89 (exp -> texp exp1 .)
    CBRACKET        reduce using rule 89 (exp -> texp exp1 .)


state 89

    (90) exp1 -> OR . texp exp1
    (92) texp -> . gexp texp1
    (95) gexp -> . mexp gexp1
    (103) mexp -> . termino mexp1
    (107) termino -> . factor term1
    (111) factor -> . OPAREN exp CPAREN
    (112) factor -> . varcst
    (113) factor -> . variable
    (114) factor -> . llamada
    (115) varcst -> . CSTINT
    (116) varcst -> . CSTFLT
    (117) varcst -> . CSTCHAR
    (118) varcst -> . CSTSTRING
    (119) varcst -> . boolean
    (80) variable -> . ID variable1 variable1 variable2
    (85) llamada -> . ID OPAREN exp llamada1 CPAREN
    (86) llamada -> . ID OPAREN CPAREN
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    texp                           shift and go to state 135
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 90

    (91) exp1 -> empty .

    QUESTION        reduce using rule 91 (exp1 -> empty .)
    CPAREN          reduce using rule 91 (exp1 -> empty .)
    ID              reduce using rule 91 (exp1 -> empty .)
    IF              reduce using rule 91 (exp1 -> empty .)
    PRINT           reduce using rule 91 (exp1 -> empty .)
    READ            reduce using rule 91 (exp1 -> empty .)
    WHILE           reduce using rule 91 (exp1 -> empty .)
    FOR             reduce using rule 91 (exp1 -> empty .)
    OCURLY          reduce using rule 91 (exp1 -> empty .)
    FUNCTION        reduce using rule 91 (exp1 -> empty .)
    CLASS           reduce using rule 91 (exp1 -> empty .)
    VAR             reduce using rule 91 (exp1 -> empty .)
    OPAREN          reduce using rule 91 (exp1 -> empty .)
    CSTINT          reduce using rule 91 (exp1 -> empty .)
    CSTFLT          reduce using rule 91 (exp1 -> empty .)
    CSTCHAR         reduce using rule 91 (exp1 -> empty .)
    CSTSTRING       reduce using rule 91 (exp1 -> empty .)
    TRUE            reduce using rule 91 (exp1 -> empty .)
    FALSE           reduce using rule 91 (exp1 -> empty .)
    CCURLY          reduce using rule 91 (exp1 -> empty .)
    COLON           reduce using rule 91 (exp1 -> empty .)
    SEMICOLON       reduce using rule 91 (exp1 -> empty .)
    COMMA           reduce using rule 91 (exp1 -> empty .)
    CBRACKET        reduce using rule 91 (exp1 -> empty .)


state 91

    (92) texp -> gexp texp1 .

    OR              reduce using rule 92 (texp -> gexp texp1 .)
    QUESTION        reduce using rule 92 (texp -> gexp texp1 .)
    CPAREN          reduce using rule 92 (texp -> gexp texp1 .)
    ID              reduce using rule 92 (texp -> gexp texp1 .)
    IF              reduce using rule 92 (texp -> gexp texp1 .)
    PRINT           reduce using rule 92 (texp -> gexp texp1 .)
    READ            reduce using rule 92 (texp -> gexp texp1 .)
    WHILE           reduce using rule 92 (texp -> gexp texp1 .)
    FOR             reduce using rule 92 (texp -> gexp texp1 .)
    OCURLY          reduce using rule 92 (texp -> gexp texp1 .)
    FUNCTION        reduce using rule 92 (texp -> gexp texp1 .)
    CLASS           reduce using rule 92 (texp -> gexp texp1 .)
    VAR             reduce using rule 92 (texp -> gexp texp1 .)
    OPAREN          reduce using rule 92 (texp -> gexp texp1 .)
    CSTINT          reduce using rule 92 (texp -> gexp texp1 .)
    CSTFLT          reduce using rule 92 (texp -> gexp texp1 .)
    CSTCHAR         reduce using rule 92 (texp -> gexp texp1 .)
    CSTSTRING       reduce using rule 92 (texp -> gexp texp1 .)
    TRUE            reduce using rule 92 (texp -> gexp texp1 .)
    FALSE           reduce using rule 92 (texp -> gexp texp1 .)
    CCURLY          reduce using rule 92 (texp -> gexp texp1 .)
    COLON           reduce using rule 92 (texp -> gexp texp1 .)
    SEMICOLON       reduce using rule 92 (texp -> gexp texp1 .)
    COMMA           reduce using rule 92 (texp -> gexp texp1 .)
    CBRACKET        reduce using rule 92 (texp -> gexp texp1 .)


state 92

    (93) texp1 -> AND . gexp texp1
    (95) gexp -> . mexp gexp1
    (103) mexp -> . termino mexp1
    (107) termino -> . factor term1
    (111) factor -> . OPAREN exp CPAREN
    (112) factor -> . varcst
    (113) factor -> . variable
    (114) factor -> . llamada
    (115) varcst -> . CSTINT
    (116) varcst -> . CSTFLT
    (117) varcst -> . CSTCHAR
    (118) varcst -> . CSTSTRING
    (119) varcst -> . boolean
    (80) variable -> . ID variable1 variable1 variable2
    (85) llamada -> . ID OPAREN exp llamada1 CPAREN
    (86) llamada -> . ID OPAREN CPAREN
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    gexp                           shift and go to state 136
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 93

    (94) texp1 -> empty .

    OR              reduce using rule 94 (texp1 -> empty .)
    QUESTION        reduce using rule 94 (texp1 -> empty .)
    CPAREN          reduce using rule 94 (texp1 -> empty .)
    ID              reduce using rule 94 (texp1 -> empty .)
    IF              reduce using rule 94 (texp1 -> empty .)
    PRINT           reduce using rule 94 (texp1 -> empty .)
    READ            reduce using rule 94 (texp1 -> empty .)
    WHILE           reduce using rule 94 (texp1 -> empty .)
    FOR             reduce using rule 94 (texp1 -> empty .)
    OCURLY          reduce using rule 94 (texp1 -> empty .)
    FUNCTION        reduce using rule 94 (texp1 -> empty .)
    CLASS           reduce using rule 94 (texp1 -> empty .)
    VAR             reduce using rule 94 (texp1 -> empty .)
    OPAREN          reduce using rule 94 (texp1 -> empty .)
    CSTINT          reduce using rule 94 (texp1 -> empty .)
    CSTFLT          reduce using rule 94 (texp1 -> empty .)
    CSTCHAR         reduce using rule 94 (texp1 -> empty .)
    CSTSTRING       reduce using rule 94 (texp1 -> empty .)
    TRUE            reduce using rule 94 (texp1 -> empty .)
    FALSE           reduce using rule 94 (texp1 -> empty .)
    CCURLY          reduce using rule 94 (texp1 -> empty .)
    COLON           reduce using rule 94 (texp1 -> empty .)
    SEMICOLON       reduce using rule 94 (texp1 -> empty .)
    COMMA           reduce using rule 94 (texp1 -> empty .)
    CBRACKET        reduce using rule 94 (texp1 -> empty .)


state 94

    (95) gexp -> mexp gexp1 .

    AND             reduce using rule 95 (gexp -> mexp gexp1 .)
    OR              reduce using rule 95 (gexp -> mexp gexp1 .)
    QUESTION        reduce using rule 95 (gexp -> mexp gexp1 .)
    CPAREN          reduce using rule 95 (gexp -> mexp gexp1 .)
    ID              reduce using rule 95 (gexp -> mexp gexp1 .)
    IF              reduce using rule 95 (gexp -> mexp gexp1 .)
    PRINT           reduce using rule 95 (gexp -> mexp gexp1 .)
    READ            reduce using rule 95 (gexp -> mexp gexp1 .)
    WHILE           reduce using rule 95 (gexp -> mexp gexp1 .)
    FOR             reduce using rule 95 (gexp -> mexp gexp1 .)
    OCURLY          reduce using rule 95 (gexp -> mexp gexp1 .)
    FUNCTION        reduce using rule 95 (gexp -> mexp gexp1 .)
    CLASS           reduce using rule 95 (gexp -> mexp gexp1 .)
    VAR             reduce using rule 95 (gexp -> mexp gexp1 .)
    OPAREN          reduce using rule 95 (gexp -> mexp gexp1 .)
    CSTINT          reduce using rule 95 (gexp -> mexp gexp1 .)
    CSTFLT          reduce using rule 95 (gexp -> mexp gexp1 .)
    CSTCHAR         reduce using rule 95 (gexp -> mexp gexp1 .)
    CSTSTRING       reduce using rule 95 (gexp -> mexp gexp1 .)
    TRUE            reduce using rule 95 (gexp -> mexp gexp1 .)
    FALSE           reduce using rule 95 (gexp -> mexp gexp1 .)
    CCURLY          reduce using rule 95 (gexp -> mexp gexp1 .)
    COLON           reduce using rule 95 (gexp -> mexp gexp1 .)
    SEMICOLON       reduce using rule 95 (gexp -> mexp gexp1 .)
    COMMA           reduce using rule 95 (gexp -> mexp gexp1 .)
    CBRACKET        reduce using rule 95 (gexp -> mexp gexp1 .)


state 95

    (96) gexp1 -> LT . mexp
    (103) mexp -> . termino mexp1
    (107) termino -> . factor term1
    (111) factor -> . OPAREN exp CPAREN
    (112) factor -> . varcst
    (113) factor -> . variable
    (114) factor -> . llamada
    (115) varcst -> . CSTINT
    (116) varcst -> . CSTFLT
    (117) varcst -> . CSTCHAR
    (118) varcst -> . CSTSTRING
    (119) varcst -> . boolean
    (80) variable -> . ID variable1 variable1 variable2
    (85) llamada -> . ID OPAREN exp llamada1 CPAREN
    (86) llamada -> . ID OPAREN CPAREN
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    mexp                           shift and go to state 137
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 96

    (97) gexp1 -> GT . mexp
    (103) mexp -> . termino mexp1
    (107) termino -> . factor term1
    (111) factor -> . OPAREN exp CPAREN
    (112) factor -> . varcst
    (113) factor -> . variable
    (114) factor -> . llamada
    (115) varcst -> . CSTINT
    (116) varcst -> . CSTFLT
    (117) varcst -> . CSTCHAR
    (118) varcst -> . CSTSTRING
    (119) varcst -> . boolean
    (80) variable -> . ID variable1 variable1 variable2
    (85) llamada -> . ID OPAREN exp llamada1 CPAREN
    (86) llamada -> . ID OPAREN CPAREN
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    mexp                           shift and go to state 138
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 97

    (98) gexp1 -> GTE . mexp
    (103) mexp -> . termino mexp1
    (107) termino -> . factor term1
    (111) factor -> . OPAREN exp CPAREN
    (112) factor -> . varcst
    (113) factor -> . variable
    (114) factor -> . llamada
    (115) varcst -> . CSTINT
    (116) varcst -> . CSTFLT
    (117) varcst -> . CSTCHAR
    (118) varcst -> . CSTSTRING
    (119) varcst -> . boolean
    (80) variable -> . ID variable1 variable1 variable2
    (85) llamada -> . ID OPAREN exp llamada1 CPAREN
    (86) llamada -> . ID OPAREN CPAREN
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    mexp                           shift and go to state 139
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 98

    (99) gexp1 -> LTE . mexp
    (103) mexp -> . termino mexp1
    (107) termino -> . factor term1
    (111) factor -> . OPAREN exp CPAREN
    (112) factor -> . varcst
    (113) factor -> . variable
    (114) factor -> . llamada
    (115) varcst -> . CSTINT
    (116) varcst -> . CSTFLT
    (117) varcst -> . CSTCHAR
    (118) varcst -> . CSTSTRING
    (119) varcst -> . boolean
    (80) variable -> . ID variable1 variable1 variable2
    (85) llamada -> . ID OPAREN exp llamada1 CPAREN
    (86) llamada -> . ID OPAREN CPAREN
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    mexp                           shift and go to state 140
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 99

    (100) gexp1 -> EQ . mexp
    (103) mexp -> . termino mexp1
    (107) termino -> . factor term1
    (111) factor -> . OPAREN exp CPAREN
    (112) factor -> . varcst
    (113) factor -> . variable
    (114) factor -> . llamada
    (115) varcst -> . CSTINT
    (116) varcst -> . CSTFLT
    (117) varcst -> . CSTCHAR
    (118) varcst -> . CSTSTRING
    (119) varcst -> . boolean
    (80) variable -> . ID variable1 variable1 variable2
    (85) llamada -> . ID OPAREN exp llamada1 CPAREN
    (86) llamada -> . ID OPAREN CPAREN
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    mexp                           shift and go to state 141
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 100

    (101) gexp1 -> NE . mexp
    (103) mexp -> . termino mexp1
    (107) termino -> . factor term1
    (111) factor -> . OPAREN exp CPAREN
    (112) factor -> . varcst
    (113) factor -> . variable
    (114) factor -> . llamada
    (115) varcst -> . CSTINT
    (116) varcst -> . CSTFLT
    (117) varcst -> . CSTCHAR
    (118) varcst -> . CSTSTRING
    (119) varcst -> . boolean
    (80) variable -> . ID variable1 variable1 variable2
    (85) llamada -> . ID OPAREN exp llamada1 CPAREN
    (86) llamada -> . ID OPAREN CPAREN
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    mexp                           shift and go to state 142
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 101

    (102) gexp1 -> empty .

    AND             reduce using rule 102 (gexp1 -> empty .)
    OR              reduce using rule 102 (gexp1 -> empty .)
    QUESTION        reduce using rule 102 (gexp1 -> empty .)
    CPAREN          reduce using rule 102 (gexp1 -> empty .)
    ID              reduce using rule 102 (gexp1 -> empty .)
    IF              reduce using rule 102 (gexp1 -> empty .)
    PRINT           reduce using rule 102 (gexp1 -> empty .)
    READ            reduce using rule 102 (gexp1 -> empty .)
    WHILE           reduce using rule 102 (gexp1 -> empty .)
    FOR             reduce using rule 102 (gexp1 -> empty .)
    OCURLY          reduce using rule 102 (gexp1 -> empty .)
    FUNCTION        reduce using rule 102 (gexp1 -> empty .)
    CLASS           reduce using rule 102 (gexp1 -> empty .)
    VAR             reduce using rule 102 (gexp1 -> empty .)
    OPAREN          reduce using rule 102 (gexp1 -> empty .)
    CSTINT          reduce using rule 102 (gexp1 -> empty .)
    CSTFLT          reduce using rule 102 (gexp1 -> empty .)
    CSTCHAR         reduce using rule 102 (gexp1 -> empty .)
    CSTSTRING       reduce using rule 102 (gexp1 -> empty .)
    TRUE            reduce using rule 102 (gexp1 -> empty .)
    FALSE           reduce using rule 102 (gexp1 -> empty .)
    CCURLY          reduce using rule 102 (gexp1 -> empty .)
    COLON           reduce using rule 102 (gexp1 -> empty .)
    SEMICOLON       reduce using rule 102 (gexp1 -> empty .)
    COMMA           reduce using rule 102 (gexp1 -> empty .)
    CBRACKET        reduce using rule 102 (gexp1 -> empty .)


state 102

    (103) mexp -> termino mexp1 .

    LT              reduce using rule 103 (mexp -> termino mexp1 .)
    GT              reduce using rule 103 (mexp -> termino mexp1 .)
    GTE             reduce using rule 103 (mexp -> termino mexp1 .)
    LTE             reduce using rule 103 (mexp -> termino mexp1 .)
    EQ              reduce using rule 103 (mexp -> termino mexp1 .)
    NE              reduce using rule 103 (mexp -> termino mexp1 .)
    AND             reduce using rule 103 (mexp -> termino mexp1 .)
    OR              reduce using rule 103 (mexp -> termino mexp1 .)
    QUESTION        reduce using rule 103 (mexp -> termino mexp1 .)
    CPAREN          reduce using rule 103 (mexp -> termino mexp1 .)
    ID              reduce using rule 103 (mexp -> termino mexp1 .)
    IF              reduce using rule 103 (mexp -> termino mexp1 .)
    PRINT           reduce using rule 103 (mexp -> termino mexp1 .)
    READ            reduce using rule 103 (mexp -> termino mexp1 .)
    WHILE           reduce using rule 103 (mexp -> termino mexp1 .)
    FOR             reduce using rule 103 (mexp -> termino mexp1 .)
    OCURLY          reduce using rule 103 (mexp -> termino mexp1 .)
    FUNCTION        reduce using rule 103 (mexp -> termino mexp1 .)
    CLASS           reduce using rule 103 (mexp -> termino mexp1 .)
    VAR             reduce using rule 103 (mexp -> termino mexp1 .)
    OPAREN          reduce using rule 103 (mexp -> termino mexp1 .)
    CSTINT          reduce using rule 103 (mexp -> termino mexp1 .)
    CSTFLT          reduce using rule 103 (mexp -> termino mexp1 .)
    CSTCHAR         reduce using rule 103 (mexp -> termino mexp1 .)
    CSTSTRING       reduce using rule 103 (mexp -> termino mexp1 .)
    TRUE            reduce using rule 103 (mexp -> termino mexp1 .)
    FALSE           reduce using rule 103 (mexp -> termino mexp1 .)
    CCURLY          reduce using rule 103 (mexp -> termino mexp1 .)
    COLON           reduce using rule 103 (mexp -> termino mexp1 .)
    SEMICOLON       reduce using rule 103 (mexp -> termino mexp1 .)
    COMMA           reduce using rule 103 (mexp -> termino mexp1 .)
    CBRACKET        reduce using rule 103 (mexp -> termino mexp1 .)


state 103

    (104) mexp1 -> PLUS . termino mexp1
    (107) termino -> . factor term1
    (111) factor -> . OPAREN exp CPAREN
    (112) factor -> . varcst
    (113) factor -> . variable
    (114) factor -> . llamada
    (115) varcst -> . CSTINT
    (116) varcst -> . CSTFLT
    (117) varcst -> . CSTCHAR
    (118) varcst -> . CSTSTRING
    (119) varcst -> . boolean
    (80) variable -> . ID variable1 variable1 variable2
    (85) llamada -> . ID OPAREN exp llamada1 CPAREN
    (86) llamada -> . ID OPAREN CPAREN
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    termino                        shift and go to state 143
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 104

    (105) mexp1 -> MINUS . termino mexp1
    (107) termino -> . factor term1
    (111) factor -> . OPAREN exp CPAREN
    (112) factor -> . varcst
    (113) factor -> . variable
    (114) factor -> . llamada
    (115) varcst -> . CSTINT
    (116) varcst -> . CSTFLT
    (117) varcst -> . CSTCHAR
    (118) varcst -> . CSTSTRING
    (119) varcst -> . boolean
    (80) variable -> . ID variable1 variable1 variable2
    (85) llamada -> . ID OPAREN exp llamada1 CPAREN
    (86) llamada -> . ID OPAREN CPAREN
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    termino                        shift and go to state 144
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 105

    (106) mexp1 -> empty .

    LT              reduce using rule 106 (mexp1 -> empty .)
    GT              reduce using rule 106 (mexp1 -> empty .)
    GTE             reduce using rule 106 (mexp1 -> empty .)
    LTE             reduce using rule 106 (mexp1 -> empty .)
    EQ              reduce using rule 106 (mexp1 -> empty .)
    NE              reduce using rule 106 (mexp1 -> empty .)
    AND             reduce using rule 106 (mexp1 -> empty .)
    OR              reduce using rule 106 (mexp1 -> empty .)
    QUESTION        reduce using rule 106 (mexp1 -> empty .)
    CPAREN          reduce using rule 106 (mexp1 -> empty .)
    ID              reduce using rule 106 (mexp1 -> empty .)
    IF              reduce using rule 106 (mexp1 -> empty .)
    PRINT           reduce using rule 106 (mexp1 -> empty .)
    READ            reduce using rule 106 (mexp1 -> empty .)
    WHILE           reduce using rule 106 (mexp1 -> empty .)
    FOR             reduce using rule 106 (mexp1 -> empty .)
    OCURLY          reduce using rule 106 (mexp1 -> empty .)
    FUNCTION        reduce using rule 106 (mexp1 -> empty .)
    CLASS           reduce using rule 106 (mexp1 -> empty .)
    VAR             reduce using rule 106 (mexp1 -> empty .)
    OPAREN          reduce using rule 106 (mexp1 -> empty .)
    CSTINT          reduce using rule 106 (mexp1 -> empty .)
    CSTFLT          reduce using rule 106 (mexp1 -> empty .)
    CSTCHAR         reduce using rule 106 (mexp1 -> empty .)
    CSTSTRING       reduce using rule 106 (mexp1 -> empty .)
    TRUE            reduce using rule 106 (mexp1 -> empty .)
    FALSE           reduce using rule 106 (mexp1 -> empty .)
    CCURLY          reduce using rule 106 (mexp1 -> empty .)
    COLON           reduce using rule 106 (mexp1 -> empty .)
    SEMICOLON       reduce using rule 106 (mexp1 -> empty .)
    COMMA           reduce using rule 106 (mexp1 -> empty .)
    CBRACKET        reduce using rule 106 (mexp1 -> empty .)


state 106

    (107) termino -> factor term1 .

    PLUS            reduce using rule 107 (termino -> factor term1 .)
    MINUS           reduce using rule 107 (termino -> factor term1 .)
    LT              reduce using rule 107 (termino -> factor term1 .)
    GT              reduce using rule 107 (termino -> factor term1 .)
    GTE             reduce using rule 107 (termino -> factor term1 .)
    LTE             reduce using rule 107 (termino -> factor term1 .)
    EQ              reduce using rule 107 (termino -> factor term1 .)
    NE              reduce using rule 107 (termino -> factor term1 .)
    AND             reduce using rule 107 (termino -> factor term1 .)
    OR              reduce using rule 107 (termino -> factor term1 .)
    QUESTION        reduce using rule 107 (termino -> factor term1 .)
    CPAREN          reduce using rule 107 (termino -> factor term1 .)
    ID              reduce using rule 107 (termino -> factor term1 .)
    IF              reduce using rule 107 (termino -> factor term1 .)
    PRINT           reduce using rule 107 (termino -> factor term1 .)
    READ            reduce using rule 107 (termino -> factor term1 .)
    WHILE           reduce using rule 107 (termino -> factor term1 .)
    FOR             reduce using rule 107 (termino -> factor term1 .)
    OCURLY          reduce using rule 107 (termino -> factor term1 .)
    FUNCTION        reduce using rule 107 (termino -> factor term1 .)
    CLASS           reduce using rule 107 (termino -> factor term1 .)
    VAR             reduce using rule 107 (termino -> factor term1 .)
    OPAREN          reduce using rule 107 (termino -> factor term1 .)
    CSTINT          reduce using rule 107 (termino -> factor term1 .)
    CSTFLT          reduce using rule 107 (termino -> factor term1 .)
    CSTCHAR         reduce using rule 107 (termino -> factor term1 .)
    CSTSTRING       reduce using rule 107 (termino -> factor term1 .)
    TRUE            reduce using rule 107 (termino -> factor term1 .)
    FALSE           reduce using rule 107 (termino -> factor term1 .)
    CCURLY          reduce using rule 107 (termino -> factor term1 .)
    COLON           reduce using rule 107 (termino -> factor term1 .)
    SEMICOLON       reduce using rule 107 (termino -> factor term1 .)
    COMMA           reduce using rule 107 (termino -> factor term1 .)
    CBRACKET        reduce using rule 107 (termino -> factor term1 .)


state 107

    (108) term1 -> MULT . factor term1
    (111) factor -> . OPAREN exp CPAREN
    (112) factor -> . varcst
    (113) factor -> . variable
    (114) factor -> . llamada
    (115) varcst -> . CSTINT
    (116) varcst -> . CSTFLT
    (117) varcst -> . CSTCHAR
    (118) varcst -> . CSTSTRING
    (119) varcst -> . boolean
    (80) variable -> . ID variable1 variable1 variable2
    (85) llamada -> . ID OPAREN exp llamada1 CPAREN
    (86) llamada -> . ID OPAREN CPAREN
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    factor                         shift and go to state 145
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 108

    (109) term1 -> DIV . factor term1
    (111) factor -> . OPAREN exp CPAREN
    (112) factor -> . varcst
    (113) factor -> . variable
    (114) factor -> . llamada
    (115) varcst -> . CSTINT
    (116) varcst -> . CSTFLT
    (117) varcst -> . CSTCHAR
    (118) varcst -> . CSTSTRING
    (119) varcst -> . boolean
    (80) variable -> . ID variable1 variable1 variable2
    (85) llamada -> . ID OPAREN exp llamada1 CPAREN
    (86) llamada -> . ID OPAREN CPAREN
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    factor                         shift and go to state 146
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 109

    (110) term1 -> empty .

    PLUS            reduce using rule 110 (term1 -> empty .)
    MINUS           reduce using rule 110 (term1 -> empty .)
    LT              reduce using rule 110 (term1 -> empty .)
    GT              reduce using rule 110 (term1 -> empty .)
    GTE             reduce using rule 110 (term1 -> empty .)
    LTE             reduce using rule 110 (term1 -> empty .)
    EQ              reduce using rule 110 (term1 -> empty .)
    NE              reduce using rule 110 (term1 -> empty .)
    AND             reduce using rule 110 (term1 -> empty .)
    OR              reduce using rule 110 (term1 -> empty .)
    QUESTION        reduce using rule 110 (term1 -> empty .)
    CPAREN          reduce using rule 110 (term1 -> empty .)
    ID              reduce using rule 110 (term1 -> empty .)
    IF              reduce using rule 110 (term1 -> empty .)
    PRINT           reduce using rule 110 (term1 -> empty .)
    READ            reduce using rule 110 (term1 -> empty .)
    WHILE           reduce using rule 110 (term1 -> empty .)
    FOR             reduce using rule 110 (term1 -> empty .)
    OCURLY          reduce using rule 110 (term1 -> empty .)
    FUNCTION        reduce using rule 110 (term1 -> empty .)
    CLASS           reduce using rule 110 (term1 -> empty .)
    VAR             reduce using rule 110 (term1 -> empty .)
    OPAREN          reduce using rule 110 (term1 -> empty .)
    CSTINT          reduce using rule 110 (term1 -> empty .)
    CSTFLT          reduce using rule 110 (term1 -> empty .)
    CSTCHAR         reduce using rule 110 (term1 -> empty .)
    CSTSTRING       reduce using rule 110 (term1 -> empty .)
    TRUE            reduce using rule 110 (term1 -> empty .)
    FALSE           reduce using rule 110 (term1 -> empty .)
    CCURLY          reduce using rule 110 (term1 -> empty .)
    COLON           reduce using rule 110 (term1 -> empty .)
    SEMICOLON       reduce using rule 110 (term1 -> empty .)
    COMMA           reduce using rule 110 (term1 -> empty .)
    CBRACKET        reduce using rule 110 (term1 -> empty .)


state 110

    (22) dec -> VAR tipo SEMICOLON . dec1
    (23) dec1 -> . dec
    (24) dec1 -> . empty
    (22) dec -> . VAR tipo SEMICOLON dec1
    (120) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 8
    OCURLY          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    PRINT           reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    FOR             reduce using rule 120 (empty -> .)
    FUNCTION        reduce using rule 120 (empty -> .)
    CLASS           reduce using rule 120 (empty -> .)
    OPAREN          reduce using rule 120 (empty -> .)
    CSTINT          reduce using rule 120 (empty -> .)
    CSTFLT          reduce using rule 120 (empty -> .)
    CSTCHAR         reduce using rule 120 (empty -> .)
    CSTSTRING       reduce using rule 120 (empty -> .)
    TRUE            reduce using rule 120 (empty -> .)
    FALSE           reduce using rule 120 (empty -> .)
    CCURLY          reduce using rule 120 (empty -> .)
    METHODS         reduce using rule 120 (empty -> .)

  ! VAR             [ reduce using rule 120 (empty -> .) ]

    dec1                           shift and go to state 147
    dec                            shift and go to state 148
    empty                          shift and go to state 149

state 111

    (25) tipo -> compuesto ID . tipo1
    (28) tipo1 -> . COMMA ID tipo1
    (29) tipo1 -> . empty
    (120) empty -> .

    COMMA           shift and go to state 151
    SEMICOLON       reduce using rule 120 (empty -> .)

    tipo1                          shift and go to state 150
    empty                          shift and go to state 152

state 112

    (26) tipo -> simple ID . tipo1
    (28) tipo1 -> . COMMA ID tipo1
    (29) tipo1 -> . empty
    (120) empty -> .

    COMMA           shift and go to state 151
    SEMICOLON       reduce using rule 120 (empty -> .)

    tipo1                          shift and go to state 153
    empty                          shift and go to state 152

state 113

    (27) tipo -> multiple ID . OBRACKET CSTINT CBRACKET tipo3 tipo2

    OBRACKET        shift and go to state 154


state 114

    (67) asignacion -> variable AS exp .

    ID              reduce using rule 67 (asignacion -> variable AS exp .)
    IF              reduce using rule 67 (asignacion -> variable AS exp .)
    PRINT           reduce using rule 67 (asignacion -> variable AS exp .)
    READ            reduce using rule 67 (asignacion -> variable AS exp .)
    WHILE           reduce using rule 67 (asignacion -> variable AS exp .)
    FOR             reduce using rule 67 (asignacion -> variable AS exp .)
    OCURLY          reduce using rule 67 (asignacion -> variable AS exp .)
    FUNCTION        reduce using rule 67 (asignacion -> variable AS exp .)
    CLASS           reduce using rule 67 (asignacion -> variable AS exp .)
    VAR             reduce using rule 67 (asignacion -> variable AS exp .)
    OPAREN          reduce using rule 67 (asignacion -> variable AS exp .)
    CSTINT          reduce using rule 67 (asignacion -> variable AS exp .)
    CSTFLT          reduce using rule 67 (asignacion -> variable AS exp .)
    CSTCHAR         reduce using rule 67 (asignacion -> variable AS exp .)
    CSTSTRING       reduce using rule 67 (asignacion -> variable AS exp .)
    TRUE            reduce using rule 67 (asignacion -> variable AS exp .)
    FALSE           reduce using rule 67 (asignacion -> variable AS exp .)
    CCURLY          reduce using rule 67 (asignacion -> variable AS exp .)
    COLON           reduce using rule 67 (asignacion -> variable AS exp .)
    SEMICOLON       reduce using rule 67 (asignacion -> variable AS exp .)


state 115

    (73) ternaria -> exp QUESTION estatuto_redux . COLON estatuto_redux SEMICOLON

    COLON           shift and go to state 155


state 116

    (62) estatuto_redux -> asignacion .

    COLON           reduce using rule 62 (estatuto_redux -> asignacion .)
    SEMICOLON       reduce using rule 62 (estatuto_redux -> asignacion .)


state 117

    (63) estatuto_redux -> llamada .
    (114) factor -> llamada .

    COLON           reduce using rule 63 (estatuto_redux -> llamada .)
    SEMICOLON       reduce using rule 63 (estatuto_redux -> llamada .)
    MULT            reduce using rule 114 (factor -> llamada .)
    DIV             reduce using rule 114 (factor -> llamada .)
    PLUS            reduce using rule 114 (factor -> llamada .)
    MINUS           reduce using rule 114 (factor -> llamada .)
    LT              reduce using rule 114 (factor -> llamada .)
    GT              reduce using rule 114 (factor -> llamada .)
    GTE             reduce using rule 114 (factor -> llamada .)
    LTE             reduce using rule 114 (factor -> llamada .)
    EQ              reduce using rule 114 (factor -> llamada .)
    NE              reduce using rule 114 (factor -> llamada .)
    AND             reduce using rule 114 (factor -> llamada .)
    OR              reduce using rule 114 (factor -> llamada .)
    QUESTION        reduce using rule 114 (factor -> llamada .)


state 118

    (64) estatuto_redux -> escritura .

    COLON           reduce using rule 64 (estatuto_redux -> escritura .)
    SEMICOLON       reduce using rule 64 (estatuto_redux -> escritura .)


state 119

    (65) estatuto_redux -> leer .

    COLON           reduce using rule 65 (estatuto_redux -> leer .)
    SEMICOLON       reduce using rule 65 (estatuto_redux -> leer .)


state 120

    (66) estatuto_redux -> ternaria .

    COLON           reduce using rule 66 (estatuto_redux -> ternaria .)
    SEMICOLON       reduce using rule 66 (estatuto_redux -> ternaria .)


state 121

    (85) llamada -> ID OPAREN exp . llamada1 CPAREN
    (87) llamada1 -> . COMMA exp llamada1
    (88) llamada1 -> . empty
    (120) empty -> .

    COMMA           shift and go to state 157
    CPAREN          reduce using rule 120 (empty -> .)

    llamada1                       shift and go to state 156
    empty                          shift and go to state 158

state 122

    (86) llamada -> ID OPAREN CPAREN .

    ID              reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    IF              reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    PRINT           reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    READ            reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    WHILE           reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    FOR             reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    OCURLY          reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    FUNCTION        reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    CLASS           reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    VAR             reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    OPAREN          reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    CSTINT          reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    CSTFLT          reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    CSTCHAR         reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    CSTSTRING       reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    TRUE            reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    FALSE           reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    CCURLY          reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    MULT            reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    DIV             reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    PLUS            reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    MINUS           reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    LT              reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    GT              reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    GTE             reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    LTE             reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    EQ              reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    NE              reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    AND             reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    OR              reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    QUESTION        reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    CPAREN          reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    COLON           reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    SEMICOLON       reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    COMMA           reduce using rule 86 (llamada -> ID OPAREN CPAREN .)
    CBRACKET        reduce using rule 86 (llamada -> ID OPAREN CPAREN .)


state 123

    (80) variable -> ID variable1 variable1 . variable2
    (83) variable2 -> . PERIOD ID variable1 variable1 variable2
    (84) variable2 -> . empty
    (120) empty -> .

    PERIOD          shift and go to state 160
    AS              reduce using rule 120 (empty -> .)
    MULT            reduce using rule 120 (empty -> .)
    DIV             reduce using rule 120 (empty -> .)
    PLUS            reduce using rule 120 (empty -> .)
    MINUS           reduce using rule 120 (empty -> .)
    LT              reduce using rule 120 (empty -> .)
    GT              reduce using rule 120 (empty -> .)
    GTE             reduce using rule 120 (empty -> .)
    LTE             reduce using rule 120 (empty -> .)
    EQ              reduce using rule 120 (empty -> .)
    NE              reduce using rule 120 (empty -> .)
    AND             reduce using rule 120 (empty -> .)
    OR              reduce using rule 120 (empty -> .)
    QUESTION        reduce using rule 120 (empty -> .)
    CPAREN          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    PRINT           reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    FOR             reduce using rule 120 (empty -> .)
    OCURLY          reduce using rule 120 (empty -> .)
    FUNCTION        reduce using rule 120 (empty -> .)
    CLASS           reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    OPAREN          reduce using rule 120 (empty -> .)
    CSTINT          reduce using rule 120 (empty -> .)
    CSTFLT          reduce using rule 120 (empty -> .)
    CSTCHAR         reduce using rule 120 (empty -> .)
    CSTSTRING       reduce using rule 120 (empty -> .)
    TRUE            reduce using rule 120 (empty -> .)
    FALSE           reduce using rule 120 (empty -> .)
    CCURLY          reduce using rule 120 (empty -> .)
    COLON           reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    CBRACKET        reduce using rule 120 (empty -> .)
    FROM            reduce using rule 120 (empty -> .)
    TO              reduce using rule 120 (empty -> .)
    BY              reduce using rule 120 (empty -> .)

    variable2                      shift and go to state 159
    empty                          shift and go to state 161

state 124

    (81) variable1 -> OBRACKET exp . CBRACKET

    CBRACKET        shift and go to state 162


state 125

    (111) factor -> OPAREN exp CPAREN .

    MULT            reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    DIV             reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    PLUS            reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    MINUS           reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    LT              reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    GT              reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    GTE             reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    LTE             reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    EQ              reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    NE              reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    AND             reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    OR              reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    QUESTION        reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    CPAREN          reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    ID              reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    IF              reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    PRINT           reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    READ            reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    WHILE           reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    FOR             reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    OCURLY          reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    FUNCTION        reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    CLASS           reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    VAR             reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    OPAREN          reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    CSTINT          reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    CSTFLT          reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    CSTCHAR         reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    CSTSTRING       reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    TRUE            reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    FALSE           reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    CCURLY          reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    COLON           reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    SEMICOLON       reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    COMMA           reduce using rule 111 (factor -> OPAREN exp CPAREN .)
    CBRACKET        reduce using rule 111 (factor -> OPAREN exp CPAREN .)


state 126

    (68) condicion -> IF cond2 THEN . bloque cond1 SEMICOLON
    (47) bloque -> . OCURLY b1 CCURLY

    OCURLY          shift and go to state 7

    bloque                         shift and go to state 163

state 127

    (72) cond2 -> OPAREN exp . CPAREN

    CPAREN          shift and go to state 164


state 128

    (74) escritura -> PRINT OPAREN exp . e1 CPAREN
    (75) e1 -> . COMMA exp e1
    (76) e1 -> . empty
    (120) empty -> .

    COMMA           shift and go to state 166
    CPAREN          reduce using rule 120 (empty -> .)

    e1                             shift and go to state 165
    empty                          shift and go to state 167

state 129

    (77) leer -> READ OPAREN exp . e1 CPAREN
    (75) e1 -> . COMMA exp e1
    (76) e1 -> . empty
    (120) empty -> .

    COMMA           shift and go to state 166
    CPAREN          reduce using rule 120 (empty -> .)

    e1                             shift and go to state 168
    empty                          shift and go to state 167

state 130

    (18) ciclo_while -> WHILE cond2 THEN . bloque SEMICOLON
    (47) bloque -> . OCURLY b1 CCURLY

    OCURLY          shift and go to state 7

    bloque                         shift and go to state 169

state 131

    (19) ciclo_for -> FOR OPAREN variable . FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON

    FROM            shift and go to state 170


state 132

    (80) variable -> ID . variable1 variable1 variable2
    (81) variable1 -> . OBRACKET exp CBRACKET
    (82) variable1 -> . empty
    (120) empty -> .

  ! shift/reduce conflict for OBRACKET resolved as shift
    OBRACKET        shift and go to state 72
    PERIOD          reduce using rule 120 (empty -> .)
    FROM            reduce using rule 120 (empty -> .)
    TO              reduce using rule 120 (empty -> .)
    BY              reduce using rule 120 (empty -> .)
    CPAREN          reduce using rule 120 (empty -> .)

  ! OBRACKET        [ reduce using rule 120 (empty -> .) ]

    variable1                      shift and go to state 71
    empty                          shift and go to state 73

state 133

    (3) funcion -> FUNCTION func1 ID . OPAREN param CPAREN bloque

    OPAREN          shift and go to state 171


state 134

    (12) clase -> CLASS ID COLON . clase_bloque SEMICOLON
    (13) clase_bloque -> . OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque CCURLY

    OCURLY          shift and go to state 173

    clase_bloque                   shift and go to state 172

state 135

    (90) exp1 -> OR texp . exp1
    (90) exp1 -> . OR texp exp1
    (91) exp1 -> . empty
    (120) empty -> .

    OR              shift and go to state 89
    QUESTION        reduce using rule 120 (empty -> .)
    CPAREN          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    PRINT           reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    FOR             reduce using rule 120 (empty -> .)
    OCURLY          reduce using rule 120 (empty -> .)
    FUNCTION        reduce using rule 120 (empty -> .)
    CLASS           reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    OPAREN          reduce using rule 120 (empty -> .)
    CSTINT          reduce using rule 120 (empty -> .)
    CSTFLT          reduce using rule 120 (empty -> .)
    CSTCHAR         reduce using rule 120 (empty -> .)
    CSTSTRING       reduce using rule 120 (empty -> .)
    TRUE            reduce using rule 120 (empty -> .)
    FALSE           reduce using rule 120 (empty -> .)
    CCURLY          reduce using rule 120 (empty -> .)
    COLON           reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    CBRACKET        reduce using rule 120 (empty -> .)

    exp1                           shift and go to state 174
    empty                          shift and go to state 90

state 136

    (93) texp1 -> AND gexp . texp1
    (93) texp1 -> . AND gexp texp1
    (94) texp1 -> . empty
    (120) empty -> .

    AND             shift and go to state 92
    OR              reduce using rule 120 (empty -> .)
    QUESTION        reduce using rule 120 (empty -> .)
    CPAREN          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    PRINT           reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    FOR             reduce using rule 120 (empty -> .)
    OCURLY          reduce using rule 120 (empty -> .)
    FUNCTION        reduce using rule 120 (empty -> .)
    CLASS           reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    OPAREN          reduce using rule 120 (empty -> .)
    CSTINT          reduce using rule 120 (empty -> .)
    CSTFLT          reduce using rule 120 (empty -> .)
    CSTCHAR         reduce using rule 120 (empty -> .)
    CSTSTRING       reduce using rule 120 (empty -> .)
    TRUE            reduce using rule 120 (empty -> .)
    FALSE           reduce using rule 120 (empty -> .)
    CCURLY          reduce using rule 120 (empty -> .)
    COLON           reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    CBRACKET        reduce using rule 120 (empty -> .)

    texp1                          shift and go to state 175
    empty                          shift and go to state 93

state 137

    (96) gexp1 -> LT mexp .

    AND             reduce using rule 96 (gexp1 -> LT mexp .)
    OR              reduce using rule 96 (gexp1 -> LT mexp .)
    QUESTION        reduce using rule 96 (gexp1 -> LT mexp .)
    CPAREN          reduce using rule 96 (gexp1 -> LT mexp .)
    ID              reduce using rule 96 (gexp1 -> LT mexp .)
    IF              reduce using rule 96 (gexp1 -> LT mexp .)
    PRINT           reduce using rule 96 (gexp1 -> LT mexp .)
    READ            reduce using rule 96 (gexp1 -> LT mexp .)
    WHILE           reduce using rule 96 (gexp1 -> LT mexp .)
    FOR             reduce using rule 96 (gexp1 -> LT mexp .)
    OCURLY          reduce using rule 96 (gexp1 -> LT mexp .)
    FUNCTION        reduce using rule 96 (gexp1 -> LT mexp .)
    CLASS           reduce using rule 96 (gexp1 -> LT mexp .)
    VAR             reduce using rule 96 (gexp1 -> LT mexp .)
    OPAREN          reduce using rule 96 (gexp1 -> LT mexp .)
    CSTINT          reduce using rule 96 (gexp1 -> LT mexp .)
    CSTFLT          reduce using rule 96 (gexp1 -> LT mexp .)
    CSTCHAR         reduce using rule 96 (gexp1 -> LT mexp .)
    CSTSTRING       reduce using rule 96 (gexp1 -> LT mexp .)
    TRUE            reduce using rule 96 (gexp1 -> LT mexp .)
    FALSE           reduce using rule 96 (gexp1 -> LT mexp .)
    CCURLY          reduce using rule 96 (gexp1 -> LT mexp .)
    COLON           reduce using rule 96 (gexp1 -> LT mexp .)
    SEMICOLON       reduce using rule 96 (gexp1 -> LT mexp .)
    COMMA           reduce using rule 96 (gexp1 -> LT mexp .)
    CBRACKET        reduce using rule 96 (gexp1 -> LT mexp .)


state 138

    (97) gexp1 -> GT mexp .

    AND             reduce using rule 97 (gexp1 -> GT mexp .)
    OR              reduce using rule 97 (gexp1 -> GT mexp .)
    QUESTION        reduce using rule 97 (gexp1 -> GT mexp .)
    CPAREN          reduce using rule 97 (gexp1 -> GT mexp .)
    ID              reduce using rule 97 (gexp1 -> GT mexp .)
    IF              reduce using rule 97 (gexp1 -> GT mexp .)
    PRINT           reduce using rule 97 (gexp1 -> GT mexp .)
    READ            reduce using rule 97 (gexp1 -> GT mexp .)
    WHILE           reduce using rule 97 (gexp1 -> GT mexp .)
    FOR             reduce using rule 97 (gexp1 -> GT mexp .)
    OCURLY          reduce using rule 97 (gexp1 -> GT mexp .)
    FUNCTION        reduce using rule 97 (gexp1 -> GT mexp .)
    CLASS           reduce using rule 97 (gexp1 -> GT mexp .)
    VAR             reduce using rule 97 (gexp1 -> GT mexp .)
    OPAREN          reduce using rule 97 (gexp1 -> GT mexp .)
    CSTINT          reduce using rule 97 (gexp1 -> GT mexp .)
    CSTFLT          reduce using rule 97 (gexp1 -> GT mexp .)
    CSTCHAR         reduce using rule 97 (gexp1 -> GT mexp .)
    CSTSTRING       reduce using rule 97 (gexp1 -> GT mexp .)
    TRUE            reduce using rule 97 (gexp1 -> GT mexp .)
    FALSE           reduce using rule 97 (gexp1 -> GT mexp .)
    CCURLY          reduce using rule 97 (gexp1 -> GT mexp .)
    COLON           reduce using rule 97 (gexp1 -> GT mexp .)
    SEMICOLON       reduce using rule 97 (gexp1 -> GT mexp .)
    COMMA           reduce using rule 97 (gexp1 -> GT mexp .)
    CBRACKET        reduce using rule 97 (gexp1 -> GT mexp .)


state 139

    (98) gexp1 -> GTE mexp .

    AND             reduce using rule 98 (gexp1 -> GTE mexp .)
    OR              reduce using rule 98 (gexp1 -> GTE mexp .)
    QUESTION        reduce using rule 98 (gexp1 -> GTE mexp .)
    CPAREN          reduce using rule 98 (gexp1 -> GTE mexp .)
    ID              reduce using rule 98 (gexp1 -> GTE mexp .)
    IF              reduce using rule 98 (gexp1 -> GTE mexp .)
    PRINT           reduce using rule 98 (gexp1 -> GTE mexp .)
    READ            reduce using rule 98 (gexp1 -> GTE mexp .)
    WHILE           reduce using rule 98 (gexp1 -> GTE mexp .)
    FOR             reduce using rule 98 (gexp1 -> GTE mexp .)
    OCURLY          reduce using rule 98 (gexp1 -> GTE mexp .)
    FUNCTION        reduce using rule 98 (gexp1 -> GTE mexp .)
    CLASS           reduce using rule 98 (gexp1 -> GTE mexp .)
    VAR             reduce using rule 98 (gexp1 -> GTE mexp .)
    OPAREN          reduce using rule 98 (gexp1 -> GTE mexp .)
    CSTINT          reduce using rule 98 (gexp1 -> GTE mexp .)
    CSTFLT          reduce using rule 98 (gexp1 -> GTE mexp .)
    CSTCHAR         reduce using rule 98 (gexp1 -> GTE mexp .)
    CSTSTRING       reduce using rule 98 (gexp1 -> GTE mexp .)
    TRUE            reduce using rule 98 (gexp1 -> GTE mexp .)
    FALSE           reduce using rule 98 (gexp1 -> GTE mexp .)
    CCURLY          reduce using rule 98 (gexp1 -> GTE mexp .)
    COLON           reduce using rule 98 (gexp1 -> GTE mexp .)
    SEMICOLON       reduce using rule 98 (gexp1 -> GTE mexp .)
    COMMA           reduce using rule 98 (gexp1 -> GTE mexp .)
    CBRACKET        reduce using rule 98 (gexp1 -> GTE mexp .)


state 140

    (99) gexp1 -> LTE mexp .

    AND             reduce using rule 99 (gexp1 -> LTE mexp .)
    OR              reduce using rule 99 (gexp1 -> LTE mexp .)
    QUESTION        reduce using rule 99 (gexp1 -> LTE mexp .)
    CPAREN          reduce using rule 99 (gexp1 -> LTE mexp .)
    ID              reduce using rule 99 (gexp1 -> LTE mexp .)
    IF              reduce using rule 99 (gexp1 -> LTE mexp .)
    PRINT           reduce using rule 99 (gexp1 -> LTE mexp .)
    READ            reduce using rule 99 (gexp1 -> LTE mexp .)
    WHILE           reduce using rule 99 (gexp1 -> LTE mexp .)
    FOR             reduce using rule 99 (gexp1 -> LTE mexp .)
    OCURLY          reduce using rule 99 (gexp1 -> LTE mexp .)
    FUNCTION        reduce using rule 99 (gexp1 -> LTE mexp .)
    CLASS           reduce using rule 99 (gexp1 -> LTE mexp .)
    VAR             reduce using rule 99 (gexp1 -> LTE mexp .)
    OPAREN          reduce using rule 99 (gexp1 -> LTE mexp .)
    CSTINT          reduce using rule 99 (gexp1 -> LTE mexp .)
    CSTFLT          reduce using rule 99 (gexp1 -> LTE mexp .)
    CSTCHAR         reduce using rule 99 (gexp1 -> LTE mexp .)
    CSTSTRING       reduce using rule 99 (gexp1 -> LTE mexp .)
    TRUE            reduce using rule 99 (gexp1 -> LTE mexp .)
    FALSE           reduce using rule 99 (gexp1 -> LTE mexp .)
    CCURLY          reduce using rule 99 (gexp1 -> LTE mexp .)
    COLON           reduce using rule 99 (gexp1 -> LTE mexp .)
    SEMICOLON       reduce using rule 99 (gexp1 -> LTE mexp .)
    COMMA           reduce using rule 99 (gexp1 -> LTE mexp .)
    CBRACKET        reduce using rule 99 (gexp1 -> LTE mexp .)


state 141

    (100) gexp1 -> EQ mexp .

    AND             reduce using rule 100 (gexp1 -> EQ mexp .)
    OR              reduce using rule 100 (gexp1 -> EQ mexp .)
    QUESTION        reduce using rule 100 (gexp1 -> EQ mexp .)
    CPAREN          reduce using rule 100 (gexp1 -> EQ mexp .)
    ID              reduce using rule 100 (gexp1 -> EQ mexp .)
    IF              reduce using rule 100 (gexp1 -> EQ mexp .)
    PRINT           reduce using rule 100 (gexp1 -> EQ mexp .)
    READ            reduce using rule 100 (gexp1 -> EQ mexp .)
    WHILE           reduce using rule 100 (gexp1 -> EQ mexp .)
    FOR             reduce using rule 100 (gexp1 -> EQ mexp .)
    OCURLY          reduce using rule 100 (gexp1 -> EQ mexp .)
    FUNCTION        reduce using rule 100 (gexp1 -> EQ mexp .)
    CLASS           reduce using rule 100 (gexp1 -> EQ mexp .)
    VAR             reduce using rule 100 (gexp1 -> EQ mexp .)
    OPAREN          reduce using rule 100 (gexp1 -> EQ mexp .)
    CSTINT          reduce using rule 100 (gexp1 -> EQ mexp .)
    CSTFLT          reduce using rule 100 (gexp1 -> EQ mexp .)
    CSTCHAR         reduce using rule 100 (gexp1 -> EQ mexp .)
    CSTSTRING       reduce using rule 100 (gexp1 -> EQ mexp .)
    TRUE            reduce using rule 100 (gexp1 -> EQ mexp .)
    FALSE           reduce using rule 100 (gexp1 -> EQ mexp .)
    CCURLY          reduce using rule 100 (gexp1 -> EQ mexp .)
    COLON           reduce using rule 100 (gexp1 -> EQ mexp .)
    SEMICOLON       reduce using rule 100 (gexp1 -> EQ mexp .)
    COMMA           reduce using rule 100 (gexp1 -> EQ mexp .)
    CBRACKET        reduce using rule 100 (gexp1 -> EQ mexp .)


state 142

    (101) gexp1 -> NE mexp .

    AND             reduce using rule 101 (gexp1 -> NE mexp .)
    OR              reduce using rule 101 (gexp1 -> NE mexp .)
    QUESTION        reduce using rule 101 (gexp1 -> NE mexp .)
    CPAREN          reduce using rule 101 (gexp1 -> NE mexp .)
    ID              reduce using rule 101 (gexp1 -> NE mexp .)
    IF              reduce using rule 101 (gexp1 -> NE mexp .)
    PRINT           reduce using rule 101 (gexp1 -> NE mexp .)
    READ            reduce using rule 101 (gexp1 -> NE mexp .)
    WHILE           reduce using rule 101 (gexp1 -> NE mexp .)
    FOR             reduce using rule 101 (gexp1 -> NE mexp .)
    OCURLY          reduce using rule 101 (gexp1 -> NE mexp .)
    FUNCTION        reduce using rule 101 (gexp1 -> NE mexp .)
    CLASS           reduce using rule 101 (gexp1 -> NE mexp .)
    VAR             reduce using rule 101 (gexp1 -> NE mexp .)
    OPAREN          reduce using rule 101 (gexp1 -> NE mexp .)
    CSTINT          reduce using rule 101 (gexp1 -> NE mexp .)
    CSTFLT          reduce using rule 101 (gexp1 -> NE mexp .)
    CSTCHAR         reduce using rule 101 (gexp1 -> NE mexp .)
    CSTSTRING       reduce using rule 101 (gexp1 -> NE mexp .)
    TRUE            reduce using rule 101 (gexp1 -> NE mexp .)
    FALSE           reduce using rule 101 (gexp1 -> NE mexp .)
    CCURLY          reduce using rule 101 (gexp1 -> NE mexp .)
    COLON           reduce using rule 101 (gexp1 -> NE mexp .)
    SEMICOLON       reduce using rule 101 (gexp1 -> NE mexp .)
    COMMA           reduce using rule 101 (gexp1 -> NE mexp .)
    CBRACKET        reduce using rule 101 (gexp1 -> NE mexp .)


state 143

    (104) mexp1 -> PLUS termino . mexp1
    (104) mexp1 -> . PLUS termino mexp1
    (105) mexp1 -> . MINUS termino mexp1
    (106) mexp1 -> . empty
    (120) empty -> .

    PLUS            shift and go to state 103
    MINUS           shift and go to state 104
    LT              reduce using rule 120 (empty -> .)
    GT              reduce using rule 120 (empty -> .)
    GTE             reduce using rule 120 (empty -> .)
    LTE             reduce using rule 120 (empty -> .)
    EQ              reduce using rule 120 (empty -> .)
    NE              reduce using rule 120 (empty -> .)
    AND             reduce using rule 120 (empty -> .)
    OR              reduce using rule 120 (empty -> .)
    QUESTION        reduce using rule 120 (empty -> .)
    CPAREN          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    PRINT           reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    FOR             reduce using rule 120 (empty -> .)
    OCURLY          reduce using rule 120 (empty -> .)
    FUNCTION        reduce using rule 120 (empty -> .)
    CLASS           reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    OPAREN          reduce using rule 120 (empty -> .)
    CSTINT          reduce using rule 120 (empty -> .)
    CSTFLT          reduce using rule 120 (empty -> .)
    CSTCHAR         reduce using rule 120 (empty -> .)
    CSTSTRING       reduce using rule 120 (empty -> .)
    TRUE            reduce using rule 120 (empty -> .)
    FALSE           reduce using rule 120 (empty -> .)
    CCURLY          reduce using rule 120 (empty -> .)
    COLON           reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    CBRACKET        reduce using rule 120 (empty -> .)

    mexp1                          shift and go to state 176
    empty                          shift and go to state 105

state 144

    (105) mexp1 -> MINUS termino . mexp1
    (104) mexp1 -> . PLUS termino mexp1
    (105) mexp1 -> . MINUS termino mexp1
    (106) mexp1 -> . empty
    (120) empty -> .

    PLUS            shift and go to state 103
    MINUS           shift and go to state 104
    LT              reduce using rule 120 (empty -> .)
    GT              reduce using rule 120 (empty -> .)
    GTE             reduce using rule 120 (empty -> .)
    LTE             reduce using rule 120 (empty -> .)
    EQ              reduce using rule 120 (empty -> .)
    NE              reduce using rule 120 (empty -> .)
    AND             reduce using rule 120 (empty -> .)
    OR              reduce using rule 120 (empty -> .)
    QUESTION        reduce using rule 120 (empty -> .)
    CPAREN          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    PRINT           reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    FOR             reduce using rule 120 (empty -> .)
    OCURLY          reduce using rule 120 (empty -> .)
    FUNCTION        reduce using rule 120 (empty -> .)
    CLASS           reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    OPAREN          reduce using rule 120 (empty -> .)
    CSTINT          reduce using rule 120 (empty -> .)
    CSTFLT          reduce using rule 120 (empty -> .)
    CSTCHAR         reduce using rule 120 (empty -> .)
    CSTSTRING       reduce using rule 120 (empty -> .)
    TRUE            reduce using rule 120 (empty -> .)
    FALSE           reduce using rule 120 (empty -> .)
    CCURLY          reduce using rule 120 (empty -> .)
    COLON           reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    CBRACKET        reduce using rule 120 (empty -> .)

    mexp1                          shift and go to state 177
    empty                          shift and go to state 105

state 145

    (108) term1 -> MULT factor . term1
    (108) term1 -> . MULT factor term1
    (109) term1 -> . DIV factor term1
    (110) term1 -> . empty
    (120) empty -> .

    MULT            shift and go to state 107
    DIV             shift and go to state 108
    PLUS            reduce using rule 120 (empty -> .)
    MINUS           reduce using rule 120 (empty -> .)
    LT              reduce using rule 120 (empty -> .)
    GT              reduce using rule 120 (empty -> .)
    GTE             reduce using rule 120 (empty -> .)
    LTE             reduce using rule 120 (empty -> .)
    EQ              reduce using rule 120 (empty -> .)
    NE              reduce using rule 120 (empty -> .)
    AND             reduce using rule 120 (empty -> .)
    OR              reduce using rule 120 (empty -> .)
    QUESTION        reduce using rule 120 (empty -> .)
    CPAREN          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    PRINT           reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    FOR             reduce using rule 120 (empty -> .)
    OCURLY          reduce using rule 120 (empty -> .)
    FUNCTION        reduce using rule 120 (empty -> .)
    CLASS           reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    OPAREN          reduce using rule 120 (empty -> .)
    CSTINT          reduce using rule 120 (empty -> .)
    CSTFLT          reduce using rule 120 (empty -> .)
    CSTCHAR         reduce using rule 120 (empty -> .)
    CSTSTRING       reduce using rule 120 (empty -> .)
    TRUE            reduce using rule 120 (empty -> .)
    FALSE           reduce using rule 120 (empty -> .)
    CCURLY          reduce using rule 120 (empty -> .)
    COLON           reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    CBRACKET        reduce using rule 120 (empty -> .)

    term1                          shift and go to state 178
    empty                          shift and go to state 109

state 146

    (109) term1 -> DIV factor . term1
    (108) term1 -> . MULT factor term1
    (109) term1 -> . DIV factor term1
    (110) term1 -> . empty
    (120) empty -> .

    MULT            shift and go to state 107
    DIV             shift and go to state 108
    PLUS            reduce using rule 120 (empty -> .)
    MINUS           reduce using rule 120 (empty -> .)
    LT              reduce using rule 120 (empty -> .)
    GT              reduce using rule 120 (empty -> .)
    GTE             reduce using rule 120 (empty -> .)
    LTE             reduce using rule 120 (empty -> .)
    EQ              reduce using rule 120 (empty -> .)
    NE              reduce using rule 120 (empty -> .)
    AND             reduce using rule 120 (empty -> .)
    OR              reduce using rule 120 (empty -> .)
    QUESTION        reduce using rule 120 (empty -> .)
    CPAREN          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    PRINT           reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    FOR             reduce using rule 120 (empty -> .)
    OCURLY          reduce using rule 120 (empty -> .)
    FUNCTION        reduce using rule 120 (empty -> .)
    CLASS           reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    OPAREN          reduce using rule 120 (empty -> .)
    CSTINT          reduce using rule 120 (empty -> .)
    CSTFLT          reduce using rule 120 (empty -> .)
    CSTCHAR         reduce using rule 120 (empty -> .)
    CSTSTRING       reduce using rule 120 (empty -> .)
    TRUE            reduce using rule 120 (empty -> .)
    FALSE           reduce using rule 120 (empty -> .)
    CCURLY          reduce using rule 120 (empty -> .)
    COLON           reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    CBRACKET        reduce using rule 120 (empty -> .)

    term1                          shift and go to state 179
    empty                          shift and go to state 109

state 147

    (22) dec -> VAR tipo SEMICOLON dec1 .

    OCURLY          reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    ID              reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    IF              reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    PRINT           reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    READ            reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    WHILE           reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    FOR             reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    FUNCTION        reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    CLASS           reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    VAR             reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    OPAREN          reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    CSTINT          reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    CSTFLT          reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    CSTCHAR         reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    CSTSTRING       reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    TRUE            reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    FALSE           reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    CCURLY          reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)
    METHODS         reduce using rule 22 (dec -> VAR tipo SEMICOLON dec1 .)


state 148

    (23) dec1 -> dec .

    OCURLY          reduce using rule 23 (dec1 -> dec .)
    ID              reduce using rule 23 (dec1 -> dec .)
    IF              reduce using rule 23 (dec1 -> dec .)
    PRINT           reduce using rule 23 (dec1 -> dec .)
    READ            reduce using rule 23 (dec1 -> dec .)
    WHILE           reduce using rule 23 (dec1 -> dec .)
    FOR             reduce using rule 23 (dec1 -> dec .)
    FUNCTION        reduce using rule 23 (dec1 -> dec .)
    CLASS           reduce using rule 23 (dec1 -> dec .)
    VAR             reduce using rule 23 (dec1 -> dec .)
    OPAREN          reduce using rule 23 (dec1 -> dec .)
    CSTINT          reduce using rule 23 (dec1 -> dec .)
    CSTFLT          reduce using rule 23 (dec1 -> dec .)
    CSTCHAR         reduce using rule 23 (dec1 -> dec .)
    CSTSTRING       reduce using rule 23 (dec1 -> dec .)
    TRUE            reduce using rule 23 (dec1 -> dec .)
    FALSE           reduce using rule 23 (dec1 -> dec .)
    CCURLY          reduce using rule 23 (dec1 -> dec .)
    METHODS         reduce using rule 23 (dec1 -> dec .)


state 149

    (24) dec1 -> empty .

    OCURLY          reduce using rule 24 (dec1 -> empty .)
    ID              reduce using rule 24 (dec1 -> empty .)
    IF              reduce using rule 24 (dec1 -> empty .)
    PRINT           reduce using rule 24 (dec1 -> empty .)
    READ            reduce using rule 24 (dec1 -> empty .)
    WHILE           reduce using rule 24 (dec1 -> empty .)
    FOR             reduce using rule 24 (dec1 -> empty .)
    FUNCTION        reduce using rule 24 (dec1 -> empty .)
    CLASS           reduce using rule 24 (dec1 -> empty .)
    VAR             reduce using rule 24 (dec1 -> empty .)
    OPAREN          reduce using rule 24 (dec1 -> empty .)
    CSTINT          reduce using rule 24 (dec1 -> empty .)
    CSTFLT          reduce using rule 24 (dec1 -> empty .)
    CSTCHAR         reduce using rule 24 (dec1 -> empty .)
    CSTSTRING       reduce using rule 24 (dec1 -> empty .)
    TRUE            reduce using rule 24 (dec1 -> empty .)
    FALSE           reduce using rule 24 (dec1 -> empty .)
    CCURLY          reduce using rule 24 (dec1 -> empty .)
    METHODS         reduce using rule 24 (dec1 -> empty .)


state 150

    (25) tipo -> compuesto ID tipo1 .

    SEMICOLON       reduce using rule 25 (tipo -> compuesto ID tipo1 .)


state 151

    (28) tipo1 -> COMMA . ID tipo1

    ID              shift and go to state 180


state 152

    (29) tipo1 -> empty .

    SEMICOLON       reduce using rule 29 (tipo1 -> empty .)


state 153

    (26) tipo -> simple ID tipo1 .

    SEMICOLON       reduce using rule 26 (tipo -> simple ID tipo1 .)


state 154

    (27) tipo -> multiple ID OBRACKET . CSTINT CBRACKET tipo3 tipo2

    CSTINT          shift and go to state 181


state 155

    (73) ternaria -> exp QUESTION estatuto_redux COLON . estatuto_redux SEMICOLON
    (62) estatuto_redux -> . asignacion
    (63) estatuto_redux -> . llamada
    (64) estatuto_redux -> . escritura
    (65) estatuto_redux -> . leer
    (66) estatuto_redux -> . ternaria
    (67) asignacion -> . variable AS exp
    (85) llamada -> . ID OPAREN exp llamada1 CPAREN
    (86) llamada -> . ID OPAREN CPAREN
    (74) escritura -> . PRINT OPAREN exp e1 CPAREN
    (77) leer -> . READ OPAREN exp e1 CPAREN
    (73) ternaria -> . exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON
    (80) variable -> . ID variable1 variable1 variable2
    (89) exp -> . texp exp1
    (92) texp -> . gexp texp1
    (95) gexp -> . mexp gexp1
    (103) mexp -> . termino mexp1
    (107) termino -> . factor term1
    (111) factor -> . OPAREN exp CPAREN
    (112) factor -> . varcst
    (113) factor -> . variable
    (114) factor -> . llamada
    (115) varcst -> . CSTINT
    (116) varcst -> . CSTFLT
    (117) varcst -> . CSTCHAR
    (118) varcst -> . CSTSTRING
    (119) varcst -> . boolean
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    ID              shift and go to state 27
    PRINT           shift and go to state 30
    READ            shift and go to state 31
    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 26
    estatuto_redux                 shift and go to state 182
    asignacion                     shift and go to state 116
    llamada                        shift and go to state 117
    escritura                      shift and go to state 118
    leer                           shift and go to state 119
    ternaria                       shift and go to state 120
    variable                       shift and go to state 25
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    boolean                        shift and go to state 46

state 156

    (85) llamada -> ID OPAREN exp llamada1 . CPAREN

    CPAREN          shift and go to state 183


state 157

    (87) llamada1 -> COMMA . exp llamada1
    (89) exp -> . texp exp1
    (92) texp -> . gexp texp1
    (95) gexp -> . mexp gexp1
    (103) mexp -> . termino mexp1
    (107) termino -> . factor term1
    (111) factor -> . OPAREN exp CPAREN
    (112) factor -> . varcst
    (113) factor -> . variable
    (114) factor -> . llamada
    (115) varcst -> . CSTINT
    (116) varcst -> . CSTFLT
    (117) varcst -> . CSTCHAR
    (118) varcst -> . CSTSTRING
    (119) varcst -> . boolean
    (80) variable -> . ID variable1 variable1 variable2
    (85) llamada -> . ID OPAREN exp llamada1 CPAREN
    (86) llamada -> . ID OPAREN CPAREN
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 184
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 158

    (88) llamada1 -> empty .

    CPAREN          reduce using rule 88 (llamada1 -> empty .)


state 159

    (80) variable -> ID variable1 variable1 variable2 .

    AS              reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    MULT            reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    DIV             reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    PLUS            reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    MINUS           reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    LT              reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    GT              reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    GTE             reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    LTE             reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    EQ              reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    NE              reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    AND             reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    OR              reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    QUESTION        reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    CPAREN          reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    ID              reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    IF              reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    PRINT           reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    READ            reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    WHILE           reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    FOR             reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    OCURLY          reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    FUNCTION        reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    CLASS           reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    VAR             reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    OPAREN          reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    CSTINT          reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    CSTFLT          reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    CSTCHAR         reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    CSTSTRING       reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    TRUE            reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    FALSE           reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    CCURLY          reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    COLON           reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    SEMICOLON       reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    COMMA           reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    CBRACKET        reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    FROM            reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    TO              reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)
    BY              reduce using rule 80 (variable -> ID variable1 variable1 variable2 .)


state 160

    (83) variable2 -> PERIOD . ID variable1 variable1 variable2

    ID              shift and go to state 185


state 161

    (84) variable2 -> empty .

    AS              reduce using rule 84 (variable2 -> empty .)
    MULT            reduce using rule 84 (variable2 -> empty .)
    DIV             reduce using rule 84 (variable2 -> empty .)
    PLUS            reduce using rule 84 (variable2 -> empty .)
    MINUS           reduce using rule 84 (variable2 -> empty .)
    LT              reduce using rule 84 (variable2 -> empty .)
    GT              reduce using rule 84 (variable2 -> empty .)
    GTE             reduce using rule 84 (variable2 -> empty .)
    LTE             reduce using rule 84 (variable2 -> empty .)
    EQ              reduce using rule 84 (variable2 -> empty .)
    NE              reduce using rule 84 (variable2 -> empty .)
    AND             reduce using rule 84 (variable2 -> empty .)
    OR              reduce using rule 84 (variable2 -> empty .)
    QUESTION        reduce using rule 84 (variable2 -> empty .)
    CPAREN          reduce using rule 84 (variable2 -> empty .)
    ID              reduce using rule 84 (variable2 -> empty .)
    IF              reduce using rule 84 (variable2 -> empty .)
    PRINT           reduce using rule 84 (variable2 -> empty .)
    READ            reduce using rule 84 (variable2 -> empty .)
    WHILE           reduce using rule 84 (variable2 -> empty .)
    FOR             reduce using rule 84 (variable2 -> empty .)
    OCURLY          reduce using rule 84 (variable2 -> empty .)
    FUNCTION        reduce using rule 84 (variable2 -> empty .)
    CLASS           reduce using rule 84 (variable2 -> empty .)
    VAR             reduce using rule 84 (variable2 -> empty .)
    OPAREN          reduce using rule 84 (variable2 -> empty .)
    CSTINT          reduce using rule 84 (variable2 -> empty .)
    CSTFLT          reduce using rule 84 (variable2 -> empty .)
    CSTCHAR         reduce using rule 84 (variable2 -> empty .)
    CSTSTRING       reduce using rule 84 (variable2 -> empty .)
    TRUE            reduce using rule 84 (variable2 -> empty .)
    FALSE           reduce using rule 84 (variable2 -> empty .)
    CCURLY          reduce using rule 84 (variable2 -> empty .)
    COLON           reduce using rule 84 (variable2 -> empty .)
    SEMICOLON       reduce using rule 84 (variable2 -> empty .)
    COMMA           reduce using rule 84 (variable2 -> empty .)
    CBRACKET        reduce using rule 84 (variable2 -> empty .)
    FROM            reduce using rule 84 (variable2 -> empty .)
    TO              reduce using rule 84 (variable2 -> empty .)
    BY              reduce using rule 84 (variable2 -> empty .)


state 162

    (81) variable1 -> OBRACKET exp CBRACKET .

    OBRACKET        reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    PERIOD          reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    AS              reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    MULT            reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    DIV             reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    PLUS            reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    MINUS           reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    LT              reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    GT              reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    GTE             reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    LTE             reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    EQ              reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    NE              reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    AND             reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    OR              reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    QUESTION        reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    CPAREN          reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    ID              reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    IF              reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    PRINT           reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    READ            reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    WHILE           reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    FOR             reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    OCURLY          reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    FUNCTION        reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    CLASS           reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    VAR             reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    OPAREN          reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    CSTINT          reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    CSTFLT          reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    CSTCHAR         reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    CSTSTRING       reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    TRUE            reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    FALSE           reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    CCURLY          reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    COLON           reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    SEMICOLON       reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    COMMA           reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    CBRACKET        reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    FROM            reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    TO              reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)
    BY              reduce using rule 81 (variable1 -> OBRACKET exp CBRACKET .)


state 163

    (68) condicion -> IF cond2 THEN bloque . cond1 SEMICOLON
    (69) cond1 -> . ELSE bloque
    (70) cond1 -> . ELSE IF cond2 THEN bloque cond1
    (71) cond1 -> . empty
    (120) empty -> .

    ELSE            shift and go to state 187
    SEMICOLON       reduce using rule 120 (empty -> .)

    cond1                          shift and go to state 186
    empty                          shift and go to state 188

state 164

    (72) cond2 -> OPAREN exp CPAREN .

    THEN            reduce using rule 72 (cond2 -> OPAREN exp CPAREN .)


state 165

    (74) escritura -> PRINT OPAREN exp e1 . CPAREN

    CPAREN          shift and go to state 189


state 166

    (75) e1 -> COMMA . exp e1
    (89) exp -> . texp exp1
    (92) texp -> . gexp texp1
    (95) gexp -> . mexp gexp1
    (103) mexp -> . termino mexp1
    (107) termino -> . factor term1
    (111) factor -> . OPAREN exp CPAREN
    (112) factor -> . varcst
    (113) factor -> . variable
    (114) factor -> . llamada
    (115) varcst -> . CSTINT
    (116) varcst -> . CSTFLT
    (117) varcst -> . CSTCHAR
    (118) varcst -> . CSTSTRING
    (119) varcst -> . boolean
    (80) variable -> . ID variable1 variable1 variable2
    (85) llamada -> . ID OPAREN exp llamada1 CPAREN
    (86) llamada -> . ID OPAREN CPAREN
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    OPAREN          shift and go to state 28
    CSTINT          shift and go to state 42
    CSTFLT          shift and go to state 43
    CSTCHAR         shift and go to state 44
    CSTSTRING       shift and go to state 45
    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    exp                            shift and go to state 190
    texp                           shift and go to state 36
    gexp                           shift and go to state 37
    mexp                           shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    varcst                         shift and go to state 41
    variable                       shift and go to state 75
    llamada                        shift and go to state 76
    boolean                        shift and go to state 46

state 167

    (76) e1 -> empty .

    CPAREN          reduce using rule 76 (e1 -> empty .)


state 168

    (77) leer -> READ OPAREN exp e1 . CPAREN

    CPAREN          shift and go to state 191


state 169

    (18) ciclo_while -> WHILE cond2 THEN bloque . SEMICOLON

    SEMICOLON       shift and go to state 192


state 170

    (19) ciclo_for -> FOR OPAREN variable FROM . ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
    (20) ciclo_for1 -> . CSTINT
    (21) ciclo_for1 -> . variable
    (80) variable -> . ID variable1 variable1 variable2

    CSTINT          shift and go to state 195
    ID              shift and go to state 132

    variable                       shift and go to state 193
    ciclo_for1                     shift and go to state 194

state 171

    (3) funcion -> FUNCTION func1 ID OPAREN . param CPAREN bloque
    (6) param -> . param2 param1
    (7) param -> . empty
    (10) param2 -> . simple ID
    (11) param2 -> . multiple ID variable1 variable1
    (120) empty -> .
    (34) simple -> . INT
    (35) simple -> . FLOAT
    (36) simple -> . BOOL
    (37) simple -> . STRING
    (38) simple -> . CHAR
    (39) multiple -> . INTS
    (40) multiple -> . FLOATS
    (41) multiple -> . BOOLS
    (42) multiple -> . STRINGS
    (43) multiple -> . CHARS

    CPAREN          reduce using rule 120 (empty -> .)
    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    BOOL            shift and go to state 58
    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    INTS            shift and go to state 61
    FLOATS          shift and go to state 62
    BOOLS           shift and go to state 63
    STRINGS         shift and go to state 64
    CHARS           shift and go to state 65

    param                          shift and go to state 196
    param2                         shift and go to state 197
    empty                          shift and go to state 198
    simple                         shift and go to state 199
    multiple                       shift and go to state 200

state 172

    (12) clase -> CLASS ID COLON clase_bloque . SEMICOLON

    SEMICOLON       shift and go to state 201


state 173

    (13) clase_bloque -> OCURLY . ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque CCURLY

    ATTRIBUTES      shift and go to state 202


state 174

    (90) exp1 -> OR texp exp1 .

    QUESTION        reduce using rule 90 (exp1 -> OR texp exp1 .)
    CPAREN          reduce using rule 90 (exp1 -> OR texp exp1 .)
    ID              reduce using rule 90 (exp1 -> OR texp exp1 .)
    IF              reduce using rule 90 (exp1 -> OR texp exp1 .)
    PRINT           reduce using rule 90 (exp1 -> OR texp exp1 .)
    READ            reduce using rule 90 (exp1 -> OR texp exp1 .)
    WHILE           reduce using rule 90 (exp1 -> OR texp exp1 .)
    FOR             reduce using rule 90 (exp1 -> OR texp exp1 .)
    OCURLY          reduce using rule 90 (exp1 -> OR texp exp1 .)
    FUNCTION        reduce using rule 90 (exp1 -> OR texp exp1 .)
    CLASS           reduce using rule 90 (exp1 -> OR texp exp1 .)
    VAR             reduce using rule 90 (exp1 -> OR texp exp1 .)
    OPAREN          reduce using rule 90 (exp1 -> OR texp exp1 .)
    CSTINT          reduce using rule 90 (exp1 -> OR texp exp1 .)
    CSTFLT          reduce using rule 90 (exp1 -> OR texp exp1 .)
    CSTCHAR         reduce using rule 90 (exp1 -> OR texp exp1 .)
    CSTSTRING       reduce using rule 90 (exp1 -> OR texp exp1 .)
    TRUE            reduce using rule 90 (exp1 -> OR texp exp1 .)
    FALSE           reduce using rule 90 (exp1 -> OR texp exp1 .)
    CCURLY          reduce using rule 90 (exp1 -> OR texp exp1 .)
    COLON           reduce using rule 90 (exp1 -> OR texp exp1 .)
    SEMICOLON       reduce using rule 90 (exp1 -> OR texp exp1 .)
    COMMA           reduce using rule 90 (exp1 -> OR texp exp1 .)
    CBRACKET        reduce using rule 90 (exp1 -> OR texp exp1 .)


state 175

    (93) texp1 -> AND gexp texp1 .

    OR              reduce using rule 93 (texp1 -> AND gexp texp1 .)
    QUESTION        reduce using rule 93 (texp1 -> AND gexp texp1 .)
    CPAREN          reduce using rule 93 (texp1 -> AND gexp texp1 .)
    ID              reduce using rule 93 (texp1 -> AND gexp texp1 .)
    IF              reduce using rule 93 (texp1 -> AND gexp texp1 .)
    PRINT           reduce using rule 93 (texp1 -> AND gexp texp1 .)
    READ            reduce using rule 93 (texp1 -> AND gexp texp1 .)
    WHILE           reduce using rule 93 (texp1 -> AND gexp texp1 .)
    FOR             reduce using rule 93 (texp1 -> AND gexp texp1 .)
    OCURLY          reduce using rule 93 (texp1 -> AND gexp texp1 .)
    FUNCTION        reduce using rule 93 (texp1 -> AND gexp texp1 .)
    CLASS           reduce using rule 93 (texp1 -> AND gexp texp1 .)
    VAR             reduce using rule 93 (texp1 -> AND gexp texp1 .)
    OPAREN          reduce using rule 93 (texp1 -> AND gexp texp1 .)
    CSTINT          reduce using rule 93 (texp1 -> AND gexp texp1 .)
    CSTFLT          reduce using rule 93 (texp1 -> AND gexp texp1 .)
    CSTCHAR         reduce using rule 93 (texp1 -> AND gexp texp1 .)
    CSTSTRING       reduce using rule 93 (texp1 -> AND gexp texp1 .)
    TRUE            reduce using rule 93 (texp1 -> AND gexp texp1 .)
    FALSE           reduce using rule 93 (texp1 -> AND gexp texp1 .)
    CCURLY          reduce using rule 93 (texp1 -> AND gexp texp1 .)
    COLON           reduce using rule 93 (texp1 -> AND gexp texp1 .)
    SEMICOLON       reduce using rule 93 (texp1 -> AND gexp texp1 .)
    COMMA           reduce using rule 93 (texp1 -> AND gexp texp1 .)
    CBRACKET        reduce using rule 93 (texp1 -> AND gexp texp1 .)


state 176

    (104) mexp1 -> PLUS termino mexp1 .

    LT              reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    GT              reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    GTE             reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    LTE             reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    EQ              reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    NE              reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    AND             reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    OR              reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    QUESTION        reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    CPAREN          reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    ID              reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    IF              reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    PRINT           reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    READ            reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    WHILE           reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    FOR             reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    OCURLY          reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    FUNCTION        reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    CLASS           reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    VAR             reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    OPAREN          reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    CSTINT          reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    CSTFLT          reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    CSTCHAR         reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    CSTSTRING       reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    TRUE            reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    FALSE           reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    CCURLY          reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    COLON           reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    SEMICOLON       reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    COMMA           reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)
    CBRACKET        reduce using rule 104 (mexp1 -> PLUS termino mexp1 .)


state 177

    (105) mexp1 -> MINUS termino mexp1 .

    LT              reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    GT              reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    GTE             reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    LTE             reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    EQ              reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    NE              reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    AND             reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    OR              reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    QUESTION        reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    CPAREN          reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    ID              reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    IF              reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    PRINT           reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    READ            reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    WHILE           reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    FOR             reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    OCURLY          reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    FUNCTION        reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    CLASS           reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    VAR             reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    OPAREN          reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    CSTINT          reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    CSTFLT          reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    CSTCHAR         reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    CSTSTRING       reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    TRUE            reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    FALSE           reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    CCURLY          reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    COLON           reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    SEMICOLON       reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    COMMA           reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)
    CBRACKET        reduce using rule 105 (mexp1 -> MINUS termino mexp1 .)


state 178

    (108) term1 -> MULT factor term1 .

    PLUS            reduce using rule 108 (term1 -> MULT factor term1 .)
    MINUS           reduce using rule 108 (term1 -> MULT factor term1 .)
    LT              reduce using rule 108 (term1 -> MULT factor term1 .)
    GT              reduce using rule 108 (term1 -> MULT factor term1 .)
    GTE             reduce using rule 108 (term1 -> MULT factor term1 .)
    LTE             reduce using rule 108 (term1 -> MULT factor term1 .)
    EQ              reduce using rule 108 (term1 -> MULT factor term1 .)
    NE              reduce using rule 108 (term1 -> MULT factor term1 .)
    AND             reduce using rule 108 (term1 -> MULT factor term1 .)
    OR              reduce using rule 108 (term1 -> MULT factor term1 .)
    QUESTION        reduce using rule 108 (term1 -> MULT factor term1 .)
    CPAREN          reduce using rule 108 (term1 -> MULT factor term1 .)
    ID              reduce using rule 108 (term1 -> MULT factor term1 .)
    IF              reduce using rule 108 (term1 -> MULT factor term1 .)
    PRINT           reduce using rule 108 (term1 -> MULT factor term1 .)
    READ            reduce using rule 108 (term1 -> MULT factor term1 .)
    WHILE           reduce using rule 108 (term1 -> MULT factor term1 .)
    FOR             reduce using rule 108 (term1 -> MULT factor term1 .)
    OCURLY          reduce using rule 108 (term1 -> MULT factor term1 .)
    FUNCTION        reduce using rule 108 (term1 -> MULT factor term1 .)
    CLASS           reduce using rule 108 (term1 -> MULT factor term1 .)
    VAR             reduce using rule 108 (term1 -> MULT factor term1 .)
    OPAREN          reduce using rule 108 (term1 -> MULT factor term1 .)
    CSTINT          reduce using rule 108 (term1 -> MULT factor term1 .)
    CSTFLT          reduce using rule 108 (term1 -> MULT factor term1 .)
    CSTCHAR         reduce using rule 108 (term1 -> MULT factor term1 .)
    CSTSTRING       reduce using rule 108 (term1 -> MULT factor term1 .)
    TRUE            reduce using rule 108 (term1 -> MULT factor term1 .)
    FALSE           reduce using rule 108 (term1 -> MULT factor term1 .)
    CCURLY          reduce using rule 108 (term1 -> MULT factor term1 .)
    COLON           reduce using rule 108 (term1 -> MULT factor term1 .)
    SEMICOLON       reduce using rule 108 (term1 -> MULT factor term1 .)
    COMMA           reduce using rule 108 (term1 -> MULT factor term1 .)
    CBRACKET        reduce using rule 108 (term1 -> MULT factor term1 .)


state 179

    (109) term1 -> DIV factor term1 .

    PLUS            reduce using rule 109 (term1 -> DIV factor term1 .)
    MINUS           reduce using rule 109 (term1 -> DIV factor term1 .)
    LT              reduce using rule 109 (term1 -> DIV factor term1 .)
    GT              reduce using rule 109 (term1 -> DIV factor term1 .)
    GTE             reduce using rule 109 (term1 -> DIV factor term1 .)
    LTE             reduce using rule 109 (term1 -> DIV factor term1 .)
    EQ              reduce using rule 109 (term1 -> DIV factor term1 .)
    NE              reduce using rule 109 (term1 -> DIV factor term1 .)
    AND             reduce using rule 109 (term1 -> DIV factor term1 .)
    OR              reduce using rule 109 (term1 -> DIV factor term1 .)
    QUESTION        reduce using rule 109 (term1 -> DIV factor term1 .)
    CPAREN          reduce using rule 109 (term1 -> DIV factor term1 .)
    ID              reduce using rule 109 (term1 -> DIV factor term1 .)
    IF              reduce using rule 109 (term1 -> DIV factor term1 .)
    PRINT           reduce using rule 109 (term1 -> DIV factor term1 .)
    READ            reduce using rule 109 (term1 -> DIV factor term1 .)
    WHILE           reduce using rule 109 (term1 -> DIV factor term1 .)
    FOR             reduce using rule 109 (term1 -> DIV factor term1 .)
    OCURLY          reduce using rule 109 (term1 -> DIV factor term1 .)
    FUNCTION        reduce using rule 109 (term1 -> DIV factor term1 .)
    CLASS           reduce using rule 109 (term1 -> DIV factor term1 .)
    VAR             reduce using rule 109 (term1 -> DIV factor term1 .)
    OPAREN          reduce using rule 109 (term1 -> DIV factor term1 .)
    CSTINT          reduce using rule 109 (term1 -> DIV factor term1 .)
    CSTFLT          reduce using rule 109 (term1 -> DIV factor term1 .)
    CSTCHAR         reduce using rule 109 (term1 -> DIV factor term1 .)
    CSTSTRING       reduce using rule 109 (term1 -> DIV factor term1 .)
    TRUE            reduce using rule 109 (term1 -> DIV factor term1 .)
    FALSE           reduce using rule 109 (term1 -> DIV factor term1 .)
    CCURLY          reduce using rule 109 (term1 -> DIV factor term1 .)
    COLON           reduce using rule 109 (term1 -> DIV factor term1 .)
    SEMICOLON       reduce using rule 109 (term1 -> DIV factor term1 .)
    COMMA           reduce using rule 109 (term1 -> DIV factor term1 .)
    CBRACKET        reduce using rule 109 (term1 -> DIV factor term1 .)


state 180

    (28) tipo1 -> COMMA ID . tipo1
    (28) tipo1 -> . COMMA ID tipo1
    (29) tipo1 -> . empty
    (120) empty -> .

    COMMA           shift and go to state 151
    SEMICOLON       reduce using rule 120 (empty -> .)

    tipo1                          shift and go to state 203
    empty                          shift and go to state 152

state 181

    (27) tipo -> multiple ID OBRACKET CSTINT . CBRACKET tipo3 tipo2

    CBRACKET        shift and go to state 204


state 182

    (73) ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux . SEMICOLON

    SEMICOLON       shift and go to state 205


state 183

    (85) llamada -> ID OPAREN exp llamada1 CPAREN .

    ID              reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    IF              reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    PRINT           reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    READ            reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    WHILE           reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    FOR             reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    OCURLY          reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    FUNCTION        reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    CLASS           reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    VAR             reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    OPAREN          reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    CSTINT          reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    CSTFLT          reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    CSTCHAR         reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    CSTSTRING       reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    TRUE            reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    FALSE           reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    CCURLY          reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    MULT            reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    DIV             reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    PLUS            reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    MINUS           reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    LT              reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    GT              reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    GTE             reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    LTE             reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    EQ              reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    NE              reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    AND             reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    OR              reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    QUESTION        reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    CPAREN          reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    COLON           reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    SEMICOLON       reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    COMMA           reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)
    CBRACKET        reduce using rule 85 (llamada -> ID OPAREN exp llamada1 CPAREN .)


state 184

    (87) llamada1 -> COMMA exp . llamada1
    (87) llamada1 -> . COMMA exp llamada1
    (88) llamada1 -> . empty
    (120) empty -> .

    COMMA           shift and go to state 157
    CPAREN          reduce using rule 120 (empty -> .)

    llamada1                       shift and go to state 206
    empty                          shift and go to state 158

state 185

    (83) variable2 -> PERIOD ID . variable1 variable1 variable2
    (81) variable1 -> . OBRACKET exp CBRACKET
    (82) variable1 -> . empty
    (120) empty -> .

  ! shift/reduce conflict for OBRACKET resolved as shift
    OBRACKET        shift and go to state 72
    PERIOD          reduce using rule 120 (empty -> .)
    AS              reduce using rule 120 (empty -> .)
    MULT            reduce using rule 120 (empty -> .)
    DIV             reduce using rule 120 (empty -> .)
    PLUS            reduce using rule 120 (empty -> .)
    MINUS           reduce using rule 120 (empty -> .)
    LT              reduce using rule 120 (empty -> .)
    GT              reduce using rule 120 (empty -> .)
    GTE             reduce using rule 120 (empty -> .)
    LTE             reduce using rule 120 (empty -> .)
    EQ              reduce using rule 120 (empty -> .)
    NE              reduce using rule 120 (empty -> .)
    AND             reduce using rule 120 (empty -> .)
    OR              reduce using rule 120 (empty -> .)
    QUESTION        reduce using rule 120 (empty -> .)
    CPAREN          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    PRINT           reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    FOR             reduce using rule 120 (empty -> .)
    OCURLY          reduce using rule 120 (empty -> .)
    FUNCTION        reduce using rule 120 (empty -> .)
    CLASS           reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    OPAREN          reduce using rule 120 (empty -> .)
    CSTINT          reduce using rule 120 (empty -> .)
    CSTFLT          reduce using rule 120 (empty -> .)
    CSTCHAR         reduce using rule 120 (empty -> .)
    CSTSTRING       reduce using rule 120 (empty -> .)
    TRUE            reduce using rule 120 (empty -> .)
    FALSE           reduce using rule 120 (empty -> .)
    CCURLY          reduce using rule 120 (empty -> .)
    COLON           reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    CBRACKET        reduce using rule 120 (empty -> .)
    FROM            reduce using rule 120 (empty -> .)
    TO              reduce using rule 120 (empty -> .)
    BY              reduce using rule 120 (empty -> .)

  ! OBRACKET        [ reduce using rule 120 (empty -> .) ]

    variable1                      shift and go to state 207
    empty                          shift and go to state 73

state 186

    (68) condicion -> IF cond2 THEN bloque cond1 . SEMICOLON

    SEMICOLON       shift and go to state 208


state 187

    (69) cond1 -> ELSE . bloque
    (70) cond1 -> ELSE . IF cond2 THEN bloque cond1
    (47) bloque -> . OCURLY b1 CCURLY

    IF              shift and go to state 210
    OCURLY          shift and go to state 7

    bloque                         shift and go to state 209

state 188

    (71) cond1 -> empty .

    SEMICOLON       reduce using rule 71 (cond1 -> empty .)


state 189

    (74) escritura -> PRINT OPAREN exp e1 CPAREN .

    ID              reduce using rule 74 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    IF              reduce using rule 74 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    PRINT           reduce using rule 74 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    READ            reduce using rule 74 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    WHILE           reduce using rule 74 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    FOR             reduce using rule 74 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    OCURLY          reduce using rule 74 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    FUNCTION        reduce using rule 74 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    CLASS           reduce using rule 74 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    VAR             reduce using rule 74 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    OPAREN          reduce using rule 74 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    CSTINT          reduce using rule 74 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    CSTFLT          reduce using rule 74 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    CSTCHAR         reduce using rule 74 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    CSTSTRING       reduce using rule 74 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    TRUE            reduce using rule 74 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    FALSE           reduce using rule 74 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    CCURLY          reduce using rule 74 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    COLON           reduce using rule 74 (escritura -> PRINT OPAREN exp e1 CPAREN .)
    SEMICOLON       reduce using rule 74 (escritura -> PRINT OPAREN exp e1 CPAREN .)


state 190

    (75) e1 -> COMMA exp . e1
    (75) e1 -> . COMMA exp e1
    (76) e1 -> . empty
    (120) empty -> .

    COMMA           shift and go to state 166
    CPAREN          reduce using rule 120 (empty -> .)

    e1                             shift and go to state 211
    empty                          shift and go to state 167

state 191

    (77) leer -> READ OPAREN exp e1 CPAREN .

    ID              reduce using rule 77 (leer -> READ OPAREN exp e1 CPAREN .)
    IF              reduce using rule 77 (leer -> READ OPAREN exp e1 CPAREN .)
    PRINT           reduce using rule 77 (leer -> READ OPAREN exp e1 CPAREN .)
    READ            reduce using rule 77 (leer -> READ OPAREN exp e1 CPAREN .)
    WHILE           reduce using rule 77 (leer -> READ OPAREN exp e1 CPAREN .)
    FOR             reduce using rule 77 (leer -> READ OPAREN exp e1 CPAREN .)
    OCURLY          reduce using rule 77 (leer -> READ OPAREN exp e1 CPAREN .)
    FUNCTION        reduce using rule 77 (leer -> READ OPAREN exp e1 CPAREN .)
    CLASS           reduce using rule 77 (leer -> READ OPAREN exp e1 CPAREN .)
    VAR             reduce using rule 77 (leer -> READ OPAREN exp e1 CPAREN .)
    OPAREN          reduce using rule 77 (leer -> READ OPAREN exp e1 CPAREN .)
    CSTINT          reduce using rule 77 (leer -> READ OPAREN exp e1 CPAREN .)
    CSTFLT          reduce using rule 77 (leer -> READ OPAREN exp e1 CPAREN .)
    CSTCHAR         reduce using rule 77 (leer -> READ OPAREN exp e1 CPAREN .)
    CSTSTRING       reduce using rule 77 (leer -> READ OPAREN exp e1 CPAREN .)
    TRUE            reduce using rule 77 (leer -> READ OPAREN exp e1 CPAREN .)
    FALSE           reduce using rule 77 (leer -> READ OPAREN exp e1 CPAREN .)
    CCURLY          reduce using rule 77 (leer -> READ OPAREN exp e1 CPAREN .)
    COLON           reduce using rule 77 (leer -> READ OPAREN exp e1 CPAREN .)
    SEMICOLON       reduce using rule 77 (leer -> READ OPAREN exp e1 CPAREN .)


state 192

    (18) ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .

    ID              reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    IF              reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    PRINT           reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    READ            reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    WHILE           reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    FOR             reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    OCURLY          reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    FUNCTION        reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CLASS           reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    VAR             reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    OPAREN          reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CSTINT          reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CSTFLT          reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CSTCHAR         reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CSTSTRING       reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    TRUE            reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    FALSE           reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)
    CCURLY          reduce using rule 18 (ciclo_while -> WHILE cond2 THEN bloque SEMICOLON .)


state 193

    (21) ciclo_for1 -> variable .

    TO              reduce using rule 21 (ciclo_for1 -> variable .)
    BY              reduce using rule 21 (ciclo_for1 -> variable .)
    CPAREN          reduce using rule 21 (ciclo_for1 -> variable .)


state 194

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 . TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON

    TO              shift and go to state 212


state 195

    (20) ciclo_for1 -> CSTINT .

    TO              reduce using rule 20 (ciclo_for1 -> CSTINT .)
    BY              reduce using rule 20 (ciclo_for1 -> CSTINT .)
    CPAREN          reduce using rule 20 (ciclo_for1 -> CSTINT .)


state 196

    (3) funcion -> FUNCTION func1 ID OPAREN param . CPAREN bloque

    CPAREN          shift and go to state 213


state 197

    (6) param -> param2 . param1
    (8) param1 -> . COMMA param2 param1
    (9) param1 -> . empty
    (120) empty -> .

    COMMA           shift and go to state 215
    CPAREN          reduce using rule 120 (empty -> .)

    param1                         shift and go to state 214
    empty                          shift and go to state 216

state 198

    (7) param -> empty .

    CPAREN          reduce using rule 7 (param -> empty .)


state 199

    (10) param2 -> simple . ID

    ID              shift and go to state 217


state 200

    (11) param2 -> multiple . ID variable1 variable1

    ID              shift and go to state 218


state 201

    (12) clase -> CLASS ID COLON clase_bloque SEMICOLON .

    ID              reduce using rule 12 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    IF              reduce using rule 12 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    PRINT           reduce using rule 12 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    READ            reduce using rule 12 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    WHILE           reduce using rule 12 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    FOR             reduce using rule 12 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    OCURLY          reduce using rule 12 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    FUNCTION        reduce using rule 12 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    CLASS           reduce using rule 12 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    VAR             reduce using rule 12 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    OPAREN          reduce using rule 12 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    CSTINT          reduce using rule 12 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    CSTFLT          reduce using rule 12 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    CSTCHAR         reduce using rule 12 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    CSTSTRING       reduce using rule 12 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    TRUE            reduce using rule 12 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    FALSE           reduce using rule 12 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)
    CCURLY          reduce using rule 12 (clase -> CLASS ID COLON clase_bloque SEMICOLON .)


state 202

    (13) clase_bloque -> OCURLY ATTRIBUTES . COLON clase_bloque1 METHODS COLON clase_metodos_bloque CCURLY

    COLON           shift and go to state 219


state 203

    (28) tipo1 -> COMMA ID tipo1 .

    SEMICOLON       reduce using rule 28 (tipo1 -> COMMA ID tipo1 .)


state 204

    (27) tipo -> multiple ID OBRACKET CSTINT CBRACKET . tipo3 tipo2
    (32) tipo3 -> . OBRACKET CSTINT CBRACKET
    (33) tipo3 -> . empty
    (120) empty -> .

    OBRACKET        shift and go to state 220
    COMMA           reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)

    tipo3                          shift and go to state 221
    empty                          shift and go to state 222

state 205

    (73) ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .

    ID              reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    IF              reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    PRINT           reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    READ            reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    WHILE           reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    FOR             reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    OCURLY          reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    FUNCTION        reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CLASS           reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    VAR             reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    OPAREN          reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CSTINT          reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CSTFLT          reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CSTCHAR         reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CSTSTRING       reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    TRUE            reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    FALSE           reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    CCURLY          reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    COLON           reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)
    SEMICOLON       reduce using rule 73 (ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON .)


state 206

    (87) llamada1 -> COMMA exp llamada1 .

    CPAREN          reduce using rule 87 (llamada1 -> COMMA exp llamada1 .)


state 207

    (83) variable2 -> PERIOD ID variable1 . variable1 variable2
    (81) variable1 -> . OBRACKET exp CBRACKET
    (82) variable1 -> . empty
    (120) empty -> .

    OBRACKET        shift and go to state 72
    PERIOD          reduce using rule 120 (empty -> .)
    AS              reduce using rule 120 (empty -> .)
    MULT            reduce using rule 120 (empty -> .)
    DIV             reduce using rule 120 (empty -> .)
    PLUS            reduce using rule 120 (empty -> .)
    MINUS           reduce using rule 120 (empty -> .)
    LT              reduce using rule 120 (empty -> .)
    GT              reduce using rule 120 (empty -> .)
    GTE             reduce using rule 120 (empty -> .)
    LTE             reduce using rule 120 (empty -> .)
    EQ              reduce using rule 120 (empty -> .)
    NE              reduce using rule 120 (empty -> .)
    AND             reduce using rule 120 (empty -> .)
    OR              reduce using rule 120 (empty -> .)
    QUESTION        reduce using rule 120 (empty -> .)
    CPAREN          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    PRINT           reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    FOR             reduce using rule 120 (empty -> .)
    OCURLY          reduce using rule 120 (empty -> .)
    FUNCTION        reduce using rule 120 (empty -> .)
    CLASS           reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    OPAREN          reduce using rule 120 (empty -> .)
    CSTINT          reduce using rule 120 (empty -> .)
    CSTFLT          reduce using rule 120 (empty -> .)
    CSTCHAR         reduce using rule 120 (empty -> .)
    CSTSTRING       reduce using rule 120 (empty -> .)
    TRUE            reduce using rule 120 (empty -> .)
    FALSE           reduce using rule 120 (empty -> .)
    CCURLY          reduce using rule 120 (empty -> .)
    COLON           reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    CBRACKET        reduce using rule 120 (empty -> .)
    FROM            reduce using rule 120 (empty -> .)
    TO              reduce using rule 120 (empty -> .)
    BY              reduce using rule 120 (empty -> .)

    variable1                      shift and go to state 223
    empty                          shift and go to state 73

state 208

    (68) condicion -> IF cond2 THEN bloque cond1 SEMICOLON .

    ID              reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    IF              reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    PRINT           reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    READ            reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    WHILE           reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    FOR             reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    OCURLY          reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    FUNCTION        reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CLASS           reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    VAR             reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    OPAREN          reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CSTINT          reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CSTFLT          reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CSTCHAR         reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CSTSTRING       reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    TRUE            reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    FALSE           reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)
    CCURLY          reduce using rule 68 (condicion -> IF cond2 THEN bloque cond1 SEMICOLON .)


state 209

    (69) cond1 -> ELSE bloque .

    SEMICOLON       reduce using rule 69 (cond1 -> ELSE bloque .)


state 210

    (70) cond1 -> ELSE IF . cond2 THEN bloque cond1
    (72) cond2 -> . OPAREN exp CPAREN

    OPAREN          shift and go to state 79

    cond2                          shift and go to state 224

state 211

    (75) e1 -> COMMA exp e1 .

    CPAREN          reduce using rule 75 (e1 -> COMMA exp e1 .)


state 212

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO . ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON
    (20) ciclo_for1 -> . CSTINT
    (21) ciclo_for1 -> . variable
    (80) variable -> . ID variable1 variable1 variable2

    CSTINT          shift and go to state 195
    ID              shift and go to state 132

    variable                       shift and go to state 193
    ciclo_for1                     shift and go to state 225

state 213

    (3) funcion -> FUNCTION func1 ID OPAREN param CPAREN . bloque
    (47) bloque -> . OCURLY b1 CCURLY

    OCURLY          shift and go to state 7

    bloque                         shift and go to state 226

state 214

    (6) param -> param2 param1 .

    CPAREN          reduce using rule 6 (param -> param2 param1 .)


state 215

    (8) param1 -> COMMA . param2 param1
    (10) param2 -> . simple ID
    (11) param2 -> . multiple ID variable1 variable1
    (34) simple -> . INT
    (35) simple -> . FLOAT
    (36) simple -> . BOOL
    (37) simple -> . STRING
    (38) simple -> . CHAR
    (39) multiple -> . INTS
    (40) multiple -> . FLOATS
    (41) multiple -> . BOOLS
    (42) multiple -> . STRINGS
    (43) multiple -> . CHARS

    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    BOOL            shift and go to state 58
    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    INTS            shift and go to state 61
    FLOATS          shift and go to state 62
    BOOLS           shift and go to state 63
    STRINGS         shift and go to state 64
    CHARS           shift and go to state 65

    param2                         shift and go to state 227
    simple                         shift and go to state 199
    multiple                       shift and go to state 200

state 216

    (9) param1 -> empty .

    CPAREN          reduce using rule 9 (param1 -> empty .)


state 217

    (10) param2 -> simple ID .

    COMMA           reduce using rule 10 (param2 -> simple ID .)
    CPAREN          reduce using rule 10 (param2 -> simple ID .)


state 218

    (11) param2 -> multiple ID . variable1 variable1
    (81) variable1 -> . OBRACKET exp CBRACKET
    (82) variable1 -> . empty
    (120) empty -> .

  ! shift/reduce conflict for OBRACKET resolved as shift
    OBRACKET        shift and go to state 72
    COMMA           reduce using rule 120 (empty -> .)
    CPAREN          reduce using rule 120 (empty -> .)

  ! OBRACKET        [ reduce using rule 120 (empty -> .) ]

    variable1                      shift and go to state 228
    empty                          shift and go to state 73

state 219

    (13) clase_bloque -> OCURLY ATTRIBUTES COLON . clase_bloque1 METHODS COLON clase_metodos_bloque CCURLY
    (14) clase_bloque1 -> . dec
    (15) clase_bloque1 -> . empty
    (22) dec -> . VAR tipo SEMICOLON dec1
    (120) empty -> .

    VAR             shift and go to state 8
    METHODS         reduce using rule 120 (empty -> .)

    clase_bloque1                  shift and go to state 229
    dec                            shift and go to state 230
    empty                          shift and go to state 231

state 220

    (32) tipo3 -> OBRACKET . CSTINT CBRACKET

    CSTINT          shift and go to state 232


state 221

    (27) tipo -> multiple ID OBRACKET CSTINT CBRACKET tipo3 . tipo2
    (30) tipo2 -> . COMMA ID OBRACKET CSTINT CBRACKET tipo3
    (31) tipo2 -> . empty
    (120) empty -> .

    COMMA           shift and go to state 234
    SEMICOLON       reduce using rule 120 (empty -> .)

    tipo2                          shift and go to state 233
    empty                          shift and go to state 235

state 222

    (33) tipo3 -> empty .

    COMMA           reduce using rule 33 (tipo3 -> empty .)
    SEMICOLON       reduce using rule 33 (tipo3 -> empty .)


state 223

    (83) variable2 -> PERIOD ID variable1 variable1 . variable2
    (83) variable2 -> . PERIOD ID variable1 variable1 variable2
    (84) variable2 -> . empty
    (120) empty -> .

    PERIOD          shift and go to state 160
    AS              reduce using rule 120 (empty -> .)
    MULT            reduce using rule 120 (empty -> .)
    DIV             reduce using rule 120 (empty -> .)
    PLUS            reduce using rule 120 (empty -> .)
    MINUS           reduce using rule 120 (empty -> .)
    LT              reduce using rule 120 (empty -> .)
    GT              reduce using rule 120 (empty -> .)
    GTE             reduce using rule 120 (empty -> .)
    LTE             reduce using rule 120 (empty -> .)
    EQ              reduce using rule 120 (empty -> .)
    NE              reduce using rule 120 (empty -> .)
    AND             reduce using rule 120 (empty -> .)
    OR              reduce using rule 120 (empty -> .)
    QUESTION        reduce using rule 120 (empty -> .)
    CPAREN          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    PRINT           reduce using rule 120 (empty -> .)
    READ            reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    FOR             reduce using rule 120 (empty -> .)
    OCURLY          reduce using rule 120 (empty -> .)
    FUNCTION        reduce using rule 120 (empty -> .)
    CLASS           reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    OPAREN          reduce using rule 120 (empty -> .)
    CSTINT          reduce using rule 120 (empty -> .)
    CSTFLT          reduce using rule 120 (empty -> .)
    CSTCHAR         reduce using rule 120 (empty -> .)
    CSTSTRING       reduce using rule 120 (empty -> .)
    TRUE            reduce using rule 120 (empty -> .)
    FALSE           reduce using rule 120 (empty -> .)
    CCURLY          reduce using rule 120 (empty -> .)
    COLON           reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    CBRACKET        reduce using rule 120 (empty -> .)
    FROM            reduce using rule 120 (empty -> .)
    TO              reduce using rule 120 (empty -> .)
    BY              reduce using rule 120 (empty -> .)

    variable2                      shift and go to state 236
    empty                          shift and go to state 161

state 224

    (70) cond1 -> ELSE IF cond2 . THEN bloque cond1

    THEN            shift and go to state 237


state 225

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 . BY ciclo_for1 CPAREN THEN bloque SEMICOLON

    BY              shift and go to state 238


state 226

    (3) funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .

    ID              reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    IF              reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    PRINT           reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    READ            reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    WHILE           reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    FOR             reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    OCURLY          reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    FUNCTION        reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    CLASS           reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    VAR             reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    OPAREN          reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    CSTINT          reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    CSTFLT          reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    CSTCHAR         reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    CSTSTRING       reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    TRUE            reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    FALSE           reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)
    CCURLY          reduce using rule 3 (funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque .)


state 227

    (8) param1 -> COMMA param2 . param1
    (8) param1 -> . COMMA param2 param1
    (9) param1 -> . empty
    (120) empty -> .

    COMMA           shift and go to state 215
    CPAREN          reduce using rule 120 (empty -> .)

    param1                         shift and go to state 239
    empty                          shift and go to state 216

state 228

    (11) param2 -> multiple ID variable1 . variable1
    (81) variable1 -> . OBRACKET exp CBRACKET
    (82) variable1 -> . empty
    (120) empty -> .

    OBRACKET        shift and go to state 72
    COMMA           reduce using rule 120 (empty -> .)
    CPAREN          reduce using rule 120 (empty -> .)

    variable1                      shift and go to state 240
    empty                          shift and go to state 73

state 229

    (13) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 . METHODS COLON clase_metodos_bloque CCURLY

    METHODS         shift and go to state 241


state 230

    (14) clase_bloque1 -> dec .

    METHODS         reduce using rule 14 (clase_bloque1 -> dec .)


state 231

    (15) clase_bloque1 -> empty .

    METHODS         reduce using rule 15 (clase_bloque1 -> empty .)


state 232

    (32) tipo3 -> OBRACKET CSTINT . CBRACKET

    CBRACKET        shift and go to state 242


state 233

    (27) tipo -> multiple ID OBRACKET CSTINT CBRACKET tipo3 tipo2 .

    SEMICOLON       reduce using rule 27 (tipo -> multiple ID OBRACKET CSTINT CBRACKET tipo3 tipo2 .)


state 234

    (30) tipo2 -> COMMA . ID OBRACKET CSTINT CBRACKET tipo3

    ID              shift and go to state 243


state 235

    (31) tipo2 -> empty .

    SEMICOLON       reduce using rule 31 (tipo2 -> empty .)


state 236

    (83) variable2 -> PERIOD ID variable1 variable1 variable2 .

    AS              reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    MULT            reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    DIV             reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    PLUS            reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    MINUS           reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    LT              reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    GT              reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    GTE             reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    LTE             reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    EQ              reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    NE              reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    AND             reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    OR              reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    QUESTION        reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    CPAREN          reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    ID              reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    IF              reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    PRINT           reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    READ            reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    WHILE           reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    FOR             reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    OCURLY          reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    FUNCTION        reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    CLASS           reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    VAR             reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    OPAREN          reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    CSTINT          reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    CSTFLT          reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    CSTCHAR         reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    CSTSTRING       reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    TRUE            reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    FALSE           reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    CCURLY          reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    COLON           reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    SEMICOLON       reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    COMMA           reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    CBRACKET        reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    FROM            reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    TO              reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)
    BY              reduce using rule 83 (variable2 -> PERIOD ID variable1 variable1 variable2 .)


state 237

    (70) cond1 -> ELSE IF cond2 THEN . bloque cond1
    (47) bloque -> . OCURLY b1 CCURLY

    OCURLY          shift and go to state 7

    bloque                         shift and go to state 244

state 238

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY . ciclo_for1 CPAREN THEN bloque SEMICOLON
    (20) ciclo_for1 -> . CSTINT
    (21) ciclo_for1 -> . variable
    (80) variable -> . ID variable1 variable1 variable2

    CSTINT          shift and go to state 195
    ID              shift and go to state 132

    variable                       shift and go to state 193
    ciclo_for1                     shift and go to state 245

state 239

    (8) param1 -> COMMA param2 param1 .

    CPAREN          reduce using rule 8 (param1 -> COMMA param2 param1 .)


state 240

    (11) param2 -> multiple ID variable1 variable1 .

    COMMA           reduce using rule 11 (param2 -> multiple ID variable1 variable1 .)
    CPAREN          reduce using rule 11 (param2 -> multiple ID variable1 variable1 .)


state 241

    (13) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS . COLON clase_metodos_bloque CCURLY

    COLON           shift and go to state 246


state 242

    (32) tipo3 -> OBRACKET CSTINT CBRACKET .

    COMMA           reduce using rule 32 (tipo3 -> OBRACKET CSTINT CBRACKET .)
    SEMICOLON       reduce using rule 32 (tipo3 -> OBRACKET CSTINT CBRACKET .)


state 243

    (30) tipo2 -> COMMA ID . OBRACKET CSTINT CBRACKET tipo3

    OBRACKET        shift and go to state 247


state 244

    (70) cond1 -> ELSE IF cond2 THEN bloque . cond1
    (69) cond1 -> . ELSE bloque
    (70) cond1 -> . ELSE IF cond2 THEN bloque cond1
    (71) cond1 -> . empty
    (120) empty -> .

    ELSE            shift and go to state 187
    SEMICOLON       reduce using rule 120 (empty -> .)

    cond1                          shift and go to state 248
    empty                          shift and go to state 188

state 245

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 . CPAREN THEN bloque SEMICOLON

    CPAREN          shift and go to state 249


state 246

    (13) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON . clase_metodos_bloque CCURLY
    (16) clase_metodos_bloque -> . funcion clase_metodos_bloque
    (17) clase_metodos_bloque -> . empty
    (3) funcion -> . FUNCTION func1 ID OPAREN param CPAREN bloque
    (120) empty -> .

    FUNCTION        shift and go to state 34
    CCURLY          reduce using rule 120 (empty -> .)

    clase_metodos_bloque           shift and go to state 250
    funcion                        shift and go to state 251
    empty                          shift and go to state 252

state 247

    (30) tipo2 -> COMMA ID OBRACKET . CSTINT CBRACKET tipo3

    CSTINT          shift and go to state 253


state 248

    (70) cond1 -> ELSE IF cond2 THEN bloque cond1 .

    SEMICOLON       reduce using rule 70 (cond1 -> ELSE IF cond2 THEN bloque cond1 .)


state 249

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN . THEN bloque SEMICOLON

    THEN            shift and go to state 254


state 250

    (13) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque . CCURLY

    CCURLY          shift and go to state 255


state 251

    (16) clase_metodos_bloque -> funcion . clase_metodos_bloque
    (16) clase_metodos_bloque -> . funcion clase_metodos_bloque
    (17) clase_metodos_bloque -> . empty
    (3) funcion -> . FUNCTION func1 ID OPAREN param CPAREN bloque
    (120) empty -> .

    FUNCTION        shift and go to state 34
    CCURLY          reduce using rule 120 (empty -> .)

    funcion                        shift and go to state 251
    clase_metodos_bloque           shift and go to state 256
    empty                          shift and go to state 252

state 252

    (17) clase_metodos_bloque -> empty .

    CCURLY          reduce using rule 17 (clase_metodos_bloque -> empty .)


state 253

    (30) tipo2 -> COMMA ID OBRACKET CSTINT . CBRACKET tipo3

    CBRACKET        shift and go to state 257


state 254

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN . bloque SEMICOLON
    (47) bloque -> . OCURLY b1 CCURLY

    OCURLY          shift and go to state 7

    bloque                         shift and go to state 258

state 255

    (13) clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque CCURLY .

    SEMICOLON       reduce using rule 13 (clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque CCURLY .)


state 256

    (16) clase_metodos_bloque -> funcion clase_metodos_bloque .

    CCURLY          reduce using rule 16 (clase_metodos_bloque -> funcion clase_metodos_bloque .)


state 257

    (30) tipo2 -> COMMA ID OBRACKET CSTINT CBRACKET . tipo3
    (32) tipo3 -> . OBRACKET CSTINT CBRACKET
    (33) tipo3 -> . empty
    (120) empty -> .

    OBRACKET        shift and go to state 220
    SEMICOLON       reduce using rule 120 (empty -> .)

    tipo3                          shift and go to state 259
    empty                          shift and go to state 222

state 258

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque . SEMICOLON

    SEMICOLON       shift and go to state 260


state 259

    (30) tipo2 -> COMMA ID OBRACKET CSTINT CBRACKET tipo3 .

    SEMICOLON       reduce using rule 30 (tipo2 -> COMMA ID OBRACKET CSTINT CBRACKET tipo3 .)


state 260

    (19) ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .

    ID              reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    IF              reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    PRINT           reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    READ            reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    WHILE           reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    FOR             reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    OCURLY          reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    FUNCTION        reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CLASS           reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    VAR             reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    OPAREN          reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CSTINT          reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CSTFLT          reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CSTCHAR         reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CSTSTRING       reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    TRUE            reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    FALSE           reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)
    CCURLY          reduce using rule 19 (ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OBRACKET in state 27 resolved as shift
WARNING: shift/reduce conflict for OBRACKET in state 77 resolved as shift
WARNING: shift/reduce conflict for OPAREN in state 77 resolved as shift
WARNING: shift/reduce conflict for VAR in state 110 resolved as shift
WARNING: shift/reduce conflict for OBRACKET in state 132 resolved as shift
WARNING: shift/reduce conflict for OBRACKET in state 185 resolved as shift
WARNING: shift/reduce conflict for OBRACKET in state 218 resolved as shift
