
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ATTRIBUTES BOOL BOOLS BY CBRACKET CCURLY CHAR CHARS CLASS COLON COMMA COMMENT CPAREN CSTCHAR CSTFLT CSTINT CSTSTRING DATAFRAME DIV ELSE EQ FALSE FILE FLOAT FLOATS FOR FROM FUNCTION GT GTE ID IF INT INTS LT LTE MAIN METHODS MINUS MULT NE OBRACKET OCURLY OPAREN OR PERIOD PLUS PRINT PROGRAM QUESTION READ RETURN SEMICOLON STRING STRINGS THEN TO TRUE VAR VOID WHILE\n  program : PROGRAM ID SEMICOLON saw_program program_content main saw_program_end\n  \n  program_content : dec program_content\n                  | class program_content\n                  | function program_content\n                  | empty\n  \n  main : INT MAIN saw_main OPAREN CPAREN block saw_function_end scope_end\n  \n  functions : function functions\n            | empty\n  \n  function : FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN block saw_function_end scope_end\n  \n  func1 : simple\n        | VOID saw_type\n  \n  param : param2 param1\n        | empty\n  \n  param1 : COMMA param2 param1\n         | empty\n  \n  param2 : simple ID saw_id saw_variable_param\n         | multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable_param\n  \n  class : CLASS ID saw_id saw_class COLON class_block class_scope_end SEMICOLON\n   \n  class_block :  OCURLY ATTRIBUTES COLON decs METHODS COLON functions CCURLY\n  \n  while_loop : WHILE saw_while cond2 THEN block SEMICOLON saw_while_end\n  \n  for_loop : FOR OPAREN variable FROM for_loop1 TO for_loop1 BY for_loop1 CPAREN THEN block SEMICOLON\n  \n  for_loop1 : CSTINT\n            | variable\n  \n  decs : dec decs1\n  \n  dec : VAR type SEMICOLON dec1\n  \n  dec1 : dec\n       | empty\n  \n  decs1 : decs\n        | empty\n  \n  type : compound ID saw_id saw_variable type1\n       | simple ID saw_id saw_variable type1\n       | multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable type2\n  \n  type1 : COMMA ID saw_id saw_variable type1\n        | empty\n  \n  type2 : COMMA ID saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable\n        | empty\n  \n  type3 : OBRACKET CSTINT CBRACKET saw_dimension\n        | empty\n  \n  simple : INT saw_type\n         | FLOAT saw_type\n         | BOOL saw_type\n         | STRING saw_type\n         | CHAR saw_type\n  \n  multiple : INTS saw_type\n           | FLOATS saw_type\n           | BOOLS saw_type\n           | STRINGS saw_type\n           | CHARS saw_type\n  \n  compound : ID saw_type\n            | DATAFRAME saw_type\n            | FILE saw_type\n  \n  block : OCURLY b1 CCURLY\n        | OCURLY decs count_vars b1 CCURLY\n  \n  b1 : estatuto b1\n     | empty\n  \n  estatuto : assign\n           | function_call\n           | conditional\n           | write\n           | read\n           | while_loop\n           | for_loop\n           | ternary\n           | RETURN exp\n  \n  estatuto_redux : assign\n                 | function_call\n                 | write\n                 | read\n                 | ternary\n                 | RETURN exp\n  \n  assign : variable saw_var_factor AS saw_asig exp\n  \n  conditional : IF cond2 THEN block cond1 SEMICOLON bc_end\n  \n  cond1 : ELSE saw_else block\n        | empty\n  \n    cond2 : OPAREN exp CPAREN\n  \n  ternary : exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON\n  \n  write : PRINT saw_print OPAREN exp e1 CPAREN saw_print_end\n  \n  e1 : COMMA exp e1\n     | empty\n  \n  read  : READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end\n  \n  l1 : COMMA variable saw_read_exp e1\n     | empty\n  \n  boolean : TRUE\n          | FALSE\n  \n  variable : ID saw_id saw_called_var\n           | ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var\n           | ID saw_id variable2\n  \n  variable1 : OBRACKET exp CBRACKET saw_dimension\n            | empty\n  \n  variable2 : PERIOD ID saw_called_var_from_class\n            | PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1\n  \n  function_call : ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub\n                | ID saw_id verify_func OPAREN CPAREN generate_gosub\n  \n  function_call1 : COMMA increment_cont exp verify_param function_call1\n                 | empty\n  \n  exp : texp exp1 check_or_operator\n  \n  exp1 : OR saw_or texp exp1\n       | empty\n  \n  texp : gexp texp1 check_and_operator\n  \n  texp1 : AND saw_and gexp texp1\n        | empty\n  \n  gexp : mexp gexp1 check_relational_operator\n  \n  gexp1 : LT saw_relational_operator mexp\n        | GT saw_relational_operator mexp\n        | GTE saw_relational_operator mexp\n        | LTE saw_relational_operator mexp\n        | EQ saw_relational_operator mexp\n        | NE saw_relational_operator mexp\n        | empty\n  \n  mexp : termino mexp1\n  \n  mexp1 : PLUS saw_plusminus_operator termino mexp1\n        | MINUS saw_plusminus_operator termino mexp1\n        | empty\n  \n  termino : factor term1 check_plusminus_operator\n  \n  term1 : MULT saw_multdiv_operator factor term1\n        | DIV saw_multdiv_operator factor term1\n        | empty\n  \n  factor : OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator\n         | varcst check_multdiv_operator\n         | variable saw_var_factor check_multdiv_operator\n         | function_call\n  \n  saw_var_factor :\n  \n  varcst : CSTINT saw_end_value\n         | CSTFLT saw_end_value\n         | CSTCHAR saw_end_value\n         | CSTSTRING saw_end_value\n         | boolean saw_end_value\n  \n  empty : \n   saw_program :  saw_program_end :  saw_main :  saw_class :  saw_type :  saw_id :  saw_variable :  saw_variable_param :  saw_dimension :  saw_called_var :  saw_called_var_from_class :  saw_asig :  saw_end_value :  saw_plusminus_operator  :  check_plusminus_operator  :  saw_multdiv_operator  :  check_multdiv_operator  :  saw_relational_operator :  check_relational_operator : \n  check_and_operator  :\n  \n  check_or_operator :\n  \n  saw_and  :\n  \n  saw_or :\n   saw_oparen :  saw_cparen :  saw_function :  saw_function_end :  scope_end :  class_scope_end :  saw_print :  saw_print_end :  saw_read :  saw_read_exp :  saw_read_end :  bc_end : saw_else : saw_while :  saw_while_end :  count_vars :  verify_func :  verify_param :  increment_cont :  generate_gosub : '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,14,40,86,97,144,145,251,],[0,-130,-1,-155,-156,-6,-52,-53,]),'ID':([2,11,12,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,42,44,47,48,49,50,51,52,53,54,55,56,57,58,61,63,64,65,79,87,95,96,99,100,102,103,104,105,106,107,108,109,110,111,115,121,122,123,124,125,126,127,128,129,130,131,132,133,146,148,149,150,151,152,153,154,155,158,160,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,203,204,211,212,213,215,216,217,218,222,223,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,252,254,255,257,258,264,266,267,268,269,270,271,272,273,274,275,276,277,280,286,288,289,290,291,296,303,304,305,306,307,308,315,317,318,319,320,321,323,326,328,329,335,337,338,339,341,343,345,347,351,352,354,355,356,358,361,363,364,369,370,378,],[3,21,36,43,-133,45,46,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,60,-10,-133,-128,-49,-50,-51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-11,-25,-26,-27,88,114,142,143,-167,114,-128,-56,-57,-58,-59,-60,-61,-62,-63,154,-152,-128,-128,-128,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,114,-24,-28,-29,-64,-122,-121,-134,114,154,154,226,-149,-151,-98,-148,-150,-101,-147,-146,-146,-146,-146,-146,-146,-109,-110,-142,-142,-113,-143,-144,-144,-117,-119,-123,-124,-125,-126,-127,-145,-138,154,-140,-120,-85,154,-87,257,154,226,-96,154,-99,154,-102,154,154,154,154,154,154,154,154,-114,154,154,114,154,154,-139,-153,226,-128,-128,-103,-104,-105,-106,-107,-108,-128,-128,-128,-128,310,-71,-171,-137,-90,-145,154,-97,-100,-111,-112,-115,-116,-76,-93,-128,154,-118,-163,-159,226,-166,226,-170,154,-138,-89,-72,-77,-162,-20,-171,154,-86,-137,-80,226,-92,-137,-128,-88,-91,-21,]),'SEMICOLON':([3,19,43,45,66,67,72,73,78,80,81,83,88,89,90,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,145,152,153,154,165,167,168,170,171,178,179,182,183,186,187,188,189,190,191,192,193,195,196,203,204,206,207,208,209,210,213,215,217,227,229,231,240,243,245,251,253,257,258,259,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,285,286,288,289,290,291,292,294,299,303,304,305,306,307,308,309,315,317,318,320,323,331,338,339,342,343,345,351,354,355,356,361,363,364,367,369,370,372,375,376,377,],[4,42,-134,-134,-135,-135,-128,-128,-30,-34,-31,-157,-134,-137,136,-128,-128,-128,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,-135,-128,-52,-122,-121,-134,-149,-98,-148,-101,-147,-109,-110,-113,-143,-117,-119,-123,-124,-125,-126,-127,-128,-135,-38,-145,-138,-65,-66,-67,-68,-69,-120,-85,-87,-96,-99,-102,-114,-33,-128,-53,-70,-139,-153,-128,-128,-128,-103,-104,-105,-106,-107,-108,-128,-128,-128,-128,-137,-32,-36,315,-71,-171,-137,-90,-145,321,-74,328,-97,-100,-111,-112,-115,-116,-37,-76,-93,-128,-118,-159,-19,-138,-89,-73,-77,-162,-171,-86,-137,-80,-92,-137,-128,-137,-88,-91,-128,-135,378,-35,]),'VAR':([4,5,7,8,9,42,63,64,65,87,102,136,137,145,198,247,251,283,],[-129,11,11,11,11,11,-25,-26,-27,11,11,-18,11,-52,-155,-156,-53,-9,]),'CLASS':([4,5,7,8,9,42,63,64,65,136,145,198,247,251,283,],[-129,12,12,12,12,-128,-25,-26,-27,-18,-52,-155,-156,-53,-9,]),'FUNCTION':([4,5,7,8,9,42,63,64,65,136,145,198,247,251,282,283,312,],[-129,13,13,13,13,-128,-25,-26,-27,-18,-52,-155,-156,-53,13,-9,13,]),'INT':([4,5,6,7,8,9,10,11,13,16,17,18,42,63,64,65,85,136,140,145,198,247,251,283,],[-129,-128,15,-128,-128,-128,-5,26,26,-2,-3,-4,-128,-25,-26,-27,26,-18,26,-52,-155,-156,-53,-9,]),'DATAFRAME':([11,],[24,]),'FILE':([11,],[25,]),'FLOAT':([11,13,85,140,],[27,27,27,27,]),'BOOL':([11,13,85,140,],[28,28,28,28,]),'STRING':([11,13,85,140,],[29,29,29,29,]),'CHAR':([11,13,85,140,],[30,30,30,30,]),'INTS':([11,85,140,],[31,31,31,]),'FLOATS':([11,85,140,],[32,32,32,]),'BOOLS':([11,85,140,],[33,33,33,]),'STRINGS':([11,85,140,],[34,34,34,]),'CHARS':([11,85,140,],[35,35,35,]),'VOID':([13,],[39,]),'MAIN':([15,],[41,]),'COLON':([36,59,69,91,121,122,123,124,125,126,127,128,129,130,131,132,133,152,153,154,165,167,168,170,171,178,179,182,183,186,187,188,189,190,191,192,203,204,205,206,207,208,209,210,213,215,217,227,229,231,240,246,253,257,258,266,267,268,269,270,271,272,273,274,275,276,277,286,288,289,290,291,303,304,305,306,307,308,315,317,318,320,323,338,339,343,345,351,354,355,356,361,363,364,369,370,],[-134,-132,75,137,-128,-128,-128,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,-122,-121,-134,-149,-98,-148,-101,-147,-109,-110,-113,-143,-117,-119,-123,-124,-125,-126,-127,-145,-138,252,-65,-66,-67,-68,-69,-120,-85,-87,-96,-99,-102,-114,282,-70,-139,-153,-128,-128,-103,-104,-105,-106,-107,-108,-128,-128,-128,-128,-71,-171,-137,-90,-145,-97,-100,-111,-112,-115,-116,-76,-93,-128,-118,-159,-138,-89,-77,-162,-171,-86,-137,-80,-92,-137,-128,-88,-91,]),'OPAREN':([41,42,60,62,63,64,65,70,76,87,99,100,102,103,104,105,106,107,108,109,110,111,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,146,148,149,150,151,152,153,154,155,157,158,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,203,204,211,212,213,214,215,216,217,222,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,252,254,255,257,258,266,267,268,269,270,271,272,273,274,275,276,277,286,288,289,290,291,296,303,304,305,306,307,308,315,317,318,319,320,321,323,328,335,337,338,339,341,343,345,347,351,352,354,355,356,361,363,364,369,370,378,],[-131,-128,-134,71,-25,-26,-27,-154,85,115,-167,115,-128,-56,-57,-58,-59,-60,-61,-62,-63,115,-134,-152,160,-158,-160,-165,164,-128,-128,-128,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,115,-24,-28,-29,-64,-122,-121,-134,115,-168,115,115,222,223,160,-149,-151,-98,-148,-150,-101,-147,-146,-146,-146,-146,-146,-146,-109,-110,-142,-142,-113,-143,-144,-144,-117,-119,-123,-124,-125,-126,-127,-145,-138,115,-140,-120,255,-85,115,-87,115,-96,115,-99,115,-102,115,115,115,115,115,115,115,115,-114,115,115,115,115,115,-139,-153,-128,-128,-103,-104,-105,-106,-107,-108,-128,-128,-128,-128,-71,-171,-137,-90,-145,115,-97,-100,-111,-112,-115,-116,-76,-93,-128,115,-118,-163,-159,-166,-170,115,-138,-89,-72,-77,-162,-20,-171,115,-86,-137,-80,-92,-137,-128,-88,-91,-21,]),'RETURN':([42,63,64,65,87,99,100,102,103,104,105,106,107,108,109,110,121,122,123,124,125,126,127,128,129,130,131,132,133,146,148,149,150,151,152,153,154,155,165,167,168,170,171,178,179,182,183,186,187,188,189,190,191,192,203,204,213,215,217,227,229,231,240,252,257,258,266,267,268,269,270,271,272,273,274,275,276,277,286,288,289,290,291,303,304,305,306,307,308,315,317,318,320,321,323,328,338,339,341,343,345,347,351,354,355,356,361,363,364,369,370,378,],[-128,-25,-26,-27,111,-167,111,-128,-56,-57,-58,-59,-60,-61,-62,-63,-128,-128,-128,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,111,-24,-28,-29,-64,-122,-121,-134,211,-149,-98,-148,-101,-147,-109,-110,-113,-143,-117,-119,-123,-124,-125,-126,-127,-145,-138,-120,-85,-87,-96,-99,-102,-114,211,-139,-153,-128,-128,-103,-104,-105,-106,-107,-108,-128,-128,-128,-128,-71,-171,-137,-90,-145,-97,-100,-111,-112,-115,-116,-76,-93,-128,-118,-163,-159,-166,-138,-89,-72,-77,-162,-20,-171,-86,-137,-80,-92,-137,-128,-88,-91,-21,]),'IF':([42,63,64,65,87,99,100,102,103,104,105,106,107,108,109,110,121,122,123,124,125,126,127,128,129,130,131,132,133,146,148,149,150,151,152,153,154,165,167,168,170,171,178,179,182,183,186,187,188,189,190,191,192,203,204,213,215,217,227,229,231,240,257,258,266,267,268,269,270,271,272,273,274,275,276,277,286,288,289,290,291,303,304,305,306,307,308,315,317,318,320,321,323,328,338,339,341,343,345,347,351,354,355,356,361,363,364,369,370,378,],[-128,-25,-26,-27,116,-167,116,-128,-56,-57,-58,-59,-60,-61,-62,-63,-128,-128,-128,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,116,-24,-28,-29,-64,-122,-121,-134,-149,-98,-148,-101,-147,-109,-110,-113,-143,-117,-119,-123,-124,-125,-126,-127,-145,-138,-120,-85,-87,-96,-99,-102,-114,-139,-153,-128,-128,-103,-104,-105,-106,-107,-108,-128,-128,-128,-128,-71,-171,-137,-90,-145,-97,-100,-111,-112,-115,-116,-76,-93,-128,-118,-163,-159,-166,-138,-89,-72,-77,-162,-20,-171,-86,-137,-80,-92,-137,-128,-88,-91,-21,]),'PRINT':([42,63,64,65,87,99,100,102,103,104,105,106,107,108,109,110,121,122,123,124,125,126,127,128,129,130,131,132,133,146,148,149,150,151,152,153,154,155,165,167,168,170,171,178,179,182,183,186,187,188,189,190,191,192,203,204,213,215,217,227,229,231,240,252,257,258,266,267,268,269,270,271,272,273,274,275,276,277,286,288,289,290,291,303,304,305,306,307,308,315,317,318,320,321,323,328,338,339,341,343,345,347,351,354,355,356,361,363,364,369,370,378,],[-128,-25,-26,-27,117,-167,117,-128,-56,-57,-58,-59,-60,-61,-62,-63,-128,-128,-128,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,117,-24,-28,-29,-64,-122,-121,-134,117,-149,-98,-148,-101,-147,-109,-110,-113,-143,-117,-119,-123,-124,-125,-126,-127,-145,-138,-120,-85,-87,-96,-99,-102,-114,117,-139,-153,-128,-128,-103,-104,-105,-106,-107,-108,-128,-128,-128,-128,-71,-171,-137,-90,-145,-97,-100,-111,-112,-115,-116,-76,-93,-128,-118,-163,-159,-166,-138,-89,-72,-77,-162,-20,-171,-86,-137,-80,-92,-137,-128,-88,-91,-21,]),'READ':([42,63,64,65,87,99,100,102,103,104,105,106,107,108,109,110,121,122,123,124,125,126,127,128,129,130,131,132,133,146,148,149,150,151,152,153,154,155,165,167,168,170,171,178,179,182,183,186,187,188,189,190,191,192,203,204,213,215,217,227,229,231,240,252,257,258,266,267,268,269,270,271,272,273,274,275,276,277,286,288,289,290,291,303,304,305,306,307,308,315,317,318,320,321,323,328,338,339,341,343,345,347,351,354,355,356,361,363,364,369,370,378,],[-128,-25,-26,-27,118,-167,118,-128,-56,-57,-58,-59,-60,-61,-62,-63,-128,-128,-128,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,118,-24,-28,-29,-64,-122,-121,-134,118,-149,-98,-148,-101,-147,-109,-110,-113,-143,-117,-119,-123,-124,-125,-126,-127,-145,-138,-120,-85,-87,-96,-99,-102,-114,118,-139,-153,-128,-128,-103,-104,-105,-106,-107,-108,-128,-128,-128,-128,-71,-171,-137,-90,-145,-97,-100,-111,-112,-115,-116,-76,-93,-128,-118,-163,-159,-166,-138,-89,-72,-77,-162,-20,-171,-86,-137,-80,-92,-137,-128,-88,-91,-21,]),'WHILE':([42,63,64,65,87,99,100,102,103,104,105,106,107,108,109,110,121,122,123,124,125,126,127,128,129,130,131,132,133,146,148,149,150,151,152,153,154,165,167,168,170,171,178,179,182,183,186,187,188,189,190,191,192,203,204,213,215,217,227,229,231,240,257,258,266,267,268,269,270,271,272,273,274,275,276,277,286,288,289,290,291,303,304,305,306,307,308,315,317,318,320,321,323,328,338,339,341,343,345,347,351,354,355,356,361,363,364,369,370,378,],[-128,-25,-26,-27,119,-167,119,-128,-56,-57,-58,-59,-60,-61,-62,-63,-128,-128,-128,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,119,-24,-28,-29,-64,-122,-121,-134,-149,-98,-148,-101,-147,-109,-110,-113,-143,-117,-119,-123,-124,-125,-126,-127,-145,-138,-120,-85,-87,-96,-99,-102,-114,-139,-153,-128,-128,-103,-104,-105,-106,-107,-108,-128,-128,-128,-128,-71,-171,-137,-90,-145,-97,-100,-111,-112,-115,-116,-76,-93,-128,-118,-163,-159,-166,-138,-89,-72,-77,-162,-20,-171,-86,-137,-80,-92,-137,-128,-88,-91,-21,]),'FOR':([42,63,64,65,87,99,100,102,103,104,105,106,107,108,109,110,121,122,123,124,125,126,127,128,129,130,131,132,133,146,148,149,150,151,152,153,154,165,167,168,170,171,178,179,182,183,186,187,188,189,190,191,192,203,204,213,215,217,227,229,231,240,257,258,266,267,268,269,270,271,272,273,274,275,276,277,286,288,289,290,291,303,304,305,306,307,308,315,317,318,320,321,323,328,338,339,341,343,345,347,351,354,355,356,361,363,364,369,370,378,],[-128,-25,-26,-27,120,-167,120,-128,-56,-57,-58,-59,-60,-61,-62,-63,-128,-128,-128,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,120,-24,-28,-29,-64,-122,-121,-134,-149,-98,-148,-101,-147,-109,-110,-113,-143,-117,-119,-123,-124,-125,-126,-127,-145,-138,-120,-85,-87,-96,-99,-102,-114,-139,-153,-128,-128,-103,-104,-105,-106,-107,-108,-128,-128,-128,-128,-71,-171,-137,-90,-145,-97,-100,-111,-112,-115,-116,-76,-93,-128,-118,-163,-159,-166,-138,-89,-72,-77,-162,-20,-171,-86,-137,-80,-92,-137,-128,-88,-91,-21,]),'CSTINT':([42,63,64,65,74,87,99,100,102,103,104,105,106,107,108,109,110,111,115,121,122,123,124,125,126,127,128,129,130,131,132,133,146,148,149,150,151,152,153,154,155,158,160,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,203,204,211,212,213,215,216,217,222,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,250,252,254,255,257,258,264,266,267,268,269,270,271,272,273,274,275,276,277,286,288,289,290,291,296,303,304,305,306,307,308,315,317,318,319,320,321,323,328,329,335,337,338,339,341,343,345,347,349,351,352,354,355,356,358,361,363,364,369,370,378,],[-128,-25,-26,-27,82,127,-167,127,-128,-56,-57,-58,-59,-60,-61,-62,-63,127,-152,-128,-128,-128,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,127,-24,-28,-29,-64,-122,-121,-134,127,127,127,-149,-151,-98,-148,-150,-101,-147,-146,-146,-146,-146,-146,-146,-109,-110,-142,-142,-113,-143,-144,-144,-117,-119,-123,-124,-125,-126,-127,244,-145,-138,127,-140,-120,-85,127,-87,127,-96,127,-99,127,-102,127,127,127,127,127,127,127,127,-114,127,127,284,127,127,127,-139,-153,302,-128,-128,-103,-104,-105,-106,-107,-108,-128,-128,-128,-128,-71,-171,-137,-90,-145,127,-97,-100,-111,-112,-115,-116,-76,-93,-128,127,-118,-163,-159,-166,302,-170,127,-138,-89,-72,-77,-162,-20,359,-171,127,-86,-137,-80,302,-92,-137,-128,-88,-91,-21,]),'CSTFLT':([42,63,64,65,87,99,100,102,103,104,105,106,107,108,109,110,111,115,121,122,123,124,125,126,127,128,129,130,131,132,133,146,148,149,150,151,152,153,154,155,158,160,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,203,204,211,212,213,215,216,217,222,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,252,254,255,257,258,266,267,268,269,270,271,272,273,274,275,276,277,286,288,289,290,291,296,303,304,305,306,307,308,315,317,318,319,320,321,323,328,335,337,338,339,341,343,345,347,351,352,354,355,356,361,363,364,369,370,378,],[-128,-25,-26,-27,128,-167,128,-128,-56,-57,-58,-59,-60,-61,-62,-63,128,-152,-128,-128,-128,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,128,-24,-28,-29,-64,-122,-121,-134,128,128,128,-149,-151,-98,-148,-150,-101,-147,-146,-146,-146,-146,-146,-146,-109,-110,-142,-142,-113,-143,-144,-144,-117,-119,-123,-124,-125,-126,-127,-145,-138,128,-140,-120,-85,128,-87,128,-96,128,-99,128,-102,128,128,128,128,128,128,128,128,-114,128,128,128,128,128,-139,-153,-128,-128,-103,-104,-105,-106,-107,-108,-128,-128,-128,-128,-71,-171,-137,-90,-145,128,-97,-100,-111,-112,-115,-116,-76,-93,-128,128,-118,-163,-159,-166,-170,128,-138,-89,-72,-77,-162,-20,-171,128,-86,-137,-80,-92,-137,-128,-88,-91,-21,]),'CSTCHAR':([42,63,64,65,87,99,100,102,103,104,105,106,107,108,109,110,111,115,121,122,123,124,125,126,127,128,129,130,131,132,133,146,148,149,150,151,152,153,154,155,158,160,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,203,204,211,212,213,215,216,217,222,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,252,254,255,257,258,266,267,268,269,270,271,272,273,274,275,276,277,286,288,289,290,291,296,303,304,305,306,307,308,315,317,318,319,320,321,323,328,335,337,338,339,341,343,345,347,351,352,354,355,356,361,363,364,369,370,378,],[-128,-25,-26,-27,129,-167,129,-128,-56,-57,-58,-59,-60,-61,-62,-63,129,-152,-128,-128,-128,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,129,-24,-28,-29,-64,-122,-121,-134,129,129,129,-149,-151,-98,-148,-150,-101,-147,-146,-146,-146,-146,-146,-146,-109,-110,-142,-142,-113,-143,-144,-144,-117,-119,-123,-124,-125,-126,-127,-145,-138,129,-140,-120,-85,129,-87,129,-96,129,-99,129,-102,129,129,129,129,129,129,129,129,-114,129,129,129,129,129,-139,-153,-128,-128,-103,-104,-105,-106,-107,-108,-128,-128,-128,-128,-71,-171,-137,-90,-145,129,-97,-100,-111,-112,-115,-116,-76,-93,-128,129,-118,-163,-159,-166,-170,129,-138,-89,-72,-77,-162,-20,-171,129,-86,-137,-80,-92,-137,-128,-88,-91,-21,]),'CSTSTRING':([42,63,64,65,87,99,100,102,103,104,105,106,107,108,109,110,111,115,121,122,123,124,125,126,127,128,129,130,131,132,133,146,148,149,150,151,152,153,154,155,158,160,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,203,204,211,212,213,215,216,217,222,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,252,254,255,257,258,266,267,268,269,270,271,272,273,274,275,276,277,286,288,289,290,291,296,303,304,305,306,307,308,315,317,318,319,320,321,323,328,335,337,338,339,341,343,345,347,351,352,354,355,356,361,363,364,369,370,378,],[-128,-25,-26,-27,130,-167,130,-128,-56,-57,-58,-59,-60,-61,-62,-63,130,-152,-128,-128,-128,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,130,-24,-28,-29,-64,-122,-121,-134,130,130,130,-149,-151,-98,-148,-150,-101,-147,-146,-146,-146,-146,-146,-146,-109,-110,-142,-142,-113,-143,-144,-144,-117,-119,-123,-124,-125,-126,-127,-145,-138,130,-140,-120,-85,130,-87,130,-96,130,-99,130,-102,130,130,130,130,130,130,130,130,-114,130,130,130,130,130,-139,-153,-128,-128,-103,-104,-105,-106,-107,-108,-128,-128,-128,-128,-71,-171,-137,-90,-145,130,-97,-100,-111,-112,-115,-116,-76,-93,-128,130,-118,-163,-159,-166,-170,130,-138,-89,-72,-77,-162,-20,-171,130,-86,-137,-80,-92,-137,-128,-88,-91,-21,]),'TRUE':([42,63,64,65,87,99,100,102,103,104,105,106,107,108,109,110,111,115,121,122,123,124,125,126,127,128,129,130,131,132,133,146,148,149,150,151,152,153,154,155,158,160,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,203,204,211,212,213,215,216,217,222,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,252,254,255,257,258,266,267,268,269,270,271,272,273,274,275,276,277,286,288,289,290,291,296,303,304,305,306,307,308,315,317,318,319,320,321,323,328,335,337,338,339,341,343,345,347,351,352,354,355,356,361,363,364,369,370,378,],[-128,-25,-26,-27,132,-167,132,-128,-56,-57,-58,-59,-60,-61,-62,-63,132,-152,-128,-128,-128,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,132,-24,-28,-29,-64,-122,-121,-134,132,132,132,-149,-151,-98,-148,-150,-101,-147,-146,-146,-146,-146,-146,-146,-109,-110,-142,-142,-113,-143,-144,-144,-117,-119,-123,-124,-125,-126,-127,-145,-138,132,-140,-120,-85,132,-87,132,-96,132,-99,132,-102,132,132,132,132,132,132,132,132,-114,132,132,132,132,132,-139,-153,-128,-128,-103,-104,-105,-106,-107,-108,-128,-128,-128,-128,-71,-171,-137,-90,-145,132,-97,-100,-111,-112,-115,-116,-76,-93,-128,132,-118,-163,-159,-166,-170,132,-138,-89,-72,-77,-162,-20,-171,132,-86,-137,-80,-92,-137,-128,-88,-91,-21,]),'FALSE':([42,63,64,65,87,99,100,102,103,104,105,106,107,108,109,110,111,115,121,122,123,124,125,126,127,128,129,130,131,132,133,146,148,149,150,151,152,153,154,155,158,160,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,203,204,211,212,213,215,216,217,222,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,252,254,255,257,258,266,267,268,269,270,271,272,273,274,275,276,277,286,288,289,290,291,296,303,304,305,306,307,308,315,317,318,319,320,321,323,328,335,337,338,339,341,343,345,347,351,352,354,355,356,361,363,364,369,370,378,],[-128,-25,-26,-27,133,-167,133,-128,-56,-57,-58,-59,-60,-61,-62,-63,133,-152,-128,-128,-128,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,133,-24,-28,-29,-64,-122,-121,-134,133,133,133,-149,-151,-98,-148,-150,-101,-147,-146,-146,-146,-146,-146,-146,-109,-110,-142,-142,-113,-143,-144,-144,-117,-119,-123,-124,-125,-126,-127,-145,-138,133,-140,-120,-85,133,-87,133,-96,133,-99,133,-102,133,133,133,133,133,133,133,133,-114,133,133,133,133,133,-139,-153,-128,-128,-103,-104,-105,-106,-107,-108,-128,-128,-128,-128,-71,-171,-137,-90,-145,133,-97,-100,-111,-112,-115,-116,-76,-93,-128,133,-118,-163,-159,-166,-170,133,-138,-89,-72,-77,-162,-20,-171,133,-86,-137,-80,-92,-137,-128,-88,-91,-21,]),'CCURLY':([42,63,64,65,87,98,99,100,101,102,103,104,105,106,107,108,109,110,121,122,123,124,125,126,127,128,129,130,131,132,133,145,146,147,148,149,150,151,152,153,154,165,167,168,170,171,178,179,182,183,186,187,188,189,190,191,192,198,202,203,204,213,215,217,227,229,231,240,247,251,257,258,266,267,268,269,270,271,272,273,274,275,276,277,282,283,286,288,289,290,291,303,304,305,306,307,308,311,312,313,315,317,318,320,321,323,328,332,338,339,341,343,345,347,351,354,355,356,361,363,364,369,370,378,],[-128,-25,-26,-27,-128,145,-167,-128,-55,-128,-56,-57,-58,-59,-60,-61,-62,-63,-128,-128,-128,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,-52,-128,-54,-24,-28,-29,-64,-122,-121,-134,-149,-98,-148,-101,-147,-109,-110,-113,-143,-117,-119,-123,-124,-125,-126,-127,-155,251,-145,-138,-120,-85,-87,-96,-99,-102,-114,-156,-53,-139,-153,-128,-128,-103,-104,-105,-106,-107,-108,-128,-128,-128,-128,-128,-9,-71,-171,-137,-90,-145,-97,-100,-111,-112,-115,-116,331,-128,-8,-76,-93,-128,-118,-163,-159,-166,-7,-138,-89,-72,-77,-162,-20,-171,-86,-137,-80,-92,-137,-128,-88,-91,-21,]),'METHODS':([42,63,64,65,102,148,149,150,197,],[-128,-25,-26,-27,-128,-24,-28,-29,246,]),'COMMA':([43,45,66,67,72,73,88,89,93,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,142,152,153,154,165,167,168,170,171,178,179,182,183,186,187,188,189,190,191,192,193,195,196,199,200,203,204,213,215,217,226,227,229,231,240,245,249,257,258,261,262,265,266,267,268,269,270,271,272,273,274,275,276,277,278,287,288,289,290,291,298,303,304,305,306,307,308,309,314,316,317,318,320,324,333,338,339,346,350,351,354,355,357,360,361,362,363,364,368,369,370,],[-134,-134,-135,-135,79,79,-134,-137,140,-128,-128,-128,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,-135,-128,-134,-122,-121,-134,-149,-98,-148,-101,-147,-109,-110,-113,-143,-117,-119,-123,-124,-125,-126,-127,79,-135,-38,140,-136,-145,-138,-120,-85,-87,-134,-96,-99,-102,-114,280,-16,-139,-153,296,-161,-138,-128,-128,-103,-104,-105,-106,-107,-108,-128,-128,-128,-128,-137,-169,-171,-137,-90,-145,326,-97,-100,-111,-112,-115,-116,-37,-137,335,-93,-128,-118,296,-128,-138,-89,-161,-136,-171,-86,-137,296,-17,-92,-169,-137,-128,335,-88,-91,]),'OBRACKET':([46,68,89,114,135,143,154,157,201,204,226,257,265,289,290,310,314,318,330,333,355,364,367,372,],[-134,74,-137,-134,194,-134,-134,216,250,216,-134,-139,216,-137,319,-134,-137,337,349,194,-137,337,-137,194,]),'CPAREN':([71,85,92,93,94,121,122,123,124,125,126,127,128,129,130,131,132,133,139,141,142,152,153,154,165,167,168,170,171,178,179,182,183,186,187,188,189,190,191,192,196,199,200,203,204,213,215,217,219,221,226,227,229,231,240,248,249,255,257,258,261,262,265,266,267,268,269,270,271,272,273,274,275,276,277,278,287,288,289,290,291,295,297,298,300,302,303,304,305,306,307,308,309,314,316,317,318,320,324,325,327,333,334,336,338,339,344,346,350,351,354,355,357,360,361,362,363,364,365,366,368,369,370,373,],[77,-128,138,-128,-13,-128,-128,-128,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,-12,-15,-134,-122,-121,-134,-149,-98,-148,-101,-147,-109,-110,-113,-143,-117,-119,-123,-124,-125,-126,-127,-38,-128,-136,-145,-138,-120,-85,-87,258,260,-134,-96,-99,-102,-114,-14,-16,288,-139,-153,-128,-161,-138,-128,-128,-103,-104,-105,-106,-107,-108,-128,-128,-128,-128,-137,-169,-171,-137,-90,-145,323,-79,-128,-23,-22,-97,-100,-111,-112,-115,-116,-37,-137,-128,-93,-128,-118,-128,345,-82,-128,351,-95,-138,-89,-78,-161,-136,-171,-86,-137,-128,-17,-92,-169,-137,-128,-81,371,-128,-88,-91,-94,]),'OCURLY':([75,77,138,220,263,293,322,374,],[84,87,87,87,87,-164,87,87,]),'CBRACKET':([82,121,122,123,124,125,126,127,128,129,130,131,132,133,152,153,154,165,167,168,170,171,178,179,182,183,186,187,188,189,190,191,192,203,204,213,215,217,227,229,231,240,244,256,257,258,266,267,268,269,270,271,272,273,274,275,276,277,284,288,289,290,291,303,304,305,306,307,308,317,318,320,338,339,340,351,353,354,355,359,361,363,364,369,370,],[89,-128,-128,-128,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,-122,-121,-134,-149,-98,-148,-101,-147,-109,-110,-113,-143,-117,-119,-123,-124,-125,-126,-127,-145,-138,-120,-85,-87,-96,-99,-102,-114,278,289,-139,-153,-128,-128,-103,-104,-105,-106,-107,-108,-128,-128,-128,-128,314,-171,-137,-90,-145,-97,-100,-111,-112,-115,-116,-93,-128,-118,-138,-89,355,-171,363,-86,-137,367,-92,-137,-128,-88,-91,]),'ATTRIBUTES':([84,],[91,]),'MULT':([104,113,114,125,126,127,128,129,130,131,132,133,152,153,154,156,157,187,188,189,190,191,192,203,204,207,213,215,217,257,258,276,277,288,289,290,291,317,318,320,338,339,351,354,355,361,363,364,369,370,],[-121,-122,-134,184,-145,-141,-141,-141,-141,-141,-83,-84,-122,-121,-134,-145,-138,-119,-123,-124,-125,-126,-127,-145,-138,-121,-120,-85,-87,-139,-153,184,184,-171,-137,-90,-145,-93,-128,-118,-138,-89,-171,-86,-137,-92,-137,-128,-88,-91,]),'DIV':([104,113,114,125,126,127,128,129,130,131,132,133,152,153,154,156,157,187,188,189,190,191,192,203,204,207,213,215,217,257,258,276,277,288,289,290,291,317,318,320,338,339,351,354,355,361,363,364,369,370,],[-121,-122,-134,185,-145,-141,-141,-141,-141,-141,-83,-84,-122,-121,-134,-145,-138,-119,-123,-124,-125,-126,-127,-145,-138,-121,-120,-85,-87,-139,-153,185,185,-171,-137,-90,-145,-93,-128,-118,-138,-89,-171,-86,-137,-92,-137,-128,-88,-91,]),'PLUS':([104,113,114,124,125,126,127,128,129,130,131,132,133,152,153,154,156,157,183,186,187,188,189,190,191,192,203,204,207,213,215,217,240,257,258,274,275,276,277,288,289,290,291,307,308,317,318,320,338,339,351,354,355,361,363,364,369,370,],[-121,-122,-134,180,-128,-145,-141,-141,-141,-141,-141,-83,-84,-122,-121,-134,-145,-138,-143,-117,-119,-123,-124,-125,-126,-127,-145,-138,-121,-120,-85,-87,-114,-139,-153,180,180,-128,-128,-171,-137,-90,-145,-115,-116,-93,-128,-118,-138,-89,-171,-86,-137,-92,-137,-128,-88,-91,]),'MINUS':([104,113,114,124,125,126,127,128,129,130,131,132,133,152,153,154,156,157,183,186,187,188,189,190,191,192,203,204,207,213,215,217,240,257,258,274,275,276,277,288,289,290,291,307,308,317,318,320,338,339,351,354,355,361,363,364,369,370,],[-121,-122,-134,181,-128,-145,-141,-141,-141,-141,-141,-83,-84,-122,-121,-134,-145,-138,-143,-117,-119,-123,-124,-125,-126,-127,-145,-138,-121,-120,-85,-87,-114,-139,-153,181,181,-128,-128,-171,-137,-90,-145,-115,-116,-93,-128,-118,-138,-89,-171,-86,-137,-92,-137,-128,-88,-91,]),'LT':([104,113,114,123,124,125,126,127,128,129,130,131,132,133,152,153,154,156,157,179,182,183,186,187,188,189,190,191,192,203,204,207,213,215,217,240,257,258,274,275,276,277,288,289,290,291,305,306,307,308,317,318,320,338,339,351,354,355,361,363,364,369,370,],[-121,-122,-134,172,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,-122,-121,-134,-145,-138,-110,-113,-143,-117,-119,-123,-124,-125,-126,-127,-145,-138,-121,-120,-85,-87,-114,-139,-153,-128,-128,-128,-128,-171,-137,-90,-145,-111,-112,-115,-116,-93,-128,-118,-138,-89,-171,-86,-137,-92,-137,-128,-88,-91,]),'GT':([104,113,114,123,124,125,126,127,128,129,130,131,132,133,152,153,154,156,157,179,182,183,186,187,188,189,190,191,192,203,204,207,213,215,217,240,257,258,274,275,276,277,288,289,290,291,305,306,307,308,317,318,320,338,339,351,354,355,361,363,364,369,370,],[-121,-122,-134,173,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,-122,-121,-134,-145,-138,-110,-113,-143,-117,-119,-123,-124,-125,-126,-127,-145,-138,-121,-120,-85,-87,-114,-139,-153,-128,-128,-128,-128,-171,-137,-90,-145,-111,-112,-115,-116,-93,-128,-118,-138,-89,-171,-86,-137,-92,-137,-128,-88,-91,]),'GTE':([104,113,114,123,124,125,126,127,128,129,130,131,132,133,152,153,154,156,157,179,182,183,186,187,188,189,190,191,192,203,204,207,213,215,217,240,257,258,274,275,276,277,288,289,290,291,305,306,307,308,317,318,320,338,339,351,354,355,361,363,364,369,370,],[-121,-122,-134,174,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,-122,-121,-134,-145,-138,-110,-113,-143,-117,-119,-123,-124,-125,-126,-127,-145,-138,-121,-120,-85,-87,-114,-139,-153,-128,-128,-128,-128,-171,-137,-90,-145,-111,-112,-115,-116,-93,-128,-118,-138,-89,-171,-86,-137,-92,-137,-128,-88,-91,]),'LTE':([104,113,114,123,124,125,126,127,128,129,130,131,132,133,152,153,154,156,157,179,182,183,186,187,188,189,190,191,192,203,204,207,213,215,217,240,257,258,274,275,276,277,288,289,290,291,305,306,307,308,317,318,320,338,339,351,354,355,361,363,364,369,370,],[-121,-122,-134,175,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,-122,-121,-134,-145,-138,-110,-113,-143,-117,-119,-123,-124,-125,-126,-127,-145,-138,-121,-120,-85,-87,-114,-139,-153,-128,-128,-128,-128,-171,-137,-90,-145,-111,-112,-115,-116,-93,-128,-118,-138,-89,-171,-86,-137,-92,-137,-128,-88,-91,]),'EQ':([104,113,114,123,124,125,126,127,128,129,130,131,132,133,152,153,154,156,157,179,182,183,186,187,188,189,190,191,192,203,204,207,213,215,217,240,257,258,274,275,276,277,288,289,290,291,305,306,307,308,317,318,320,338,339,351,354,355,361,363,364,369,370,],[-121,-122,-134,176,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,-122,-121,-134,-145,-138,-110,-113,-143,-117,-119,-123,-124,-125,-126,-127,-145,-138,-121,-120,-85,-87,-114,-139,-153,-128,-128,-128,-128,-171,-137,-90,-145,-111,-112,-115,-116,-93,-128,-118,-138,-89,-171,-86,-137,-92,-137,-128,-88,-91,]),'NE':([104,113,114,123,124,125,126,127,128,129,130,131,132,133,152,153,154,156,157,179,182,183,186,187,188,189,190,191,192,203,204,207,213,215,217,240,257,258,274,275,276,277,288,289,290,291,305,306,307,308,317,318,320,338,339,351,354,355,361,363,364,369,370,],[-121,-122,-134,177,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,-122,-121,-134,-145,-138,-110,-113,-143,-117,-119,-123,-124,-125,-126,-127,-145,-138,-121,-120,-85,-87,-114,-139,-153,-128,-128,-128,-128,-171,-137,-90,-145,-111,-112,-115,-116,-93,-128,-118,-138,-89,-171,-86,-137,-92,-137,-128,-88,-91,]),'AND':([104,113,114,122,123,124,125,126,127,128,129,130,131,132,133,152,153,154,156,157,171,178,179,182,183,186,187,188,189,190,191,192,203,204,207,213,215,217,231,240,257,258,267,268,269,270,271,272,273,274,275,276,277,288,289,290,291,305,306,307,308,317,318,320,338,339,351,354,355,361,363,364,369,370,],[-121,-122,-134,169,-128,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,-122,-121,-134,-145,-138,-147,-109,-110,-113,-143,-117,-119,-123,-124,-125,-126,-127,-145,-138,-121,-120,-85,-87,-102,-114,-139,-153,169,-103,-104,-105,-106,-107,-108,-128,-128,-128,-128,-171,-137,-90,-145,-111,-112,-115,-116,-93,-128,-118,-138,-89,-171,-86,-137,-92,-137,-128,-88,-91,]),'OR':([104,113,114,121,122,123,124,125,126,127,128,129,130,131,132,133,152,153,154,156,157,168,170,171,178,179,182,183,186,187,188,189,190,191,192,203,204,207,213,215,217,229,231,240,257,258,266,267,268,269,270,271,272,273,274,275,276,277,288,289,290,291,304,305,306,307,308,317,318,320,338,339,351,354,355,361,363,364,369,370,],[-121,-122,-134,166,-128,-128,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,-122,-121,-134,-145,-138,-148,-101,-147,-109,-110,-113,-143,-117,-119,-123,-124,-125,-126,-127,-145,-138,-121,-120,-85,-87,-99,-102,-114,-139,-153,166,-128,-103,-104,-105,-106,-107,-108,-128,-128,-128,-128,-171,-137,-90,-145,-100,-111,-112,-115,-116,-93,-128,-118,-138,-89,-171,-86,-137,-92,-137,-128,-88,-91,]),'QUESTION':([104,112,113,114,121,122,123,124,125,126,127,128,129,130,131,132,133,152,153,154,156,157,165,167,168,170,171,178,179,182,183,186,187,188,189,190,191,192,203,204,207,213,215,217,227,229,231,240,257,258,266,267,268,269,270,271,272,273,274,275,276,277,288,289,290,291,303,304,305,306,307,308,317,318,320,338,339,351,354,355,361,363,364,369,370,],[-121,155,-122,-134,-128,-128,-128,-128,-128,-145,-141,-141,-141,-141,-141,-83,-84,-122,-121,-134,-145,-138,-149,-98,-148,-101,-147,-109,-110,-113,-143,-117,-119,-123,-124,-125,-126,-127,-145,-138,-121,-120,-85,-87,-96,-99,-102,-114,-139,-153,-128,-128,-103,-104,-105,-106,-107,-108,-128,-128,-128,-128,-171,-137,-90,-145,-97,-100,-111,-112,-115,-116,-93,-128,-118,-138,-89,-171,-86,-137,-92,-137,-128,-88,-91,]),'AS':([113,114,156,157,215,217,257,289,290,318,338,339,354,355,363,364,369,370,],[-122,-134,212,-138,-85,-87,-139,-137,-90,-128,-138,-89,-86,-137,-137,-128,-88,-91,]),'PERIOD':([114,154,157,204,226,265,],[-134,-134,218,218,-134,218,]),'ELSE':([145,251,259,],[-52,-53,293,]),'THEN':([159,224,260,371,],[220,263,-75,374,]),'FROM':([215,217,225,226,257,265,289,290,318,338,339,354,355,363,364,369,370,],[-85,-87,264,-134,-139,-138,-137,-90,-128,-138,-89,-86,-137,-137,-128,-88,-91,]),'TO':([215,217,226,257,265,289,290,300,301,302,318,338,339,354,355,363,364,369,370,],[-85,-87,-134,-139,-138,-137,-90,-23,329,-22,-128,-138,-89,-86,-137,-137,-128,-88,-91,]),'BY':([215,217,226,257,265,289,290,300,302,318,338,339,348,354,355,363,364,369,370,],[-85,-87,-134,-139,-138,-137,-90,-23,-22,-128,-138,-89,358,-86,-137,-137,-128,-88,-91,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'saw_program':([4,],[5,]),'program_content':([5,7,8,9,],[6,16,17,18,]),'dec':([5,7,8,9,42,87,102,137,],[7,7,7,7,64,102,102,102,]),'class':([5,7,8,9,],[8,8,8,8,]),'function':([5,7,8,9,282,312,],[9,9,9,9,312,312,]),'empty':([5,7,8,9,42,72,73,85,87,93,100,102,121,122,123,124,125,135,146,193,199,245,259,261,266,267,274,275,276,277,282,298,312,316,318,324,333,357,364,368,372,],[10,10,10,10,65,80,80,94,101,141,101,150,167,170,178,182,186,196,101,80,141,281,294,297,167,170,182,182,186,186,313,327,313,336,339,297,196,297,339,336,196,]),'main':([6,],[14,]),'type':([11,],[19,]),'compound':([11,],[20,]),'simple':([11,13,85,140,],[22,38,95,95,]),'multiple':([11,85,140,],[23,96,96,]),'func1':([13,],[37,]),'saw_program_end':([14,],[40,]),'saw_type':([21,24,25,26,27,28,29,30,31,32,33,34,35,39,],[44,47,48,49,50,51,52,53,54,55,56,57,58,61,]),'saw_id':([36,43,45,46,60,88,114,142,143,154,226,310,],[59,66,67,68,70,134,157,200,201,204,265,330,]),'saw_main':([41,],[62,]),'dec1':([42,],[63,]),'saw_class':([59,],[69,]),'saw_variable':([66,67,134,195,375,],[72,73,193,245,377,]),'saw_function':([70,],[76,]),'type1':([72,73,193,],[78,81,243,]),'class_block':([75,],[83,]),'block':([77,138,220,263,322,374,],[86,198,259,299,342,376,]),'class_scope_end':([83,],[90,]),'param':([85,],[92,]),'param2':([85,140,],[93,199,]),'saw_function_end':([86,198,],[97,247,]),'b1':([87,100,146,],[98,147,202,]),'decs':([87,102,137,],[99,149,197,]),'estatuto':([87,100,146,],[100,100,100,]),'assign':([87,100,146,155,252,],[103,103,103,206,206,]),'function_call':([87,100,111,146,155,158,160,211,216,222,228,230,232,233,234,235,236,237,238,239,241,242,252,254,255,296,319,337,352,],[104,104,153,104,207,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,207,153,153,153,153,153,153,]),'conditional':([87,100,146,],[105,105,105,]),'write':([87,100,146,155,252,],[106,106,106,208,208,]),'read':([87,100,146,155,252,],[107,107,107,209,209,]),'while_loop':([87,100,146,],[108,108,108,]),'for_loop':([87,100,146,],[109,109,109,]),'ternary':([87,100,146,155,252,],[110,110,110,210,210,]),'exp':([87,100,111,146,155,158,160,211,216,222,252,254,255,296,319,337,352,],[112,112,151,112,112,219,221,253,256,261,112,286,287,324,340,353,362,]),'variable':([87,100,111,146,155,158,160,164,211,216,222,223,228,230,232,233,234,235,236,237,238,239,241,242,252,254,255,264,296,319,326,329,337,352,358,],[113,113,152,113,113,152,152,225,152,152,152,262,152,152,152,152,152,152,152,152,152,152,152,152,113,152,152,300,152,152,346,300,152,152,300,]),'texp':([87,100,111,146,155,158,160,211,216,222,228,252,254,255,296,319,337,352,],[121,121,121,121,121,121,121,121,121,121,266,121,121,121,121,121,121,121,]),'gexp':([87,100,111,146,155,158,160,211,216,222,228,230,252,254,255,296,319,337,352,],[122,122,122,122,122,122,122,122,122,122,122,267,122,122,122,122,122,122,122,]),'mexp':([87,100,111,146,155,158,160,211,216,222,228,230,232,233,234,235,236,237,252,254,255,296,319,337,352,],[123,123,123,123,123,123,123,123,123,123,123,123,268,269,270,271,272,273,123,123,123,123,123,123,123,]),'termino':([87,100,111,146,155,158,160,211,216,222,228,230,232,233,234,235,236,237,238,239,252,254,255,296,319,337,352,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,274,275,124,124,124,124,124,124,124,]),'factor':([87,100,111,146,155,158,160,211,216,222,228,230,232,233,234,235,236,237,238,239,241,242,252,254,255,296,319,337,352,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,276,277,125,125,125,125,125,125,125,]),'varcst':([87,100,111,146,155,158,160,211,216,222,228,230,232,233,234,235,236,237,238,239,241,242,252,254,255,296,319,337,352,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'boolean':([87,100,111,146,155,158,160,211,216,222,228,230,232,233,234,235,236,237,238,239,241,242,252,254,255,296,319,337,352,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'saw_dimension':([89,278,289,314,355,363,367,],[135,309,318,333,364,369,372,]),'param1':([93,199,],[139,248,]),'scope_end':([97,247,],[144,283,]),'count_vars':([99,],[146,]),'decs1':([102,],[148,]),'saw_var_factor':([113,152,],[156,203,]),'saw_oparen':([115,],[158,]),'cond2':([116,163,],[159,224,]),'saw_print':([117,],[161,]),'saw_read':([118,],[162,]),'saw_while':([119,],[163,]),'exp1':([121,266,],[165,303,]),'texp1':([122,267,],[168,304,]),'gexp1':([123,],[171,]),'mexp1':([124,274,275,],[179,305,306,]),'term1':([125,276,277,],[183,307,308,]),'check_multdiv_operator':([126,156,203,291,],[187,213,213,320,]),'saw_end_value':([127,128,129,130,131,],[188,189,190,191,192,]),'type3':([135,333,372,],[195,350,375,]),'estatuto_redux':([155,252,],[205,285,]),'verify_func':([157,204,],[214,214,]),'saw_called_var':([157,204,265,338,],[215,215,215,354,]),'variable2':([157,204,265,],[217,217,217,]),'check_or_operator':([165,],[227,]),'saw_or':([166,],[228,]),'check_and_operator':([168,],[229,]),'saw_and':([169,],[230,]),'check_relational_operator':([171,],[231,]),'saw_relational_operator':([172,173,174,175,176,177,],[232,233,234,235,236,237,]),'saw_plusminus_operator':([180,181,],[238,239,]),'check_plusminus_operator':([183,],[240,]),'saw_multdiv_operator':([184,185,],[241,242,]),'saw_variable_param':([200,350,],[249,360,]),'saw_asig':([212,],[254,]),'type2':([245,],[279,]),'saw_called_var_from_class':([257,],[290,]),'saw_cparen':([258,],[291,]),'cond1':([259,],[292,]),'e1':([261,324,357,],[295,344,365,]),'saw_read_exp':([262,346,],[298,357,]),'for_loop1':([264,329,358,],[301,348,366,]),'functions':([282,312,],[311,332,]),'verify_param':([287,362,],[316,368,]),'generate_gosub':([288,351,],[317,361,]),'saw_else':([293,],[322,]),'l1':([298,],[325,]),'function_call1':([316,368,],[334,373,]),'variable1':([318,364,],[338,370,]),'bc_end':([321,],[341,]),'saw_print_end':([323,],[343,]),'saw_while_end':([328,],[347,]),'increment_cont':([335,],[352,]),'saw_read_end':([345,],[356,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON saw_program program_content main saw_program_end','program',7,'p_program','plyler.py',172),
  ('program_content -> dec program_content','program_content',2,'p_program_content','plyler.py',178),
  ('program_content -> class program_content','program_content',2,'p_program_content','plyler.py',179),
  ('program_content -> function program_content','program_content',2,'p_program_content','plyler.py',180),
  ('program_content -> empty','program_content',1,'p_program_content','plyler.py',181),
  ('main -> INT MAIN saw_main OPAREN CPAREN block saw_function_end scope_end','main',8,'p_main','plyler.py',189),
  ('functions -> function functions','functions',2,'p_functions','plyler.py',195),
  ('functions -> empty','functions',1,'p_functions','plyler.py',196),
  ('function -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN block saw_function_end scope_end','function',11,'p_function','plyler.py',201),
  ('func1 -> simple','func1',1,'p_function1','plyler.py',207),
  ('func1 -> VOID saw_type','func1',2,'p_function1','plyler.py',208),
  ('param -> param2 param1','param',2,'p_param','plyler.py',215),
  ('param -> empty','param',1,'p_param','plyler.py',216),
  ('param1 -> COMMA param2 param1','param1',3,'p_param1','plyler.py',223),
  ('param1 -> empty','param1',1,'p_param1','plyler.py',224),
  ('param2 -> simple ID saw_id saw_variable_param','param2',4,'p_param2','plyler.py',230),
  ('param2 -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable_param','param2',9,'p_param2','plyler.py',231),
  ('class -> CLASS ID saw_id saw_class COLON class_block class_scope_end SEMICOLON','class',8,'p_class','plyler.py',239),
  ('class_block -> OCURLY ATTRIBUTES COLON decs METHODS COLON functions CCURLY','class_block',8,'p_class_block','plyler.py',245),
  ('while_loop -> WHILE saw_while cond2 THEN block SEMICOLON saw_while_end','while_loop',7,'p_while_loop','plyler.py',253),
  ('for_loop -> FOR OPAREN variable FROM for_loop1 TO for_loop1 BY for_loop1 CPAREN THEN block SEMICOLON','for_loop',13,'p_for_loop','plyler.py',261),
  ('for_loop1 -> CSTINT','for_loop1',1,'p_for_loop1','plyler.py',268),
  ('for_loop1 -> variable','for_loop1',1,'p_for_loop1','plyler.py',269),
  ('decs -> dec decs1','decs',2,'p_decs','plyler.py',277),
  ('dec -> VAR type SEMICOLON dec1','dec',4,'p_dec','plyler.py',283),
  ('dec1 -> dec','dec1',1,'p_dec1','plyler.py',289),
  ('dec1 -> empty','dec1',1,'p_dec1','plyler.py',290),
  ('decs1 -> decs','decs1',1,'p_decs1','plyler.py',296),
  ('decs1 -> empty','decs1',1,'p_decs1','plyler.py',297),
  ('type -> compound ID saw_id saw_variable type1','type',5,'p_type','plyler.py',304),
  ('type -> simple ID saw_id saw_variable type1','type',5,'p_type','plyler.py',305),
  ('type -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable type2','type',10,'p_type','plyler.py',306),
  ('type1 -> COMMA ID saw_id saw_variable type1','type1',5,'p_type1','plyler.py',312),
  ('type1 -> empty','type1',1,'p_type1','plyler.py',313),
  ('type2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET saw_dimension type3 saw_variable','type2',9,'p_type2','plyler.py',319),
  ('type2 -> empty','type2',1,'p_type2','plyler.py',320),
  ('type3 -> OBRACKET CSTINT CBRACKET saw_dimension','type3',4,'p_type3','plyler.py',326),
  ('type3 -> empty','type3',1,'p_type3','plyler.py',327),
  ('simple -> INT saw_type','simple',2,'p_type_simple','plyler.py',333),
  ('simple -> FLOAT saw_type','simple',2,'p_type_simple','plyler.py',334),
  ('simple -> BOOL saw_type','simple',2,'p_type_simple','plyler.py',335),
  ('simple -> STRING saw_type','simple',2,'p_type_simple','plyler.py',336),
  ('simple -> CHAR saw_type','simple',2,'p_type_simple','plyler.py',337),
  ('multiple -> INTS saw_type','multiple',2,'p_type_multiple','plyler.py',343),
  ('multiple -> FLOATS saw_type','multiple',2,'p_type_multiple','plyler.py',344),
  ('multiple -> BOOLS saw_type','multiple',2,'p_type_multiple','plyler.py',345),
  ('multiple -> STRINGS saw_type','multiple',2,'p_type_multiple','plyler.py',346),
  ('multiple -> CHARS saw_type','multiple',2,'p_type_multiple','plyler.py',347),
  ('compound -> ID saw_type','compound',2,'p_type_compound','plyler.py',353),
  ('compound -> DATAFRAME saw_type','compound',2,'p_type_compound','plyler.py',354),
  ('compound -> FILE saw_type','compound',2,'p_type_compound','plyler.py',355),
  ('block -> OCURLY b1 CCURLY','block',3,'p_block','plyler.py',363),
  ('block -> OCURLY decs count_vars b1 CCURLY','block',5,'p_block','plyler.py',364),
  ('b1 -> estatuto b1','b1',2,'p_b1','plyler.py',370),
  ('b1 -> empty','b1',1,'p_b1','plyler.py',371),
  ('estatuto -> assign','estatuto',1,'p_estatuto','plyler.py',379),
  ('estatuto -> function_call','estatuto',1,'p_estatuto','plyler.py',380),
  ('estatuto -> conditional','estatuto',1,'p_estatuto','plyler.py',381),
  ('estatuto -> write','estatuto',1,'p_estatuto','plyler.py',382),
  ('estatuto -> read','estatuto',1,'p_estatuto','plyler.py',383),
  ('estatuto -> while_loop','estatuto',1,'p_estatuto','plyler.py',384),
  ('estatuto -> for_loop','estatuto',1,'p_estatuto','plyler.py',385),
  ('estatuto -> ternary','estatuto',1,'p_estatuto','plyler.py',386),
  ('estatuto -> RETURN exp','estatuto',2,'p_estatuto','plyler.py',387),
  ('estatuto_redux -> assign','estatuto_redux',1,'p_estatuto_redux','plyler.py',393),
  ('estatuto_redux -> function_call','estatuto_redux',1,'p_estatuto_redux','plyler.py',394),
  ('estatuto_redux -> write','estatuto_redux',1,'p_estatuto_redux','plyler.py',395),
  ('estatuto_redux -> read','estatuto_redux',1,'p_estatuto_redux','plyler.py',396),
  ('estatuto_redux -> ternary','estatuto_redux',1,'p_estatuto_redux','plyler.py',397),
  ('estatuto_redux -> RETURN exp','estatuto_redux',2,'p_estatuto_redux','plyler.py',398),
  ('assign -> variable saw_var_factor AS saw_asig exp','assign',5,'p_assign','plyler.py',406),
  ('conditional -> IF cond2 THEN block cond1 SEMICOLON bc_end','conditional',7,'p_conditional','plyler.py',414),
  ('cond1 -> ELSE saw_else block','cond1',3,'p_cond1','plyler.py',420),
  ('cond1 -> empty','cond1',1,'p_cond1','plyler.py',421),
  ('cond2 -> OPAREN exp CPAREN','cond2',3,'p_cond2','plyler.py',427),
  ('ternary -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON','ternary',6,'p_ternary','plyler.py',435),
  ('write -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end','write',7,'p_write','plyler.py',443),
  ('e1 -> COMMA exp e1','e1',3,'p_e1','plyler.py',449),
  ('e1 -> empty','e1',1,'p_e1','plyler.py',450),
  ('read -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end','read',8,'p_read','plyler.py',458),
  ('l1 -> COMMA variable saw_read_exp e1','l1',4,'p_l1','plyler.py',464),
  ('l1 -> empty','l1',1,'p_l1','plyler.py',465),
  ('boolean -> TRUE','boolean',1,'p_boolean','plyler.py',472),
  ('boolean -> FALSE','boolean',1,'p_boolean','plyler.py',473),
  ('variable -> ID saw_id saw_called_var','variable',3,'p_variable','plyler.py',481),
  ('variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var','variable',8,'p_variable','plyler.py',482),
  ('variable -> ID saw_id variable2','variable',3,'p_variable','plyler.py',483),
  ('variable1 -> OBRACKET exp CBRACKET saw_dimension','variable1',4,'p_variable1','plyler.py',489),
  ('variable1 -> empty','variable1',1,'p_variable1','plyler.py',490),
  ('variable2 -> PERIOD ID saw_called_var_from_class','variable2',3,'p_variable2','plyler.py',496),
  ('variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1','variable2',8,'p_variable2','plyler.py',497),
  ('function_call -> ID saw_id verify_func OPAREN exp verify_param function_call1 CPAREN generate_gosub','function_call',9,'p_function_call','plyler.py',505),
  ('function_call -> ID saw_id verify_func OPAREN CPAREN generate_gosub','function_call',6,'p_function_call','plyler.py',506),
  ('function_call1 -> COMMA increment_cont exp verify_param function_call1','function_call1',5,'p_function_call1','plyler.py',512),
  ('function_call1 -> empty','function_call1',1,'p_function_call1','plyler.py',513),
  ('exp -> texp exp1 check_or_operator','exp',3,'p_exp','plyler.py',521),
  ('exp1 -> OR saw_or texp exp1','exp1',4,'p_exp1','plyler.py',547),
  ('exp1 -> empty','exp1',1,'p_exp1','plyler.py',548),
  ('texp -> gexp texp1 check_and_operator','texp',3,'p_texp','plyler.py',554),
  ('texp1 -> AND saw_and gexp texp1','texp1',4,'p_texp1','plyler.py',560),
  ('texp1 -> empty','texp1',1,'p_texp1','plyler.py',561),
  ('gexp -> mexp gexp1 check_relational_operator','gexp',3,'p_gexp','plyler.py',567),
  ('gexp1 -> LT saw_relational_operator mexp','gexp1',3,'p_gexp1','plyler.py',573),
  ('gexp1 -> GT saw_relational_operator mexp','gexp1',3,'p_gexp1','plyler.py',574),
  ('gexp1 -> GTE saw_relational_operator mexp','gexp1',3,'p_gexp1','plyler.py',575),
  ('gexp1 -> LTE saw_relational_operator mexp','gexp1',3,'p_gexp1','plyler.py',576),
  ('gexp1 -> EQ saw_relational_operator mexp','gexp1',3,'p_gexp1','plyler.py',577),
  ('gexp1 -> NE saw_relational_operator mexp','gexp1',3,'p_gexp1','plyler.py',578),
  ('gexp1 -> empty','gexp1',1,'p_gexp1','plyler.py',579),
  ('mexp -> termino mexp1','mexp',2,'p_mexp','plyler.py',585),
  ('mexp1 -> PLUS saw_plusminus_operator termino mexp1','mexp1',4,'p_mexp1','plyler.py',590),
  ('mexp1 -> MINUS saw_plusminus_operator termino mexp1','mexp1',4,'p_mexp1','plyler.py',591),
  ('mexp1 -> empty','mexp1',1,'p_mexp1','plyler.py',592),
  ('termino -> factor term1 check_plusminus_operator','termino',3,'p_termino','plyler.py',600),
  ('term1 -> MULT saw_multdiv_operator factor term1','term1',4,'p_term1','plyler.py',606),
  ('term1 -> DIV saw_multdiv_operator factor term1','term1',4,'p_term1','plyler.py',607),
  ('term1 -> empty','term1',1,'p_term1','plyler.py',608),
  ('factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator','factor',6,'p_factor','plyler.py',616),
  ('factor -> varcst check_multdiv_operator','factor',2,'p_factor','plyler.py',617),
  ('factor -> variable saw_var_factor check_multdiv_operator','factor',3,'p_factor','plyler.py',618),
  ('factor -> function_call','factor',1,'p_factor','plyler.py',619),
  ('saw_var_factor -> <empty>','saw_var_factor',0,'p_saw_var_factor','plyler.py',625),
  ('varcst -> CSTINT saw_end_value','varcst',2,'p_varcst','plyler.py',635),
  ('varcst -> CSTFLT saw_end_value','varcst',2,'p_varcst','plyler.py',636),
  ('varcst -> CSTCHAR saw_end_value','varcst',2,'p_varcst','plyler.py',637),
  ('varcst -> CSTSTRING saw_end_value','varcst',2,'p_varcst','plyler.py',638),
  ('varcst -> boolean saw_end_value','varcst',2,'p_varcst','plyler.py',639),
  ('empty -> <empty>','empty',0,'p_empty','plyler.py',647),
  ('saw_program -> <empty>','saw_program',0,'p_saw_progsawram','plyler.py',659),
  ('saw_program_end -> <empty>','saw_program_end',0,'p_saw_program_end','plyler.py',663),
  ('saw_main -> <empty>','saw_main',0,'p_saw_main','plyler.py',667),
  ('saw_class -> <empty>','saw_class',0,'p_saw_class','plyler.py',671),
  ('saw_type -> <empty>','saw_type',0,'p_saw_type','plyler.py',676),
  ('saw_id -> <empty>','saw_id',0,'p_saw_id','plyler.py',680),
  ('saw_variable -> <empty>','saw_variable',0,'p_saw_variable','plyler.py',684),
  ('saw_variable_param -> <empty>','saw_variable_param',0,'p_saw_variable_param','plyler.py',690),
  ('saw_dimension -> <empty>','saw_dimension',0,'p_saw_dimension','plyler.py',696),
  ('saw_called_var -> <empty>','saw_called_var',0,'p_saw_called_var','plyler.py',701),
  ('saw_called_var_from_class -> <empty>','saw_called_var_from_class',0,'p_saw_called_var_from_class','plyler.py',707),
  ('saw_asig -> <empty>','saw_asig',0,'p_saw_asig','plyler.py',714),
  ('saw_end_value -> <empty>','saw_end_value',0,'p_saw_end_value','plyler.py',718),
  ('saw_plusminus_operator -> <empty>','saw_plusminus_operator',0,'p_saw_plusminus_operator','plyler.py',722),
  ('check_plusminus_operator -> <empty>','check_plusminus_operator',0,'p_check_plusminus_operator','plyler.py',726),
  ('saw_multdiv_operator -> <empty>','saw_multdiv_operator',0,'p_saw_multdiv_operator','plyler.py',730),
  ('check_multdiv_operator -> <empty>','check_multdiv_operator',0,'p_check_multdiv_operator','plyler.py',734),
  ('saw_relational_operator -> <empty>','saw_relational_operator',0,'p_saw_relational_operator','plyler.py',738),
  ('check_relational_operator -> <empty>','check_relational_operator',0,'p_check_relational_operator','plyler.py',742),
  ('check_and_operator -> <empty>','check_and_operator',0,'p_check_and_operator','plyler.py',748),
  ('check_or_operator -> <empty>','check_or_operator',0,'p_check_or_operator','plyler.py',755),
  ('saw_and -> <empty>','saw_and',0,'p_saw_and','plyler.py',762),
  ('saw_or -> <empty>','saw_or',0,'p_saw_or','plyler.py',768),
  ('saw_oparen -> <empty>','saw_oparen',0,'p_saw_oparen','plyler.py',773),
  ('saw_cparen -> <empty>','saw_cparen',0,'p_saw_cparen','plyler.py',777),
  ('saw_function -> <empty>','saw_function',0,'p_saw_function','plyler.py',782),
  ('saw_function_end -> <empty>','saw_function_end',0,'p_saw_function_end','plyler.py',787),
  ('scope_end -> <empty>','scope_end',0,'p_scope_end','plyler.py',791),
  ('class_scope_end -> <empty>','class_scope_end',0,'p_class_scope_end','plyler.py',795),
  ('saw_print -> <empty>','saw_print',0,'p_saw_print','plyler.py',799),
  ('saw_print_end -> <empty>','saw_print_end',0,'p_saw_print_end','plyler.py',803),
  ('saw_read -> <empty>','saw_read',0,'p_saw_read','plyler.py',807),
  ('saw_read_exp -> <empty>','saw_read_exp',0,'p_saw_read_exp','plyler.py',811),
  ('saw_read_end -> <empty>','saw_read_end',0,'p_saw_read_end','plyler.py',818),
  ('bc_end -> <empty>','bc_end',0,'p_bc_end','plyler.py',822),
  ('saw_else -> <empty>','saw_else',0,'p_saw_else','plyler.py',826),
  ('saw_while -> <empty>','saw_while',0,'p_saw_while','plyler.py',830),
  ('saw_while_end -> <empty>','saw_while_end',0,'p_saw_while_end','plyler.py',834),
  ('count_vars -> <empty>','count_vars',0,'p_count_vars','plyler.py',838),
  ('verify_func -> <empty>','verify_func',0,'p_verify_func','plyler.py',842),
  ('verify_param -> <empty>','verify_param',0,'p_verify_param','plyler.py',846),
  ('increment_cont -> <empty>','increment_cont',0,'p_increment_cont','plyler.py',852),
  ('generate_gosub -> <empty>','generate_gosub',0,'p_generate_gosub','plyler.py',858),
]
