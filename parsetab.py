
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ATTRIBUTES BOOL BOOLS BY CBRACKET CCURLY CHAR CHARS CLASS COLON COMMA COMMENT CPAREN CSTCHAR CSTFLT CSTINT CSTSTRING DATAFRAME DIV ELSE EQ FALSE FILE FLOAT FLOATS FOR FROM FUNCTION GT GTE ID IF INT INTS LT LTE METHODS MINUS MULT NE OBRACKET OCURLY OPAREN OR PERIOD PLUS PRINT PROGRAM QUESTION READ RETURN SEMICOLON STRING STRINGS THEN TO TRUE VAR VOID WHILE\n  programa : PROGRAM ID saw_program SEMICOLON bloque\n           | PROGRAM ID saw_program SEMICOLON dec bloque\n  \n  funcion : FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque\n  \n  func1 : simple\n        | VOID saw_type\n  \n  param : param2 param1\n        | empty\n  \n  param1 : COMMA param2 param1\n         | empty\n  \n  param2 : simple ID saw_id saw_variable\n         | multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable\n  \n    clase : CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON\n   \n  clase_bloque :  OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY\n   \n  clase_bloque1 : dec\n                | empty\n   \n  clase_metodos_bloque : funcion clase_metodos_bloque\n                       | empty\n  \n  ciclo_while : WHILE cond2 THEN bloque_ciclo SEMICOLON\n  \n  ciclo_for : FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON\n  \n  ciclo_for1 : CSTINT\n             | variable\n  \n  dec : VAR tipo SEMICOLON dec1\n  \n  dec1 : dec\n       | empty\n  \n  tipo : compuesto ID saw_id saw_variable tipo1\n       | simple ID saw_id saw_variable tipo1\n       | multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable tipo2\n  \n  tipo1 : COMMA ID saw_id saw_variable tipo1\n        | empty\n  \n  tipo2 : COMMA ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable\n        | empty\n  \n  tipo3 : OBRACKET CSTINT CBRACKET saw_dimension\n        | empty\n  \n  simple : INT saw_type\n         | FLOAT saw_type\n         | BOOL saw_type\n         | STRING saw_type\n         | CHAR saw_type\n  \n  multiple : INTS saw_type\n           | FLOATS saw_type\n           | BOOLS saw_type\n           | STRINGS saw_type\n           | CHARS saw_type\n  \n  compuesto : ID saw_type\n            | DATAFRAME saw_type\n            | FILE saw_type\n  \n  bloque : OCURLY b1 CCURLY scope_end\n  \n  b1 : estatuto b1\n     | empty\n  \n  bloque_ciclo : OCURLY bc1 CCURLY bc_end\n  \n  bc1 : estatuto_ciclo bc1\n      | empty\n  \n  estatuto : asignacion\n           | llamada\n           | condicion\n           | escritura\n           | leer\n           | ciclo_while\n           | ciclo_for\n           | ternaria\n           | bloque\n           | funcion\n           | clase\n           | dec\n  \n  estatuto_ciclo : asignacion\n                 | llamada\n                 | condicion\n                 | escritura\n                 | leer\n                 | ciclo_while\n                 | ciclo_for\n                 | ternaria\n                 | dec\n  \n  estatuto_redux : asignacion\n                 | llamada\n                 | escritura\n                 | leer\n                 | ternaria\n  \n  asignacion : variable AS exp saw_asig\n  \n  condicion : IF cond2 saw_cond THEN bloque_ciclo cond1 SEMICOLON\n  \n  cond1 : ELSE bloque_ciclo\n        | ELSE IF cond2 saw_cond THEN bloque_ciclo cond1\n        | empty\n  \n    cond2 : OPAREN exp CPAREN\n  \n  ternaria : exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON\n  \n  escritura : PRINT OPAREN exp saw_print_exp e1 CPAREN\n  \n  e1 : COMMA exp saw_print_exp e1\n     | empty\n  \n  leer  : READ OPAREN variable saw_read_exp l1 CPAREN\n  \n  l1 : COMMA variable saw_read_exp e1\n     | empty\n  \n  boolean : TRUE\n          | FALSE\n  \n  variable : ID saw_id saw_called_var\n           | ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var\n           | ID saw_id variable2\n  \n  variable1 : OBRACKET exp CBRACKET saw_dimension\n            | empty\n  \n  variable2 : PERIOD ID saw_called_var_from_class\n            | PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1\n  \n  llamada : ID saw_id OPAREN exp llamada1 CPAREN\n          | ID saw_id OPAREN CPAREN\n  \n  llamada1 : COMMA exp llamada1\n           | empty\n  \n  exp : texp exp1 check_or_operator\n  \n  exp1 : OR saw_or texp exp1\n       | empty\n  \n  texp : gexp texp1 check_and_operator\n  \n  texp1 : AND saw_and gexp texp1\n        | empty\n  \n  gexp : mexp gexp1 check_relational_operator\n  \n  gexp1 : LT saw_relational_operator mexp\n        | GT saw_relational_operator mexp\n        | GTE saw_relational_operator mexp\n        | LTE saw_relational_operator mexp\n        | EQ saw_relational_operator mexp\n        | NE saw_relational_operator mexp\n        | empty\n  \n  mexp : termino mexp1\n  \n  mexp1 : PLUS saw_plusminus_operator termino mexp1\n        | MINUS saw_plusminus_operator termino mexp1\n        | empty\n  \n  termino : factor term1 check_plusminus_operator\n  \n  term1 : MULT saw_multdiv_operator factor term1\n        | DIV saw_multdiv_operator factor term1\n        | empty\n  \n  factor : OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator\n         | varcst check_multdiv_operator\n         | variable\n         | llamada\n  \n  varcst : CSTINT saw_end_value_int\n         | CSTFLT saw_end_value_flt\n         | CSTCHAR \n         | CSTSTRING saw_end_value_str\n         | boolean \n  \n  empty : \n   saw_program :  saw_class :  saw_type :  saw_id :  saw_variable :  saw_dimension :  saw_called_var :  saw_called_var_from_class :  saw_asig :  saw_end_value_int :  saw_end_value_flt :  saw_end_value_str :  saw_plusminus_operator  :  check_plusminus_operator  :  saw_multdiv_operator  :  check_multdiv_operator  :  saw_relational_operator :  check_relational_operator : \n  check_and_operator  :\n  \n  check_or_operator :\n  \n  saw_and  :\n  \n  saw_or :\n   saw_oparen :  saw_cparen :  saw_function :  scope_end :  class_scope_end :  saw_print_exp :  saw_read_exp :  saw_cond :  bc_end : '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,6,10,67,126,],[0,-1,-2,-162,-47,]),'ID':([2,8,9,12,14,15,16,17,18,19,20,21,22,23,24,25,29,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,72,74,75,76,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,138,139,140,141,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,175,176,177,179,181,182,189,190,193,194,195,196,197,198,199,200,201,202,203,204,210,212,213,214,217,220,222,224,226,227,228,229,230,231,232,233,234,240,241,242,243,244,245,247,251,252,254,255,256,260,262,266,273,274,275,277,287,288,289,294,295,299,311,312,315,325,326,335,350,],[3,28,52,28,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-159,82,-136,-136,-136,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,110,-139,112,113,-139,-139,-139,-139,-139,-139,-139,-139,-139,-139,-139,-139,-162,130,28,130,130,130,147,147,150,-4,-139,-156,-158,-107,-155,-157,-110,-154,-153,-153,-153,-153,-153,-153,-118,-119,-149,-149,-122,-150,-151,-151,-126,-128,-131,-132,-134,-136,-44,-45,-46,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-47,-129,-145,-130,-140,130,-94,130,-96,181,-5,-105,130,-108,130,-111,130,130,130,130,130,130,130,130,-123,130,130,-22,-23,-24,-79,-143,28,-102,-144,-160,28,147,-136,-136,-112,-113,-114,-115,-116,-117,-136,-136,-136,-136,130,-142,-99,-152,130,147,-18,28,-65,-66,-67,-68,-69,-70,-71,-72,-73,-106,-109,-120,-121,-124,-125,270,-85,-101,-136,130,-127,-86,-89,147,130,-143,-98,-80,304,305,-12,-95,-142,147,-142,-136,-3,-97,-100,342,-19,]),'SEMICOLON':([3,4,37,38,39,40,41,42,43,44,45,46,47,48,49,50,83,85,86,88,89,96,97,100,101,104,105,106,107,108,110,112,127,128,129,130,132,133,134,135,136,138,140,153,155,157,166,172,173,175,176,179,181,182,188,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,212,213,214,215,240,241,242,243,244,245,246,248,249,251,252,254,256,257,259,260,262,264,268,270,271,274,275,278,282,291,292,294,295,307,309,310,311,312,322,324,325,326,333,334,336,337,341,343,344,356,359,360,361,362,],[-137,5,-136,-136,-136,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,109,-156,-107,-155,-110,-154,-118,-119,-122,-150,-126,-128,-131,-132,-134,-140,-140,-129,-145,-130,-140,-74,-75,-76,-77,-78,-94,-96,-105,-108,-111,-123,-141,-141,-79,-143,-102,-144,-160,222,-136,-136,-112,-113,-114,-115,-116,-117,-136,-136,-136,-136,-136,-136,251,-142,-99,-152,-136,-106,-109,-120,-121,-124,-125,-25,-29,-26,-85,-101,-136,-127,277,-83,-86,-89,-167,289,-140,-142,-143,-98,-81,-50,-141,-136,-95,-142,-136,-141,-33,-142,-136,-28,-136,-97,-100,-142,-27,-31,-136,-32,-82,350,-13,-142,-136,-141,-30,]),'OCURLY':([5,7,8,12,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,83,85,86,88,89,96,97,100,101,104,105,106,107,108,109,126,127,128,129,130,138,140,148,153,155,157,166,169,170,171,175,176,179,181,182,183,193,194,195,196,197,198,199,200,201,202,203,204,212,213,214,222,239,240,241,242,243,244,245,251,252,254,256,258,260,262,274,275,277,289,294,295,300,311,312,315,325,326,327,338,350,],[8,8,8,8,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-136,-136,-136,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-162,-156,-107,-155,-110,-154,-118,-119,-122,-150,-126,-128,-131,-132,-134,-136,-47,-129,-145,-130,-140,-94,-96,189,-105,-108,-111,-123,-22,-23,-24,-79,-143,-102,-144,-160,189,-136,-136,-112,-113,-114,-115,-116,-117,-136,-136,-136,-136,-142,-99,-152,-18,269,-106,-109,-120,-121,-124,-125,-85,-101,-136,-127,189,-86,-89,-143,-98,-80,-12,-95,-142,8,-142,-136,-3,-97,-100,189,189,-19,]),'VAR':([5,8,12,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,83,85,86,88,89,96,97,100,101,104,105,106,107,108,109,126,127,128,129,130,138,140,153,155,157,166,169,170,171,175,176,179,181,182,189,193,194,195,196,197,198,199,200,201,202,203,204,212,213,214,222,224,226,227,228,229,230,231,232,233,234,240,241,242,243,244,245,251,252,254,256,260,262,274,275,277,289,294,295,306,311,312,315,325,326,350,],[9,9,9,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-136,-136,-136,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-162,-156,-107,-155,-110,-154,-118,-119,-122,-150,-126,-128,-131,-132,-134,9,-47,-129,-145,-130,-140,-94,-96,-105,-108,-111,-123,-22,-23,-24,-79,-143,-102,-144,-160,9,-136,-136,-112,-113,-114,-115,-116,-117,-136,-136,-136,-136,-142,-99,-152,-18,9,-65,-66,-67,-68,-69,-70,-71,-72,-73,-106,-109,-120,-121,-124,-125,-85,-101,-136,-127,-86,-89,-143,-98,-80,-12,-95,-142,9,-142,-136,-3,-97,-100,-19,]),'CCURLY':([8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,68,83,85,86,88,89,96,97,100,101,104,105,106,107,108,109,126,127,128,129,130,138,140,153,155,157,166,169,170,171,175,176,179,181,182,189,193,194,195,196,197,198,199,200,201,202,203,204,212,213,214,222,223,224,225,226,227,228,229,230,231,232,233,234,240,241,242,243,244,245,251,252,254,256,260,262,265,274,275,277,289,294,295,311,312,315,325,326,340,346,347,348,350,352,353,],[-136,67,-136,-49,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-136,-136,-136,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-162,-48,-156,-107,-155,-110,-154,-118,-119,-122,-150,-126,-128,-131,-132,-134,-136,-47,-129,-145,-130,-140,-94,-96,-105,-108,-111,-123,-22,-23,-24,-79,-143,-102,-144,-160,-136,-136,-136,-112,-113,-114,-115,-116,-117,-136,-136,-136,-136,-142,-99,-152,-18,264,-136,-52,-65,-66,-67,-68,-69,-70,-71,-72,-73,-106,-109,-120,-121,-124,-125,-85,-101,-136,-127,-86,-89,-51,-143,-98,-80,-12,-95,-142,-142,-136,-3,-97,-100,-136,-163,-136,-17,-19,356,-16,]),'IF':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,83,85,86,88,89,96,97,100,101,104,105,106,107,108,109,126,127,128,129,130,138,140,153,155,157,166,169,170,171,175,176,179,181,182,189,193,194,195,196,197,198,199,200,201,202,203,204,212,213,214,222,224,226,227,228,229,230,231,232,233,234,240,241,242,243,244,245,251,252,254,256,258,260,262,274,275,277,289,294,295,311,312,315,325,326,350,],[30,30,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-136,-136,-136,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-162,-156,-107,-155,-110,-154,-118,-119,-122,-150,-126,-128,-131,-132,-134,-136,-47,-129,-145,-130,-140,-94,-96,-105,-108,-111,-123,-22,-23,-24,-79,-143,-102,-144,-160,30,-136,-136,-112,-113,-114,-115,-116,-117,-136,-136,-136,-136,-142,-99,-152,-18,30,-65,-66,-67,-68,-69,-70,-71,-72,-73,-106,-109,-120,-121,-124,-125,-85,-101,-136,-127,279,-86,-89,-143,-98,-80,-12,-95,-142,-142,-136,-3,-97,-100,-19,]),'PRINT':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,70,83,85,86,88,89,96,97,100,101,104,105,106,107,108,109,126,127,128,129,130,138,140,153,155,157,166,169,170,171,175,176,177,179,181,182,189,193,194,195,196,197,198,199,200,201,202,203,204,212,213,214,222,224,226,227,228,229,230,231,232,233,234,240,241,242,243,244,245,251,252,254,256,260,262,274,275,277,289,294,295,311,312,315,325,326,350,],[31,31,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-136,-136,-136,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-162,31,-156,-107,-155,-110,-154,-118,-119,-122,-150,-126,-128,-131,-132,-134,-136,-47,-129,-145,-130,-140,-94,-96,-105,-108,-111,-123,-22,-23,-24,-79,-143,31,-102,-144,-160,31,-136,-136,-112,-113,-114,-115,-116,-117,-136,-136,-136,-136,-142,-99,-152,-18,31,-65,-66,-67,-68,-69,-70,-71,-72,-73,-106,-109,-120,-121,-124,-125,-85,-101,-136,-127,-86,-89,-143,-98,-80,-12,-95,-142,-142,-136,-3,-97,-100,-19,]),'READ':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,70,83,85,86,88,89,96,97,100,101,104,105,106,107,108,109,126,127,128,129,130,138,140,153,155,157,166,169,170,171,175,176,177,179,181,182,189,193,194,195,196,197,198,199,200,201,202,203,204,212,213,214,222,224,226,227,228,229,230,231,232,233,234,240,241,242,243,244,245,251,252,254,256,260,262,274,275,277,289,294,295,311,312,315,325,326,350,],[32,32,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-136,-136,-136,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-162,32,-156,-107,-155,-110,-154,-118,-119,-122,-150,-126,-128,-131,-132,-134,-136,-47,-129,-145,-130,-140,-94,-96,-105,-108,-111,-123,-22,-23,-24,-79,-143,32,-102,-144,-160,32,-136,-136,-112,-113,-114,-115,-116,-117,-136,-136,-136,-136,-142,-99,-152,-18,32,-65,-66,-67,-68,-69,-70,-71,-72,-73,-106,-109,-120,-121,-124,-125,-85,-101,-136,-127,-86,-89,-143,-98,-80,-12,-95,-142,-142,-136,-3,-97,-100,-19,]),'WHILE':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,83,85,86,88,89,96,97,100,101,104,105,106,107,108,109,126,127,128,129,130,138,140,153,155,157,166,169,170,171,175,176,179,181,182,189,193,194,195,196,197,198,199,200,201,202,203,204,212,213,214,222,224,226,227,228,229,230,231,232,233,234,240,241,242,243,244,245,251,252,254,256,260,262,274,275,277,289,294,295,311,312,315,325,326,350,],[33,33,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-136,-136,-136,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-162,-156,-107,-155,-110,-154,-118,-119,-122,-150,-126,-128,-131,-132,-134,-136,-47,-129,-145,-130,-140,-94,-96,-105,-108,-111,-123,-22,-23,-24,-79,-143,-102,-144,-160,33,-136,-136,-112,-113,-114,-115,-116,-117,-136,-136,-136,-136,-142,-99,-152,-18,33,-65,-66,-67,-68,-69,-70,-71,-72,-73,-106,-109,-120,-121,-124,-125,-85,-101,-136,-127,-86,-89,-143,-98,-80,-12,-95,-142,-142,-136,-3,-97,-100,-19,]),'FOR':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,83,85,86,88,89,96,97,100,101,104,105,106,107,108,109,126,127,128,129,130,138,140,153,155,157,166,169,170,171,175,176,179,181,182,189,193,194,195,196,197,198,199,200,201,202,203,204,212,213,214,222,224,226,227,228,229,230,231,232,233,234,240,241,242,243,244,245,251,252,254,256,260,262,274,275,277,289,294,295,311,312,315,325,326,350,],[34,34,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-136,-136,-136,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-162,-156,-107,-155,-110,-154,-118,-119,-122,-150,-126,-128,-131,-132,-134,-136,-47,-129,-145,-130,-140,-94,-96,-105,-108,-111,-123,-22,-23,-24,-79,-143,-102,-144,-160,34,-136,-136,-112,-113,-114,-115,-116,-117,-136,-136,-136,-136,-142,-99,-152,-18,34,-65,-66,-67,-68,-69,-70,-71,-72,-73,-106,-109,-120,-121,-124,-125,-85,-101,-136,-127,-86,-89,-143,-98,-80,-12,-95,-142,-142,-136,-3,-97,-100,-19,]),'FUNCTION':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,83,85,86,88,89,96,97,100,101,104,105,106,107,108,109,126,127,128,129,130,138,140,153,155,157,166,169,170,171,175,176,179,181,182,193,194,195,196,197,198,199,200,201,202,203,204,212,213,214,222,240,241,242,243,244,245,251,252,254,256,260,262,274,275,277,289,294,295,311,312,315,325,326,340,347,350,],[35,35,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-136,-136,-136,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-162,-156,-107,-155,-110,-154,-118,-119,-122,-150,-126,-128,-131,-132,-134,-136,-47,-129,-145,-130,-140,-94,-96,-105,-108,-111,-123,-22,-23,-24,-79,-143,-102,-144,-160,-136,-136,-112,-113,-114,-115,-116,-117,-136,-136,-136,-136,-142,-99,-152,-18,-106,-109,-120,-121,-124,-125,-85,-101,-136,-127,-86,-89,-143,-98,-80,-12,-95,-142,-142,-136,-3,-97,-100,35,35,-19,]),'CLASS':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,83,85,86,88,89,96,97,100,101,104,105,106,107,108,109,126,127,128,129,130,138,140,153,155,157,166,169,170,171,175,176,179,181,182,193,194,195,196,197,198,199,200,201,202,203,204,212,213,214,222,240,241,242,243,244,245,251,252,254,256,260,262,274,275,277,289,294,295,311,312,315,325,326,350,],[36,36,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-136,-136,-136,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-162,-156,-107,-155,-110,-154,-118,-119,-122,-150,-126,-128,-131,-132,-134,-136,-47,-129,-145,-130,-140,-94,-96,-105,-108,-111,-123,-22,-23,-24,-79,-143,-102,-144,-160,-136,-136,-112,-113,-114,-115,-116,-117,-136,-136,-136,-136,-142,-99,-152,-18,-106,-109,-120,-121,-124,-125,-85,-101,-136,-127,-86,-89,-143,-98,-80,-12,-95,-142,-142,-136,-3,-97,-100,-19,]),'OPAREN':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,37,38,39,40,41,42,43,44,45,46,47,48,49,67,69,70,71,72,74,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,126,127,128,129,130,137,138,139,140,150,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,175,176,177,179,181,182,189,191,193,194,195,196,197,198,199,200,201,202,203,204,210,212,213,214,217,222,224,226,227,228,229,230,231,232,233,234,238,240,241,242,243,244,245,251,252,254,255,256,260,262,273,274,275,277,279,289,294,295,311,312,315,325,326,350,],[29,29,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-140,-159,74,75,76,74,78,-136,-136,-136,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-162,29,29,137,29,29,29,-156,-158,-107,-155,-157,-110,-154,-153,-153,-153,-153,-153,-153,-118,-119,-149,-149,-122,-150,-151,-151,-126,-128,-131,-132,-134,-136,-47,-129,-145,-130,-140,29,-94,29,-96,-140,-105,29,-108,29,-111,29,29,29,29,29,29,29,29,-123,29,29,-22,-23,-24,-79,137,29,-102,-144,-160,29,-161,-136,-136,-112,-113,-114,-115,-116,-117,-136,-136,-136,-136,29,-142,-99,-152,29,-18,29,-65,-66,-67,-68,-69,-70,-71,-72,-73,267,-106,-109,-120,-121,-124,-125,-85,-101,-136,29,-127,-86,-89,29,-143,-98,-80,74,-12,-95,-142,-142,-136,-3,-97,-100,-19,]),'CSTINT':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,29,37,38,39,40,41,42,43,44,45,46,47,48,49,67,69,70,72,74,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,126,127,128,129,130,137,138,139,140,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,175,176,177,179,181,182,189,190,193,194,195,196,197,198,199,200,201,202,203,204,207,210,212,213,214,217,222,224,226,227,228,229,230,231,232,233,234,240,241,242,243,244,245,251,252,254,255,256,260,262,266,273,274,275,277,289,294,295,299,308,311,312,315,325,326,331,350,354,],[43,43,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-159,-136,-136,-136,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-162,43,43,43,43,43,-156,-158,-107,-155,-157,-110,-154,-153,-153,-153,-153,-153,-153,-118,-119,-149,-149,-122,-150,-151,-151,-126,-128,-131,-132,-134,-136,-47,-129,-145,-130,-140,43,-94,43,-96,-105,43,-108,43,-111,43,43,43,43,43,43,43,43,-123,43,43,-22,-23,-24,-79,-143,43,-102,-144,-160,43,237,-136,-136,-112,-113,-114,-115,-116,-117,-136,-136,-136,-136,250,43,-142,-99,-152,43,-18,43,-65,-66,-67,-68,-69,-70,-71,-72,-73,-106,-109,-120,-121,-124,-125,-85,-101,-136,43,-127,-86,-89,237,43,-143,-98,-80,-12,-95,-142,237,323,-142,-136,-3,-97,-100,339,-19,357,]),'CSTFLT':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,29,37,38,39,40,41,42,43,44,45,46,47,48,49,67,69,70,72,74,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,126,127,128,129,130,137,138,139,140,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,175,176,177,179,181,182,189,193,194,195,196,197,198,199,200,201,202,203,204,210,212,213,214,217,222,224,226,227,228,229,230,231,232,233,234,240,241,242,243,244,245,251,252,254,255,256,260,262,273,274,275,277,289,294,295,311,312,315,325,326,350,],[44,44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-159,-136,-136,-136,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-162,44,44,44,44,44,-156,-158,-107,-155,-157,-110,-154,-153,-153,-153,-153,-153,-153,-118,-119,-149,-149,-122,-150,-151,-151,-126,-128,-131,-132,-134,-136,-47,-129,-145,-130,-140,44,-94,44,-96,-105,44,-108,44,-111,44,44,44,44,44,44,44,44,-123,44,44,-22,-23,-24,-79,-143,44,-102,-144,-160,44,-136,-136,-112,-113,-114,-115,-116,-117,-136,-136,-136,-136,44,-142,-99,-152,44,-18,44,-65,-66,-67,-68,-69,-70,-71,-72,-73,-106,-109,-120,-121,-124,-125,-85,-101,-136,44,-127,-86,-89,44,-143,-98,-80,-12,-95,-142,-142,-136,-3,-97,-100,-19,]),'CSTCHAR':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,29,37,38,39,40,41,42,43,44,45,46,47,48,49,67,69,70,72,74,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,126,127,128,129,130,137,138,139,140,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,175,176,177,179,181,182,189,193,194,195,196,197,198,199,200,201,202,203,204,210,212,213,214,217,222,224,226,227,228,229,230,231,232,233,234,240,241,242,243,244,245,251,252,254,255,256,260,262,273,274,275,277,289,294,295,311,312,315,325,326,350,],[45,45,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-159,-136,-136,-136,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-162,45,45,45,45,45,-156,-158,-107,-155,-157,-110,-154,-153,-153,-153,-153,-153,-153,-118,-119,-149,-149,-122,-150,-151,-151,-126,-128,-131,-132,-134,-136,-47,-129,-145,-130,-140,45,-94,45,-96,-105,45,-108,45,-111,45,45,45,45,45,45,45,45,-123,45,45,-22,-23,-24,-79,-143,45,-102,-144,-160,45,-136,-136,-112,-113,-114,-115,-116,-117,-136,-136,-136,-136,45,-142,-99,-152,45,-18,45,-65,-66,-67,-68,-69,-70,-71,-72,-73,-106,-109,-120,-121,-124,-125,-85,-101,-136,45,-127,-86,-89,45,-143,-98,-80,-12,-95,-142,-142,-136,-3,-97,-100,-19,]),'CSTSTRING':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,29,37,38,39,40,41,42,43,44,45,46,47,48,49,67,69,70,72,74,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,126,127,128,129,130,137,138,139,140,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,175,176,177,179,181,182,189,193,194,195,196,197,198,199,200,201,202,203,204,210,212,213,214,217,222,224,226,227,228,229,230,231,232,233,234,240,241,242,243,244,245,251,252,254,255,256,260,262,273,274,275,277,289,294,295,311,312,315,325,326,350,],[46,46,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-159,-136,-136,-136,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-162,46,46,46,46,46,-156,-158,-107,-155,-157,-110,-154,-153,-153,-153,-153,-153,-153,-118,-119,-149,-149,-122,-150,-151,-151,-126,-128,-131,-132,-134,-136,-47,-129,-145,-130,-140,46,-94,46,-96,-105,46,-108,46,-111,46,46,46,46,46,46,46,46,-123,46,46,-22,-23,-24,-79,-143,46,-102,-144,-160,46,-136,-136,-112,-113,-114,-115,-116,-117,-136,-136,-136,-136,46,-142,-99,-152,46,-18,46,-65,-66,-67,-68,-69,-70,-71,-72,-73,-106,-109,-120,-121,-124,-125,-85,-101,-136,46,-127,-86,-89,46,-143,-98,-80,-12,-95,-142,-142,-136,-3,-97,-100,-19,]),'TRUE':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,29,37,38,39,40,41,42,43,44,45,46,47,48,49,67,69,70,72,74,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,126,127,128,129,130,137,138,139,140,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,175,176,177,179,181,182,189,193,194,195,196,197,198,199,200,201,202,203,204,210,212,213,214,217,222,224,226,227,228,229,230,231,232,233,234,240,241,242,243,244,245,251,252,254,255,256,260,262,273,274,275,277,289,294,295,311,312,315,325,326,350,],[48,48,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-159,-136,-136,-136,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-162,48,48,48,48,48,-156,-158,-107,-155,-157,-110,-154,-153,-153,-153,-153,-153,-153,-118,-119,-149,-149,-122,-150,-151,-151,-126,-128,-131,-132,-134,-136,-47,-129,-145,-130,-140,48,-94,48,-96,-105,48,-108,48,-111,48,48,48,48,48,48,48,48,-123,48,48,-22,-23,-24,-79,-143,48,-102,-144,-160,48,-136,-136,-112,-113,-114,-115,-116,-117,-136,-136,-136,-136,48,-142,-99,-152,48,-18,48,-65,-66,-67,-68,-69,-70,-71,-72,-73,-106,-109,-120,-121,-124,-125,-85,-101,-136,48,-127,-86,-89,48,-143,-98,-80,-12,-95,-142,-142,-136,-3,-97,-100,-19,]),'FALSE':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,29,37,38,39,40,41,42,43,44,45,46,47,48,49,67,69,70,72,74,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,126,127,128,129,130,137,138,139,140,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,175,176,177,179,181,182,189,193,194,195,196,197,198,199,200,201,202,203,204,210,212,213,214,217,222,224,226,227,228,229,230,231,232,233,234,240,241,242,243,244,245,251,252,254,255,256,260,262,273,274,275,277,289,294,295,311,312,315,325,326,350,],[49,49,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-159,-136,-136,-136,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-162,49,49,49,49,49,-156,-158,-107,-155,-157,-110,-154,-153,-153,-153,-153,-153,-153,-118,-119,-149,-149,-122,-150,-151,-151,-126,-128,-131,-132,-134,-136,-47,-129,-145,-130,-140,49,-94,49,-96,-105,49,-108,49,-111,49,49,49,49,49,49,49,49,-123,49,49,-22,-23,-24,-79,-143,49,-102,-144,-160,49,-136,-136,-112,-113,-114,-115,-116,-117,-136,-136,-136,-136,49,-142,-99,-152,49,-18,49,-65,-66,-67,-68,-69,-70,-71,-72,-73,-106,-109,-120,-121,-124,-125,-85,-101,-136,49,-127,-86,-89,49,-143,-98,-80,-12,-95,-142,-142,-136,-3,-97,-100,-19,]),'DATAFRAME':([9,],[55,]),'FILE':([9,],[56,]),'INT':([9,35,267,302,],[57,57,57,57,]),'FLOAT':([9,35,267,302,],[58,58,58,58,]),'BOOL':([9,35,267,302,],[59,59,59,59,]),'STRING':([9,35,267,302,],[60,60,60,60,]),'CHAR':([9,35,267,302,],[61,61,61,61,]),'INTS':([9,267,302,],[62,62,62,]),'FLOATS':([9,267,302,],[63,63,63,]),'BOOLS':([9,267,302,],[64,64,64,]),'STRINGS':([9,267,302,],[65,65,65,]),'CHARS':([9,267,302,],[66,66,66,]),'MULT':([15,26,28,41,42,43,44,45,46,47,48,49,71,105,106,107,108,127,129,130,133,138,140,176,179,181,182,203,204,212,213,214,227,252,254,256,274,275,294,295,311,312,325,326,],[-130,-129,-140,102,-152,-146,-147,-133,-148,-135,-92,-93,-143,-128,-131,-132,-134,-129,-130,-140,-130,-94,-96,-143,-102,-144,-160,102,102,-142,-99,-152,-130,-101,-136,-127,-143,-98,-95,-142,-142,-136,-97,-100,]),'DIV':([15,26,28,41,42,43,44,45,46,47,48,49,71,105,106,107,108,127,129,130,133,138,140,176,179,181,182,203,204,212,213,214,227,252,254,256,274,275,294,295,311,312,325,326,],[-130,-129,-140,103,-152,-146,-147,-133,-148,-135,-92,-93,-143,-128,-131,-132,-134,-129,-130,-140,-130,-94,-96,-143,-102,-144,-160,103,103,-142,-99,-152,-130,-101,-136,-127,-143,-98,-95,-142,-142,-136,-97,-100,]),'PLUS':([15,26,28,40,41,42,43,44,45,46,47,48,49,71,101,104,105,106,107,108,127,129,130,133,138,140,166,176,179,181,182,201,202,203,204,212,213,214,227,244,245,252,254,256,274,275,294,295,311,312,325,326,],[-130,-129,-140,98,-136,-152,-146,-147,-133,-148,-135,-92,-93,-143,-150,-126,-128,-131,-132,-134,-129,-130,-140,-130,-94,-96,-123,-143,-102,-144,-160,98,98,-136,-136,-142,-99,-152,-130,-124,-125,-101,-136,-127,-143,-98,-95,-142,-142,-136,-97,-100,]),'MINUS':([15,26,28,40,41,42,43,44,45,46,47,48,49,71,101,104,105,106,107,108,127,129,130,133,138,140,166,176,179,181,182,201,202,203,204,212,213,214,227,244,245,252,254,256,274,275,294,295,311,312,325,326,],[-130,-129,-140,99,-136,-152,-146,-147,-133,-148,-135,-92,-93,-143,-150,-126,-128,-131,-132,-134,-129,-130,-140,-130,-94,-96,-123,-143,-102,-144,-160,99,99,-136,-136,-142,-99,-152,-130,-124,-125,-101,-136,-127,-143,-98,-95,-142,-142,-136,-97,-100,]),'LT':([15,26,28,39,40,41,42,43,44,45,46,47,48,49,71,97,100,101,104,105,106,107,108,127,129,130,133,138,140,166,176,179,181,182,201,202,203,204,212,213,214,227,242,243,244,245,252,254,256,274,275,294,295,311,312,325,326,],[-130,-129,-140,90,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-143,-119,-122,-150,-126,-128,-131,-132,-134,-129,-130,-140,-130,-94,-96,-123,-143,-102,-144,-160,-136,-136,-136,-136,-142,-99,-152,-130,-120,-121,-124,-125,-101,-136,-127,-143,-98,-95,-142,-142,-136,-97,-100,]),'GT':([15,26,28,39,40,41,42,43,44,45,46,47,48,49,71,97,100,101,104,105,106,107,108,127,129,130,133,138,140,166,176,179,181,182,201,202,203,204,212,213,214,227,242,243,244,245,252,254,256,274,275,294,295,311,312,325,326,],[-130,-129,-140,91,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-143,-119,-122,-150,-126,-128,-131,-132,-134,-129,-130,-140,-130,-94,-96,-123,-143,-102,-144,-160,-136,-136,-136,-136,-142,-99,-152,-130,-120,-121,-124,-125,-101,-136,-127,-143,-98,-95,-142,-142,-136,-97,-100,]),'GTE':([15,26,28,39,40,41,42,43,44,45,46,47,48,49,71,97,100,101,104,105,106,107,108,127,129,130,133,138,140,166,176,179,181,182,201,202,203,204,212,213,214,227,242,243,244,245,252,254,256,274,275,294,295,311,312,325,326,],[-130,-129,-140,92,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-143,-119,-122,-150,-126,-128,-131,-132,-134,-129,-130,-140,-130,-94,-96,-123,-143,-102,-144,-160,-136,-136,-136,-136,-142,-99,-152,-130,-120,-121,-124,-125,-101,-136,-127,-143,-98,-95,-142,-142,-136,-97,-100,]),'LTE':([15,26,28,39,40,41,42,43,44,45,46,47,48,49,71,97,100,101,104,105,106,107,108,127,129,130,133,138,140,166,176,179,181,182,201,202,203,204,212,213,214,227,242,243,244,245,252,254,256,274,275,294,295,311,312,325,326,],[-130,-129,-140,93,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-143,-119,-122,-150,-126,-128,-131,-132,-134,-129,-130,-140,-130,-94,-96,-123,-143,-102,-144,-160,-136,-136,-136,-136,-142,-99,-152,-130,-120,-121,-124,-125,-101,-136,-127,-143,-98,-95,-142,-142,-136,-97,-100,]),'EQ':([15,26,28,39,40,41,42,43,44,45,46,47,48,49,71,97,100,101,104,105,106,107,108,127,129,130,133,138,140,166,176,179,181,182,201,202,203,204,212,213,214,227,242,243,244,245,252,254,256,274,275,294,295,311,312,325,326,],[-130,-129,-140,94,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-143,-119,-122,-150,-126,-128,-131,-132,-134,-129,-130,-140,-130,-94,-96,-123,-143,-102,-144,-160,-136,-136,-136,-136,-142,-99,-152,-130,-120,-121,-124,-125,-101,-136,-127,-143,-98,-95,-142,-142,-136,-97,-100,]),'NE':([15,26,28,39,40,41,42,43,44,45,46,47,48,49,71,97,100,101,104,105,106,107,108,127,129,130,133,138,140,166,176,179,181,182,201,202,203,204,212,213,214,227,242,243,244,245,252,254,256,274,275,294,295,311,312,325,326,],[-130,-129,-140,95,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-143,-119,-122,-150,-126,-128,-131,-132,-134,-129,-130,-140,-130,-94,-96,-123,-143,-102,-144,-160,-136,-136,-136,-136,-142,-99,-152,-130,-120,-121,-124,-125,-101,-136,-127,-143,-98,-95,-142,-142,-136,-97,-100,]),'AND':([15,26,28,38,39,40,41,42,43,44,45,46,47,48,49,71,89,96,97,100,101,104,105,106,107,108,127,129,130,133,138,140,157,166,176,179,181,182,194,195,196,197,198,199,200,201,202,203,204,212,213,214,227,242,243,244,245,252,254,256,274,275,294,295,311,312,325,326,],[-130,-129,-140,87,-136,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-143,-154,-118,-119,-122,-150,-126,-128,-131,-132,-134,-129,-130,-140,-130,-94,-96,-111,-123,-143,-102,-144,-160,87,-112,-113,-114,-115,-116,-117,-136,-136,-136,-136,-142,-99,-152,-130,-120,-121,-124,-125,-101,-136,-127,-143,-98,-95,-142,-142,-136,-97,-100,]),'OR':([15,26,28,37,38,39,40,41,42,43,44,45,46,47,48,49,71,86,88,89,96,97,100,101,104,105,106,107,108,127,129,130,133,138,140,155,157,166,176,179,181,182,193,194,195,196,197,198,199,200,201,202,203,204,212,213,214,227,241,242,243,244,245,252,254,256,274,275,294,295,311,312,325,326,],[-130,-129,-140,84,-136,-136,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-143,-155,-110,-154,-118,-119,-122,-150,-126,-128,-131,-132,-134,-129,-130,-140,-130,-94,-96,-108,-111,-123,-143,-102,-144,-160,84,-136,-112,-113,-114,-115,-116,-117,-136,-136,-136,-136,-142,-99,-152,-130,-109,-120,-121,-124,-125,-101,-136,-127,-143,-98,-95,-142,-142,-136,-97,-100,]),'QUESTION':([15,26,27,28,37,38,39,40,41,42,43,44,45,46,47,48,49,71,83,85,86,88,89,96,97,100,101,104,105,106,107,108,127,129,130,133,138,140,153,155,157,166,176,179,181,182,193,194,195,196,197,198,199,200,201,202,203,204,212,213,214,227,240,241,242,243,244,245,252,254,256,274,275,294,295,311,312,325,326,],[-130,-129,70,-140,-136,-136,-136,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-143,-156,-107,-155,-110,-154,-118,-119,-122,-150,-126,-128,-131,-132,-134,-129,-130,-140,-130,-94,-96,-105,-108,-111,-123,-143,-102,-144,-160,-136,-136,-112,-113,-114,-115,-116,-117,-136,-136,-136,-136,-142,-99,-152,-130,-106,-109,-120,-121,-124,-125,-101,-136,-127,-143,-98,-95,-142,-142,-136,-97,-100,]),'AS':([26,28,71,138,140,181,212,213,254,274,275,294,295,311,312,325,326,],[69,-140,-143,-94,-96,-144,-142,-99,-136,-143,-98,-95,-142,-142,-136,-97,-100,]),'OBRACKET':([28,71,113,130,147,174,176,181,187,212,213,254,271,292,295,305,312,318,342,345,349,351,359,360,],[-140,139,-140,-140,-140,207,139,-144,139,-142,255,273,-142,308,-142,-140,273,331,-140,-142,354,308,-142,308,]),'PERIOD':([28,71,130,147,176,187,],[-140,141,-140,-140,141,141,]),'VOID':([35,],[81,]),'COLON':([37,38,39,40,41,42,43,44,45,46,47,48,49,82,83,85,86,88,89,96,97,100,101,104,105,106,107,108,127,128,129,130,131,132,133,134,135,136,138,140,152,153,155,157,166,175,176,179,181,182,192,193,194,195,196,197,198,199,200,201,202,203,204,212,213,214,240,241,242,243,244,245,251,252,254,256,260,262,274,275,290,294,295,311,312,325,326,332,],[-136,-136,-136,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-140,-156,-107,-155,-110,-154,-118,-119,-122,-150,-126,-128,-131,-132,-134,-129,-145,-130,-140,177,-74,-75,-76,-77,-78,-94,-96,-138,-105,-108,-111,-123,-79,-143,-102,-144,-160,239,-136,-136,-112,-113,-114,-115,-116,-117,-136,-136,-136,-136,-142,-99,-152,-106,-109,-120,-121,-124,-125,-85,-101,-136,-127,-86,-89,-143,-98,306,-95,-142,-142,-136,-97,-100,340,]),'CPAREN':([37,38,39,40,41,42,43,44,45,46,47,48,49,83,85,86,88,89,96,97,100,101,104,105,106,107,108,127,129,130,137,138,140,142,144,145,146,147,153,155,157,166,176,178,179,181,182,185,186,187,193,194,195,196,197,198,199,200,201,202,203,204,209,211,212,213,214,216,218,219,221,235,237,240,241,242,243,244,245,252,253,254,256,261,263,267,272,274,275,280,281,284,285,286,294,295,297,298,301,303,304,310,311,312,314,316,317,325,326,329,330,333,341,345,351,355,358,],[-136,-136,-136,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-156,-107,-155,-110,-154,-118,-119,-122,-150,-126,-128,-131,-132,-134,-129,-130,-140,179,-94,-96,182,184,-164,-165,-140,-105,-108,-111,-123,-143,-136,-102,-144,-160,-136,-136,-143,-136,-136,-112,-113,-114,-115,-116,-117,-136,-136,-136,-136,252,-104,-142,-99,-152,260,-88,262,-91,-21,-20,-106,-109,-120,-121,-124,-125,-101,-136,-136,-127,-164,-165,-136,-103,-143,-98,-136,-136,300,-136,-7,-95,-142,-87,-90,-6,-9,-140,-33,-142,-136,328,-136,-141,-97,-100,-8,-10,-142,-32,-142,-136,-141,-11,]),'COMMA':([37,38,39,40,41,42,43,44,45,46,47,48,49,83,85,86,88,89,96,97,100,101,104,105,106,107,108,110,112,127,129,130,138,140,145,146,147,153,155,157,166,172,173,176,178,179,181,182,185,186,187,193,194,195,196,197,198,199,200,201,202,203,204,205,206,212,213,214,240,241,242,243,244,245,252,253,254,256,261,263,270,271,274,275,280,281,285,291,292,294,295,304,307,309,310,311,312,316,317,324,325,326,330,333,341,345,351,355,358,],[-136,-136,-136,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-156,-107,-155,-110,-154,-118,-119,-122,-150,-126,-128,-131,-132,-134,-140,-140,-129,-130,-140,-94,-96,-164,-165,-140,-105,-108,-111,-123,-141,-141,-143,210,-102,-144,-160,217,220,-143,-136,-136,-112,-113,-114,-115,-116,-117,-136,-136,-136,-136,247,247,-142,-99,-152,-106,-109,-120,-121,-124,-125,-101,210,-136,-127,-164,-165,-140,-142,-143,-98,217,217,302,-141,-136,-95,-142,-140,247,-141,-33,-142,-136,302,-141,335,-97,-100,-10,-142,-32,-142,-136,-141,-11,]),'CBRACKET':([37,38,39,40,41,42,43,44,45,46,47,48,49,83,85,86,88,89,96,97,100,101,104,105,106,107,108,127,129,130,138,140,153,155,157,166,176,179,180,181,182,193,194,195,196,197,198,199,200,201,202,203,204,212,213,214,240,241,242,243,244,245,250,252,254,256,274,275,276,293,294,295,311,312,323,325,326,339,357,],[-136,-136,-136,-136,-136,-152,-146,-147,-133,-148,-135,-92,-93,-156,-107,-155,-110,-154,-118,-119,-122,-150,-126,-128,-131,-132,-134,-129,-130,-140,-94,-96,-105,-108,-111,-123,-143,-102,212,-144,-160,-136,-136,-112,-113,-114,-115,-116,-117,-136,-136,-136,-136,-142,-99,-152,-106,-109,-120,-121,-124,-125,271,-101,-136,-127,-143,-98,295,311,-95,-142,-142,-136,333,-97,-100,345,359,]),'THEN':([73,77,143,184,296,313,328,],[-166,148,183,-84,-166,327,338,]),'METHODS':([109,169,170,171,306,319,320,321,],[-136,-22,-23,-24,-136,332,-14,-15,]),'FROM':([138,140,147,149,181,187,212,213,254,274,275,294,295,311,312,325,326,],[-94,-96,-140,190,-144,-143,-142,-99,-136,-143,-98,-95,-142,-142,-136,-97,-100,]),'TO':([138,140,147,181,187,212,213,235,236,237,254,274,275,294,295,311,312,325,326,],[-94,-96,-140,-144,-143,-142,-99,-21,266,-20,-136,-143,-98,-95,-142,-142,-136,-97,-100,]),'BY':([138,140,147,181,187,212,213,235,237,254,274,275,283,294,295,311,312,325,326,],[-94,-96,-140,-144,-143,-142,-99,-21,-20,-136,-143,-98,299,-95,-142,-142,-136,-97,-100,]),'ELSE':([215,264,282,337,],[258,-167,-50,258,]),'ATTRIBUTES':([269,],[290,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'saw_program':([3,],[4,]),'bloque':([5,7,8,12,300,],[6,10,22,22,315,]),'dec':([5,8,12,109,189,224,306,],[7,25,25,170,234,234,320,]),'b1':([8,12,],[11,68,]),'estatuto':([8,12,],[12,12,]),'empty':([8,12,37,38,39,40,41,109,178,185,186,189,193,194,201,202,203,204,205,206,215,224,253,254,267,280,281,285,292,306,307,312,316,324,337,340,347,351,360,],[13,13,85,88,96,100,104,171,211,218,221,225,85,88,100,100,104,104,248,248,259,225,211,275,286,218,218,303,310,321,248,275,303,336,259,348,348,310,310,]),'asignacion':([8,12,70,177,189,224,],[14,14,132,132,226,226,]),'llamada':([8,12,69,70,72,74,75,137,139,154,156,158,159,160,161,162,163,164,165,167,168,177,189,210,217,224,255,273,],[15,15,129,133,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,133,227,129,129,227,129,129,]),'condicion':([8,12,189,224,],[16,16,228,228,]),'escritura':([8,12,70,177,189,224,],[17,17,134,134,229,229,]),'leer':([8,12,70,177,189,224,],[18,18,135,135,230,230,]),'ciclo_while':([8,12,189,224,],[19,19,231,231,]),'ciclo_for':([8,12,189,224,],[20,20,232,232,]),'ternaria':([8,12,70,177,189,224,],[21,21,136,136,233,233,]),'funcion':([8,12,340,347,],[23,23,347,347,]),'clase':([8,12,],[24,24,]),'variable':([8,12,69,70,72,74,75,76,78,137,139,154,156,158,159,160,161,162,163,164,165,167,168,177,189,190,210,217,220,224,255,266,273,299,],[26,26,127,26,127,127,127,146,149,127,127,127,127,127,127,127,127,127,127,127,127,127,127,26,26,235,127,127,263,26,127,235,127,235,]),'exp':([8,12,69,70,72,74,75,137,139,177,189,210,217,224,255,273,],[27,27,128,27,142,144,145,178,180,27,27,253,261,27,276,293,]),'texp':([8,12,69,70,72,74,75,137,139,154,177,189,210,217,224,255,273,],[37,37,37,37,37,37,37,37,37,193,37,37,37,37,37,37,37,]),'gexp':([8,12,69,70,72,74,75,137,139,154,156,177,189,210,217,224,255,273,],[38,38,38,38,38,38,38,38,38,38,194,38,38,38,38,38,38,38,]),'mexp':([8,12,69,70,72,74,75,137,139,154,156,158,159,160,161,162,163,177,189,210,217,224,255,273,],[39,39,39,39,39,39,39,39,39,39,39,195,196,197,198,199,200,39,39,39,39,39,39,39,]),'termino':([8,12,69,70,72,74,75,137,139,154,156,158,159,160,161,162,163,164,165,177,189,210,217,224,255,273,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,201,202,40,40,40,40,40,40,40,]),'factor':([8,12,69,70,72,74,75,137,139,154,156,158,159,160,161,162,163,164,165,167,168,177,189,210,217,224,255,273,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,203,204,41,41,41,41,41,41,41,]),'varcst':([8,12,69,70,72,74,75,137,139,154,156,158,159,160,161,162,163,164,165,167,168,177,189,210,217,224,255,273,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'boolean':([8,12,69,70,72,74,75,137,139,154,156,158,159,160,161,162,163,164,165,167,168,177,189,210,217,224,255,273,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'tipo':([9,],[50,]),'compuesto':([9,],[51,]),'simple':([9,35,267,302,],[53,80,287,287,]),'multiple':([9,267,302,],[54,288,288,]),'saw_id':([28,82,110,112,113,130,147,150,270,304,305,342,],[71,152,172,173,174,176,187,191,291,317,318,349,]),'saw_oparen':([29,],[72,]),'cond2':([30,33,279,],[73,77,296,]),'func1':([35,],[79,]),'exp1':([37,193,],[83,240,]),'texp1':([38,194,],[86,241,]),'gexp1':([39,],[89,]),'mexp1':([40,201,202,],[97,242,243,]),'term1':([41,203,204,],[101,244,245,]),'check_multdiv_operator':([42,214,],[105,256,]),'saw_end_value_int':([43,],[106,]),'saw_end_value_flt':([44,],[107,]),'saw_end_value_str':([46,],[108,]),'saw_type':([52,55,56,57,58,59,60,61,62,63,64,65,66,81,],[111,114,115,116,117,118,119,120,121,122,123,124,125,151,]),'scope_end':([67,],[126,]),'estatuto_redux':([70,177,],[131,208,]),'saw_called_var':([71,176,187,274,],[138,138,138,294,]),'variable2':([71,176,187,],[140,140,140,]),'saw_cond':([73,296,],[143,313,]),'check_or_operator':([83,],[153,]),'saw_or':([84,],[154,]),'check_and_operator':([86,],[155,]),'saw_and':([87,],[156,]),'check_relational_operator':([89,],[157,]),'saw_relational_operator':([90,91,92,93,94,95,],[158,159,160,161,162,163,]),'saw_plusminus_operator':([98,99,],[164,165,]),'check_plusminus_operator':([101,],[166,]),'saw_multdiv_operator':([102,103,],[167,168,]),'dec1':([109,],[169,]),'saw_asig':([128,],[175,]),'saw_print_exp':([145,261,],[185,280,]),'saw_read_exp':([146,263,],[186,281,]),'bloque_ciclo':([148,183,258,327,338,],[188,215,278,337,344,]),'saw_class':([152,],[192,]),'saw_variable':([172,173,291,309,317,355,361,],[205,206,307,324,330,358,362,]),'llamada1':([178,253,],[209,272,]),'saw_called_var_from_class':([181,],[213,]),'saw_cparen':([182,],[214,]),'e1':([185,280,281,],[216,297,298,]),'l1':([186,],[219,]),'bc1':([189,224,],[223,265,]),'estatuto_ciclo':([189,224,],[224,224,]),'ciclo_for1':([190,266,299,],[236,283,314,]),'saw_function':([191,],[238,]),'tipo1':([205,206,307,],[246,249,322,]),'saw_dimension':([212,271,295,311,333,345,359,],[254,292,312,325,341,351,360,]),'cond1':([215,337,],[257,343,]),'clase_bloque':([239,],[268,]),'variable1':([254,312,],[274,326,]),'bc_end':([264,],[282,]),'param':([267,],[284,]),'param2':([267,302,],[285,316,]),'param1':([285,316,],[301,329,]),'tipo3':([292,351,360,],[309,355,361,]),'clase_bloque1':([306,],[319,]),'tipo2':([324,],[334,]),'clase_metodos_bloque':([340,347,],[346,353,]),'class_scope_end':([346,],[352,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID saw_program SEMICOLON bloque','programa',5,'p_programa','plyler.py',165),
  ('programa -> PROGRAM ID saw_program SEMICOLON dec bloque','programa',6,'p_programa','plyler.py',166),
  ('funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque','funcion',9,'p_funcion','plyler.py',174),
  ('func1 -> simple','func1',1,'p_funcion1','plyler.py',181),
  ('func1 -> VOID saw_type','func1',2,'p_funcion1','plyler.py',182),
  ('param -> param2 param1','param',2,'p_param','plyler.py',189),
  ('param -> empty','param',1,'p_param','plyler.py',190),
  ('param1 -> COMMA param2 param1','param1',3,'p_param1','plyler.py',198),
  ('param1 -> empty','param1',1,'p_param1','plyler.py',199),
  ('param2 -> simple ID saw_id saw_variable','param2',4,'p_param2','plyler.py',207),
  ('param2 -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable','param2',9,'p_param2','plyler.py',208),
  ('clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON','clase',7,'p_clase','plyler.py',217),
  ('clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY','clase_bloque',9,'p_clase_bloque','plyler.py',223),
  ('clase_bloque1 -> dec','clase_bloque1',1,'p_clase_bloque1','plyler.py',229),
  ('clase_bloque1 -> empty','clase_bloque1',1,'p_clase_bloque1','plyler.py',230),
  ('clase_metodos_bloque -> funcion clase_metodos_bloque','clase_metodos_bloque',2,'p_clase_metodos_bloque','plyler.py',236),
  ('clase_metodos_bloque -> empty','clase_metodos_bloque',1,'p_clase_metodos_bloque','plyler.py',237),
  ('ciclo_while -> WHILE cond2 THEN bloque_ciclo SEMICOLON','ciclo_while',5,'p_ciclo_while','plyler.py',245),
  ('ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON','ciclo_for',13,'p_ciclo_for','plyler.py',253),
  ('ciclo_for1 -> CSTINT','ciclo_for1',1,'p_ciclo_for1','plyler.py',260),
  ('ciclo_for1 -> variable','ciclo_for1',1,'p_ciclo_for1','plyler.py',261),
  ('dec -> VAR tipo SEMICOLON dec1','dec',4,'p_dec','plyler.py',269),
  ('dec1 -> dec','dec1',1,'p_dec1','plyler.py',275),
  ('dec1 -> empty','dec1',1,'p_dec1','plyler.py',276),
  ('tipo -> compuesto ID saw_id saw_variable tipo1','tipo',5,'p_tipo','plyler.py',284),
  ('tipo -> simple ID saw_id saw_variable tipo1','tipo',5,'p_tipo','plyler.py',285),
  ('tipo -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable tipo2','tipo',10,'p_tipo','plyler.py',286),
  ('tipo1 -> COMMA ID saw_id saw_variable tipo1','tipo1',5,'p_tipo1','plyler.py',292),
  ('tipo1 -> empty','tipo1',1,'p_tipo1','plyler.py',293),
  ('tipo2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable','tipo2',9,'p_tipo2','plyler.py',299),
  ('tipo2 -> empty','tipo2',1,'p_tipo2','plyler.py',300),
  ('tipo3 -> OBRACKET CSTINT CBRACKET saw_dimension','tipo3',4,'p_tipo3','plyler.py',306),
  ('tipo3 -> empty','tipo3',1,'p_tipo3','plyler.py',307),
  ('simple -> INT saw_type','simple',2,'p_tipo_simple','plyler.py',313),
  ('simple -> FLOAT saw_type','simple',2,'p_tipo_simple','plyler.py',314),
  ('simple -> BOOL saw_type','simple',2,'p_tipo_simple','plyler.py',315),
  ('simple -> STRING saw_type','simple',2,'p_tipo_simple','plyler.py',316),
  ('simple -> CHAR saw_type','simple',2,'p_tipo_simple','plyler.py',317),
  ('multiple -> INTS saw_type','multiple',2,'p_tipo_multiple','plyler.py',323),
  ('multiple -> FLOATS saw_type','multiple',2,'p_tipo_multiple','plyler.py',324),
  ('multiple -> BOOLS saw_type','multiple',2,'p_tipo_multiple','plyler.py',325),
  ('multiple -> STRINGS saw_type','multiple',2,'p_tipo_multiple','plyler.py',326),
  ('multiple -> CHARS saw_type','multiple',2,'p_tipo_multiple','plyler.py',327),
  ('compuesto -> ID saw_type','compuesto',2,'p_tipo_compuesto','plyler.py',333),
  ('compuesto -> DATAFRAME saw_type','compuesto',2,'p_tipo_compuesto','plyler.py',334),
  ('compuesto -> FILE saw_type','compuesto',2,'p_tipo_compuesto','plyler.py',335),
  ('bloque -> OCURLY b1 CCURLY scope_end','bloque',4,'p_bloque','plyler.py',343),
  ('b1 -> estatuto b1','b1',2,'p_b1','plyler.py',349),
  ('b1 -> empty','b1',1,'p_b1','plyler.py',350),
  ('bloque_ciclo -> OCURLY bc1 CCURLY bc_end','bloque_ciclo',4,'p_bloque_ciclo','plyler.py',357),
  ('bc1 -> estatuto_ciclo bc1','bc1',2,'p_bc1','plyler.py',362),
  ('bc1 -> empty','bc1',1,'p_bc1','plyler.py',363),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','plyler.py',370),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','plyler.py',371),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','plyler.py',372),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','plyler.py',373),
  ('estatuto -> leer','estatuto',1,'p_estatuto','plyler.py',374),
  ('estatuto -> ciclo_while','estatuto',1,'p_estatuto','plyler.py',375),
  ('estatuto -> ciclo_for','estatuto',1,'p_estatuto','plyler.py',376),
  ('estatuto -> ternaria','estatuto',1,'p_estatuto','plyler.py',377),
  ('estatuto -> bloque','estatuto',1,'p_estatuto','plyler.py',378),
  ('estatuto -> funcion','estatuto',1,'p_estatuto','plyler.py',379),
  ('estatuto -> clase','estatuto',1,'p_estatuto','plyler.py',380),
  ('estatuto -> dec','estatuto',1,'p_estatuto','plyler.py',381),
  ('estatuto_ciclo -> asignacion','estatuto_ciclo',1,'p_estatuto_ciclo','plyler.py',387),
  ('estatuto_ciclo -> llamada','estatuto_ciclo',1,'p_estatuto_ciclo','plyler.py',388),
  ('estatuto_ciclo -> condicion','estatuto_ciclo',1,'p_estatuto_ciclo','plyler.py',389),
  ('estatuto_ciclo -> escritura','estatuto_ciclo',1,'p_estatuto_ciclo','plyler.py',390),
  ('estatuto_ciclo -> leer','estatuto_ciclo',1,'p_estatuto_ciclo','plyler.py',391),
  ('estatuto_ciclo -> ciclo_while','estatuto_ciclo',1,'p_estatuto_ciclo','plyler.py',392),
  ('estatuto_ciclo -> ciclo_for','estatuto_ciclo',1,'p_estatuto_ciclo','plyler.py',393),
  ('estatuto_ciclo -> ternaria','estatuto_ciclo',1,'p_estatuto_ciclo','plyler.py',394),
  ('estatuto_ciclo -> dec','estatuto_ciclo',1,'p_estatuto_ciclo','plyler.py',395),
  ('estatuto_redux -> asignacion','estatuto_redux',1,'p_estatuto_redux','plyler.py',401),
  ('estatuto_redux -> llamada','estatuto_redux',1,'p_estatuto_redux','plyler.py',402),
  ('estatuto_redux -> escritura','estatuto_redux',1,'p_estatuto_redux','plyler.py',403),
  ('estatuto_redux -> leer','estatuto_redux',1,'p_estatuto_redux','plyler.py',404),
  ('estatuto_redux -> ternaria','estatuto_redux',1,'p_estatuto_redux','plyler.py',405),
  ('asignacion -> variable AS exp saw_asig','asignacion',4,'p_asignacion','plyler.py',413),
  ('condicion -> IF cond2 saw_cond THEN bloque_ciclo cond1 SEMICOLON','condicion',7,'p_condicion','plyler.py',421),
  ('cond1 -> ELSE bloque_ciclo','cond1',2,'p_cond1','plyler.py',427),
  ('cond1 -> ELSE IF cond2 saw_cond THEN bloque_ciclo cond1','cond1',7,'p_cond1','plyler.py',428),
  ('cond1 -> empty','cond1',1,'p_cond1','plyler.py',429),
  ('cond2 -> OPAREN exp CPAREN','cond2',3,'p_cond2','plyler.py',435),
  ('ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON','ternaria',6,'p_ternaria','plyler.py',443),
  ('escritura -> PRINT OPAREN exp saw_print_exp e1 CPAREN','escritura',6,'p_escritura','plyler.py',451),
  ('e1 -> COMMA exp saw_print_exp e1','e1',4,'p_e1','plyler.py',457),
  ('e1 -> empty','e1',1,'p_e1','plyler.py',458),
  ('leer -> READ OPAREN variable saw_read_exp l1 CPAREN','leer',6,'p_leer','plyler.py',466),
  ('l1 -> COMMA variable saw_read_exp e1','l1',4,'p_l1','plyler.py',472),
  ('l1 -> empty','l1',1,'p_l1','plyler.py',473),
  ('boolean -> TRUE','boolean',1,'p_boolean','plyler.py',480),
  ('boolean -> FALSE','boolean',1,'p_boolean','plyler.py',481),
  ('variable -> ID saw_id saw_called_var','variable',3,'p_variable','plyler.py',489),
  ('variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var','variable',8,'p_variable','plyler.py',490),
  ('variable -> ID saw_id variable2','variable',3,'p_variable','plyler.py',491),
  ('variable1 -> OBRACKET exp CBRACKET saw_dimension','variable1',4,'p_variable1','plyler.py',497),
  ('variable1 -> empty','variable1',1,'p_variable1','plyler.py',498),
  ('variable2 -> PERIOD ID saw_called_var_from_class','variable2',3,'p_variable2','plyler.py',504),
  ('variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1','variable2',8,'p_variable2','plyler.py',505),
  ('llamada -> ID saw_id OPAREN exp llamada1 CPAREN','llamada',6,'p_llamada_funcion','plyler.py',513),
  ('llamada -> ID saw_id OPAREN CPAREN','llamada',4,'p_llamada_funcion','plyler.py',514),
  ('llamada1 -> COMMA exp llamada1','llamada1',3,'p_llamada_funcion1','plyler.py',520),
  ('llamada1 -> empty','llamada1',1,'p_llamada_funcion1','plyler.py',521),
  ('exp -> texp exp1 check_or_operator','exp',3,'p_exp','plyler.py',529),
  ('exp1 -> OR saw_or texp exp1','exp1',4,'p_exp1','plyler.py',546),
  ('exp1 -> empty','exp1',1,'p_exp1','plyler.py',547),
  ('texp -> gexp texp1 check_and_operator','texp',3,'p_texp','plyler.py',553),
  ('texp1 -> AND saw_and gexp texp1','texp1',4,'p_texp1','plyler.py',559),
  ('texp1 -> empty','texp1',1,'p_texp1','plyler.py',560),
  ('gexp -> mexp gexp1 check_relational_operator','gexp',3,'p_gexp','plyler.py',566),
  ('gexp1 -> LT saw_relational_operator mexp','gexp1',3,'p_gexp1','plyler.py',572),
  ('gexp1 -> GT saw_relational_operator mexp','gexp1',3,'p_gexp1','plyler.py',573),
  ('gexp1 -> GTE saw_relational_operator mexp','gexp1',3,'p_gexp1','plyler.py',574),
  ('gexp1 -> LTE saw_relational_operator mexp','gexp1',3,'p_gexp1','plyler.py',575),
  ('gexp1 -> EQ saw_relational_operator mexp','gexp1',3,'p_gexp1','plyler.py',576),
  ('gexp1 -> NE saw_relational_operator mexp','gexp1',3,'p_gexp1','plyler.py',577),
  ('gexp1 -> empty','gexp1',1,'p_gexp1','plyler.py',578),
  ('mexp -> termino mexp1','mexp',2,'p_mexp','plyler.py',584),
  ('mexp1 -> PLUS saw_plusminus_operator termino mexp1','mexp1',4,'p_mexp1','plyler.py',589),
  ('mexp1 -> MINUS saw_plusminus_operator termino mexp1','mexp1',4,'p_mexp1','plyler.py',590),
  ('mexp1 -> empty','mexp1',1,'p_mexp1','plyler.py',591),
  ('termino -> factor term1 check_plusminus_operator','termino',3,'p_termino','plyler.py',599),
  ('term1 -> MULT saw_multdiv_operator factor term1','term1',4,'p_term1','plyler.py',605),
  ('term1 -> DIV saw_multdiv_operator factor term1','term1',4,'p_term1','plyler.py',606),
  ('term1 -> empty','term1',1,'p_term1','plyler.py',607),
  ('factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator','factor',6,'p_factor','plyler.py',615),
  ('factor -> varcst check_multdiv_operator','factor',2,'p_factor','plyler.py',616),
  ('factor -> variable','factor',1,'p_factor','plyler.py',617),
  ('factor -> llamada','factor',1,'p_factor','plyler.py',618),
  ('varcst -> CSTINT saw_end_value_int','varcst',2,'p_varcst','plyler.py',626),
  ('varcst -> CSTFLT saw_end_value_flt','varcst',2,'p_varcst','plyler.py',627),
  ('varcst -> CSTCHAR','varcst',1,'p_varcst','plyler.py',628),
  ('varcst -> CSTSTRING saw_end_value_str','varcst',2,'p_varcst','plyler.py',629),
  ('varcst -> boolean','varcst',1,'p_varcst','plyler.py',630),
  ('empty -> <empty>','empty',0,'p_empty','plyler.py',638),
  ('saw_program -> <empty>','saw_program',0,'p_saw_program','plyler.py',650),
  ('saw_class -> <empty>','saw_class',0,'p_saw_class','plyler.py',653),
  ('saw_type -> <empty>','saw_type',0,'p_saw_type','plyler.py',658),
  ('saw_id -> <empty>','saw_id',0,'p_saw_id','plyler.py',662),
  ('saw_variable -> <empty>','saw_variable',0,'p_saw_variable','plyler.py',666),
  ('saw_dimension -> <empty>','saw_dimension',0,'p_saw_dimension','plyler.py',671),
  ('saw_called_var -> <empty>','saw_called_var',0,'p_saw_called_var','plyler.py',676),
  ('saw_called_var_from_class -> <empty>','saw_called_var_from_class',0,'p_saw_called_var_from_class','plyler.py',682),
  ('saw_asig -> <empty>','saw_asig',0,'p_saw_asig','plyler.py',689),
  ('saw_end_value_int -> <empty>','saw_end_value_int',0,'p_saw_end_value_int','plyler.py',702),
  ('saw_end_value_flt -> <empty>','saw_end_value_flt',0,'p_saw_end_value_flt','plyler.py',706),
  ('saw_end_value_str -> <empty>','saw_end_value_str',0,'p_saw_end_value_str','plyler.py',718),
  ('saw_plusminus_operator -> <empty>','saw_plusminus_operator',0,'p_saw_plusminus_operator','plyler.py',722),
  ('check_plusminus_operator -> <empty>','check_plusminus_operator',0,'p_check_plusminus_operator','plyler.py',726),
  ('saw_multdiv_operator -> <empty>','saw_multdiv_operator',0,'p_saw_multdiv_operator','plyler.py',731),
  ('check_multdiv_operator -> <empty>','check_multdiv_operator',0,'p_check_multdiv_operator','plyler.py',735),
  ('saw_relational_operator -> <empty>','saw_relational_operator',0,'p_saw_relational_operator','plyler.py',740),
  ('check_relational_operator -> <empty>','check_relational_operator',0,'p_check_relational_operator','plyler.py',744),
  ('check_and_operator -> <empty>','check_and_operator',0,'p_check_and_operator','plyler.py',750),
  ('check_or_operator -> <empty>','check_or_operator',0,'p_check_or_operator','plyler.py',772),
  ('saw_and -> <empty>','saw_and',0,'p_saw_and','plyler.py',794),
  ('saw_or -> <empty>','saw_or',0,'p_saw_or','plyler.py',800),
  ('saw_oparen -> <empty>','saw_oparen',0,'p_saw_oparen','plyler.py',805),
  ('saw_cparen -> <empty>','saw_cparen',0,'p_saw_cparen','plyler.py',809),
  ('saw_function -> <empty>','saw_function',0,'p_saw_function','plyler.py',814),
  ('scope_end -> <empty>','scope_end',0,'p_scope_end','plyler.py',819),
  ('class_scope_end -> <empty>','class_scope_end',0,'p_class_scope_end','plyler.py',823),
  ('saw_print_exp -> <empty>','saw_print_exp',0,'p_saw_print_exp','plyler.py',827),
  ('saw_read_exp -> <empty>','saw_read_exp',0,'p_saw_read_exp','plyler.py',831),
  ('saw_cond -> <empty>','saw_cond',0,'p_saw_cond','plyler.py',835),
  ('bc_end -> <empty>','bc_end',0,'p_bc_end','plyler.py',839),
]
