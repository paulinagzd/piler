
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ATTRIBUTES BOOL BOOLS BY CBRACKET CCURLY CLASS COLON COMMA CPAREN CSTFLT CSTINT CSTSTRING DATAFRAME DIV ELSE EQ FALSE FILE FLOAT FLOATS FOR FROM FUNCTION GT ID IF INT INTS LT METHODS MINUS MULT NE OBRACKET OCURLY OPAREN OR PERIOD PLUS PRINT PROGRAM QUESTION READ SEMICOLON STRING STRINGS THEN TO TRUE VAR VOID WHILE\n  programa : PROGRAM ID SEMICOLON bloque\n           | PROGRAM ID SEMICOLON dec bloque\n  \n  funcion : FUNCTION func1 ID OPAREN param CPAREN bloque\n  \n  func1 : simple\n        | VOID\n  \n  param : simple ID variable2 param1\n        | multiple ID variable1 variable1 variable2 param1\n        | empty\n  \n  param1 : COMMA param\n         | empty\n  \n  param2 : simple\n         | multiple\n  \n    clase : CLASS ID COLON clase_bloque SEMICOLON\n   \n  clase_bloque :  OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque CCURLY\n   \n  clase_bloque1 : dec\n                | empty\n   \n  clase_metodos_bloque : funcion clase_metodos_bloque\n                       | empty\n  \n  ciclo_while : WHILE cond2 THEN bloque SEMICOLON\n  \n  ciclo_for : FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN bloque SEMICOLON\n  \n  ciclo_for1 : CSTINT\n             | variable\n  \n  dec : VAR tipo SEMICOLON dec1\n  \n  dec1 : dec\n       | empty\n  \n  tipo : compuesto ID tipo1\n       | simple ID tipo1\n       | multiple ID tipo3 tipo3 tipo2\n  \n  tipo1 : COMMA ID tipo1\n        | empty\n  \n  tipo2 : COMMA ID tipo3 tipo3\n        | empty\n  \n  tipo3 : OBRACKET CSTINT CBRACKET\n        | empty\n  \n  simple : INT\n         | FLOAT\n         | BOOL\n         | STRING\n  \n  multiple : INTS\n           | FLOATS\n           | BOOLS\n           | STRINGS\n  \n  compuesto : ID\n            | DATAFRAME\n            | FILE\n  \n  bloque : OCURLY b1 CCURLY\n  \n  b1 : estatuto b1\n     | empty\n  \n  estatuto : asignacion\n           | llamada\n           | condicion\n           | escritura\n           | leer\n           | ciclo_while\n           | ciclo_for\n           | ternaria\n           | bloque\n           | funcion\n           | clase\n           | dec\n  \n  asignacion : ID AS exp SEMICOLON\n  \n  condicion : IF cond2 THEN bloque cond1 SEMICOLON\n  \n  cond1 : ELSE bloque\n        | ELSE IF cond2 THEN bloque\n        | empty\n  \n    cond2 : OPAREN exp CPAREN\n  \n  ternaria : exp QUESTION estatuto COLON estatuto SEMICOLON\n  \n  escritura : PRINT OPAREN exp e1 CPAREN SEMICOLON\n  \n  e1 : COMMA exp e1\n     | empty\n  \n  leer  : READ OPAREN exp e1 CPAREN SEMICOLON\n  \n  boolean : TRUE\n          | FALSE\n  \n  variable : ID variable1 variable1 variable2\n  \n  variable1 : OBRACKET exp CBRACKET\n            | empty\n  \n  variable2 : PERIOD ID variable1 variable1 variable2\n            | empty \n  \n  llamada : ID OPAREN exp llamada1 CPAREN SEMICOLON\n          | ID OPAREN CPAREN SEMICOLON\n  \n  llamada1 : COMMA exp llamada1\n           | empty\n  \n  exp : texp exp1\n  \n  exp1 : OR texp exp1\n       | empty\n  \n  texp : gexp texp1\n  \n  texp1 : AND gexp texp1\n        | empty\n  \n  gexp : mexp gexp1\n  \n  gexp1 : LT mexp\n        | GT mexp\n        | EQ mexp\n        | NE mexp\n        | empty\n  \n  mexp : termino mexp1\n  \n  mexp1 : PLUS termino mexp1\n        | MINUS termino mexp1\n        | empty\n  \n  termino : factor term1\n  \n  term1 : MULT factor term1\n        | DIV factor term1\n        | empty\n  \n  factor : OPAREN exp CPAREN\n         | varcst\n         | variable\n         | llamada\n  \n  varcst : CSTINT\n         | CSTFLT\n         | CSTSTRING\n         | boolean\n  \n  empty : \n  '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,5,9,63,],[0,-1,-2,-46,]),'ID':([2,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,27,35,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,68,70,75,76,77,79,80,81,82,85,88,91,92,93,94,97,98,101,102,104,134,135,136,138,144,146,148,150,153,157,161,184,189,190,192,196,199,202,203,206,208,209,218,227,247,],[3,25,50,25,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,73,83,105,-43,106,107,-44,-45,-35,-36,-37,-38,-39,-40,-41,-42,-46,73,73,73,25,73,73,73,121,122,-4,-5,73,73,73,73,73,73,73,73,73,73,-111,-23,-24,-25,171,-61,73,-80,176,25,73,121,-19,211,212,-13,214,-79,-67,-62,-68,-71,121,-3,121,-20,]),'SEMICOLON':([3,13,14,15,16,17,18,19,20,21,22,23,24,33,36,37,38,39,40,41,42,43,44,45,46,47,48,63,67,69,72,73,84,86,87,89,90,95,96,99,100,103,104,105,106,107,108,110,111,114,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,143,144,148,149,151,152,154,160,163,165,166,167,168,169,170,171,172,174,176,177,178,180,181,183,184,192,194,195,197,198,199,201,202,203,204,206,208,214,215,218,224,225,233,234,244,245,247,],[4,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-105,-111,-111,-111,-111,-111,-104,-107,-108,-109,-110,-72,-73,104,-46,-111,-76,-106,-111,-83,-85,-86,-88,-89,-94,-95,-98,-99,-102,-111,-111,-111,-111,144,148,-111,-103,-111,-111,-90,-91,-92,-93,-111,-111,-111,-111,-23,-24,-25,-26,-30,-27,-111,-34,-61,-80,-74,-78,-75,-111,184,192,-84,-87,-96,-97,-100,-101,-111,-111,199,-111,202,203,-65,206,208,-19,-13,-29,-28,-32,-33,-79,-111,-67,-62,-63,-68,-71,-111,-111,-3,-111,-77,-31,-64,247,-14,-20,]),'OCURLY':([4,6,7,11,13,14,15,16,17,18,19,20,21,22,23,24,63,70,104,115,119,123,134,135,136,144,148,153,179,184,192,199,202,203,206,208,210,218,226,239,247,],[7,7,7,7,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-46,7,-111,7,7,164,-23,-24,-25,-61,-80,7,7,-19,-13,-79,-67,-62,-68,-71,7,-3,7,7,-20,]),'VAR':([4,7,11,13,14,15,16,17,18,19,20,21,22,23,24,63,70,104,134,135,136,144,148,153,184,192,199,202,203,206,208,213,218,247,],[8,8,8,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-46,8,8,-23,-24,-25,-61,-80,8,-19,-13,-79,-67,-62,-68,-71,8,-3,-20,]),'CCURLY':([7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,63,64,104,134,135,136,144,148,184,192,199,202,203,206,208,218,238,241,242,243,246,247,],[-111,63,-111,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-46,-47,-111,-23,-24,-25,-61,-80,-19,-13,-79,-67,-62,-68,-71,-3,-111,245,-111,-18,-17,-20,]),'IF':([7,11,13,14,15,16,17,18,19,20,21,22,23,24,63,70,104,134,135,136,144,148,153,179,184,192,199,202,203,206,208,218,247,],[28,28,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-46,28,-111,-23,-24,-25,-61,-80,28,205,-19,-13,-79,-67,-62,-68,-71,-3,-20,]),'PRINT':([7,11,13,14,15,16,17,18,19,20,21,22,23,24,63,70,104,134,135,136,144,148,153,184,192,199,202,203,206,208,218,247,],[29,29,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-46,29,-111,-23,-24,-25,-61,-80,29,-19,-13,-79,-67,-62,-68,-71,-3,-20,]),'READ':([7,11,13,14,15,16,17,18,19,20,21,22,23,24,63,70,104,134,135,136,144,148,153,184,192,199,202,203,206,208,218,247,],[30,30,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-46,30,-111,-23,-24,-25,-61,-80,30,-19,-13,-79,-67,-62,-68,-71,-3,-20,]),'WHILE':([7,11,13,14,15,16,17,18,19,20,21,22,23,24,63,70,104,134,135,136,144,148,153,184,192,199,202,203,206,208,218,247,],[31,31,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-46,31,-111,-23,-24,-25,-61,-80,31,-19,-13,-79,-67,-62,-68,-71,-3,-20,]),'FOR':([7,11,13,14,15,16,17,18,19,20,21,22,23,24,63,70,104,134,135,136,144,148,153,184,192,199,202,203,206,208,218,247,],[32,32,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-46,32,-111,-23,-24,-25,-61,-80,32,-19,-13,-79,-67,-62,-68,-71,-3,-20,]),'FUNCTION':([7,11,13,14,15,16,17,18,19,20,21,22,23,24,63,70,104,134,135,136,144,148,153,184,192,199,202,203,206,208,218,238,242,247,],[34,34,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-46,34,-111,-23,-24,-25,-61,-80,34,-19,-13,-79,-67,-62,-68,-71,-3,34,34,-20,]),'CLASS':([7,11,13,14,15,16,17,18,19,20,21,22,23,24,63,70,104,134,135,136,144,148,153,184,192,199,202,203,206,208,218,247,],[35,35,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-46,35,-111,-23,-24,-25,-61,-80,35,-19,-13,-79,-67,-62,-68,-71,-3,-20,]),'OPAREN':([7,11,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,63,65,66,68,70,73,75,76,77,85,88,91,92,93,94,97,98,101,102,104,122,134,135,136,144,146,148,153,157,184,192,199,202,203,205,206,208,218,247,],[27,27,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,66,27,75,76,77,75,79,-46,27,27,27,27,66,27,27,27,27,27,27,27,27,27,27,27,27,27,-111,162,-23,-24,-25,-61,27,-80,27,27,-19,-13,-79,-67,-62,75,-68,-71,-3,-20,]),'CSTINT':([7,11,13,14,15,16,17,18,19,20,21,22,23,24,27,63,65,66,68,70,75,76,77,85,88,91,92,93,94,97,98,101,102,104,134,135,136,142,144,146,148,153,157,161,184,192,199,202,203,206,208,209,218,227,247,],[42,42,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,42,-46,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-111,-23,-24,-25,173,-61,42,-80,42,42,187,-19,-13,-79,-67,-62,-68,-71,187,-3,187,-20,]),'CSTFLT':([7,11,13,14,15,16,17,18,19,20,21,22,23,24,27,63,65,66,68,70,75,76,77,85,88,91,92,93,94,97,98,101,102,104,134,135,136,144,146,148,153,157,184,192,199,202,203,206,208,218,247,],[43,43,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,43,-46,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-111,-23,-24,-25,-61,43,-80,43,43,-19,-13,-79,-67,-62,-68,-71,-3,-20,]),'CSTSTRING':([7,11,13,14,15,16,17,18,19,20,21,22,23,24,27,63,65,66,68,70,75,76,77,85,88,91,92,93,94,97,98,101,102,104,134,135,136,144,146,148,153,157,184,192,199,202,203,206,208,218,247,],[44,44,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,44,-46,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-111,-23,-24,-25,-61,44,-80,44,44,-19,-13,-79,-67,-62,-68,-71,-3,-20,]),'TRUE':([7,11,13,14,15,16,17,18,19,20,21,22,23,24,27,63,65,66,68,70,75,76,77,85,88,91,92,93,94,97,98,101,102,104,134,135,136,144,146,148,153,157,184,192,199,202,203,206,208,218,247,],[46,46,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,46,-46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-111,-23,-24,-25,-61,46,-80,46,46,-19,-13,-79,-67,-62,-68,-71,-3,-20,]),'FALSE':([7,11,13,14,15,16,17,18,19,20,21,22,23,24,27,63,65,66,68,70,75,76,77,85,88,91,92,93,94,97,98,101,102,104,134,135,136,144,146,148,153,157,184,192,199,202,203,206,208,218,247,],[47,47,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,47,-46,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-111,-23,-24,-25,-61,47,-80,47,47,-19,-13,-79,-67,-62,-68,-71,-3,-20,]),'DATAFRAME':([8,],[53,]),'FILE':([8,],[54,]),'INT':([8,34,162,229,],[55,55,55,55,]),'FLOAT':([8,34,162,229,],[56,56,56,56,]),'BOOL':([8,34,162,229,],[57,57,57,57,]),'STRING':([8,34,162,229,],[58,58,58,58,]),'INTS':([8,162,229,],[59,59,59,]),'FLOATS':([8,162,229,],[60,60,60,]),'BOOLS':([8,162,229,],[61,61,61,]),'STRINGS':([8,162,229,],[62,62,62,]),'COLON':([13,14,15,16,17,18,19,20,21,22,23,24,63,83,104,113,134,135,136,144,148,184,192,193,199,202,203,206,208,218,232,247,],[-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-46,123,-111,153,-23,-24,-25,-61,-80,-19,-13,213,-79,-67,-62,-68,-71,-3,238,-20,]),'MULT':([14,25,33,40,41,42,43,44,45,46,47,67,69,72,73,111,114,132,133,148,149,151,152,176,199,201,215,225,],[-106,-111,-105,101,-104,-107,-108,-109,-110,-72,-73,-111,-76,-106,-111,-111,-103,101,101,-80,-74,-78,-75,-111,-79,-111,-111,-77,]),'DIV':([14,25,33,40,41,42,43,44,45,46,47,67,69,72,73,111,114,132,133,148,149,151,152,176,199,201,215,225,],[-106,-111,-105,102,-104,-107,-108,-109,-110,-72,-73,-111,-76,-106,-111,-111,-103,102,102,-80,-74,-78,-75,-111,-79,-111,-111,-77,]),'PLUS':([14,25,33,39,40,41,42,43,44,45,46,47,67,69,72,73,100,103,111,114,130,131,132,133,148,149,151,152,169,170,176,199,201,215,225,],[-106,-111,-105,97,-111,-104,-107,-108,-109,-110,-72,-73,-111,-76,-106,-111,-99,-102,-111,-103,97,97,-111,-111,-80,-74,-78,-75,-100,-101,-111,-79,-111,-111,-77,]),'MINUS':([14,25,33,39,40,41,42,43,44,45,46,47,67,69,72,73,100,103,111,114,130,131,132,133,148,149,151,152,169,170,176,199,201,215,225,],[-106,-111,-105,98,-111,-104,-107,-108,-109,-110,-72,-73,-111,-76,-106,-111,-99,-102,-111,-103,98,98,-111,-111,-80,-74,-78,-75,-100,-101,-111,-79,-111,-111,-77,]),'LT':([14,25,33,38,39,40,41,42,43,44,45,46,47,67,69,72,73,96,99,100,103,111,114,130,131,132,133,148,149,151,152,167,168,169,170,176,199,201,215,225,],[-106,-111,-105,91,-111,-111,-104,-107,-108,-109,-110,-72,-73,-111,-76,-106,-111,-95,-98,-99,-102,-111,-103,-111,-111,-111,-111,-80,-74,-78,-75,-96,-97,-100,-101,-111,-79,-111,-111,-77,]),'GT':([14,25,33,38,39,40,41,42,43,44,45,46,47,67,69,72,73,96,99,100,103,111,114,130,131,132,133,148,149,151,152,167,168,169,170,176,199,201,215,225,],[-106,-111,-105,92,-111,-111,-104,-107,-108,-109,-110,-72,-73,-111,-76,-106,-111,-95,-98,-99,-102,-111,-103,-111,-111,-111,-111,-80,-74,-78,-75,-96,-97,-100,-101,-111,-79,-111,-111,-77,]),'EQ':([14,25,33,38,39,40,41,42,43,44,45,46,47,67,69,72,73,96,99,100,103,111,114,130,131,132,133,148,149,151,152,167,168,169,170,176,199,201,215,225,],[-106,-111,-105,93,-111,-111,-104,-107,-108,-109,-110,-72,-73,-111,-76,-106,-111,-95,-98,-99,-102,-111,-103,-111,-111,-111,-111,-80,-74,-78,-75,-96,-97,-100,-101,-111,-79,-111,-111,-77,]),'NE':([14,25,33,38,39,40,41,42,43,44,45,46,47,67,69,72,73,96,99,100,103,111,114,130,131,132,133,148,149,151,152,167,168,169,170,176,199,201,215,225,],[-106,-111,-105,94,-111,-111,-104,-107,-108,-109,-110,-72,-73,-111,-76,-106,-111,-95,-98,-99,-102,-111,-103,-111,-111,-111,-111,-80,-74,-78,-75,-96,-97,-100,-101,-111,-79,-111,-111,-77,]),'AND':([14,25,33,37,38,39,40,41,42,43,44,45,46,47,67,69,72,73,90,95,96,99,100,103,111,114,125,126,127,128,129,130,131,132,133,148,149,151,152,167,168,169,170,176,199,201,215,225,],[-106,-111,-105,88,-111,-111,-111,-104,-107,-108,-109,-110,-72,-73,-111,-76,-106,-111,-89,-94,-95,-98,-99,-102,-111,-103,88,-90,-91,-92,-93,-111,-111,-111,-111,-80,-74,-78,-75,-96,-97,-100,-101,-111,-79,-111,-111,-77,]),'OR':([14,25,33,36,37,38,39,40,41,42,43,44,45,46,47,67,69,72,73,87,89,90,95,96,99,100,103,111,114,124,125,126,127,128,129,130,131,132,133,148,149,151,152,166,167,168,169,170,176,199,201,215,225,],[-106,-111,-105,85,-111,-111,-111,-111,-104,-107,-108,-109,-110,-72,-73,-111,-76,-106,-111,-86,-88,-89,-94,-95,-98,-99,-102,-111,-103,85,-111,-90,-91,-92,-93,-111,-111,-111,-111,-80,-74,-78,-75,-87,-96,-97,-100,-101,-111,-79,-111,-111,-77,]),'QUESTION':([14,25,26,33,36,37,38,39,40,41,42,43,44,45,46,47,67,69,72,73,84,86,87,89,90,95,96,99,100,103,111,114,124,125,126,127,128,129,130,131,132,133,148,149,151,152,165,166,167,168,169,170,176,199,201,215,225,],[-106,-111,70,-105,-111,-111,-111,-111,-111,-104,-107,-108,-109,-110,-72,-73,-111,-76,-106,-111,-83,-85,-86,-88,-89,-94,-95,-98,-99,-102,-111,-103,-111,-111,-90,-91,-92,-93,-111,-111,-111,-111,-80,-74,-78,-75,-84,-87,-96,-97,-100,-101,-111,-79,-111,-111,-77,]),'AS':([25,],[65,]),'OBRACKET':([25,67,69,73,107,121,141,143,152,176,198,201,212,214,220,224,],[68,68,-76,68,142,68,142,-34,-75,68,-33,68,68,142,68,142,]),'PERIOD':([25,67,69,73,111,121,152,176,201,211,212,215,220,231,],[-111,-111,-76,-111,150,-111,-75,-111,-111,150,-111,150,-111,150,]),'CPAREN':([33,36,37,38,39,40,41,42,43,44,45,46,47,66,67,69,71,72,73,84,86,87,89,90,95,96,99,100,103,109,111,114,116,117,118,121,124,125,126,127,128,129,130,131,132,133,145,147,148,149,151,152,156,158,159,162,165,166,167,168,169,170,175,176,182,185,187,188,191,199,200,201,207,211,212,215,219,220,225,228,229,230,231,235,236,237,240,],[-105,-111,-111,-111,-111,-111,-104,-107,-108,-109,-110,-72,-73,110,-111,-76,114,-106,-111,-83,-85,-86,-88,-89,-94,-95,-98,-99,-102,-111,-111,-103,155,-111,-111,-111,-111,-111,-90,-91,-92,-93,-111,-111,-111,-111,174,-82,-80,-74,-78,-75,181,-70,183,-111,-84,-87,-96,-97,-100,-101,-111,-111,-111,-22,-21,210,-8,-79,-81,-111,-69,-111,-111,-111,-111,-111,-77,-6,-111,-10,-111,239,-9,-111,-7,]),'COMMA':([33,36,37,38,39,40,41,42,43,44,45,46,47,67,69,72,73,84,86,87,89,90,95,96,99,100,103,105,106,107,109,111,114,117,118,124,125,126,127,128,129,130,131,132,133,141,143,148,149,151,152,165,166,167,168,169,170,171,172,175,176,182,198,199,201,211,212,215,219,220,225,231,237,],[-105,-111,-111,-111,-111,-111,-104,-107,-108,-109,-110,-72,-73,-111,-76,-106,-111,-83,-85,-86,-88,-89,-94,-95,-98,-99,-102,138,138,-111,146,-111,-103,157,157,-111,-111,-90,-91,-92,-93,-111,-111,-111,-111,-111,-34,-80,-74,-78,-75,-84,-87,-96,-97,-100,-101,138,196,146,-111,157,-33,-79,-111,-111,-111,-111,229,-111,-77,-111,229,]),'CBRACKET':([33,36,37,38,39,40,41,42,43,44,45,46,47,67,69,72,73,84,86,87,89,90,95,96,99,100,103,111,112,114,124,125,126,127,128,129,130,131,132,133,148,149,151,152,165,166,167,168,169,170,173,176,199,201,215,225,],[-105,-111,-111,-111,-111,-111,-104,-107,-108,-109,-110,-72,-73,-111,-76,-106,-111,-83,-85,-86,-88,-89,-94,-95,-98,-99,-102,-111,152,-103,-111,-111,-90,-91,-92,-93,-111,-111,-111,-111,-80,-74,-78,-75,-84,-87,-96,-97,-100,-101,198,-111,-79,-111,-111,-77,]),'VOID':([34,],[82,]),'ELSE':([63,154,],[-46,179,]),'FROM':([67,69,111,120,121,149,151,152,176,201,215,225,],[-111,-76,-111,161,-111,-74,-78,-75,-111,-111,-111,-77,]),'TO':([67,69,111,121,149,151,152,176,185,186,187,201,215,225,],[-111,-76,-111,-111,-74,-78,-75,-111,-22,209,-21,-111,-111,-77,]),'BY':([67,69,111,121,149,151,152,176,185,187,201,215,217,225,],[-111,-76,-111,-111,-74,-78,-75,-111,-22,-21,-111,-111,227,-77,]),'THEN':([74,78,155,216,],[115,119,-66,226,]),'METHODS':([104,134,135,136,213,221,222,223,],[-111,-23,-24,-25,-111,232,-15,-16,]),'ATTRIBUTES':([164,],[193,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'bloque':([4,6,7,11,70,115,119,153,179,210,226,239,],[5,9,21,21,21,154,160,21,204,218,234,244,]),'dec':([4,7,11,70,104,153,213,],[6,24,24,24,135,24,222,]),'b1':([7,11,],[10,64,]),'estatuto':([7,11,70,153,],[11,11,113,177,]),'empty':([7,11,25,36,37,38,39,40,67,73,104,105,106,107,109,111,117,118,121,124,125,130,131,132,133,141,154,162,171,172,175,176,182,201,211,212,213,214,215,219,220,224,229,231,237,238,242,],[12,12,69,86,89,95,99,103,69,69,136,139,139,143,147,151,158,158,69,86,89,99,99,103,103,143,180,191,139,197,147,69,158,69,151,69,223,143,151,230,69,143,191,151,230,243,243,]),'asignacion':([7,11,70,153,],[13,13,13,13,]),'llamada':([7,11,27,65,66,68,70,75,76,77,85,88,91,92,93,94,97,98,101,102,146,153,157,],[14,14,72,72,72,72,14,72,72,72,72,72,72,72,72,72,72,72,72,72,72,14,72,]),'condicion':([7,11,70,153,],[15,15,15,15,]),'escritura':([7,11,70,153,],[16,16,16,16,]),'leer':([7,11,70,153,],[17,17,17,17,]),'ciclo_while':([7,11,70,153,],[18,18,18,18,]),'ciclo_for':([7,11,70,153,],[19,19,19,19,]),'ternaria':([7,11,70,153,],[20,20,20,20,]),'funcion':([7,11,70,153,238,242,],[22,22,22,22,242,242,]),'clase':([7,11,70,153,],[23,23,23,23,]),'exp':([7,11,27,65,66,68,70,75,76,77,146,153,157,],[26,26,71,108,109,112,26,116,117,118,175,26,182,]),'variable':([7,11,27,65,66,68,70,75,76,77,79,85,88,91,92,93,94,97,98,101,102,146,153,157,161,209,227,],[33,33,33,33,33,33,33,33,33,33,120,33,33,33,33,33,33,33,33,33,33,33,33,33,185,185,185,]),'texp':([7,11,27,65,66,68,70,75,76,77,85,146,153,157,],[36,36,36,36,36,36,36,36,36,36,124,36,36,36,]),'gexp':([7,11,27,65,66,68,70,75,76,77,85,88,146,153,157,],[37,37,37,37,37,37,37,37,37,37,37,125,37,37,37,]),'mexp':([7,11,27,65,66,68,70,75,76,77,85,88,91,92,93,94,146,153,157,],[38,38,38,38,38,38,38,38,38,38,38,38,126,127,128,129,38,38,38,]),'termino':([7,11,27,65,66,68,70,75,76,77,85,88,91,92,93,94,97,98,146,153,157,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,130,131,39,39,39,]),'factor':([7,11,27,65,66,68,70,75,76,77,85,88,91,92,93,94,97,98,101,102,146,153,157,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,132,133,40,40,40,]),'varcst':([7,11,27,65,66,68,70,75,76,77,85,88,91,92,93,94,97,98,101,102,146,153,157,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'boolean':([7,11,27,65,66,68,70,75,76,77,85,88,91,92,93,94,97,98,101,102,146,153,157,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'tipo':([8,],[48,]),'compuesto':([8,],[49,]),'simple':([8,34,162,229,],[51,81,189,189,]),'multiple':([8,162,229,],[52,190,190,]),'variable1':([25,67,73,121,176,201,212,220,],[67,111,67,67,201,215,220,231,]),'cond2':([28,31,205,],[74,78,216,]),'func1':([34,],[80,]),'exp1':([36,124,],[84,165,]),'texp1':([37,125,],[87,166,]),'gexp1':([38,],[90,]),'mexp1':([39,130,131,],[96,167,168,]),'term1':([40,132,133,],[100,169,170,]),'dec1':([104,],[134,]),'tipo1':([105,106,171,],[137,140,194,]),'tipo3':([107,141,214,224,],[141,172,224,233,]),'llamada1':([109,175,],[145,200,]),'variable2':([111,211,215,231,],[149,219,225,237,]),'e1':([117,118,182,],[156,159,207,]),'clase_bloque':([123,],[163,]),'cond1':([154,],[178,]),'ciclo_for1':([161,209,227,],[186,217,235,]),'param':([162,229,],[188,236,]),'tipo2':([172,],[195,]),'clase_bloque1':([213,],[221,]),'param1':([219,237,],[228,240,]),'clase_metodos_bloque':([238,242,],[241,246,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID SEMICOLON bloque','programa',4,'p_programa','plyler.py',137),
  ('programa -> PROGRAM ID SEMICOLON dec bloque','programa',5,'p_programa','plyler.py',138),
  ('funcion -> FUNCTION func1 ID OPAREN param CPAREN bloque','funcion',7,'p_funcion','plyler.py',146),
  ('func1 -> simple','func1',1,'p_funcion1','plyler.py',151),
  ('func1 -> VOID','func1',1,'p_funcion1','plyler.py',152),
  ('param -> simple ID variable2 param1','param',4,'p_param','plyler.py',157),
  ('param -> multiple ID variable1 variable1 variable2 param1','param',6,'p_param','plyler.py',158),
  ('param -> empty','param',1,'p_param','plyler.py',159),
  ('param1 -> COMMA param','param1',2,'p_param1','plyler.py',164),
  ('param1 -> empty','param1',1,'p_param1','plyler.py',165),
  ('param2 -> simple','param2',1,'p_param2','plyler.py',170),
  ('param2 -> multiple','param2',1,'p_param2','plyler.py',171),
  ('clase -> CLASS ID COLON clase_bloque SEMICOLON','clase',5,'p_clase','plyler.py',178),
  ('clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque CCURLY','clase_bloque',8,'p_clase_bloque','plyler.py',183),
  ('clase_bloque1 -> dec','clase_bloque1',1,'p_clase_bloque1','plyler.py',188),
  ('clase_bloque1 -> empty','clase_bloque1',1,'p_clase_bloque1','plyler.py',189),
  ('clase_metodos_bloque -> funcion clase_metodos_bloque','clase_metodos_bloque',2,'p_clase_metodos_bloque','plyler.py',194),
  ('clase_metodos_bloque -> empty','clase_metodos_bloque',1,'p_clase_metodos_bloque','plyler.py',195),
  ('ciclo_while -> WHILE cond2 THEN bloque SEMICOLON','ciclo_while',5,'p_ciclo_while','plyler.py',202),
  ('ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN bloque SEMICOLON','ciclo_for',12,'p_ciclo_for','plyler.py',209),
  ('ciclo_for1 -> CSTINT','ciclo_for1',1,'p_ciclo_for1','plyler.py',214),
  ('ciclo_for1 -> variable','ciclo_for1',1,'p_ciclo_for1','plyler.py',215),
  ('dec -> VAR tipo SEMICOLON dec1','dec',4,'p_dec_var','plyler.py',222),
  ('dec1 -> dec','dec1',1,'p_dec_var1','plyler.py',227),
  ('dec1 -> empty','dec1',1,'p_dec_var1','plyler.py',228),
  ('tipo -> compuesto ID tipo1','tipo',3,'p_tipo','plyler.py',235),
  ('tipo -> simple ID tipo1','tipo',3,'p_tipo','plyler.py',236),
  ('tipo -> multiple ID tipo3 tipo3 tipo2','tipo',5,'p_tipo','plyler.py',237),
  ('tipo1 -> COMMA ID tipo1','tipo1',3,'p_tipo1','plyler.py',242),
  ('tipo1 -> empty','tipo1',1,'p_tipo1','plyler.py',243),
  ('tipo2 -> COMMA ID tipo3 tipo3','tipo2',4,'p_tipo2','plyler.py',248),
  ('tipo2 -> empty','tipo2',1,'p_tipo2','plyler.py',249),
  ('tipo3 -> OBRACKET CSTINT CBRACKET','tipo3',3,'p_tipo3','plyler.py',254),
  ('tipo3 -> empty','tipo3',1,'p_tipo3','plyler.py',255),
  ('simple -> INT','simple',1,'p_tipo_simple','plyler.py',260),
  ('simple -> FLOAT','simple',1,'p_tipo_simple','plyler.py',261),
  ('simple -> BOOL','simple',1,'p_tipo_simple','plyler.py',262),
  ('simple -> STRING','simple',1,'p_tipo_simple','plyler.py',263),
  ('multiple -> INTS','multiple',1,'p_tipo_multiple','plyler.py',269),
  ('multiple -> FLOATS','multiple',1,'p_tipo_multiple','plyler.py',270),
  ('multiple -> BOOLS','multiple',1,'p_tipo_multiple','plyler.py',271),
  ('multiple -> STRINGS','multiple',1,'p_tipo_multiple','plyler.py',272),
  ('compuesto -> ID','compuesto',1,'p_tipo_compuesto','plyler.py',278),
  ('compuesto -> DATAFRAME','compuesto',1,'p_tipo_compuesto','plyler.py',279),
  ('compuesto -> FILE','compuesto',1,'p_tipo_compuesto','plyler.py',280),
  ('bloque -> OCURLY b1 CCURLY','bloque',3,'p_bloque','plyler.py',329),
  ('b1 -> estatuto b1','b1',2,'p_b1','plyler.py',334),
  ('b1 -> empty','b1',1,'p_b1','plyler.py',335),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','plyler.py',342),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','plyler.py',343),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','plyler.py',344),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','plyler.py',345),
  ('estatuto -> leer','estatuto',1,'p_estatuto','plyler.py',346),
  ('estatuto -> ciclo_while','estatuto',1,'p_estatuto','plyler.py',347),
  ('estatuto -> ciclo_for','estatuto',1,'p_estatuto','plyler.py',348),
  ('estatuto -> ternaria','estatuto',1,'p_estatuto','plyler.py',349),
  ('estatuto -> bloque','estatuto',1,'p_estatuto','plyler.py',350),
  ('estatuto -> funcion','estatuto',1,'p_estatuto','plyler.py',351),
  ('estatuto -> clase','estatuto',1,'p_estatuto','plyler.py',352),
  ('estatuto -> dec','estatuto',1,'p_estatuto','plyler.py',353),
  ('asignacion -> ID AS exp SEMICOLON','asignacion',4,'p_asignacion','plyler.py',360),
  ('condicion -> IF cond2 THEN bloque cond1 SEMICOLON','condicion',6,'p_condicion','plyler.py',374),
  ('cond1 -> ELSE bloque','cond1',2,'p_cond1','plyler.py',379),
  ('cond1 -> ELSE IF cond2 THEN bloque','cond1',5,'p_cond1','plyler.py',380),
  ('cond1 -> empty','cond1',1,'p_cond1','plyler.py',381),
  ('cond2 -> OPAREN exp CPAREN','cond2',3,'p_cond2','plyler.py',386),
  ('ternaria -> exp QUESTION estatuto COLON estatuto SEMICOLON','ternaria',6,'p_ternaria','plyler.py',393),
  ('escritura -> PRINT OPAREN exp e1 CPAREN SEMICOLON','escritura',6,'p_escritura','plyler.py',400),
  ('e1 -> COMMA exp e1','e1',3,'p_e1','plyler.py',405),
  ('e1 -> empty','e1',1,'p_e1','plyler.py',406),
  ('leer -> READ OPAREN exp e1 CPAREN SEMICOLON','leer',6,'p_leer','plyler.py',419),
  ('boolean -> TRUE','boolean',1,'p_boolean','plyler.py',426),
  ('boolean -> FALSE','boolean',1,'p_boolean','plyler.py',427),
  ('variable -> ID variable1 variable1 variable2','variable',4,'p_variable','plyler.py',434),
  ('variable1 -> OBRACKET exp CBRACKET','variable1',3,'p_variable1','plyler.py',439),
  ('variable1 -> empty','variable1',1,'p_variable1','plyler.py',440),
  ('variable2 -> PERIOD ID variable1 variable1 variable2','variable2',5,'p_variable2','plyler.py',445),
  ('variable2 -> empty','variable2',1,'p_variable2','plyler.py',446),
  ('llamada -> ID OPAREN exp llamada1 CPAREN SEMICOLON','llamada',6,'p_llamada_funcion','plyler.py',453),
  ('llamada -> ID OPAREN CPAREN SEMICOLON','llamada',4,'p_llamada_funcion','plyler.py',454),
  ('llamada1 -> COMMA exp llamada1','llamada1',3,'p_llamada_funcion1','plyler.py',459),
  ('llamada1 -> empty','llamada1',1,'p_llamada_funcion1','plyler.py',460),
  ('exp -> texp exp1','exp',2,'p_exp','plyler.py',478),
  ('exp1 -> OR texp exp1','exp1',3,'p_exp1','plyler.py',483),
  ('exp1 -> empty','exp1',1,'p_exp1','plyler.py',484),
  ('texp -> gexp texp1','texp',2,'p_texp','plyler.py',489),
  ('texp1 -> AND gexp texp1','texp1',3,'p_texp1','plyler.py',494),
  ('texp1 -> empty','texp1',1,'p_texp1','plyler.py',495),
  ('gexp -> mexp gexp1','gexp',2,'p_gexp','plyler.py',500),
  ('gexp1 -> LT mexp','gexp1',2,'p_gexp1','plyler.py',505),
  ('gexp1 -> GT mexp','gexp1',2,'p_gexp1','plyler.py',506),
  ('gexp1 -> EQ mexp','gexp1',2,'p_gexp1','plyler.py',507),
  ('gexp1 -> NE mexp','gexp1',2,'p_gexp1','plyler.py',508),
  ('gexp1 -> empty','gexp1',1,'p_gexp1','plyler.py',509),
  ('mexp -> termino mexp1','mexp',2,'p_mexp','plyler.py',514),
  ('mexp1 -> PLUS termino mexp1','mexp1',3,'p_mexp1','plyler.py',519),
  ('mexp1 -> MINUS termino mexp1','mexp1',3,'p_mexp1','plyler.py',520),
  ('mexp1 -> empty','mexp1',1,'p_mexp1','plyler.py',521),
  ('termino -> factor term1','termino',2,'p_termino','plyler.py',541),
  ('term1 -> MULT factor term1','term1',3,'p_term1','plyler.py',546),
  ('term1 -> DIV factor term1','term1',3,'p_term1','plyler.py',547),
  ('term1 -> empty','term1',1,'p_term1','plyler.py',548),
  ('factor -> OPAREN exp CPAREN','factor',3,'p_factor','plyler.py',555),
  ('factor -> varcst','factor',1,'p_factor','plyler.py',556),
  ('factor -> variable','factor',1,'p_factor','plyler.py',557),
  ('factor -> llamada','factor',1,'p_factor','plyler.py',558),
  ('varcst -> CSTINT','varcst',1,'p_varcst','plyler.py',565),
  ('varcst -> CSTFLT','varcst',1,'p_varcst','plyler.py',566),
  ('varcst -> CSTSTRING','varcst',1,'p_varcst','plyler.py',567),
  ('varcst -> boolean','varcst',1,'p_varcst','plyler.py',568),
  ('empty -> <empty>','empty',0,'p_empty','plyler.py',575),
]
