
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ATTRIBUTES BOOL BOOLS BY CBRACKET CCURLY CHAR CHARS CLASS COLON COMMA COMMENT CPAREN CSTCHAR CSTFLT CSTINT CSTSTRING DATAFRAME DIV ELSE EQ FALSE FILE FLOAT FLOATS FOR FROM FUNCTION GT GTE ID IF INT INTS LT LTE METHODS MINUS MULT NE OBRACKET OCURLY OPAREN OR PERIOD PLUS PRINT PROGRAM QUESTION READ RETURN SEMICOLON STRING STRINGS THEN TO TRUE VAR VOID WHILE\n  programa : PROGRAM ID saw_program SEMICOLON bloque\n           | PROGRAM ID saw_program SEMICOLON dec bloque\n  \n  funcion : FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque\n  \n  func1 : simple\n        | VOID saw_type\n  \n  param : param2 param1\n        | empty\n  \n  param1 : COMMA param2 param1\n         | empty\n  \n  param2 : simple ID saw_id saw_variable\n         | multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable\n  \n    clase : CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON\n   \n  clase_bloque :  OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY\n   \n  clase_bloque1 : dec\n                | empty\n   \n  clase_metodos_bloque : funcion clase_metodos_bloque\n                       | empty\n  \n  ciclo_while : WHILE cond2 THEN bloque SEMICOLON\n  \n  ciclo_for : FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON\n  \n  ciclo_for1 : CSTINT\n             | variable\n  \n  dec : VAR tipo SEMICOLON dec1\n  \n  dec1 : dec\n       | empty\n  \n  tipo : compuesto ID saw_id saw_variable tipo1\n       | simple ID saw_id saw_variable tipo1\n       | multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable tipo2\n  \n  tipo1 : COMMA ID saw_id saw_variable tipo1\n        | empty\n  \n  tipo2 : COMMA ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable\n        | empty\n  \n  tipo3 : OBRACKET CSTINT CBRACKET saw_dimension\n        | empty\n  \n  simple : INT saw_type\n         | FLOAT saw_type\n         | BOOL saw_type\n         | STRING saw_type\n         | CHAR saw_type\n  \n  multiple : INTS saw_type\n           | FLOATS saw_type\n           | BOOLS saw_type\n           | STRINGS saw_type\n           | CHARS saw_type\n  \n  compuesto : ID saw_type\n            | DATAFRAME saw_type\n            | FILE saw_type\n  \n  bloque : OCURLY b1 CCURLY scope_end\n  \n  b1 : estatuto b1\n     | empty\n  \n  estatuto : asignacion\n           | llamada\n           | condicion\n           | escritura\n           | leer\n           | ciclo_while\n           | ciclo_for\n           | ternaria\n           | bloque\n           | funcion\n           | clase\n           | dec\n  \n  estatuto_redux : asignacion\n                 | llamada\n                 | escritura\n                 | leer\n                 | ternaria\n  \n  asignacion : variable AS exp saw_asig\n  \n  condicion : IF cond2 THEN bloque cond1 SEMICOLON\n  \n  cond1 : ELSE bloque\n        | ELSE IF cond2 THEN bloque cond1\n        | empty\n  \n    cond2 : OPAREN exp CPAREN\n  \n  ternaria : exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON\n  \n  escritura : PRINT OPAREN exp e1 CPAREN\n  \n  e1 : COMMA exp e1\n     | empty\n  \n  leer  : READ OPAREN exp e1 CPAREN\n  \n  boolean : TRUE\n          | FALSE\n  \n  variable : ID saw_id saw_called_var\n           | ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var\n           | ID saw_id variable2\n  \n  variable1 : OBRACKET exp CBRACKET saw_dimension\n            | empty\n  \n  variable2 : PERIOD ID saw_called_var_from_class\n            | PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1\n  \n  llamada : ID saw_id OPAREN exp llamada1 CPAREN\n          | ID saw_id OPAREN CPAREN\n  \n  llamada1 : COMMA exp llamada1\n           | empty\n  \n  exp : texp exp1\n  \n  exp1 : OR texp exp1\n       | empty\n  \n  texp : gexp texp1\n  \n  texp1 : AND gexp texp1\n        | empty\n  \n  gexp : mexp gexp1 check_relational_operator\n  \n  gexp1 : LT saw_relational_operator mexp\n        | GT saw_relational_operator mexp\n        | GTE saw_relational_operator mexp\n        | LTE saw_relational_operator mexp\n        | EQ saw_relational_operator mexp\n        | NE saw_relational_operator mexp\n        | empty\n  \n  mexp : termino mexp1\n  \n  mexp1 : PLUS saw_plusminus_operator termino mexp1\n        | MINUS saw_plusminus_operator termino mexp1\n        | empty\n  \n  termino : factor term1 check_plusminus_operator\n  \n  term1 : MULT saw_multdiv_operator factor term1\n        | DIV saw_multdiv_operator factor term1\n        | empty\n  \n  factor : OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator\n         | varcst check_multdiv_operator\n         | variable\n         | llamada\n  \n  varcst : CSTINT saw_end_value_int\n         | CSTFLT saw_end_value_flt\n         | CSTCHAR \n         | CSTSTRING \n         | boolean \n  \n  empty : \n  \n  saw_program : \n  \n  saw_class : \n  \n  saw_type : \n  \n  saw_id : \n  \n  saw_variable : \n  \n  saw_dimension : \n  \n  saw_called_var : \n  \n  saw_called_var_from_class : \n  \n  saw_asig : \n  \n  saw_end_value_int : \n  \n  saw_end_value_flt : \n  \n  saw_plusminus_operator  : \n  \n  check_plusminus_operator  : \n  \n  saw_multdiv_operator  : \n  \n  check_multdiv_operator  : \n  \n  saw_relational_operator : \n  \n  check_relational_operator : \n  \n  saw_oparen : \n  \n  saw_cparen : \n  \n  do_not_save : \n  \n  saw_function : \n  \n  scope_end : \n  \n  class_scope_end : \n  '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,6,10,67,125,],[0,-1,-2,-144,-47,]),'ID':([2,8,9,12,14,15,16,17,18,19,20,21,22,23,24,25,29,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,72,74,75,76,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,136,137,138,139,140,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,172,173,174,176,178,179,183,187,191,192,193,194,195,196,197,198,199,200,201,202,208,210,211,212,216,218,219,225,226,227,228,230,234,235,237,238,239,240,244,251,252,253,260,261,262,267,268,270,282,283,286,296,297,306,319,],[3,28,52,28,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-140,82,-122,-122,-122,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,109,-125,111,112,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-144,129,28,129,129,129,129,148,149,-4,-125,-91,129,-93,-94,129,-96,-139,-138,-138,-138,-138,-138,-138,-104,-105,-134,-134,-108,-135,-136,-136,-112,-114,-117,-118,-122,-44,-45,-46,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-47,-115,-131,-116,-126,129,-80,129,-82,178,-5,-122,-122,-97,129,129,129,129,129,129,129,129,-109,129,129,-22,-23,-24,-67,-129,28,-88,-130,-141,129,148,-92,-95,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,129,-128,-85,-137,-74,-77,-18,-106,-107,-110,-111,248,-73,-87,-122,129,-113,-68,148,129,-129,-84,275,276,-12,-81,-128,148,-128,-122,-3,-83,-86,312,-19,]),'SEMICOLON':([3,4,37,38,39,40,41,42,43,44,45,46,47,48,49,50,67,83,85,86,88,89,96,97,100,101,104,105,106,107,109,111,125,126,127,128,129,131,132,133,134,135,137,139,152,153,154,163,169,170,172,173,176,178,179,180,186,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,210,211,212,213,215,216,218,225,226,227,228,229,231,232,234,235,237,239,241,246,248,249,252,253,264,265,267,268,278,280,281,282,283,284,293,295,296,297,298,304,305,307,311,313,325,328,329,330,331,],[-123,5,-122,-122,-122,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,108,-144,-91,-93,-94,-96,-139,-104,-105,-108,-135,-112,-114,-117,-118,-126,-126,-47,-115,-131,-116,-126,-62,-63,-64,-65,-66,-80,-82,-122,-122,-97,-109,-127,-127,-67,-129,-88,-130,-141,-122,219,-92,-95,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-122,-122,234,-128,-85,-137,240,-71,-74,-77,-106,-107,-110,-111,-25,-29,-26,-73,-87,-122,-113,-69,262,-126,-128,-129,-84,-127,-122,-81,-128,-122,-127,-33,-128,-122,-122,-28,-122,-83,-86,-70,-128,-27,-31,-32,319,-13,-128,-122,-127,-30,]),'OCURLY':([5,7,8,12,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,83,85,86,88,89,96,97,100,101,104,105,106,107,108,125,126,127,128,129,137,139,142,146,152,153,154,163,166,167,168,172,173,176,178,179,191,192,193,194,195,196,197,198,199,200,201,202,210,211,212,214,216,218,219,224,225,226,227,228,234,235,237,239,240,252,253,262,267,268,269,271,282,283,286,296,297,308,319,],[8,8,8,8,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-122,-122,-122,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-144,-91,-93,-94,-96,-139,-104,-105,-108,-135,-112,-114,-117,-118,-122,-47,-115,-131,-116,-126,-80,-82,8,8,-122,-122,-97,-109,-22,-23,-24,-67,-129,-88,-130,-141,-92,-95,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,-137,8,-74,-77,-18,247,-106,-107,-110,-111,-73,-87,-122,-113,-68,-129,-84,-12,-81,-128,8,8,-128,-122,-3,-83,-86,8,-19,]),'VAR':([5,8,12,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,83,85,86,88,89,96,97,100,101,104,105,106,107,108,125,126,127,128,129,137,139,152,153,154,163,166,167,168,172,173,176,178,179,191,192,193,194,195,196,197,198,199,200,201,202,210,211,212,216,218,219,225,226,227,228,234,235,237,239,240,252,253,262,267,268,277,282,283,286,296,297,319,],[9,9,9,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-122,-122,-122,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-144,-91,-93,-94,-96,-139,-104,-105,-108,-135,-112,-114,-117,-118,9,-47,-115,-131,-116,-126,-80,-82,-122,-122,-97,-109,-22,-23,-24,-67,-129,-88,-130,-141,-92,-95,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,-137,-74,-77,-18,-106,-107,-110,-111,-73,-87,-122,-113,-68,-129,-84,-12,-81,-128,9,-128,-122,-3,-83,-86,-19,]),'CCURLY':([8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,68,83,85,86,88,89,96,97,100,101,104,105,106,107,108,125,126,127,128,129,137,139,152,153,154,163,166,167,168,172,173,176,178,179,191,192,193,194,195,196,197,198,199,200,201,202,210,211,212,216,218,219,225,226,227,228,234,235,237,239,240,252,253,262,267,268,282,283,286,296,297,310,315,316,317,319,321,322,],[-122,67,-122,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-122,-122,-122,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-144,-48,-91,-93,-94,-96,-139,-104,-105,-108,-135,-112,-114,-117,-118,-122,-47,-115,-131,-116,-126,-80,-82,-122,-122,-97,-109,-22,-23,-24,-67,-129,-88,-130,-141,-92,-95,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,-137,-74,-77,-18,-106,-107,-110,-111,-73,-87,-122,-113,-68,-129,-84,-12,-81,-128,-128,-122,-3,-83,-86,-122,-145,-122,-17,-19,325,-16,]),'IF':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,83,85,86,88,89,96,97,100,101,104,105,106,107,108,125,126,127,128,129,137,139,152,153,154,163,166,167,168,172,173,176,178,179,191,192,193,194,195,196,197,198,199,200,201,202,210,211,212,214,216,218,219,225,226,227,228,234,235,237,239,240,252,253,262,267,268,282,283,286,296,297,319,],[30,30,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-122,-122,-122,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-144,-91,-93,-94,-96,-139,-104,-105,-108,-135,-112,-114,-117,-118,-122,-47,-115,-131,-116,-126,-80,-82,-122,-122,-97,-109,-22,-23,-24,-67,-129,-88,-130,-141,-92,-95,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,-137,242,-74,-77,-18,-106,-107,-110,-111,-73,-87,-122,-113,-68,-129,-84,-12,-81,-128,-128,-122,-3,-83,-86,-19,]),'PRINT':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,70,83,85,86,88,89,96,97,100,101,104,105,106,107,108,125,126,127,128,129,137,139,152,153,154,163,166,167,168,172,173,174,176,178,179,191,192,193,194,195,196,197,198,199,200,201,202,210,211,212,216,218,219,225,226,227,228,234,235,237,239,240,252,253,262,267,268,282,283,286,296,297,319,],[31,31,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-122,-122,-122,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-144,31,-91,-93,-94,-96,-139,-104,-105,-108,-135,-112,-114,-117,-118,-122,-47,-115,-131,-116,-126,-80,-82,-122,-122,-97,-109,-22,-23,-24,-67,-129,31,-88,-130,-141,-92,-95,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,-137,-74,-77,-18,-106,-107,-110,-111,-73,-87,-122,-113,-68,-129,-84,-12,-81,-128,-128,-122,-3,-83,-86,-19,]),'READ':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,70,83,85,86,88,89,96,97,100,101,104,105,106,107,108,125,126,127,128,129,137,139,152,153,154,163,166,167,168,172,173,174,176,178,179,191,192,193,194,195,196,197,198,199,200,201,202,210,211,212,216,218,219,225,226,227,228,234,235,237,239,240,252,253,262,267,268,282,283,286,296,297,319,],[32,32,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-122,-122,-122,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-144,32,-91,-93,-94,-96,-139,-104,-105,-108,-135,-112,-114,-117,-118,-122,-47,-115,-131,-116,-126,-80,-82,-122,-122,-97,-109,-22,-23,-24,-67,-129,32,-88,-130,-141,-92,-95,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,-137,-74,-77,-18,-106,-107,-110,-111,-73,-87,-122,-113,-68,-129,-84,-12,-81,-128,-128,-122,-3,-83,-86,-19,]),'WHILE':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,83,85,86,88,89,96,97,100,101,104,105,106,107,108,125,126,127,128,129,137,139,152,153,154,163,166,167,168,172,173,176,178,179,191,192,193,194,195,196,197,198,199,200,201,202,210,211,212,216,218,219,225,226,227,228,234,235,237,239,240,252,253,262,267,268,282,283,286,296,297,319,],[33,33,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-122,-122,-122,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-144,-91,-93,-94,-96,-139,-104,-105,-108,-135,-112,-114,-117,-118,-122,-47,-115,-131,-116,-126,-80,-82,-122,-122,-97,-109,-22,-23,-24,-67,-129,-88,-130,-141,-92,-95,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,-137,-74,-77,-18,-106,-107,-110,-111,-73,-87,-122,-113,-68,-129,-84,-12,-81,-128,-128,-122,-3,-83,-86,-19,]),'FOR':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,83,85,86,88,89,96,97,100,101,104,105,106,107,108,125,126,127,128,129,137,139,152,153,154,163,166,167,168,172,173,176,178,179,191,192,193,194,195,196,197,198,199,200,201,202,210,211,212,216,218,219,225,226,227,228,234,235,237,239,240,252,253,262,267,268,282,283,286,296,297,319,],[34,34,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-122,-122,-122,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-144,-91,-93,-94,-96,-139,-104,-105,-108,-135,-112,-114,-117,-118,-122,-47,-115,-131,-116,-126,-80,-82,-122,-122,-97,-109,-22,-23,-24,-67,-129,-88,-130,-141,-92,-95,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,-137,-74,-77,-18,-106,-107,-110,-111,-73,-87,-122,-113,-68,-129,-84,-12,-81,-128,-128,-122,-3,-83,-86,-19,]),'FUNCTION':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,83,85,86,88,89,96,97,100,101,104,105,106,107,108,125,126,127,128,129,137,139,152,153,154,163,166,167,168,172,173,176,178,179,191,192,193,194,195,196,197,198,199,200,201,202,210,211,212,216,218,219,225,226,227,228,234,235,237,239,240,252,253,262,267,268,282,283,286,296,297,310,316,319,],[35,35,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-122,-122,-122,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-144,-91,-93,-94,-96,-139,-104,-105,-108,-135,-112,-114,-117,-118,-122,-47,-115,-131,-116,-126,-80,-82,-122,-122,-97,-109,-22,-23,-24,-67,-129,-88,-130,-141,-92,-95,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,-137,-74,-77,-18,-106,-107,-110,-111,-73,-87,-122,-113,-68,-129,-84,-12,-81,-128,-128,-122,-3,-83,-86,35,35,-19,]),'CLASS':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,83,85,86,88,89,96,97,100,101,104,105,106,107,108,125,126,127,128,129,137,139,152,153,154,163,166,167,168,172,173,176,178,179,191,192,193,194,195,196,197,198,199,200,201,202,210,211,212,216,218,219,225,226,227,228,234,235,237,239,240,252,253,262,267,268,282,283,286,296,297,319,],[36,36,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-122,-122,-122,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-144,-91,-93,-94,-96,-139,-104,-105,-108,-135,-112,-114,-117,-118,-122,-47,-115,-131,-116,-126,-80,-82,-122,-122,-97,-109,-22,-23,-24,-67,-129,-88,-130,-141,-92,-95,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,-137,-74,-77,-18,-106,-107,-110,-111,-73,-87,-122,-113,-68,-129,-84,-12,-81,-128,-128,-122,-3,-83,-86,-19,]),'OPAREN':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,37,38,39,40,41,42,43,44,45,46,47,48,49,67,69,70,71,72,74,75,76,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,125,126,127,128,129,136,137,138,139,149,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,172,173,174,176,178,179,183,189,191,192,193,194,195,196,197,198,199,200,201,202,208,210,211,212,216,218,219,223,225,226,227,228,234,235,237,238,239,240,242,251,252,253,262,267,268,282,283,286,296,297,319,],[29,29,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-126,-140,74,75,76,74,78,-122,-122,-122,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-144,29,29,136,29,29,29,29,-91,29,-93,-94,29,-96,-139,-138,-138,-138,-138,-138,-138,-104,-105,-134,-134,-108,-135,-136,-136,-112,-114,-117,-118,-122,-47,-115,-131,-116,-126,29,-80,29,-82,-126,-122,-122,-97,29,29,29,29,29,29,29,29,-109,29,29,-22,-23,-24,-67,136,29,-88,-130,-141,29,-143,-92,-95,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,29,-128,-85,-137,-74,-77,-18,245,-106,-107,-110,-111,-73,-87,-122,29,-113,-68,74,29,-129,-84,-12,-81,-128,-128,-122,-3,-83,-86,-19,]),'CSTINT':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,29,37,38,39,40,41,42,43,44,45,46,47,48,49,67,69,70,72,74,75,76,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,125,126,127,128,129,136,137,138,139,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,172,173,174,176,178,179,183,187,191,192,193,194,195,196,197,198,199,200,201,202,205,208,210,211,212,216,218,219,225,226,227,228,234,235,237,238,239,240,244,251,252,253,262,267,268,270,279,282,283,286,296,297,302,319,323,],[43,43,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-140,-122,-122,-122,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-144,43,43,43,43,43,43,-91,43,-93,-94,43,-96,-139,-138,-138,-138,-138,-138,-138,-104,-105,-134,-134,-108,-135,-136,-136,-112,-114,-117,-118,-122,-47,-115,-131,-116,-126,43,-80,43,-82,-122,-122,-97,43,43,43,43,43,43,43,43,-109,43,43,-22,-23,-24,-67,-129,43,-88,-130,-141,43,222,-92,-95,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,233,43,-128,-85,-137,-74,-77,-18,-106,-107,-110,-111,-73,-87,-122,43,-113,-68,222,43,-129,-84,-12,-81,-128,222,294,-128,-122,-3,-83,-86,309,-19,326,]),'CSTFLT':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,29,37,38,39,40,41,42,43,44,45,46,47,48,49,67,69,70,72,74,75,76,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,125,126,127,128,129,136,137,138,139,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,172,173,174,176,178,179,183,191,192,193,194,195,196,197,198,199,200,201,202,208,210,211,212,216,218,219,225,226,227,228,234,235,237,238,239,240,251,252,253,262,267,268,282,283,286,296,297,319,],[44,44,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-140,-122,-122,-122,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-144,44,44,44,44,44,44,-91,44,-93,-94,44,-96,-139,-138,-138,-138,-138,-138,-138,-104,-105,-134,-134,-108,-135,-136,-136,-112,-114,-117,-118,-122,-47,-115,-131,-116,-126,44,-80,44,-82,-122,-122,-97,44,44,44,44,44,44,44,44,-109,44,44,-22,-23,-24,-67,-129,44,-88,-130,-141,44,-92,-95,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,44,-128,-85,-137,-74,-77,-18,-106,-107,-110,-111,-73,-87,-122,44,-113,-68,44,-129,-84,-12,-81,-128,-128,-122,-3,-83,-86,-19,]),'CSTCHAR':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,29,37,38,39,40,41,42,43,44,45,46,47,48,49,67,69,70,72,74,75,76,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,125,126,127,128,129,136,137,138,139,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,172,173,174,176,178,179,183,191,192,193,194,195,196,197,198,199,200,201,202,208,210,211,212,216,218,219,225,226,227,228,234,235,237,238,239,240,251,252,253,262,267,268,282,283,286,296,297,319,],[45,45,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-140,-122,-122,-122,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-144,45,45,45,45,45,45,-91,45,-93,-94,45,-96,-139,-138,-138,-138,-138,-138,-138,-104,-105,-134,-134,-108,-135,-136,-136,-112,-114,-117,-118,-122,-47,-115,-131,-116,-126,45,-80,45,-82,-122,-122,-97,45,45,45,45,45,45,45,45,-109,45,45,-22,-23,-24,-67,-129,45,-88,-130,-141,45,-92,-95,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,45,-128,-85,-137,-74,-77,-18,-106,-107,-110,-111,-73,-87,-122,45,-113,-68,45,-129,-84,-12,-81,-128,-128,-122,-3,-83,-86,-19,]),'CSTSTRING':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,29,37,38,39,40,41,42,43,44,45,46,47,48,49,67,69,70,72,74,75,76,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,125,126,127,128,129,136,137,138,139,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,172,173,174,176,178,179,183,191,192,193,194,195,196,197,198,199,200,201,202,208,210,211,212,216,218,219,225,226,227,228,234,235,237,238,239,240,251,252,253,262,267,268,282,283,286,296,297,319,],[46,46,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-140,-122,-122,-122,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-144,46,46,46,46,46,46,-91,46,-93,-94,46,-96,-139,-138,-138,-138,-138,-138,-138,-104,-105,-134,-134,-108,-135,-136,-136,-112,-114,-117,-118,-122,-47,-115,-131,-116,-126,46,-80,46,-82,-122,-122,-97,46,46,46,46,46,46,46,46,-109,46,46,-22,-23,-24,-67,-129,46,-88,-130,-141,46,-92,-95,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,46,-128,-85,-137,-74,-77,-18,-106,-107,-110,-111,-73,-87,-122,46,-113,-68,46,-129,-84,-12,-81,-128,-128,-122,-3,-83,-86,-19,]),'TRUE':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,29,37,38,39,40,41,42,43,44,45,46,47,48,49,67,69,70,72,74,75,76,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,125,126,127,128,129,136,137,138,139,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,172,173,174,176,178,179,183,191,192,193,194,195,196,197,198,199,200,201,202,208,210,211,212,216,218,219,225,226,227,228,234,235,237,238,239,240,251,252,253,262,267,268,282,283,286,296,297,319,],[48,48,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-140,-122,-122,-122,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-144,48,48,48,48,48,48,-91,48,-93,-94,48,-96,-139,-138,-138,-138,-138,-138,-138,-104,-105,-134,-134,-108,-135,-136,-136,-112,-114,-117,-118,-122,-47,-115,-131,-116,-126,48,-80,48,-82,-122,-122,-97,48,48,48,48,48,48,48,48,-109,48,48,-22,-23,-24,-67,-129,48,-88,-130,-141,48,-92,-95,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,48,-128,-85,-137,-74,-77,-18,-106,-107,-110,-111,-73,-87,-122,48,-113,-68,48,-129,-84,-12,-81,-128,-128,-122,-3,-83,-86,-19,]),'FALSE':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,29,37,38,39,40,41,42,43,44,45,46,47,48,49,67,69,70,72,74,75,76,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,125,126,127,128,129,136,137,138,139,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,172,173,174,176,178,179,183,191,192,193,194,195,196,197,198,199,200,201,202,208,210,211,212,216,218,219,225,226,227,228,234,235,237,238,239,240,251,252,253,262,267,268,282,283,286,296,297,319,],[49,49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-140,-122,-122,-122,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-144,49,49,49,49,49,49,-91,49,-93,-94,49,-96,-139,-138,-138,-138,-138,-138,-138,-104,-105,-134,-134,-108,-135,-136,-136,-112,-114,-117,-118,-122,-47,-115,-131,-116,-126,49,-80,49,-82,-122,-122,-97,49,49,49,49,49,49,49,49,-109,49,49,-22,-23,-24,-67,-129,49,-88,-130,-141,49,-92,-95,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,49,-128,-85,-137,-74,-77,-18,-106,-107,-110,-111,-73,-87,-122,49,-113,-68,49,-129,-84,-12,-81,-128,-128,-122,-3,-83,-86,-19,]),'DATAFRAME':([9,],[55,]),'FILE':([9,],[56,]),'INT':([9,35,245,273,],[57,57,57,57,]),'FLOAT':([9,35,245,273,],[58,58,58,58,]),'BOOL':([9,35,245,273,],[59,59,59,59,]),'STRING':([9,35,245,273,],[60,60,60,60,]),'CHAR':([9,35,245,273,],[61,61,61,61,]),'INTS':([9,245,273,],[62,62,62,]),'FLOATS':([9,245,273,],[63,63,63,]),'BOOLS':([9,245,273,],[64,64,64,]),'STRINGS':([9,245,273,],[65,65,65,]),'CHARS':([9,245,273,],[66,66,66,]),'MULT':([15,26,28,41,42,43,44,45,46,47,48,49,71,105,106,107,126,128,129,132,137,139,173,176,178,179,201,202,210,211,212,235,237,239,252,253,267,268,282,283,296,297,],[-116,-115,-126,102,-137,-132,-133,-119,-120,-121,-78,-79,-129,-114,-117,-118,-115,-116,-126,-116,-80,-82,-129,-88,-130,-141,102,102,-128,-85,-137,-87,-122,-113,-129,-84,-81,-128,-128,-122,-83,-86,]),'DIV':([15,26,28,41,42,43,44,45,46,47,48,49,71,105,106,107,126,128,129,132,137,139,173,176,178,179,201,202,210,211,212,235,237,239,252,253,267,268,282,283,296,297,],[-116,-115,-126,103,-137,-132,-133,-119,-120,-121,-78,-79,-129,-114,-117,-118,-115,-116,-126,-116,-80,-82,-129,-88,-130,-141,103,103,-128,-85,-137,-87,-122,-113,-129,-84,-81,-128,-128,-122,-83,-86,]),'PLUS':([15,26,28,40,41,42,43,44,45,46,47,48,49,71,101,104,105,106,107,126,128,129,132,137,139,163,173,176,178,179,199,200,201,202,210,211,212,227,228,235,237,239,252,253,267,268,282,283,296,297,],[-116,-115,-126,98,-122,-137,-132,-133,-119,-120,-121,-78,-79,-129,-135,-112,-114,-117,-118,-115,-116,-126,-116,-80,-82,-109,-129,-88,-130,-141,98,98,-122,-122,-128,-85,-137,-110,-111,-87,-122,-113,-129,-84,-81,-128,-128,-122,-83,-86,]),'MINUS':([15,26,28,40,41,42,43,44,45,46,47,48,49,71,101,104,105,106,107,126,128,129,132,137,139,163,173,176,178,179,199,200,201,202,210,211,212,227,228,235,237,239,252,253,267,268,282,283,296,297,],[-116,-115,-126,99,-122,-137,-132,-133,-119,-120,-121,-78,-79,-129,-135,-112,-114,-117,-118,-115,-116,-126,-116,-80,-82,-109,-129,-88,-130,-141,99,99,-122,-122,-128,-85,-137,-110,-111,-87,-122,-113,-129,-84,-81,-128,-128,-122,-83,-86,]),'LT':([15,26,28,39,40,41,42,43,44,45,46,47,48,49,71,97,100,101,104,105,106,107,126,128,129,132,137,139,163,173,176,178,179,199,200,201,202,210,211,212,225,226,227,228,235,237,239,252,253,267,268,282,283,296,297,],[-116,-115,-126,90,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-129,-105,-108,-135,-112,-114,-117,-118,-115,-116,-126,-116,-80,-82,-109,-129,-88,-130,-141,-122,-122,-122,-122,-128,-85,-137,-106,-107,-110,-111,-87,-122,-113,-129,-84,-81,-128,-128,-122,-83,-86,]),'GT':([15,26,28,39,40,41,42,43,44,45,46,47,48,49,71,97,100,101,104,105,106,107,126,128,129,132,137,139,163,173,176,178,179,199,200,201,202,210,211,212,225,226,227,228,235,237,239,252,253,267,268,282,283,296,297,],[-116,-115,-126,91,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-129,-105,-108,-135,-112,-114,-117,-118,-115,-116,-126,-116,-80,-82,-109,-129,-88,-130,-141,-122,-122,-122,-122,-128,-85,-137,-106,-107,-110,-111,-87,-122,-113,-129,-84,-81,-128,-128,-122,-83,-86,]),'GTE':([15,26,28,39,40,41,42,43,44,45,46,47,48,49,71,97,100,101,104,105,106,107,126,128,129,132,137,139,163,173,176,178,179,199,200,201,202,210,211,212,225,226,227,228,235,237,239,252,253,267,268,282,283,296,297,],[-116,-115,-126,92,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-129,-105,-108,-135,-112,-114,-117,-118,-115,-116,-126,-116,-80,-82,-109,-129,-88,-130,-141,-122,-122,-122,-122,-128,-85,-137,-106,-107,-110,-111,-87,-122,-113,-129,-84,-81,-128,-128,-122,-83,-86,]),'LTE':([15,26,28,39,40,41,42,43,44,45,46,47,48,49,71,97,100,101,104,105,106,107,126,128,129,132,137,139,163,173,176,178,179,199,200,201,202,210,211,212,225,226,227,228,235,237,239,252,253,267,268,282,283,296,297,],[-116,-115,-126,93,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-129,-105,-108,-135,-112,-114,-117,-118,-115,-116,-126,-116,-80,-82,-109,-129,-88,-130,-141,-122,-122,-122,-122,-128,-85,-137,-106,-107,-110,-111,-87,-122,-113,-129,-84,-81,-128,-128,-122,-83,-86,]),'EQ':([15,26,28,39,40,41,42,43,44,45,46,47,48,49,71,97,100,101,104,105,106,107,126,128,129,132,137,139,163,173,176,178,179,199,200,201,202,210,211,212,225,226,227,228,235,237,239,252,253,267,268,282,283,296,297,],[-116,-115,-126,94,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-129,-105,-108,-135,-112,-114,-117,-118,-115,-116,-126,-116,-80,-82,-109,-129,-88,-130,-141,-122,-122,-122,-122,-128,-85,-137,-106,-107,-110,-111,-87,-122,-113,-129,-84,-81,-128,-128,-122,-83,-86,]),'NE':([15,26,28,39,40,41,42,43,44,45,46,47,48,49,71,97,100,101,104,105,106,107,126,128,129,132,137,139,163,173,176,178,179,199,200,201,202,210,211,212,225,226,227,228,235,237,239,252,253,267,268,282,283,296,297,],[-116,-115,-126,95,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-129,-105,-108,-135,-112,-114,-117,-118,-115,-116,-126,-116,-80,-82,-109,-129,-88,-130,-141,-122,-122,-122,-122,-128,-85,-137,-106,-107,-110,-111,-87,-122,-113,-129,-84,-81,-128,-128,-122,-83,-86,]),'AND':([15,26,28,38,39,40,41,42,43,44,45,46,47,48,49,71,89,96,97,100,101,104,105,106,107,126,128,129,132,137,139,153,154,163,173,176,178,179,193,194,195,196,197,198,199,200,201,202,210,211,212,225,226,227,228,235,237,239,252,253,267,268,282,283,296,297,],[-116,-115,-126,87,-122,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-129,-139,-104,-105,-108,-135,-112,-114,-117,-118,-115,-116,-126,-116,-80,-82,87,-97,-109,-129,-88,-130,-141,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,-137,-106,-107,-110,-111,-87,-122,-113,-129,-84,-81,-128,-128,-122,-83,-86,]),'OR':([15,26,28,37,38,39,40,41,42,43,44,45,46,47,48,49,71,86,88,89,96,97,100,101,104,105,106,107,126,128,129,132,137,139,152,153,154,163,173,176,178,179,192,193,194,195,196,197,198,199,200,201,202,210,211,212,225,226,227,228,235,237,239,252,253,267,268,282,283,296,297,],[-116,-115,-126,84,-122,-122,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-129,-94,-96,-139,-104,-105,-108,-135,-112,-114,-117,-118,-115,-116,-126,-116,-80,-82,84,-122,-97,-109,-129,-88,-130,-141,-95,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,-137,-106,-107,-110,-111,-87,-122,-113,-129,-84,-81,-128,-128,-122,-83,-86,]),'QUESTION':([15,26,27,28,37,38,39,40,41,42,43,44,45,46,47,48,49,71,83,85,86,88,89,96,97,100,101,104,105,106,107,126,128,129,132,137,139,152,153,154,163,173,176,178,179,191,192,193,194,195,196,197,198,199,200,201,202,210,211,212,225,226,227,228,235,237,239,252,253,267,268,282,283,296,297,],[-116,-115,70,-126,-122,-122,-122,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-129,-91,-93,-94,-96,-139,-104,-105,-108,-135,-112,-114,-117,-118,-115,-116,-126,-116,-80,-82,-122,-122,-97,-109,-129,-88,-130,-141,-92,-95,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,-137,-106,-107,-110,-111,-87,-122,-113,-129,-84,-81,-128,-128,-122,-83,-86,]),'AS':([26,28,71,137,139,178,210,211,237,252,253,267,268,282,283,296,297,],[69,-126,-129,-80,-82,-130,-128,-85,-122,-129,-84,-81,-128,-128,-122,-83,-86,]),'OBRACKET':([28,71,112,129,148,171,173,178,188,210,211,237,249,265,268,276,283,289,312,314,318,320,328,329,],[-126,138,-126,-126,-126,205,138,-130,138,-128,238,251,-128,279,-128,-126,251,302,-126,-128,323,279,-128,279,]),'PERIOD':([28,71,129,148,173,188,],[-126,140,-126,-126,140,140,]),'VOID':([35,],[81,]),'COLON':([37,38,39,40,41,42,43,44,45,46,47,48,49,82,83,85,86,88,89,96,97,100,101,104,105,106,107,126,127,128,129,130,131,132,133,134,135,137,139,151,152,153,154,163,172,173,176,178,179,190,191,192,193,194,195,196,197,198,199,200,201,202,210,211,212,216,218,225,226,227,228,234,235,237,239,252,253,263,267,268,282,283,296,297,303,],[-122,-122,-122,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-126,-91,-93,-94,-96,-139,-104,-105,-108,-135,-112,-114,-117,-118,-115,-131,-116,-126,174,-62,-63,-64,-65,-66,-80,-82,-124,-122,-122,-97,-109,-67,-129,-88,-130,-141,224,-92,-95,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,-137,-74,-77,-106,-107,-110,-111,-73,-87,-122,-113,-129,-84,277,-81,-128,-128,-122,-83,-86,310,]),'CPAREN':([37,38,39,40,41,42,43,44,45,46,47,48,49,83,85,86,88,89,96,97,100,101,104,105,106,107,126,128,129,136,137,139,141,143,144,145,148,152,153,154,163,173,175,176,178,179,182,184,185,188,191,192,193,194,195,196,197,198,199,200,201,202,207,209,210,211,212,217,220,222,225,226,227,228,235,236,237,239,243,245,250,252,253,257,258,259,267,268,272,274,275,281,282,283,285,287,288,296,297,300,301,304,311,314,320,324,327,],[-122,-122,-122,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-91,-93,-94,-96,-139,-104,-105,-108,-135,-112,-114,-117,-118,-115,-116,-126,176,-80,-82,179,181,-122,-122,-126,-122,-122,-97,-109,-129,-122,-88,-130,-141,216,-76,218,-129,-92,-95,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,235,-90,-128,-85,-137,-122,-21,-20,-106,-107,-110,-111,-87,-122,-122,-113,-75,-122,-89,-129,-84,271,-122,-7,-81,-128,-6,-9,-126,-33,-128,-122,299,-122,-127,-83,-86,-8,-10,-128,-32,-128,-122,-127,-11,]),'COMMA':([37,38,39,40,41,42,43,44,45,46,47,48,49,83,85,86,88,89,96,97,100,101,104,105,106,107,109,111,126,128,129,137,139,144,145,152,153,154,163,169,170,173,175,176,178,179,191,192,193,194,195,196,197,198,199,200,201,202,203,204,210,211,212,217,225,226,227,228,235,236,237,239,248,249,252,253,258,264,265,267,268,275,278,280,281,282,283,287,288,295,296,297,301,304,311,314,320,324,327,],[-122,-122,-122,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-91,-93,-94,-96,-139,-104,-105,-108,-135,-112,-114,-117,-118,-126,-126,-115,-116,-126,-80,-82,183,183,-122,-122,-97,-109,-127,-127,-129,208,-88,-130,-141,-92,-95,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,230,230,-128,-85,-137,183,-106,-107,-110,-111,-87,208,-122,-113,-126,-128,-129,-84,273,-127,-122,-81,-128,-126,230,-127,-33,-128,-122,273,-127,306,-83,-86,-10,-128,-32,-128,-122,-127,-11,]),'CBRACKET':([37,38,39,40,41,42,43,44,45,46,47,48,49,83,85,86,88,89,96,97,100,101,104,105,106,107,126,128,129,137,139,152,153,154,163,173,176,177,178,179,191,192,193,194,195,196,197,198,199,200,201,202,210,211,212,225,226,227,228,233,235,237,239,252,253,254,266,267,268,282,283,294,296,297,309,326,],[-122,-122,-122,-122,-122,-137,-132,-133,-119,-120,-121,-78,-79,-91,-93,-94,-96,-139,-104,-105,-108,-135,-112,-114,-117,-118,-115,-116,-126,-80,-82,-122,-122,-97,-109,-129,-88,210,-130,-141,-92,-95,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,-137,-106,-107,-110,-111,249,-87,-122,-113,-129,-84,268,282,-81,-128,-128,-122,304,-83,-86,314,328,]),'ELSE':([67,125,180,284,],[-144,-47,214,214,]),'THEN':([73,77,181,255,299,],[142,146,-72,269,308,]),'METHODS':([108,166,167,168,277,290,291,292,],[-122,-22,-23,-24,-122,303,-14,-15,]),'FROM':([137,139,147,148,178,188,210,211,237,252,253,267,268,282,283,296,297,],[-80,-82,187,-126,-130,-129,-128,-85,-122,-129,-84,-81,-128,-128,-122,-83,-86,]),'TO':([137,139,148,178,188,210,211,220,221,222,237,252,253,267,268,282,283,296,297,],[-80,-82,-126,-130,-129,-128,-85,-21,244,-20,-122,-129,-84,-81,-128,-128,-122,-83,-86,]),'BY':([137,139,148,178,188,210,211,220,222,237,252,253,256,267,268,282,283,296,297,],[-80,-82,-126,-130,-129,-128,-85,-21,-20,-122,-129,-84,270,-81,-128,-128,-122,-83,-86,]),'ATTRIBUTES':([247,],[263,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'saw_program':([3,],[4,]),'bloque':([5,7,8,12,142,146,214,269,271,308,],[6,10,22,22,180,186,241,284,286,313,]),'dec':([5,8,12,108,277,],[7,25,25,167,291,]),'b1':([8,12,],[11,68,]),'estatuto':([8,12,],[12,12,]),'empty':([8,12,37,38,39,40,41,108,144,145,152,153,175,180,199,200,201,202,203,204,217,236,237,245,258,265,277,278,283,284,287,295,310,316,320,329,],[13,13,85,88,96,100,104,168,184,184,85,88,209,215,100,100,104,104,231,231,184,209,253,259,274,281,292,231,253,215,274,307,317,317,281,281,]),'asignacion':([8,12,70,174,],[14,14,131,131,]),'llamada':([8,12,69,70,72,74,75,76,84,87,136,138,155,156,157,158,159,160,161,162,164,165,174,183,208,238,251,],[15,15,128,132,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,132,128,128,128,128,]),'condicion':([8,12,],[16,16,]),'escritura':([8,12,70,174,],[17,17,133,133,]),'leer':([8,12,70,174,],[18,18,134,134,]),'ciclo_while':([8,12,],[19,19,]),'ciclo_for':([8,12,],[20,20,]),'ternaria':([8,12,70,174,],[21,21,135,135,]),'funcion':([8,12,310,316,],[23,23,316,316,]),'clase':([8,12,],[24,24,]),'variable':([8,12,69,70,72,74,75,76,78,84,87,136,138,155,156,157,158,159,160,161,162,164,165,174,183,187,208,238,244,251,270,],[26,26,126,26,126,126,126,126,147,126,126,126,126,126,126,126,126,126,126,126,126,126,126,26,126,220,126,126,220,126,220,]),'exp':([8,12,69,70,72,74,75,76,136,138,174,183,208,238,251,],[27,27,127,27,141,143,144,145,175,177,27,217,236,254,266,]),'texp':([8,12,69,70,72,74,75,76,84,136,138,174,183,208,238,251,],[37,37,37,37,37,37,37,37,152,37,37,37,37,37,37,37,]),'gexp':([8,12,69,70,72,74,75,76,84,87,136,138,174,183,208,238,251,],[38,38,38,38,38,38,38,38,38,153,38,38,38,38,38,38,38,]),'mexp':([8,12,69,70,72,74,75,76,84,87,136,138,155,156,157,158,159,160,174,183,208,238,251,],[39,39,39,39,39,39,39,39,39,39,39,39,193,194,195,196,197,198,39,39,39,39,39,]),'termino':([8,12,69,70,72,74,75,76,84,87,136,138,155,156,157,158,159,160,161,162,174,183,208,238,251,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,199,200,40,40,40,40,40,]),'factor':([8,12,69,70,72,74,75,76,84,87,136,138,155,156,157,158,159,160,161,162,164,165,174,183,208,238,251,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,201,202,41,41,41,41,41,]),'varcst':([8,12,69,70,72,74,75,76,84,87,136,138,155,156,157,158,159,160,161,162,164,165,174,183,208,238,251,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'boolean':([8,12,69,70,72,74,75,76,84,87,136,138,155,156,157,158,159,160,161,162,164,165,174,183,208,238,251,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'tipo':([9,],[50,]),'compuesto':([9,],[51,]),'simple':([9,35,245,273,],[53,80,260,260,]),'multiple':([9,245,273,],[54,261,261,]),'saw_id':([28,82,109,111,112,129,148,149,248,275,276,312,],[71,151,169,170,171,173,188,189,264,288,289,318,]),'saw_oparen':([29,],[72,]),'cond2':([30,33,242,],[73,77,255,]),'func1':([35,],[79,]),'exp1':([37,152,],[83,191,]),'texp1':([38,153,],[86,192,]),'gexp1':([39,],[89,]),'mexp1':([40,199,200,],[97,225,226,]),'term1':([41,201,202,],[101,227,228,]),'check_multdiv_operator':([42,212,],[105,239,]),'saw_end_value_int':([43,],[106,]),'saw_end_value_flt':([44,],[107,]),'saw_type':([52,55,56,57,58,59,60,61,62,63,64,65,66,81,],[110,113,114,115,116,117,118,119,120,121,122,123,124,150,]),'scope_end':([67,],[125,]),'estatuto_redux':([70,174,],[130,206,]),'saw_called_var':([71,173,188,252,],[137,137,137,267,]),'variable2':([71,173,188,],[139,139,139,]),'check_relational_operator':([89,],[154,]),'saw_relational_operator':([90,91,92,93,94,95,],[155,156,157,158,159,160,]),'saw_plusminus_operator':([98,99,],[161,162,]),'check_plusminus_operator':([101,],[163,]),'saw_multdiv_operator':([102,103,],[164,165,]),'dec1':([108,],[166,]),'saw_asig':([127,],[172,]),'e1':([144,145,217,],[182,185,243,]),'saw_class':([151,],[190,]),'saw_variable':([169,170,264,280,288,324,330,],[203,204,278,295,301,327,331,]),'llamada1':([175,236,],[207,250,]),'saw_called_var_from_class':([178,],[211,]),'saw_cparen':([179,],[212,]),'cond1':([180,284,],[213,298,]),'ciclo_for1':([187,244,270,],[221,256,285,]),'saw_function':([189,],[223,]),'tipo1':([203,204,278,],[229,232,293,]),'saw_dimension':([210,249,268,282,304,314,328,],[237,265,283,296,311,320,329,]),'clase_bloque':([224,],[246,]),'variable1':([237,283,],[252,297,]),'param':([245,],[257,]),'param2':([245,273,],[258,287,]),'param1':([258,287,],[272,300,]),'tipo3':([265,320,329,],[280,324,330,]),'clase_bloque1':([277,],[290,]),'tipo2':([295,],[305,]),'clase_metodos_bloque':([310,316,],[315,322,]),'class_scope_end':([315,],[321,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID saw_program SEMICOLON bloque','programa',5,'p_programa','plyler.py',162),
  ('programa -> PROGRAM ID saw_program SEMICOLON dec bloque','programa',6,'p_programa','plyler.py',163),
  ('funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque','funcion',9,'p_funcion','plyler.py',171),
  ('func1 -> simple','func1',1,'p_funcion1','plyler.py',178),
  ('func1 -> VOID saw_type','func1',2,'p_funcion1','plyler.py',179),
  ('param -> param2 param1','param',2,'p_param','plyler.py',186),
  ('param -> empty','param',1,'p_param','plyler.py',187),
  ('param1 -> COMMA param2 param1','param1',3,'p_param1','plyler.py',195),
  ('param1 -> empty','param1',1,'p_param1','plyler.py',196),
  ('param2 -> simple ID saw_id saw_variable','param2',4,'p_param2','plyler.py',204),
  ('param2 -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable','param2',9,'p_param2','plyler.py',205),
  ('clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON','clase',7,'p_clase','plyler.py',214),
  ('clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY','clase_bloque',9,'p_clase_bloque','plyler.py',220),
  ('clase_bloque1 -> dec','clase_bloque1',1,'p_clase_bloque1','plyler.py',226),
  ('clase_bloque1 -> empty','clase_bloque1',1,'p_clase_bloque1','plyler.py',227),
  ('clase_metodos_bloque -> funcion clase_metodos_bloque','clase_metodos_bloque',2,'p_clase_metodos_bloque','plyler.py',233),
  ('clase_metodos_bloque -> empty','clase_metodos_bloque',1,'p_clase_metodos_bloque','plyler.py',234),
  ('ciclo_while -> WHILE cond2 THEN bloque SEMICOLON','ciclo_while',5,'p_ciclo_while','plyler.py',242),
  ('ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON','ciclo_for',13,'p_ciclo_for','plyler.py',251),
  ('ciclo_for1 -> CSTINT','ciclo_for1',1,'p_ciclo_for1','plyler.py',258),
  ('ciclo_for1 -> variable','ciclo_for1',1,'p_ciclo_for1','plyler.py',259),
  ('dec -> VAR tipo SEMICOLON dec1','dec',4,'p_dec','plyler.py',267),
  ('dec1 -> dec','dec1',1,'p_dec1','plyler.py',273),
  ('dec1 -> empty','dec1',1,'p_dec1','plyler.py',274),
  ('tipo -> compuesto ID saw_id saw_variable tipo1','tipo',5,'p_tipo','plyler.py',282),
  ('tipo -> simple ID saw_id saw_variable tipo1','tipo',5,'p_tipo','plyler.py',283),
  ('tipo -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable tipo2','tipo',10,'p_tipo','plyler.py',284),
  ('tipo1 -> COMMA ID saw_id saw_variable tipo1','tipo1',5,'p_tipo1','plyler.py',290),
  ('tipo1 -> empty','tipo1',1,'p_tipo1','plyler.py',291),
  ('tipo2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable','tipo2',9,'p_tipo2','plyler.py',297),
  ('tipo2 -> empty','tipo2',1,'p_tipo2','plyler.py',298),
  ('tipo3 -> OBRACKET CSTINT CBRACKET saw_dimension','tipo3',4,'p_tipo3','plyler.py',304),
  ('tipo3 -> empty','tipo3',1,'p_tipo3','plyler.py',305),
  ('simple -> INT saw_type','simple',2,'p_tipo_simple','plyler.py',311),
  ('simple -> FLOAT saw_type','simple',2,'p_tipo_simple','plyler.py',312),
  ('simple -> BOOL saw_type','simple',2,'p_tipo_simple','plyler.py',313),
  ('simple -> STRING saw_type','simple',2,'p_tipo_simple','plyler.py',314),
  ('simple -> CHAR saw_type','simple',2,'p_tipo_simple','plyler.py',315),
  ('multiple -> INTS saw_type','multiple',2,'p_tipo_multiple','plyler.py',321),
  ('multiple -> FLOATS saw_type','multiple',2,'p_tipo_multiple','plyler.py',322),
  ('multiple -> BOOLS saw_type','multiple',2,'p_tipo_multiple','plyler.py',323),
  ('multiple -> STRINGS saw_type','multiple',2,'p_tipo_multiple','plyler.py',324),
  ('multiple -> CHARS saw_type','multiple',2,'p_tipo_multiple','plyler.py',325),
  ('compuesto -> ID saw_type','compuesto',2,'p_tipo_compuesto','plyler.py',331),
  ('compuesto -> DATAFRAME saw_type','compuesto',2,'p_tipo_compuesto','plyler.py',332),
  ('compuesto -> FILE saw_type','compuesto',2,'p_tipo_compuesto','plyler.py',333),
  ('bloque -> OCURLY b1 CCURLY scope_end','bloque',4,'p_bloque','plyler.py',341),
  ('b1 -> estatuto b1','b1',2,'p_b1','plyler.py',347),
  ('b1 -> empty','b1',1,'p_b1','plyler.py',348),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','plyler.py',356),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','plyler.py',357),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','plyler.py',358),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','plyler.py',359),
  ('estatuto -> leer','estatuto',1,'p_estatuto','plyler.py',360),
  ('estatuto -> ciclo_while','estatuto',1,'p_estatuto','plyler.py',361),
  ('estatuto -> ciclo_for','estatuto',1,'p_estatuto','plyler.py',362),
  ('estatuto -> ternaria','estatuto',1,'p_estatuto','plyler.py',363),
  ('estatuto -> bloque','estatuto',1,'p_estatuto','plyler.py',364),
  ('estatuto -> funcion','estatuto',1,'p_estatuto','plyler.py',365),
  ('estatuto -> clase','estatuto',1,'p_estatuto','plyler.py',366),
  ('estatuto -> dec','estatuto',1,'p_estatuto','plyler.py',367),
  ('estatuto_redux -> asignacion','estatuto_redux',1,'p_estatuto_redux','plyler.py',373),
  ('estatuto_redux -> llamada','estatuto_redux',1,'p_estatuto_redux','plyler.py',374),
  ('estatuto_redux -> escritura','estatuto_redux',1,'p_estatuto_redux','plyler.py',375),
  ('estatuto_redux -> leer','estatuto_redux',1,'p_estatuto_redux','plyler.py',376),
  ('estatuto_redux -> ternaria','estatuto_redux',1,'p_estatuto_redux','plyler.py',377),
  ('asignacion -> variable AS exp saw_asig','asignacion',4,'p_asignacion','plyler.py',385),
  ('condicion -> IF cond2 THEN bloque cond1 SEMICOLON','condicion',6,'p_condicion','plyler.py',393),
  ('cond1 -> ELSE bloque','cond1',2,'p_cond1','plyler.py',399),
  ('cond1 -> ELSE IF cond2 THEN bloque cond1','cond1',6,'p_cond1','plyler.py',400),
  ('cond1 -> empty','cond1',1,'p_cond1','plyler.py',401),
  ('cond2 -> OPAREN exp CPAREN','cond2',3,'p_cond2','plyler.py',407),
  ('ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON','ternaria',6,'p_ternaria','plyler.py',415),
  ('escritura -> PRINT OPAREN exp e1 CPAREN','escritura',5,'p_escritura','plyler.py',423),
  ('e1 -> COMMA exp e1','e1',3,'p_e1','plyler.py',429),
  ('e1 -> empty','e1',1,'p_e1','plyler.py',430),
  ('leer -> READ OPAREN exp e1 CPAREN','leer',5,'p_leer','plyler.py',438),
  ('boolean -> TRUE','boolean',1,'p_boolean','plyler.py',446),
  ('boolean -> FALSE','boolean',1,'p_boolean','plyler.py',447),
  ('variable -> ID saw_id saw_called_var','variable',3,'p_variable','plyler.py',455),
  ('variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var','variable',8,'p_variable','plyler.py',456),
  ('variable -> ID saw_id variable2','variable',3,'p_variable','plyler.py',457),
  ('variable1 -> OBRACKET exp CBRACKET saw_dimension','variable1',4,'p_variable1','plyler.py',463),
  ('variable1 -> empty','variable1',1,'p_variable1','plyler.py',464),
  ('variable2 -> PERIOD ID saw_called_var_from_class','variable2',3,'p_variable2','plyler.py',470),
  ('variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1','variable2',8,'p_variable2','plyler.py',471),
  ('llamada -> ID saw_id OPAREN exp llamada1 CPAREN','llamada',6,'p_llamada_funcion','plyler.py',479),
  ('llamada -> ID saw_id OPAREN CPAREN','llamada',4,'p_llamada_funcion','plyler.py',480),
  ('llamada1 -> COMMA exp llamada1','llamada1',3,'p_llamada_funcion1','plyler.py',486),
  ('llamada1 -> empty','llamada1',1,'p_llamada_funcion1','plyler.py',487),
  ('exp -> texp exp1','exp',2,'p_exp','plyler.py',495),
  ('exp1 -> OR texp exp1','exp1',3,'p_exp1','plyler.py',505),
  ('exp1 -> empty','exp1',1,'p_exp1','plyler.py',506),
  ('texp -> gexp texp1','texp',2,'p_texp','plyler.py',512),
  ('texp1 -> AND gexp texp1','texp1',3,'p_texp1','plyler.py',518),
  ('texp1 -> empty','texp1',1,'p_texp1','plyler.py',519),
  ('gexp -> mexp gexp1 check_relational_operator','gexp',3,'p_gexp','plyler.py',525),
  ('gexp1 -> LT saw_relational_operator mexp','gexp1',3,'p_gexp1','plyler.py',531),
  ('gexp1 -> GT saw_relational_operator mexp','gexp1',3,'p_gexp1','plyler.py',532),
  ('gexp1 -> GTE saw_relational_operator mexp','gexp1',3,'p_gexp1','plyler.py',533),
  ('gexp1 -> LTE saw_relational_operator mexp','gexp1',3,'p_gexp1','plyler.py',534),
  ('gexp1 -> EQ saw_relational_operator mexp','gexp1',3,'p_gexp1','plyler.py',535),
  ('gexp1 -> NE saw_relational_operator mexp','gexp1',3,'p_gexp1','plyler.py',536),
  ('gexp1 -> empty','gexp1',1,'p_gexp1','plyler.py',537),
  ('mexp -> termino mexp1','mexp',2,'p_mexp','plyler.py',543),
  ('mexp1 -> PLUS saw_plusminus_operator termino mexp1','mexp1',4,'p_mexp1','plyler.py',548),
  ('mexp1 -> MINUS saw_plusminus_operator termino mexp1','mexp1',4,'p_mexp1','plyler.py',549),
  ('mexp1 -> empty','mexp1',1,'p_mexp1','plyler.py',550),
  ('termino -> factor term1 check_plusminus_operator','termino',3,'p_termino','plyler.py',558),
  ('term1 -> MULT saw_multdiv_operator factor term1','term1',4,'p_term1','plyler.py',564),
  ('term1 -> DIV saw_multdiv_operator factor term1','term1',4,'p_term1','plyler.py',565),
  ('term1 -> empty','term1',1,'p_term1','plyler.py',566),
  ('factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator','factor',6,'p_factor','plyler.py',574),
  ('factor -> varcst check_multdiv_operator','factor',2,'p_factor','plyler.py',575),
  ('factor -> variable','factor',1,'p_factor','plyler.py',576),
  ('factor -> llamada','factor',1,'p_factor','plyler.py',577),
  ('varcst -> CSTINT saw_end_value_int','varcst',2,'p_varcst','plyler.py',585),
  ('varcst -> CSTFLT saw_end_value_flt','varcst',2,'p_varcst','plyler.py',586),
  ('varcst -> CSTCHAR','varcst',1,'p_varcst','plyler.py',587),
  ('varcst -> CSTSTRING','varcst',1,'p_varcst','plyler.py',588),
  ('varcst -> boolean','varcst',1,'p_varcst','plyler.py',589),
  ('empty -> <empty>','empty',0,'p_empty','plyler.py',597),
  ('saw_program -> <empty>','saw_program',0,'p_saw_program','plyler.py',610),
  ('saw_class -> <empty>','saw_class',0,'p_saw_class','plyler.py',615),
  ('saw_type -> <empty>','saw_type',0,'p_saw_type','plyler.py',623),
  ('saw_id -> <empty>','saw_id',0,'p_saw_id','plyler.py',631),
  ('saw_variable -> <empty>','saw_variable',0,'p_saw_variable','plyler.py',645),
  ('saw_dimension -> <empty>','saw_dimension',0,'p_saw_dimension','plyler.py',652),
  ('saw_called_var -> <empty>','saw_called_var',0,'p_saw_called_var','plyler.py',659),
  ('saw_called_var_from_class -> <empty>','saw_called_var_from_class',0,'p_saw_called_var_from_class','plyler.py',667),
  ('saw_asig -> <empty>','saw_asig',0,'p_saw_asig','plyler.py',676),
  ('saw_end_value_int -> <empty>','saw_end_value_int',0,'p_saw_end_value_int','plyler.py',681),
  ('saw_end_value_flt -> <empty>','saw_end_value_flt',0,'p_saw_end_value_flt','plyler.py',687),
  ('saw_plusminus_operator -> <empty>','saw_plusminus_operator',0,'p_saw_plusminus_operator','plyler.py',701),
  ('check_plusminus_operator -> <empty>','check_plusminus_operator',0,'p_check_plusminus_operator','plyler.py',707),
  ('saw_multdiv_operator -> <empty>','saw_multdiv_operator',0,'p_saw_multdiv_operator','plyler.py',732),
  ('check_multdiv_operator -> <empty>','check_multdiv_operator',0,'p_check_multdiv_operator','plyler.py',738),
  ('saw_relational_operator -> <empty>','saw_relational_operator',0,'p_saw_relational_operator','plyler.py',762),
  ('check_relational_operator -> <empty>','check_relational_operator',0,'p_check_relational_operator','plyler.py',768),
  ('saw_oparen -> <empty>','saw_oparen',0,'p_saw_oparen','plyler.py',805),
  ('saw_cparen -> <empty>','saw_cparen',0,'p_saw_cparen','plyler.py',811),
  ('do_not_save -> <empty>','do_not_save',0,'p_do_not_save','plyler.py',817),
  ('saw_function -> <empty>','saw_function',0,'p_saw_function','plyler.py',825),
  ('scope_end -> <empty>','scope_end',0,'p_scope_end','plyler.py',832),
  ('class_scope_end -> <empty>','class_scope_end',0,'p_class_scope_end','plyler.py',838),
]
