
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ATTRIBUTES BOOL BOOLS BY CBRACKET CCURLY CHAR CHARS CLASS COLON COMMA COMMENT CPAREN CSTCHAR CSTFLT CSTINT CSTSTRING DATAFRAME DIV ELSE EQ FALSE FILE FLOAT FLOATS FOR FROM FUNCTION GT GTE ID IF INT INTS LT LTE METHODS MINUS MULT NE OBRACKET OCURLY OPAREN OR PERIOD PLUS PRINT PROGRAM QUESTION READ RETURN SEMICOLON STRING STRINGS THEN TO TRUE VAR VOID WHILE\n  programa : PROGRAM ID saw_id saw_program SEMICOLON bloque\n           | PROGRAM ID saw_id saw_program SEMICOLON dec bloque\n  \n  funcion : FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque\n  \n  func1 : simple\n        | VOID saw_type\n  \n  param : param2 param1\n        | empty\n  \n  param1 : COMMA param2 param1\n         | empty\n  \n  param2 : simple ID saw_id_param\n         | multiple ID saw_id_param variable1 variable1\n  \n    clase : CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON\n   \n  clase_bloque :  OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY\n   \n  clase_bloque1 : dec\n                | empty\n   \n  clase_metodos_bloque : funcion clase_metodos_bloque\n                       | empty\n  \n  ciclo_while : WHILE cond2 THEN bloque SEMICOLON\n  \n  ciclo_for : FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON\n  \n  ciclo_for1 : CSTINT\n             | variable\n  \n  dec : VAR tipo SEMICOLON dec1\n  \n  dec1 : dec\n       | empty\n  \n  tipo : compuesto ID saw_id saw_variable tipo1\n       | simple ID saw_id saw_variable tipo1\n       | multiple ID saw_id saw_variable OBRACKET CSTINT CBRACKET tipo3 tipo2\n  \n  tipo1 : COMMA ID saw_id saw_variable tipo1\n        | empty\n  \n  tipo2 : COMMA ID saw_id OBRACKET CSTINT CBRACKET tipo3\n        | empty\n  \n  tipo3 : OBRACKET CSTINT CBRACKET\n        | empty\n  \n  simple : INT saw_type\n         | FLOAT saw_type\n         | BOOL saw_type\n         | STRING saw_type\n         | CHAR saw_type\n  \n  multiple : INTS saw_type\n           | FLOATS saw_type\n           | BOOLS saw_type\n           | STRINGS saw_type\n           | CHARS saw_type\n  \n  compuesto : ID saw_type\n            | DATAFRAME saw_type\n            | FILE saw_type\n  \n  bloque : OCURLY b1 CCURLY scope_end\n  \n  b1 : estatuto b1\n     | empty\n  \n  estatuto : asignacion\n           | llamada\n           | condicion\n           | escritura\n           | leer\n           | ciclo_while\n           | ciclo_for\n           | ternaria\n           | bloque\n           | funcion\n           | clase\n           | dec\n           | RETURN exp\n  \n  estatuto_redux : asignacion\n                 | llamada\n                 | escritura\n                 | leer\n                 | ternaria\n  \n  asignacion : variable AS exp saw_asig\n  \n  condicion : IF cond2 THEN bloque cond1 SEMICOLON\n  \n  cond1 : ELSE bloque\n        | ELSE IF cond2 THEN bloque cond1\n        | empty\n  \n    cond2 : OPAREN exp CPAREN\n  \n  ternaria : exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON\n  \n  escritura : PRINT OPAREN exp e1 CPAREN\n  \n  e1 : COMMA exp e1\n     | empty\n  \n  leer  : READ OPAREN exp e1 CPAREN\n  \n  boolean : TRUE\n          | FALSE\n  \n  variable : ID saw_id variable1 variable1 variable2\n  \n  variable1 : OBRACKET exp CBRACKET\n            | empty\n  \n  variable2 : PERIOD ID saw_id variable1 variable1 variable2\n            | empty \n  \n  llamada : ID saw_id OPAREN exp llamada1 CPAREN\n          | ID saw_id OPAREN CPAREN\n  \n  llamada1 : COMMA exp llamada1\n           | empty\n  \n  exp : texp exp1\n  \n  exp1 : OR texp exp1\n       | empty\n  \n  texp : gexp texp1\n  \n  texp1 : AND gexp texp1\n        | empty\n  \n  gexp : mexp gexp1\n  \n  gexp1 : LT mexp\n        | GT mexp\n        | GTE mexp\n        | LTE mexp\n        | EQ mexp\n        | NE mexp\n        | empty\n  \n  mexp : termino mexp1\n  \n  mexp1 : PLUS termino mexp1\n        | MINUS termino mexp1\n        | empty\n  \n  termino : factor term1\n  \n  term1 : MULT factor term1\n        | DIV factor term1\n        | empty\n  \n  factor : OPAREN exp CPAREN\n         | varcst\n         | variable\n         | llamada\n  \n  varcst : CSTINT\n         | CSTFLT\n         | CSTCHAR\n         | CSTSTRING\n         | boolean\n  \n  empty : \n  \n  saw_program : \n  \n  saw_class : \n  \n  saw_type : \n  \n  saw_id : \n  \n  saw_id_param : \n  \n  saw_variable : \n  \n  saw_asig : \n  \n  saw_function : \n  \n  scope_start : \n  \n  scope_end : \n  \n  class_scope_start : \n  \n  class_scope_end : \n  '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,7,11,69,128,],[0,-1,-2,-131,-47,]),'ID':([2,9,10,13,15,16,17,18,19,20,21,22,23,24,25,26,27,31,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,80,81,82,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,136,137,138,139,140,141,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,171,173,174,179,183,187,188,189,190,191,192,198,200,201,202,203,207,209,210,217,221,222,224,225,229,236,242,243,244,248,250,262,265,275,277,294,],[3,30,54,30,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,74,74,88,-121,-121,-121,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,112,-124,114,115,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-131,-62,-114,-115,-125,30,74,74,74,74,148,149,-4,-124,-90,74,-92,-93,74,-95,-96,74,74,74,74,74,74,-103,-104,74,74,-107,-108,74,74,-111,-121,-44,-45,-46,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-47,-121,-128,74,-121,74,-83,-112,-5,-121,-121,-97,-98,-99,-100,-101,-102,-121,-121,-121,-121,-22,-23,-24,30,-68,-87,-121,74,148,-91,-94,-105,-106,-109,-110,74,-81,224,-85,-82,-75,-78,-18,233,-74,-86,-125,-69,148,-121,255,256,-12,-121,148,-121,-3,284,-84,-19,]),'SEMICOLON':([3,4,5,39,40,41,42,43,44,45,46,47,48,49,50,51,52,69,72,73,74,89,91,92,94,95,102,103,106,107,110,112,114,128,129,131,132,133,134,135,136,138,140,141,152,153,154,155,156,157,158,159,160,161,162,163,167,168,171,173,174,176,182,187,188,189,190,191,192,193,194,196,200,202,203,204,206,207,209,216,218,219,221,222,224,226,231,233,236,246,247,248,258,260,261,262,263,272,274,276,277,278,283,289,298,299,300,],[-125,-122,6,-121,-121,-121,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,111,-131,-114,-115,-125,-90,-92,-93,-95,-96,-103,-104,-107,-108,-111,-125,-125,-47,-121,-63,-64,-65,-66,-67,-128,-121,-83,-112,-121,-121,-97,-98,-99,-100,-101,-102,-121,-121,-121,-121,-127,-127,-68,-87,-121,-121,210,-91,-94,-105,-106,-109,-110,-121,-121,221,-81,-85,-82,225,-72,-75,-78,-25,-29,-26,-74,-86,-125,-70,244,-125,-121,-127,-121,-121,-121,-121,-33,-121,-121,-28,-27,-31,-84,-71,-32,294,-13,-121,-30,]),'OCURLY':([6,8,9,13,15,16,17,18,19,20,21,22,23,24,25,26,39,40,41,42,43,44,45,46,47,48,49,50,51,69,71,72,73,74,89,91,92,94,95,102,103,106,107,110,111,128,129,136,138,140,141,142,146,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,173,174,187,188,189,190,191,192,200,202,203,205,207,209,210,215,221,222,224,225,236,244,248,249,251,262,265,277,285,294,],[9,9,9,9,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-121,-121,-121,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-131,-62,-114,-115,-125,-90,-92,-93,-95,-96,-103,-104,-107,-108,-111,-121,-47,-121,-128,-121,-83,-112,9,9,-121,-121,-97,-98,-99,-100,-101,-102,-121,-121,-121,-121,-22,-23,-24,-68,-87,-121,-91,-94,-105,-106,-109,-110,-81,-85,-82,9,-75,-78,-18,232,-74,-86,-125,-69,-121,-12,-121,9,9,-121,-3,-84,9,-19,]),'VAR':([6,9,13,15,16,17,18,19,20,21,22,23,24,25,26,39,40,41,42,43,44,45,46,47,48,49,50,51,69,71,72,73,74,89,91,92,94,95,102,103,106,107,110,111,128,129,136,138,140,141,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,173,174,187,188,189,190,191,192,200,202,203,207,209,210,221,222,224,225,236,244,248,257,262,265,277,294,],[10,10,10,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-121,-121,-121,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-131,-62,-114,-115,-125,-90,-92,-93,-95,-96,-103,-104,-107,-108,-111,10,-47,-121,-128,-121,-83,-112,-121,-121,-97,-98,-99,-100,-101,-102,-121,-121,-121,-121,-22,-23,-24,-68,-87,-121,-91,-94,-105,-106,-109,-110,-81,-85,-82,-75,-78,-18,-74,-86,-125,-69,-121,-12,-121,10,-121,-3,-84,-19,]),'RETURN':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,39,40,41,42,43,44,45,46,47,48,49,50,51,69,71,72,73,74,89,91,92,94,95,102,103,106,107,110,111,128,129,136,138,140,141,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,173,174,187,188,189,190,191,192,200,202,203,207,209,210,221,222,224,225,236,244,248,262,265,277,294,],[27,27,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-121,-121,-121,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-131,-62,-114,-115,-125,-90,-92,-93,-95,-96,-103,-104,-107,-108,-111,-121,-47,-121,-128,-121,-83,-112,-121,-121,-97,-98,-99,-100,-101,-102,-121,-121,-121,-121,-22,-23,-24,-68,-87,-121,-91,-94,-105,-106,-109,-110,-81,-85,-82,-75,-78,-18,-74,-86,-125,-69,-121,-12,-121,-121,-3,-84,-19,]),'CCURLY':([9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,39,40,41,42,43,44,45,46,47,48,49,50,51,69,70,71,72,73,74,89,91,92,94,95,102,103,106,107,110,111,128,129,136,138,140,141,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,173,174,187,188,189,190,191,192,200,202,203,207,209,210,221,222,224,225,236,244,248,262,265,277,287,290,291,292,294,295,296,],[-121,69,-121,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-121,-121,-121,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-131,-48,-62,-114,-115,-125,-90,-92,-93,-95,-96,-103,-104,-107,-108,-111,-121,-47,-121,-128,-121,-83,-112,-121,-121,-97,-98,-99,-100,-101,-102,-121,-121,-121,-121,-22,-23,-24,-68,-87,-121,-91,-94,-105,-106,-109,-110,-81,-85,-82,-75,-78,-18,-74,-86,-125,-69,-121,-12,-121,-121,-3,-84,-121,-133,-121,-17,-19,298,-16,]),'IF':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,39,40,41,42,43,44,45,46,47,48,49,50,51,69,71,72,73,74,89,91,92,94,95,102,103,106,107,110,111,128,129,136,138,140,141,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,173,174,187,188,189,190,191,192,200,202,203,205,207,209,210,221,222,224,225,236,244,248,262,265,277,294,],[32,32,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-121,-121,-121,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-131,-62,-114,-115,-125,-90,-92,-93,-95,-96,-103,-104,-107,-108,-111,-121,-47,-121,-128,-121,-83,-112,-121,-121,-97,-98,-99,-100,-101,-102,-121,-121,-121,-121,-22,-23,-24,-68,-87,-121,-91,-94,-105,-106,-109,-110,-81,-85,-82,227,-75,-78,-18,-74,-86,-125,-69,-121,-12,-121,-121,-3,-84,-19,]),'PRINT':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,39,40,41,42,43,44,45,46,47,48,49,50,51,69,71,72,73,74,75,89,91,92,94,95,102,103,106,107,110,111,128,129,136,138,140,141,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,171,173,174,187,188,189,190,191,192,200,202,203,207,209,210,221,222,224,225,236,244,248,262,265,277,294,],[33,33,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-121,-121,-121,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-131,-62,-114,-115,-125,33,-90,-92,-93,-95,-96,-103,-104,-107,-108,-111,-121,-47,-121,-128,-121,-83,-112,-121,-121,-97,-98,-99,-100,-101,-102,-121,-121,-121,-121,-22,-23,-24,33,-68,-87,-121,-91,-94,-105,-106,-109,-110,-81,-85,-82,-75,-78,-18,-74,-86,-125,-69,-121,-12,-121,-121,-3,-84,-19,]),'READ':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,39,40,41,42,43,44,45,46,47,48,49,50,51,69,71,72,73,74,75,89,91,92,94,95,102,103,106,107,110,111,128,129,136,138,140,141,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,171,173,174,187,188,189,190,191,192,200,202,203,207,209,210,221,222,224,225,236,244,248,262,265,277,294,],[34,34,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-121,-121,-121,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-131,-62,-114,-115,-125,34,-90,-92,-93,-95,-96,-103,-104,-107,-108,-111,-121,-47,-121,-128,-121,-83,-112,-121,-121,-97,-98,-99,-100,-101,-102,-121,-121,-121,-121,-22,-23,-24,34,-68,-87,-121,-91,-94,-105,-106,-109,-110,-81,-85,-82,-75,-78,-18,-74,-86,-125,-69,-121,-12,-121,-121,-3,-84,-19,]),'WHILE':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,39,40,41,42,43,44,45,46,47,48,49,50,51,69,71,72,73,74,89,91,92,94,95,102,103,106,107,110,111,128,129,136,138,140,141,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,173,174,187,188,189,190,191,192,200,202,203,207,209,210,221,222,224,225,236,244,248,262,265,277,294,],[35,35,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-121,-121,-121,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-131,-62,-114,-115,-125,-90,-92,-93,-95,-96,-103,-104,-107,-108,-111,-121,-47,-121,-128,-121,-83,-112,-121,-121,-97,-98,-99,-100,-101,-102,-121,-121,-121,-121,-22,-23,-24,-68,-87,-121,-91,-94,-105,-106,-109,-110,-81,-85,-82,-75,-78,-18,-74,-86,-125,-69,-121,-12,-121,-121,-3,-84,-19,]),'FOR':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,39,40,41,42,43,44,45,46,47,48,49,50,51,69,71,72,73,74,89,91,92,94,95,102,103,106,107,110,111,128,129,136,138,140,141,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,173,174,187,188,189,190,191,192,200,202,203,207,209,210,221,222,224,225,236,244,248,262,265,277,294,],[36,36,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-121,-121,-121,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-131,-62,-114,-115,-125,-90,-92,-93,-95,-96,-103,-104,-107,-108,-111,-121,-47,-121,-128,-121,-83,-112,-121,-121,-97,-98,-99,-100,-101,-102,-121,-121,-121,-121,-22,-23,-24,-68,-87,-121,-91,-94,-105,-106,-109,-110,-81,-85,-82,-75,-78,-18,-74,-86,-125,-69,-121,-12,-121,-121,-3,-84,-19,]),'FUNCTION':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,39,40,41,42,43,44,45,46,47,48,49,50,51,69,71,72,73,74,89,91,92,94,95,102,103,106,107,110,111,128,129,136,138,140,141,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,173,174,187,188,189,190,191,192,200,202,203,207,209,210,221,222,224,225,236,244,248,262,265,277,287,291,294,],[37,37,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-121,-121,-121,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-131,-62,-114,-115,-125,-90,-92,-93,-95,-96,-103,-104,-107,-108,-111,-121,-47,-121,-128,-121,-83,-112,-121,-121,-97,-98,-99,-100,-101,-102,-121,-121,-121,-121,-22,-23,-24,-68,-87,-121,-91,-94,-105,-106,-109,-110,-81,-85,-82,-75,-78,-18,-74,-86,-125,-69,-121,-12,-121,-121,-3,-84,37,37,-19,]),'CLASS':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,39,40,41,42,43,44,45,46,47,48,49,50,51,69,71,72,73,74,89,91,92,94,95,102,103,106,107,110,111,128,129,136,138,140,141,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,173,174,187,188,189,190,191,192,200,202,203,207,209,210,221,222,224,225,236,244,248,262,265,277,294,],[38,38,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-121,-121,-121,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-131,-62,-114,-115,-125,-90,-92,-93,-95,-96,-103,-104,-107,-108,-111,-121,-47,-121,-128,-121,-83,-112,-121,-121,-97,-98,-99,-100,-101,-102,-121,-121,-121,-121,-22,-23,-24,-68,-87,-121,-91,-94,-105,-106,-109,-110,-81,-85,-82,-75,-78,-18,-74,-86,-125,-69,-121,-12,-121,-121,-3,-84,-19,]),'OPAREN':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,39,40,41,42,43,44,45,46,47,48,49,50,51,69,71,72,73,74,75,76,77,80,81,82,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,128,129,136,137,138,139,140,141,149,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,171,173,174,179,185,187,188,189,190,191,192,198,200,202,203,207,209,210,214,221,222,224,225,227,236,244,248,262,265,277,294,],[31,31,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,31,-125,31,80,81,82,80,84,-121,-121,-121,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-131,-62,-114,-115,-125,31,31,137,31,31,31,-90,31,-92,-93,31,-95,-96,31,31,31,31,31,31,-103,-104,31,31,-107,-108,31,31,-111,-121,-47,137,-128,31,-121,31,-83,-112,-125,-121,-121,-97,-98,-99,-100,-101,-102,-121,-121,-121,-121,-22,-23,-24,31,-68,-87,-121,31,-129,-91,-94,-105,-106,-109,-110,31,-81,-85,-82,-75,-78,-18,230,-74,-86,-125,-69,80,-121,-12,-121,-121,-3,-84,-19,]),'CSTINT':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,27,31,39,40,41,42,43,44,45,46,47,48,49,50,51,69,71,72,73,74,75,76,80,81,82,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,128,129,136,137,138,139,140,141,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,171,173,174,179,183,187,188,189,190,191,192,198,200,202,203,207,209,210,220,221,222,224,225,229,236,244,248,250,259,262,265,277,293,294,],[45,45,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,45,45,-121,-121,-121,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-131,-62,-114,-115,-125,45,45,45,45,45,-90,45,-92,-93,45,-95,-96,45,45,45,45,45,45,-103,-104,45,45,-107,-108,45,45,-111,-121,-47,-121,-128,45,-121,45,-83,-112,-121,-121,-97,-98,-99,-100,-101,-102,-121,-121,-121,-121,-22,-23,-24,45,-68,-87,-121,45,213,-91,-94,-105,-106,-109,-110,45,-81,-85,-82,-75,-78,-18,234,-74,-86,-125,-69,213,-121,-12,-121,213,273,-121,-3,-84,297,-19,]),'CSTFLT':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,27,31,39,40,41,42,43,44,45,46,47,48,49,50,51,69,71,72,73,74,75,76,80,81,82,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,128,129,136,137,138,139,140,141,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,171,173,174,179,187,188,189,190,191,192,198,200,202,203,207,209,210,221,222,224,225,236,244,248,262,265,277,294,],[46,46,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,46,46,-121,-121,-121,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-131,-62,-114,-115,-125,46,46,46,46,46,-90,46,-92,-93,46,-95,-96,46,46,46,46,46,46,-103,-104,46,46,-107,-108,46,46,-111,-121,-47,-121,-128,46,-121,46,-83,-112,-121,-121,-97,-98,-99,-100,-101,-102,-121,-121,-121,-121,-22,-23,-24,46,-68,-87,-121,46,-91,-94,-105,-106,-109,-110,46,-81,-85,-82,-75,-78,-18,-74,-86,-125,-69,-121,-12,-121,-121,-3,-84,-19,]),'CSTCHAR':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,27,31,39,40,41,42,43,44,45,46,47,48,49,50,51,69,71,72,73,74,75,76,80,81,82,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,128,129,136,137,138,139,140,141,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,171,173,174,179,187,188,189,190,191,192,198,200,202,203,207,209,210,221,222,224,225,236,244,248,262,265,277,294,],[47,47,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,47,47,-121,-121,-121,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-131,-62,-114,-115,-125,47,47,47,47,47,-90,47,-92,-93,47,-95,-96,47,47,47,47,47,47,-103,-104,47,47,-107,-108,47,47,-111,-121,-47,-121,-128,47,-121,47,-83,-112,-121,-121,-97,-98,-99,-100,-101,-102,-121,-121,-121,-121,-22,-23,-24,47,-68,-87,-121,47,-91,-94,-105,-106,-109,-110,47,-81,-85,-82,-75,-78,-18,-74,-86,-125,-69,-121,-12,-121,-121,-3,-84,-19,]),'CSTSTRING':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,27,31,39,40,41,42,43,44,45,46,47,48,49,50,51,69,71,72,73,74,75,76,80,81,82,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,128,129,136,137,138,139,140,141,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,171,173,174,179,187,188,189,190,191,192,198,200,202,203,207,209,210,221,222,224,225,236,244,248,262,265,277,294,],[48,48,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,48,48,-121,-121,-121,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-131,-62,-114,-115,-125,48,48,48,48,48,-90,48,-92,-93,48,-95,-96,48,48,48,48,48,48,-103,-104,48,48,-107,-108,48,48,-111,-121,-47,-121,-128,48,-121,48,-83,-112,-121,-121,-97,-98,-99,-100,-101,-102,-121,-121,-121,-121,-22,-23,-24,48,-68,-87,-121,48,-91,-94,-105,-106,-109,-110,48,-81,-85,-82,-75,-78,-18,-74,-86,-125,-69,-121,-12,-121,-121,-3,-84,-19,]),'TRUE':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,27,31,39,40,41,42,43,44,45,46,47,48,49,50,51,69,71,72,73,74,75,76,80,81,82,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,128,129,136,137,138,139,140,141,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,171,173,174,179,187,188,189,190,191,192,198,200,202,203,207,209,210,221,222,224,225,236,244,248,262,265,277,294,],[50,50,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,50,50,-121,-121,-121,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-131,-62,-114,-115,-125,50,50,50,50,50,-90,50,-92,-93,50,-95,-96,50,50,50,50,50,50,-103,-104,50,50,-107,-108,50,50,-111,-121,-47,-121,-128,50,-121,50,-83,-112,-121,-121,-97,-98,-99,-100,-101,-102,-121,-121,-121,-121,-22,-23,-24,50,-68,-87,-121,50,-91,-94,-105,-106,-109,-110,50,-81,-85,-82,-75,-78,-18,-74,-86,-125,-69,-121,-12,-121,-121,-3,-84,-19,]),'FALSE':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,27,31,39,40,41,42,43,44,45,46,47,48,49,50,51,69,71,72,73,74,75,76,80,81,82,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,128,129,136,137,138,139,140,141,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,171,173,174,179,187,188,189,190,191,192,198,200,202,203,207,209,210,221,222,224,225,236,244,248,262,265,277,294,],[51,51,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,51,51,-121,-121,-121,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-131,-62,-114,-115,-125,51,51,51,51,51,-90,51,-92,-93,51,-95,-96,51,51,51,51,51,51,-103,-104,51,51,-107,-108,51,51,-111,-121,-47,-121,-128,51,-121,51,-83,-112,-121,-121,-97,-98,-99,-100,-101,-102,-121,-121,-121,-121,-22,-23,-24,51,-68,-87,-121,51,-91,-94,-105,-106,-109,-110,51,-81,-85,-82,-75,-78,-18,-74,-86,-125,-69,-121,-12,-121,-121,-3,-84,-19,]),'DATAFRAME':([10,],[57,]),'FILE':([10,],[58,]),'INT':([10,37,230,253,],[59,59,59,59,]),'FLOAT':([10,37,230,253,],[60,60,60,60,]),'BOOL':([10,37,230,253,],[61,61,61,61,]),'STRING':([10,37,230,253,],[62,62,62,62,]),'CHAR':([10,37,230,253,],[63,63,63,63,]),'INTS':([10,230,253,],[64,64,64,]),'FLOATS':([10,230,253,],[65,65,65,]),'BOOLS':([10,230,253,],[66,66,66,]),'STRINGS':([10,230,253,],[67,67,67,]),'CHARS':([10,230,253,],[68,68,68,]),'MULT':([16,29,30,43,44,45,46,47,48,49,50,51,72,73,74,77,129,132,138,140,141,162,163,173,174,200,202,203,222,224,236,248,262,277,],[-115,-114,-125,108,-113,-116,-117,-118,-119,-120,-79,-80,-114,-115,-125,-121,-121,-115,-121,-83,-112,108,108,-87,-121,-81,-85,-82,-86,-125,-121,-121,-121,-84,]),'DIV':([16,29,30,43,44,45,46,47,48,49,50,51,72,73,74,77,129,132,138,140,141,162,163,173,174,200,202,203,222,224,236,248,262,277,],[-115,-114,-125,109,-113,-116,-117,-118,-119,-120,-79,-80,-114,-115,-125,-121,-121,-115,-121,-83,-112,109,109,-87,-121,-81,-85,-82,-86,-125,-121,-121,-121,-84,]),'PLUS':([16,29,30,42,43,44,45,46,47,48,49,50,51,72,73,74,77,107,110,129,132,138,140,141,160,161,162,163,173,174,191,192,200,202,203,222,224,236,248,262,277,],[-115,-114,-125,104,-121,-113,-116,-117,-118,-119,-120,-79,-80,-114,-115,-125,-121,-108,-111,-121,-115,-121,-83,-112,104,104,-121,-121,-87,-121,-109,-110,-81,-85,-82,-86,-125,-121,-121,-121,-84,]),'MINUS':([16,29,30,42,43,44,45,46,47,48,49,50,51,72,73,74,77,107,110,129,132,138,140,141,160,161,162,163,173,174,191,192,200,202,203,222,224,236,248,262,277,],[-115,-114,-125,105,-121,-113,-116,-117,-118,-119,-120,-79,-80,-114,-115,-125,-121,-108,-111,-121,-115,-121,-83,-112,105,105,-121,-121,-87,-121,-109,-110,-81,-85,-82,-86,-125,-121,-121,-121,-84,]),'LT':([16,29,30,41,42,43,44,45,46,47,48,49,50,51,72,73,74,77,103,106,107,110,129,132,138,140,141,160,161,162,163,173,174,189,190,191,192,200,202,203,222,224,236,248,262,277,],[-115,-114,-125,96,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-114,-115,-125,-121,-104,-107,-108,-111,-121,-115,-121,-83,-112,-121,-121,-121,-121,-87,-121,-105,-106,-109,-110,-81,-85,-82,-86,-125,-121,-121,-121,-84,]),'GT':([16,29,30,41,42,43,44,45,46,47,48,49,50,51,72,73,74,77,103,106,107,110,129,132,138,140,141,160,161,162,163,173,174,189,190,191,192,200,202,203,222,224,236,248,262,277,],[-115,-114,-125,97,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-114,-115,-125,-121,-104,-107,-108,-111,-121,-115,-121,-83,-112,-121,-121,-121,-121,-87,-121,-105,-106,-109,-110,-81,-85,-82,-86,-125,-121,-121,-121,-84,]),'GTE':([16,29,30,41,42,43,44,45,46,47,48,49,50,51,72,73,74,77,103,106,107,110,129,132,138,140,141,160,161,162,163,173,174,189,190,191,192,200,202,203,222,224,236,248,262,277,],[-115,-114,-125,98,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-114,-115,-125,-121,-104,-107,-108,-111,-121,-115,-121,-83,-112,-121,-121,-121,-121,-87,-121,-105,-106,-109,-110,-81,-85,-82,-86,-125,-121,-121,-121,-84,]),'LTE':([16,29,30,41,42,43,44,45,46,47,48,49,50,51,72,73,74,77,103,106,107,110,129,132,138,140,141,160,161,162,163,173,174,189,190,191,192,200,202,203,222,224,236,248,262,277,],[-115,-114,-125,99,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-114,-115,-125,-121,-104,-107,-108,-111,-121,-115,-121,-83,-112,-121,-121,-121,-121,-87,-121,-105,-106,-109,-110,-81,-85,-82,-86,-125,-121,-121,-121,-84,]),'EQ':([16,29,30,41,42,43,44,45,46,47,48,49,50,51,72,73,74,77,103,106,107,110,129,132,138,140,141,160,161,162,163,173,174,189,190,191,192,200,202,203,222,224,236,248,262,277,],[-115,-114,-125,100,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-114,-115,-125,-121,-104,-107,-108,-111,-121,-115,-121,-83,-112,-121,-121,-121,-121,-87,-121,-105,-106,-109,-110,-81,-85,-82,-86,-125,-121,-121,-121,-84,]),'NE':([16,29,30,41,42,43,44,45,46,47,48,49,50,51,72,73,74,77,103,106,107,110,129,132,138,140,141,160,161,162,163,173,174,189,190,191,192,200,202,203,222,224,236,248,262,277,],[-115,-114,-125,101,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-114,-115,-125,-121,-104,-107,-108,-111,-121,-115,-121,-83,-112,-121,-121,-121,-121,-87,-121,-105,-106,-109,-110,-81,-85,-82,-86,-125,-121,-121,-121,-84,]),'AND':([16,29,30,40,41,42,43,44,45,46,47,48,49,50,51,72,73,74,77,95,102,103,106,107,110,129,132,138,140,141,153,154,155,156,157,158,159,160,161,162,163,173,174,189,190,191,192,200,202,203,222,224,236,248,262,277,],[-115,-114,-125,93,-121,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-114,-115,-125,-121,-96,-103,-104,-107,-108,-111,-121,-115,-121,-83,-112,93,-97,-98,-99,-100,-101,-102,-121,-121,-121,-121,-87,-121,-105,-106,-109,-110,-81,-85,-82,-86,-125,-121,-121,-121,-84,]),'OR':([16,29,30,39,40,41,42,43,44,45,46,47,48,49,50,51,72,73,74,77,92,94,95,102,103,106,107,110,129,132,138,140,141,152,153,154,155,156,157,158,159,160,161,162,163,173,174,188,189,190,191,192,200,202,203,222,224,236,248,262,277,],[-115,-114,-125,90,-121,-121,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-114,-115,-125,-121,-93,-95,-96,-103,-104,-107,-108,-111,-121,-115,-121,-83,-112,90,-121,-97,-98,-99,-100,-101,-102,-121,-121,-121,-121,-87,-121,-94,-105,-106,-109,-110,-81,-85,-82,-86,-125,-121,-121,-121,-84,]),'QUESTION':([16,28,29,30,39,40,41,42,43,44,45,46,47,48,49,50,51,72,73,74,77,89,91,92,94,95,102,103,106,107,110,129,132,138,140,141,152,153,154,155,156,157,158,159,160,161,162,163,173,174,187,188,189,190,191,192,200,202,203,222,224,236,248,262,277,],[-115,75,-114,-125,-121,-121,-121,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-114,-115,-125,-121,-90,-92,-93,-95,-96,-103,-104,-107,-108,-111,-121,-115,-121,-83,-112,-121,-121,-97,-98,-99,-100,-101,-102,-121,-121,-121,-121,-87,-121,-91,-94,-105,-106,-109,-110,-81,-85,-82,-86,-125,-121,-121,-121,-84,]),'AS':([29,30,77,138,140,174,200,202,203,224,236,248,262,277,],[76,-125,-121,-121,-83,-121,-81,-85,-82,-125,-121,-121,-121,-84,]),'OBRACKET':([30,74,77,115,129,138,140,148,169,184,195,203,224,236,247,248,256,268,281,284,288,299,],[-125,-125,139,-125,139,139,-83,-125,-127,139,220,-82,-125,139,259,139,-126,139,139,-125,293,259,]),'PERIOD':([30,74,77,129,138,140,148,174,184,203,224,236,248,262,],[-125,-125,-121,-121,-121,-83,-125,201,-121,-82,-125,-121,-121,201,]),'VOID':([37,],[87,]),'CPAREN':([39,40,41,42,43,44,45,46,47,48,49,50,51,72,73,74,78,89,91,92,94,95,102,103,106,107,110,129,137,138,140,141,143,144,145,148,152,153,154,155,156,157,158,159,160,161,162,163,172,173,174,178,180,181,184,187,188,189,190,191,192,197,199,200,202,203,208,211,213,222,223,224,228,230,235,236,239,240,241,248,252,254,255,256,262,264,266,267,268,277,280,281,286,],[-121,-121,-121,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-114,-115,-125,141,-90,-92,-93,-95,-96,-103,-104,-107,-108,-111,-121,173,-121,-83,-112,177,-121,-121,-125,-121,-121,-97,-98,-99,-100,-101,-102,-121,-121,-121,-121,-121,-87,-121,207,-77,209,-121,-91,-94,-105,-106,-109,-110,222,-89,-81,-85,-82,-121,-21,-20,-86,-121,-125,-76,-121,-88,-121,251,-121,-7,-121,-6,-9,-126,-126,-121,279,-121,-10,-121,-84,-8,-121,-11,]),'COLON':([39,40,41,42,43,44,45,46,47,48,49,50,51,72,73,74,88,89,91,92,94,95,102,103,106,107,110,129,130,131,132,133,134,135,136,138,140,141,151,152,153,154,155,156,157,158,159,160,161,162,163,171,173,174,186,187,188,189,190,191,192,200,202,203,207,209,221,222,224,236,245,248,262,277,282,],[-121,-121,-121,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-114,-115,-125,-125,-90,-92,-93,-95,-96,-103,-104,-107,-108,-111,-121,170,-63,-64,-65,-66,-67,-128,-121,-83,-112,-123,-121,-121,-97,-98,-99,-100,-101,-102,-121,-121,-121,-121,-68,-87,-121,215,-91,-94,-105,-106,-109,-110,-81,-85,-82,-75,-78,-74,-86,-125,-121,257,-121,-121,-84,287,]),'COMMA':([39,40,41,42,43,44,45,46,47,48,49,50,51,72,73,74,89,91,92,94,95,102,103,106,107,110,112,114,129,138,140,141,144,145,152,153,154,155,156,157,158,159,160,161,162,163,167,168,172,173,174,187,188,189,190,191,192,193,194,200,202,203,208,222,223,224,233,236,240,246,247,248,255,256,258,260,261,262,266,267,268,277,281,283,286,],[-121,-121,-121,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-114,-115,-125,-90,-92,-93,-95,-96,-103,-104,-107,-108,-111,-125,-125,-121,-121,-83,-112,179,179,-121,-121,-97,-98,-99,-100,-101,-102,-121,-121,-121,-121,-127,-127,198,-87,-121,-91,-94,-105,-106,-109,-110,217,217,-81,-85,-82,179,-86,198,-125,-125,-121,253,-127,-121,-121,-126,-126,217,275,-33,-121,253,-10,-121,-84,-121,-32,-11,]),'CBRACKET':([39,40,41,42,43,44,45,46,47,48,49,50,51,72,73,74,89,91,92,94,95,102,103,106,107,110,129,138,140,141,152,153,154,155,156,157,158,159,160,161,162,163,173,174,175,187,188,189,190,191,192,200,202,203,222,224,234,236,248,262,273,277,297,],[-121,-121,-121,-121,-121,-113,-116,-117,-118,-119,-120,-79,-80,-114,-115,-125,-90,-92,-93,-95,-96,-103,-104,-107,-108,-111,-121,-121,-83,-112,-121,-121,-97,-98,-99,-100,-101,-102,-121,-121,-121,-121,-87,-121,203,-91,-94,-105,-106,-109,-110,-81,-85,-82,-86,-125,247,-121,-121,-121,283,-84,299,]),'ELSE':([69,128,176,263,],[-131,-47,205,205,]),'THEN':([79,83,177,237,279,],[142,146,-73,249,285,]),'METHODS':([111,164,165,166,257,269,270,271,],[-121,-22,-23,-24,-121,282,-14,-15,]),'FROM':([138,140,147,148,174,184,200,202,203,224,236,248,262,277,],[-121,-83,183,-125,-121,-121,-81,-85,-82,-125,-121,-121,-121,-84,]),'TO':([138,140,148,174,184,200,202,203,211,212,213,224,236,248,262,277,],[-121,-83,-125,-121,-121,-81,-85,-82,-21,229,-20,-125,-121,-121,-121,-84,]),'BY':([138,140,148,174,184,200,202,203,211,213,224,236,238,248,262,277,],[-121,-83,-125,-121,-121,-81,-85,-82,-21,-20,-125,-121,250,-121,-121,-84,]),'ATTRIBUTES':([232,],[245,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'saw_id':([3,30,74,88,112,114,115,148,149,224,233,284,],[4,77,129,151,167,168,169,184,185,236,246,288,]),'saw_program':([4,],[5,]),'bloque':([6,8,9,13,142,146,205,249,251,285,],[7,11,23,23,176,182,226,263,265,289,]),'dec':([6,9,13,111,257,],[8,26,26,165,270,]),'b1':([9,13,],[12,70,]),'estatuto':([9,13,],[13,13,]),'empty':([9,13,39,40,41,42,43,77,111,129,138,144,145,152,153,160,161,162,163,172,174,176,184,193,194,208,223,230,236,240,247,248,257,258,260,262,263,266,268,281,287,291,299,],[14,14,91,94,102,106,110,140,166,140,140,180,180,91,94,106,106,110,110,199,202,206,140,218,218,180,199,241,140,254,261,140,271,218,276,202,206,254,140,140,292,292,261,]),'asignacion':([9,13,75,170,],[15,15,131,131,]),'llamada':([9,13,27,31,75,76,80,81,82,90,93,96,97,98,99,100,101,104,105,108,109,137,139,170,179,198,],[16,16,73,73,132,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,132,73,73,]),'condicion':([9,13,],[17,17,]),'escritura':([9,13,75,170,],[18,18,133,133,]),'leer':([9,13,75,170,],[19,19,134,134,]),'ciclo_while':([9,13,],[20,20,]),'ciclo_for':([9,13,],[21,21,]),'ternaria':([9,13,75,170,],[22,22,135,135,]),'funcion':([9,13,287,291,],[24,24,291,291,]),'clase':([9,13,],[25,25,]),'exp':([9,13,27,31,75,76,80,81,82,137,139,170,179,198,],[28,28,71,78,28,136,143,144,145,172,175,28,208,223,]),'variable':([9,13,27,31,75,76,80,81,82,84,90,93,96,97,98,99,100,101,104,105,108,109,137,139,170,179,183,198,229,250,],[29,29,72,72,29,72,72,72,72,147,72,72,72,72,72,72,72,72,72,72,72,72,72,72,29,72,211,72,211,211,]),'texp':([9,13,27,31,75,76,80,81,82,90,137,139,170,179,198,],[39,39,39,39,39,39,39,39,39,152,39,39,39,39,39,]),'gexp':([9,13,27,31,75,76,80,81,82,90,93,137,139,170,179,198,],[40,40,40,40,40,40,40,40,40,40,153,40,40,40,40,40,]),'mexp':([9,13,27,31,75,76,80,81,82,90,93,96,97,98,99,100,101,137,139,170,179,198,],[41,41,41,41,41,41,41,41,41,41,41,154,155,156,157,158,159,41,41,41,41,41,]),'termino':([9,13,27,31,75,76,80,81,82,90,93,96,97,98,99,100,101,104,105,137,139,170,179,198,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,160,161,42,42,42,42,42,]),'factor':([9,13,27,31,75,76,80,81,82,90,93,96,97,98,99,100,101,104,105,108,109,137,139,170,179,198,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,162,163,43,43,43,43,43,]),'varcst':([9,13,27,31,75,76,80,81,82,90,93,96,97,98,99,100,101,104,105,108,109,137,139,170,179,198,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'boolean':([9,13,27,31,75,76,80,81,82,90,93,96,97,98,99,100,101,104,105,108,109,137,139,170,179,198,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'tipo':([10,],[52,]),'compuesto':([10,],[53,]),'simple':([10,37,230,253,],[55,86,242,242,]),'multiple':([10,230,253,],[56,243,243,]),'cond2':([32,35,227,],[79,83,237,]),'func1':([37,],[85,]),'exp1':([39,152,],[89,187,]),'texp1':([40,153,],[92,188,]),'gexp1':([41,],[95,]),'mexp1':([42,160,161,],[103,189,190,]),'term1':([43,162,163,],[107,191,192,]),'saw_type':([54,57,58,59,60,61,62,63,64,65,66,67,68,87,],[113,116,117,118,119,120,121,122,123,124,125,126,127,150,]),'scope_end':([69,],[128,]),'estatuto_redux':([75,170,],[130,196,]),'variable1':([77,129,138,184,236,248,268,281,],[138,138,174,138,248,262,281,286,]),'dec1':([111,],[164,]),'saw_asig':([136,],[171,]),'e1':([144,145,208,],[178,181,228,]),'saw_class':([151,],[186,]),'saw_variable':([167,168,169,246,],[193,194,195,258,]),'llamada1':([172,223,],[197,235,]),'variable2':([174,262,],[200,277,]),'cond1':([176,263,],[204,278,]),'ciclo_for1':([183,229,250,],[212,238,264,]),'saw_function':([185,],[214,]),'tipo1':([193,194,258,],[216,219,272,]),'clase_bloque':([215,],[231,]),'param':([230,],[239,]),'param2':([230,253,],[240,266,]),'param1':([240,266,],[252,280,]),'tipo3':([247,299,],[260,300,]),'saw_id_param':([255,256,],[267,268,]),'clase_bloque1':([257,],[269,]),'tipo2':([260,],[274,]),'clase_metodos_bloque':([287,291,],[290,296,]),'class_scope_end':([290,],[295,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID saw_id saw_program SEMICOLON bloque','programa',6,'p_programa','plyler.py',157),
  ('programa -> PROGRAM ID saw_id saw_program SEMICOLON dec bloque','programa',7,'p_programa','plyler.py',158),
  ('funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque','funcion',9,'p_funcion','plyler.py',168),
  ('func1 -> simple','func1',1,'p_funcion1','plyler.py',177),
  ('func1 -> VOID saw_type','func1',2,'p_funcion1','plyler.py',178),
  ('param -> param2 param1','param',2,'p_param','plyler.py',187),
  ('param -> empty','param',1,'p_param','plyler.py',188),
  ('param1 -> COMMA param2 param1','param1',3,'p_param1','plyler.py',196),
  ('param1 -> empty','param1',1,'p_param1','plyler.py',197),
  ('param2 -> simple ID saw_id_param','param2',3,'p_param2','plyler.py',205),
  ('param2 -> multiple ID saw_id_param variable1 variable1','param2',5,'p_param2','plyler.py',206),
  ('clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON','clase',7,'p_clase','plyler.py',215),
  ('clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY','clase_bloque',9,'p_clase_bloque','plyler.py',222),
  ('clase_bloque1 -> dec','clase_bloque1',1,'p_clase_bloque1','plyler.py',228),
  ('clase_bloque1 -> empty','clase_bloque1',1,'p_clase_bloque1','plyler.py',229),
  ('clase_metodos_bloque -> funcion clase_metodos_bloque','clase_metodos_bloque',2,'p_clase_metodos_bloque','plyler.py',235),
  ('clase_metodos_bloque -> empty','clase_metodos_bloque',1,'p_clase_metodos_bloque','plyler.py',236),
  ('ciclo_while -> WHILE cond2 THEN bloque SEMICOLON','ciclo_while',5,'p_ciclo_while','plyler.py',244),
  ('ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON','ciclo_for',13,'p_ciclo_for','plyler.py',253),
  ('ciclo_for1 -> CSTINT','ciclo_for1',1,'p_ciclo_for1','plyler.py',260),
  ('ciclo_for1 -> variable','ciclo_for1',1,'p_ciclo_for1','plyler.py',261),
  ('dec -> VAR tipo SEMICOLON dec1','dec',4,'p_dec','plyler.py',269),
  ('dec1 -> dec','dec1',1,'p_dec1','plyler.py',275),
  ('dec1 -> empty','dec1',1,'p_dec1','plyler.py',276),
  ('tipo -> compuesto ID saw_id saw_variable tipo1','tipo',5,'p_tipo','plyler.py',284),
  ('tipo -> simple ID saw_id saw_variable tipo1','tipo',5,'p_tipo','plyler.py',285),
  ('tipo -> multiple ID saw_id saw_variable OBRACKET CSTINT CBRACKET tipo3 tipo2','tipo',9,'p_tipo','plyler.py',286),
  ('tipo1 -> COMMA ID saw_id saw_variable tipo1','tipo1',5,'p_tipo1','plyler.py',293),
  ('tipo1 -> empty','tipo1',1,'p_tipo1','plyler.py',294),
  ('tipo2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET tipo3','tipo2',7,'p_tipo2','plyler.py',301),
  ('tipo2 -> empty','tipo2',1,'p_tipo2','plyler.py',302),
  ('tipo3 -> OBRACKET CSTINT CBRACKET','tipo3',3,'p_tipo3','plyler.py',308),
  ('tipo3 -> empty','tipo3',1,'p_tipo3','plyler.py',309),
  ('simple -> INT saw_type','simple',2,'p_tipo_simple','plyler.py',315),
  ('simple -> FLOAT saw_type','simple',2,'p_tipo_simple','plyler.py',316),
  ('simple -> BOOL saw_type','simple',2,'p_tipo_simple','plyler.py',317),
  ('simple -> STRING saw_type','simple',2,'p_tipo_simple','plyler.py',318),
  ('simple -> CHAR saw_type','simple',2,'p_tipo_simple','plyler.py',319),
  ('multiple -> INTS saw_type','multiple',2,'p_tipo_multiple','plyler.py',326),
  ('multiple -> FLOATS saw_type','multiple',2,'p_tipo_multiple','plyler.py',327),
  ('multiple -> BOOLS saw_type','multiple',2,'p_tipo_multiple','plyler.py',328),
  ('multiple -> STRINGS saw_type','multiple',2,'p_tipo_multiple','plyler.py',329),
  ('multiple -> CHARS saw_type','multiple',2,'p_tipo_multiple','plyler.py',330),
  ('compuesto -> ID saw_type','compuesto',2,'p_tipo_compuesto','plyler.py',336),
  ('compuesto -> DATAFRAME saw_type','compuesto',2,'p_tipo_compuesto','plyler.py',337),
  ('compuesto -> FILE saw_type','compuesto',2,'p_tipo_compuesto','plyler.py',338),
  ('bloque -> OCURLY b1 CCURLY scope_end','bloque',4,'p_bloque','plyler.py',346),
  ('b1 -> estatuto b1','b1',2,'p_b1','plyler.py',352),
  ('b1 -> empty','b1',1,'p_b1','plyler.py',353),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','plyler.py',361),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','plyler.py',362),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','plyler.py',363),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','plyler.py',364),
  ('estatuto -> leer','estatuto',1,'p_estatuto','plyler.py',365),
  ('estatuto -> ciclo_while','estatuto',1,'p_estatuto','plyler.py',366),
  ('estatuto -> ciclo_for','estatuto',1,'p_estatuto','plyler.py',367),
  ('estatuto -> ternaria','estatuto',1,'p_estatuto','plyler.py',368),
  ('estatuto -> bloque','estatuto',1,'p_estatuto','plyler.py',369),
  ('estatuto -> funcion','estatuto',1,'p_estatuto','plyler.py',370),
  ('estatuto -> clase','estatuto',1,'p_estatuto','plyler.py',371),
  ('estatuto -> dec','estatuto',1,'p_estatuto','plyler.py',372),
  ('estatuto -> RETURN exp','estatuto',2,'p_estatuto','plyler.py',373),
  ('estatuto_redux -> asignacion','estatuto_redux',1,'p_estatuto_redux','plyler.py',379),
  ('estatuto_redux -> llamada','estatuto_redux',1,'p_estatuto_redux','plyler.py',380),
  ('estatuto_redux -> escritura','estatuto_redux',1,'p_estatuto_redux','plyler.py',381),
  ('estatuto_redux -> leer','estatuto_redux',1,'p_estatuto_redux','plyler.py',382),
  ('estatuto_redux -> ternaria','estatuto_redux',1,'p_estatuto_redux','plyler.py',383),
  ('asignacion -> variable AS exp saw_asig','asignacion',4,'p_asignacion','plyler.py',391),
  ('condicion -> IF cond2 THEN bloque cond1 SEMICOLON','condicion',6,'p_condicion','plyler.py',399),
  ('cond1 -> ELSE bloque','cond1',2,'p_cond1','plyler.py',405),
  ('cond1 -> ELSE IF cond2 THEN bloque cond1','cond1',6,'p_cond1','plyler.py',406),
  ('cond1 -> empty','cond1',1,'p_cond1','plyler.py',407),
  ('cond2 -> OPAREN exp CPAREN','cond2',3,'p_cond2','plyler.py',413),
  ('ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON','ternaria',6,'p_ternaria','plyler.py',421),
  ('escritura -> PRINT OPAREN exp e1 CPAREN','escritura',5,'p_escritura','plyler.py',429),
  ('e1 -> COMMA exp e1','e1',3,'p_e1','plyler.py',435),
  ('e1 -> empty','e1',1,'p_e1','plyler.py',436),
  ('leer -> READ OPAREN exp e1 CPAREN','leer',5,'p_leer','plyler.py',444),
  ('boolean -> TRUE','boolean',1,'p_boolean','plyler.py',452),
  ('boolean -> FALSE','boolean',1,'p_boolean','plyler.py',453),
  ('variable -> ID saw_id variable1 variable1 variable2','variable',5,'p_variable','plyler.py',461),
  ('variable1 -> OBRACKET exp CBRACKET','variable1',3,'p_variable1','plyler.py',467),
  ('variable1 -> empty','variable1',1,'p_variable1','plyler.py',468),
  ('variable2 -> PERIOD ID saw_id variable1 variable1 variable2','variable2',6,'p_variable2','plyler.py',474),
  ('variable2 -> empty','variable2',1,'p_variable2','plyler.py',475),
  ('llamada -> ID saw_id OPAREN exp llamada1 CPAREN','llamada',6,'p_llamada_funcion','plyler.py',483),
  ('llamada -> ID saw_id OPAREN CPAREN','llamada',4,'p_llamada_funcion','plyler.py',484),
  ('llamada1 -> COMMA exp llamada1','llamada1',3,'p_llamada_funcion1','plyler.py',490),
  ('llamada1 -> empty','llamada1',1,'p_llamada_funcion1','plyler.py',491),
  ('exp -> texp exp1','exp',2,'p_exp','plyler.py',499),
  ('exp1 -> OR texp exp1','exp1',3,'p_exp1','plyler.py',505),
  ('exp1 -> empty','exp1',1,'p_exp1','plyler.py',506),
  ('texp -> gexp texp1','texp',2,'p_texp','plyler.py',512),
  ('texp1 -> AND gexp texp1','texp1',3,'p_texp1','plyler.py',518),
  ('texp1 -> empty','texp1',1,'p_texp1','plyler.py',519),
  ('gexp -> mexp gexp1','gexp',2,'p_gexp','plyler.py',525),
  ('gexp1 -> LT mexp','gexp1',2,'p_gexp1','plyler.py',531),
  ('gexp1 -> GT mexp','gexp1',2,'p_gexp1','plyler.py',532),
  ('gexp1 -> GTE mexp','gexp1',2,'p_gexp1','plyler.py',533),
  ('gexp1 -> LTE mexp','gexp1',2,'p_gexp1','plyler.py',534),
  ('gexp1 -> EQ mexp','gexp1',2,'p_gexp1','plyler.py',535),
  ('gexp1 -> NE mexp','gexp1',2,'p_gexp1','plyler.py',536),
  ('gexp1 -> empty','gexp1',1,'p_gexp1','plyler.py',537),
  ('mexp -> termino mexp1','mexp',2,'p_mexp','plyler.py',543),
  ('mexp1 -> PLUS termino mexp1','mexp1',3,'p_mexp1','plyler.py',549),
  ('mexp1 -> MINUS termino mexp1','mexp1',3,'p_mexp1','plyler.py',550),
  ('mexp1 -> empty','mexp1',1,'p_mexp1','plyler.py',551),
  ('termino -> factor term1','termino',2,'p_termino','plyler.py',559),
  ('term1 -> MULT factor term1','term1',3,'p_term1','plyler.py',565),
  ('term1 -> DIV factor term1','term1',3,'p_term1','plyler.py',566),
  ('term1 -> empty','term1',1,'p_term1','plyler.py',567),
  ('factor -> OPAREN exp CPAREN','factor',3,'p_factor','plyler.py',575),
  ('factor -> varcst','factor',1,'p_factor','plyler.py',576),
  ('factor -> variable','factor',1,'p_factor','plyler.py',577),
  ('factor -> llamada','factor',1,'p_factor','plyler.py',578),
  ('varcst -> CSTINT','varcst',1,'p_varcst','plyler.py',586),
  ('varcst -> CSTFLT','varcst',1,'p_varcst','plyler.py',587),
  ('varcst -> CSTCHAR','varcst',1,'p_varcst','plyler.py',588),
  ('varcst -> CSTSTRING','varcst',1,'p_varcst','plyler.py',589),
  ('varcst -> boolean','varcst',1,'p_varcst','plyler.py',590),
  ('empty -> <empty>','empty',0,'p_empty','plyler.py',598),
  ('saw_program -> <empty>','saw_program',0,'p_saw_program','plyler.py',611),
  ('saw_class -> <empty>','saw_class',0,'p_saw_class','plyler.py',618),
  ('saw_type -> <empty>','saw_type',0,'p_saw_type','plyler.py',627),
  ('saw_id -> <empty>','saw_id',0,'p_saw_id','plyler.py',634),
  ('saw_id_param -> <empty>','saw_id_param',0,'p_saw_id_param','plyler.py',641),
  ('saw_variable -> <empty>','saw_variable',0,'p_saw_variable','plyler.py',651),
  ('saw_asig -> <empty>','saw_asig',0,'p_saw_asig','plyler.py',657),
  ('saw_function -> <empty>','saw_function',0,'p_saw_function','plyler.py',663),
  ('scope_start -> <empty>','scope_start',0,'p_scope_start','plyler.py',670),
  ('scope_end -> <empty>','scope_end',0,'p_scope_end','plyler.py',676),
  ('class_scope_start -> <empty>','class_scope_start',0,'p_class_scope_start','plyler.py',683),
  ('class_scope_end -> <empty>','class_scope_end',0,'p_class_scope_end','plyler.py',689),
]
