
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ATTRIBUTES BOOL BOOLS BY CBRACKET CCURLY CHAR CHARS CLASS COLON COMMA COMMENT CPAREN CSTCHAR CSTFLT CSTINT CSTSTRING DATAFRAME DIV ELSE EQ FALSE FILE FLOAT FLOATS FOR FROM FUNCTION GT GTE ID IF INT INTS LT LTE METHODS MINUS MULT NE OBRACKET OCURLY OPAREN OR PERIOD PLUS PRINT PROGRAM QUESTION READ RETURN SEMICOLON STRING STRINGS THEN TO TRUE VAR VOID WHILE\n  programa : PROGRAM ID SEMICOLON bloque\n           | PROGRAM ID SEMICOLON dec bloque\n  \n  funcion : FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque\n  \n  func1 : simple\n        | VOID saw_type\n  \n  param : param2 param1\n        | empty\n  \n  param1 : COMMA param2 param1\n         | empty\n  \n  param2 : simple ID saw_id saw_variable_param\n         | multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable_param\n  \n    clase : CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON\n   \n  clase_bloque :  OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY\n   \n  clase_bloque1 : dec\n                | empty\n   \n  clase_metodos_bloque : funcion clase_metodos_bloque\n                       | empty\n  \n  ciclo_while : WHILE saw_while cond2 THEN bloque_ciclo SEMICOLON saw_while_end\n  \n  ciclo_for : FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON\n  \n  ciclo_for1 : CSTINT\n             | variable\n  \n  dec : VAR tipo SEMICOLON dec1\n  \n  dec1 : dec\n       | empty\n  \n  tipo : compuesto ID saw_id saw_variable tipo1\n       | simple ID saw_id saw_variable tipo1\n       | multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable tipo2\n  \n  tipo1 : COMMA ID saw_id saw_variable tipo1\n        | empty\n  \n  tipo2 : COMMA ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable\n        | empty\n  \n  tipo3 : OBRACKET CSTINT CBRACKET saw_dimension\n        | empty\n  \n  simple : INT saw_type\n         | FLOAT saw_type\n         | BOOL saw_type\n         | STRING saw_type\n         | CHAR saw_type\n  \n  multiple : INTS saw_type\n           | FLOATS saw_type\n           | BOOLS saw_type\n           | STRINGS saw_type\n           | CHARS saw_type\n  \n  compuesto : ID saw_type\n            | DATAFRAME saw_type\n            | FILE saw_type\n  \n  bloque : OCURLY b1 CCURLY scope_end\n  \n  b1 : estatuto b1\n     | empty\n  \n  bloque_ciclo : OCURLY bc1 CCURLY\n  \n  bc1 : estatuto_ciclo bc1\n      | empty\n  \n  estatuto : asignacion\n           | llamada\n           | condicion\n           | escritura\n           | leer\n           | ciclo_while\n           | ciclo_for\n           | ternaria\n           | bloque\n           | funcion\n           | clase\n           | dec\n  \n  estatuto_ciclo : asignacion\n                 | condicion\n                 | escritura\n                 | leer\n                 | ciclo_while\n                 | ciclo_for\n                 | dec\n  \n  estatuto_redux : asignacion\n                 | llamada\n                 | escritura\n                 | leer\n                 | ternaria\n  \n  asignacion : variable saw_var_factor AS saw_asig exp\n  \n  condicion : IF cond2 THEN bloque_ciclo cond1 SEMICOLON bc_end\n  \n  cond1 : ELSE saw_else bloque_ciclo\n        | empty\n  \n    cond2 : OPAREN exp CPAREN\n  \n  ternaria : exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON\n  \n  escritura : PRINT saw_print OPAREN exp e1 CPAREN saw_print_end\n  \n  e1 : COMMA exp e1\n     | empty\n  \n  leer  : READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end\n  \n  l1 : COMMA variable saw_read_exp e1\n     | empty\n  \n  boolean : TRUE\n          | FALSE\n  \n  variable : ID saw_id saw_called_var\n           | ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var\n           | ID saw_id variable2\n  \n  variable1 : OBRACKET exp CBRACKET saw_dimension\n            | empty\n  \n  variable2 : PERIOD ID saw_called_var_from_class\n            | PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1\n  \n  llamada : ID saw_id OPAREN exp llamada1 CPAREN\n          | ID saw_id OPAREN CPAREN\n  \n  llamada1 : COMMA exp llamada1\n           | empty\n  \n  exp : texp exp1 check_or_operator\n  \n  exp1 : OR saw_or texp exp1\n       | empty\n  \n  texp : gexp texp1 check_and_operator\n  \n  texp1 : AND saw_and gexp texp1\n        | empty\n  \n  gexp : mexp gexp1 check_relational_operator\n  \n  gexp1 : LT saw_relational_operator mexp\n        | GT saw_relational_operator mexp\n        | GTE saw_relational_operator mexp\n        | LTE saw_relational_operator mexp\n        | EQ saw_relational_operator mexp\n        | NE saw_relational_operator mexp\n        | empty\n  \n  mexp : termino mexp1\n  \n  mexp1 : PLUS saw_plusminus_operator termino mexp1\n        | MINUS saw_plusminus_operator termino mexp1\n        | empty\n  \n  termino : factor term1 check_plusminus_operator\n  \n  term1 : MULT saw_multdiv_operator factor term1\n        | DIV saw_multdiv_operator factor term1\n        | empty\n  \n  factor : OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator\n         | varcst check_multdiv_operator\n         | variable saw_var_factor check_multdiv_operator\n         | llamada\n  \n  saw_var_factor :\n  \n  varcst : CSTINT saw_end_value\n         | CSTFLT saw_end_value\n         | CSTCHAR saw_end_value\n         | CSTSTRING saw_end_value\n         | boolean saw_end_value\n  \n  empty : \n   saw_class :  saw_type :  saw_id :  saw_variable :  saw_variable_param :  saw_dimension :  saw_called_var :  saw_called_var_from_class :  saw_asig :  saw_end_value :  saw_plusminus_operator  :  check_plusminus_operator  :  saw_multdiv_operator  :  check_multdiv_operator  :  saw_relational_operator :  check_relational_operator : \n  check_and_operator  :\n  \n  check_or_operator :\n  \n  saw_and  :\n  \n  saw_or :\n   saw_oparen :  saw_cparen :  saw_function :  scope_end :  class_scope_end :  saw_print :  saw_print_end :  saw_read :  saw_read_exp :  saw_read_end :  bc_end : saw_else : saw_while :  saw_while_end : '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,5,9,66,127,],[0,-1,-2,-158,-47,]),'ID':([2,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,28,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,71,73,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,136,137,138,139,140,142,143,144,147,148,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,178,180,182,183,184,185,187,192,196,197,198,199,200,201,202,203,204,205,206,207,211,214,216,217,218,223,225,226,227,228,229,230,231,234,243,244,245,246,247,248,250,254,255,257,258,259,260,265,268,270,271,278,279,280,282,284,286,288,293,294,295,300,301,302,304,316,317,320,330,331,339,352,],[3,27,51,27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-155,81,-134,-134,-134,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,111,-136,113,114,-136,-136,-136,-136,-136,-136,-136,-136,-136,-136,-136,-136,-158,27,144,144,151,152,-4,-136,-152,-154,-104,-151,-153,-107,-150,-149,-149,-149,-149,-149,-149,-115,-116,-145,-145,-119,-146,-147,-147,-123,-125,-129,-130,-131,-132,-133,-134,-44,-45,-46,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-47,-143,-126,144,-91,144,-93,182,-128,-127,-137,144,151,-5,-102,144,-105,144,-108,144,144,144,144,144,144,144,144,-120,144,144,-22,-23,-24,144,27,-99,-142,-156,-148,-141,151,151,-134,-134,-109,-110,-111,-112,-113,-114,-134,-134,-134,-134,-77,144,-140,-96,-148,151,-65,-66,-67,-68,-69,-70,-71,144,-103,-106,-117,-118,-121,-122,275,-82,-98,-134,144,-124,-165,-161,151,-168,151,144,-141,-95,-78,-83,-164,-18,309,310,-12,-92,-140,-86,151,-140,-134,-3,-94,-97,345,-19,]),'SEMICOLON':([3,36,37,38,39,40,41,42,43,44,45,46,47,48,49,82,84,85,87,88,95,96,99,100,103,104,105,106,107,108,109,111,113,129,131,132,133,134,135,137,139,142,143,144,155,157,159,168,174,175,180,182,183,184,185,186,196,197,198,199,200,201,202,203,204,205,206,207,208,209,211,212,216,217,218,219,221,237,243,244,245,246,247,248,249,251,252,254,255,257,259,262,265,273,275,276,279,280,283,284,286,297,298,300,301,302,312,314,315,316,317,327,329,330,331,337,338,340,344,346,358,361,362,363,364,],[4,-134,-134,-134,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,110,-152,-104,-151,-107,-150,-115,-116,-119,-146,-123,-125,-129,-130,-131,-132,-133,-137,-137,-126,-72,-73,-74,-75,-76,-91,-93,-128,-127,-137,-102,-105,-108,-120,-138,-138,-99,-142,-156,-148,-141,-134,-134,-134,-109,-110,-111,-112,-113,-114,-134,-134,-134,-134,-134,-134,-77,254,-140,-96,-148,260,-80,270,-103,-106,-117,-118,-121,-122,-25,-29,-26,-82,-98,-134,-124,-50,-161,295,-137,-140,-141,-95,-79,-83,-164,-138,-134,-92,-140,-86,-134,-138,-33,-140,-134,-28,-134,-94,-97,-140,-27,-31,-32,352,-13,-140,-134,-138,-30,]),'OCURLY':([4,6,7,11,13,14,15,16,17,18,19,20,21,22,23,24,36,37,38,39,40,41,42,43,44,45,46,47,48,66,82,84,85,87,88,95,96,99,100,103,104,105,106,107,108,109,110,127,129,137,139,142,143,144,145,155,157,159,168,171,172,173,180,182,183,184,185,191,196,197,198,199,200,201,202,203,204,205,206,207,211,216,217,218,220,242,243,244,245,246,247,248,254,255,257,259,260,261,265,270,279,280,282,284,286,288,295,300,301,302,305,316,317,320,330,331,341,352,],[7,7,7,7,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-134,-134,-134,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-158,-152,-104,-151,-107,-150,-115,-116,-119,-146,-123,-125,-129,-130,-131,-132,-133,-134,-47,-126,-91,-93,-128,-127,-137,187,-102,-105,-108,-120,-22,-23,-24,-99,-142,-156,-148,-141,187,-134,-134,-109,-110,-111,-112,-113,-114,-134,-134,-134,-134,-77,-140,-96,-148,-166,274,-103,-106,-117,-118,-121,-122,-82,-98,-134,-124,-165,187,-161,-168,-141,-95,-78,-83,-164,-18,-12,-92,-140,-86,7,-140,-134,-3,-94,-97,187,-19,]),'VAR':([4,7,11,13,14,15,16,17,18,19,20,21,22,23,24,36,37,38,39,40,41,42,43,44,45,46,47,48,66,82,84,85,87,88,95,96,99,100,103,104,105,106,107,108,109,110,127,129,137,139,142,143,144,155,157,159,168,171,172,173,180,182,183,184,185,187,196,197,198,199,200,201,202,203,204,205,206,207,211,216,217,218,223,225,226,227,228,229,230,231,243,244,245,246,247,248,254,255,257,259,260,265,270,279,280,282,284,286,288,295,300,301,302,311,316,317,320,330,331,352,],[8,8,8,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-134,-134,-134,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-158,-152,-104,-151,-107,-150,-115,-116,-119,-146,-123,-125,-129,-130,-131,-132,-133,8,-47,-126,-91,-93,-128,-127,-137,-102,-105,-108,-120,-22,-23,-24,-99,-142,-156,-148,-141,8,-134,-134,-109,-110,-111,-112,-113,-114,-134,-134,-134,-134,-77,-140,-96,-148,8,-65,-66,-67,-68,-69,-70,-71,-103,-106,-117,-118,-121,-122,-82,-98,-134,-124,-165,-161,-168,-141,-95,-78,-83,-164,-18,-12,-92,-140,-86,8,-140,-134,-3,-94,-97,-19,]),'CCURLY':([7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,36,37,38,39,40,41,42,43,44,45,46,47,48,66,67,82,84,85,87,88,95,96,99,100,103,104,105,106,107,108,109,110,127,129,137,139,142,143,144,155,157,159,168,171,172,173,180,182,183,184,185,187,196,197,198,199,200,201,202,203,204,205,206,207,211,216,217,218,222,223,224,225,226,227,228,229,230,231,243,244,245,246,247,248,254,255,257,259,260,263,265,270,279,280,282,284,286,288,295,300,301,302,316,317,320,330,331,343,348,349,350,352,354,355,],[-134,66,-134,-49,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-134,-134,-134,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-158,-48,-152,-104,-151,-107,-150,-115,-116,-119,-146,-123,-125,-129,-130,-131,-132,-133,-134,-47,-126,-91,-93,-128,-127,-137,-102,-105,-108,-120,-22,-23,-24,-99,-142,-156,-148,-141,-134,-134,-134,-109,-110,-111,-112,-113,-114,-134,-134,-134,-134,-77,-140,-96,-148,262,-134,-52,-65,-66,-67,-68,-69,-70,-71,-103,-106,-117,-118,-121,-122,-82,-98,-134,-124,-165,-51,-161,-168,-141,-95,-78,-83,-164,-18,-12,-92,-140,-86,-140,-134,-3,-94,-97,-134,-159,-134,-17,-19,358,-16,]),'IF':([7,11,13,14,15,16,17,18,19,20,21,22,23,24,36,37,38,39,40,41,42,43,44,45,46,47,48,66,82,84,85,87,88,95,96,99,100,103,104,105,106,107,108,109,110,127,129,137,139,142,143,144,155,157,159,168,171,172,173,180,182,183,184,185,187,196,197,198,199,200,201,202,203,204,205,206,207,211,216,217,218,223,225,226,227,228,229,230,231,243,244,245,246,247,248,254,255,257,259,260,265,270,279,280,282,284,286,288,295,300,301,302,316,317,320,330,331,352,],[29,29,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-134,-134,-134,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-158,-152,-104,-151,-107,-150,-115,-116,-119,-146,-123,-125,-129,-130,-131,-132,-133,-134,-47,-126,-91,-93,-128,-127,-137,-102,-105,-108,-120,-22,-23,-24,-99,-142,-156,-148,-141,29,-134,-134,-109,-110,-111,-112,-113,-114,-134,-134,-134,-134,-77,-140,-96,-148,29,-65,-66,-67,-68,-69,-70,-71,-103,-106,-117,-118,-121,-122,-82,-98,-134,-124,-165,-161,-168,-141,-95,-78,-83,-164,-18,-12,-92,-140,-86,-140,-134,-3,-94,-97,-19,]),'PRINT':([7,11,13,14,15,16,17,18,19,20,21,22,23,24,36,37,38,39,40,41,42,43,44,45,46,47,48,66,69,82,84,85,87,88,95,96,99,100,103,104,105,106,107,108,109,110,127,129,137,139,142,143,144,155,157,159,168,171,172,173,178,180,182,183,184,185,187,196,197,198,199,200,201,202,203,204,205,206,207,211,216,217,218,223,225,226,227,228,229,230,231,243,244,245,246,247,248,254,255,257,259,260,265,270,279,280,282,284,286,288,295,300,301,302,316,317,320,330,331,352,],[30,30,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-134,-134,-134,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-158,30,-152,-104,-151,-107,-150,-115,-116,-119,-146,-123,-125,-129,-130,-131,-132,-133,-134,-47,-126,-91,-93,-128,-127,-137,-102,-105,-108,-120,-22,-23,-24,30,-99,-142,-156,-148,-141,30,-134,-134,-109,-110,-111,-112,-113,-114,-134,-134,-134,-134,-77,-140,-96,-148,30,-65,-66,-67,-68,-69,-70,-71,-103,-106,-117,-118,-121,-122,-82,-98,-134,-124,-165,-161,-168,-141,-95,-78,-83,-164,-18,-12,-92,-140,-86,-140,-134,-3,-94,-97,-19,]),'READ':([7,11,13,14,15,16,17,18,19,20,21,22,23,24,36,37,38,39,40,41,42,43,44,45,46,47,48,66,69,82,84,85,87,88,95,96,99,100,103,104,105,106,107,108,109,110,127,129,137,139,142,143,144,155,157,159,168,171,172,173,178,180,182,183,184,185,187,196,197,198,199,200,201,202,203,204,205,206,207,211,216,217,218,223,225,226,227,228,229,230,231,243,244,245,246,247,248,254,255,257,259,260,265,270,279,280,282,284,286,288,295,300,301,302,316,317,320,330,331,352,],[31,31,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-134,-134,-134,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-158,31,-152,-104,-151,-107,-150,-115,-116,-119,-146,-123,-125,-129,-130,-131,-132,-133,-134,-47,-126,-91,-93,-128,-127,-137,-102,-105,-108,-120,-22,-23,-24,31,-99,-142,-156,-148,-141,31,-134,-134,-109,-110,-111,-112,-113,-114,-134,-134,-134,-134,-77,-140,-96,-148,31,-65,-66,-67,-68,-69,-70,-71,-103,-106,-117,-118,-121,-122,-82,-98,-134,-124,-165,-161,-168,-141,-95,-78,-83,-164,-18,-12,-92,-140,-86,-140,-134,-3,-94,-97,-19,]),'WHILE':([7,11,13,14,15,16,17,18,19,20,21,22,23,24,36,37,38,39,40,41,42,43,44,45,46,47,48,66,82,84,85,87,88,95,96,99,100,103,104,105,106,107,108,109,110,127,129,137,139,142,143,144,155,157,159,168,171,172,173,180,182,183,184,185,187,196,197,198,199,200,201,202,203,204,205,206,207,211,216,217,218,223,225,226,227,228,229,230,231,243,244,245,246,247,248,254,255,257,259,260,265,270,279,280,282,284,286,288,295,300,301,302,316,317,320,330,331,352,],[32,32,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-134,-134,-134,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-158,-152,-104,-151,-107,-150,-115,-116,-119,-146,-123,-125,-129,-130,-131,-132,-133,-134,-47,-126,-91,-93,-128,-127,-137,-102,-105,-108,-120,-22,-23,-24,-99,-142,-156,-148,-141,32,-134,-134,-109,-110,-111,-112,-113,-114,-134,-134,-134,-134,-77,-140,-96,-148,32,-65,-66,-67,-68,-69,-70,-71,-103,-106,-117,-118,-121,-122,-82,-98,-134,-124,-165,-161,-168,-141,-95,-78,-83,-164,-18,-12,-92,-140,-86,-140,-134,-3,-94,-97,-19,]),'FOR':([7,11,13,14,15,16,17,18,19,20,21,22,23,24,36,37,38,39,40,41,42,43,44,45,46,47,48,66,82,84,85,87,88,95,96,99,100,103,104,105,106,107,108,109,110,127,129,137,139,142,143,144,155,157,159,168,171,172,173,180,182,183,184,185,187,196,197,198,199,200,201,202,203,204,205,206,207,211,216,217,218,223,225,226,227,228,229,230,231,243,244,245,246,247,248,254,255,257,259,260,265,270,279,280,282,284,286,288,295,300,301,302,316,317,320,330,331,352,],[33,33,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-134,-134,-134,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-158,-152,-104,-151,-107,-150,-115,-116,-119,-146,-123,-125,-129,-130,-131,-132,-133,-134,-47,-126,-91,-93,-128,-127,-137,-102,-105,-108,-120,-22,-23,-24,-99,-142,-156,-148,-141,33,-134,-134,-109,-110,-111,-112,-113,-114,-134,-134,-134,-134,-77,-140,-96,-148,33,-65,-66,-67,-68,-69,-70,-71,-103,-106,-117,-118,-121,-122,-82,-98,-134,-124,-165,-161,-168,-141,-95,-78,-83,-164,-18,-12,-92,-140,-86,-140,-134,-3,-94,-97,-19,]),'FUNCTION':([7,11,13,14,15,16,17,18,19,20,21,22,23,24,36,37,38,39,40,41,42,43,44,45,46,47,48,66,82,84,85,87,88,95,96,99,100,103,104,105,106,107,108,109,110,127,129,137,139,142,143,144,155,157,159,168,171,172,173,180,182,183,184,185,196,197,198,199,200,201,202,203,204,205,206,207,211,216,217,218,243,244,245,246,247,248,254,255,257,259,260,265,270,279,280,282,284,286,288,295,300,301,302,316,317,320,330,331,343,349,352,],[34,34,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-134,-134,-134,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-158,-152,-104,-151,-107,-150,-115,-116,-119,-146,-123,-125,-129,-130,-131,-132,-133,-134,-47,-126,-91,-93,-128,-127,-137,-102,-105,-108,-120,-22,-23,-24,-99,-142,-156,-148,-141,-134,-134,-109,-110,-111,-112,-113,-114,-134,-134,-134,-134,-77,-140,-96,-148,-103,-106,-117,-118,-121,-122,-82,-98,-134,-124,-165,-161,-168,-141,-95,-78,-83,-164,-18,-12,-92,-140,-86,-140,-134,-3,-94,-97,34,34,-19,]),'CLASS':([7,11,13,14,15,16,17,18,19,20,21,22,23,24,36,37,38,39,40,41,42,43,44,45,46,47,48,66,82,84,85,87,88,95,96,99,100,103,104,105,106,107,108,109,110,127,129,137,139,142,143,144,155,157,159,168,171,172,173,180,182,183,184,185,196,197,198,199,200,201,202,203,204,205,206,207,211,216,217,218,243,244,245,246,247,248,254,255,257,259,260,265,270,279,280,282,284,286,288,295,300,301,302,316,317,320,330,331,352,],[35,35,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-134,-134,-134,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-158,-152,-104,-151,-107,-150,-115,-116,-119,-146,-123,-125,-129,-130,-131,-132,-133,-134,-47,-126,-91,-93,-128,-127,-137,-102,-105,-108,-120,-22,-23,-24,-99,-142,-156,-148,-141,-134,-134,-109,-110,-111,-112,-113,-114,-134,-134,-134,-134,-77,-140,-96,-148,-103,-106,-117,-118,-121,-122,-82,-98,-134,-124,-165,-161,-168,-141,-95,-78,-83,-164,-18,-12,-92,-140,-86,-140,-134,-3,-94,-97,-19,]),'OPAREN':([7,11,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,48,66,69,70,71,73,74,75,76,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,127,128,129,136,137,138,139,142,143,144,147,152,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,178,180,182,183,184,185,194,196,197,198,199,200,201,202,203,204,205,206,207,211,214,216,217,218,234,241,243,244,245,246,247,248,254,255,257,258,259,260,265,270,278,279,280,282,284,286,288,295,300,301,302,316,317,320,330,331,352,],[28,28,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-137,-155,73,-160,-162,-167,77,-134,-134,-134,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-158,28,136,28,28,147,148,73,-152,-154,-104,-151,-153,-107,-150,-149,-149,-149,-149,-149,-149,-115,-116,-145,-145,-119,-146,-147,-147,-123,-125,-129,-130,-131,-132,-133,-134,-47,-143,-126,28,-91,28,-93,-128,-127,-137,28,-137,-102,28,-105,28,-108,28,28,28,28,28,28,28,28,-120,28,28,-22,-23,-24,28,28,-99,-142,-156,-148,136,-157,-134,-134,-109,-110,-111,-112,-113,-114,-134,-134,-134,-134,-77,28,-140,-96,-148,28,272,-103,-106,-117,-118,-121,-122,-82,-98,-134,28,-124,-165,-161,-168,28,-141,-95,-78,-83,-164,-18,-12,-92,-140,-86,-140,-134,-3,-94,-97,-19,]),'CSTINT':([7,11,13,14,15,16,17,18,19,20,21,22,23,24,28,36,37,38,39,40,41,42,43,44,45,46,47,48,66,69,71,73,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,127,128,129,136,137,138,139,142,143,144,147,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,178,180,182,183,184,185,192,196,197,198,199,200,201,202,203,204,205,206,207,210,211,214,216,217,218,234,243,244,245,246,247,248,254,255,257,258,259,260,265,270,271,278,279,280,282,284,286,288,295,300,301,302,304,313,316,317,320,330,331,335,352,356,],[42,42,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-155,-134,-134,-134,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-158,42,42,42,-152,-154,-104,-151,-153,-107,-150,-149,-149,-149,-149,-149,-149,-115,-116,-145,-145,-119,-146,-147,-147,-123,-125,-129,-130,-131,-132,-133,-134,-47,-143,-126,42,-91,42,-93,-128,-127,-137,42,-102,42,-105,42,-108,42,42,42,42,42,42,42,42,-120,42,42,-22,-23,-24,42,42,-99,-142,-156,-148,-141,240,-134,-134,-109,-110,-111,-112,-113,-114,-134,-134,-134,-134,253,-77,42,-140,-96,-148,42,-103,-106,-117,-118,-121,-122,-82,-98,-134,42,-124,-165,-161,-168,240,42,-141,-95,-78,-83,-164,-18,-12,-92,-140,-86,240,328,-140,-134,-3,-94,-97,342,-19,359,]),'CSTFLT':([7,11,13,14,15,16,17,18,19,20,21,22,23,24,28,36,37,38,39,40,41,42,43,44,45,46,47,48,66,69,71,73,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,127,128,129,136,137,138,139,142,143,144,147,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,178,180,182,183,184,185,196,197,198,199,200,201,202,203,204,205,206,207,211,214,216,217,218,234,243,244,245,246,247,248,254,255,257,258,259,260,265,270,278,279,280,282,284,286,288,295,300,301,302,316,317,320,330,331,352,],[43,43,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-155,-134,-134,-134,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-158,43,43,43,-152,-154,-104,-151,-153,-107,-150,-149,-149,-149,-149,-149,-149,-115,-116,-145,-145,-119,-146,-147,-147,-123,-125,-129,-130,-131,-132,-133,-134,-47,-143,-126,43,-91,43,-93,-128,-127,-137,43,-102,43,-105,43,-108,43,43,43,43,43,43,43,43,-120,43,43,-22,-23,-24,43,43,-99,-142,-156,-148,-141,-134,-134,-109,-110,-111,-112,-113,-114,-134,-134,-134,-134,-77,43,-140,-96,-148,43,-103,-106,-117,-118,-121,-122,-82,-98,-134,43,-124,-165,-161,-168,43,-141,-95,-78,-83,-164,-18,-12,-92,-140,-86,-140,-134,-3,-94,-97,-19,]),'CSTCHAR':([7,11,13,14,15,16,17,18,19,20,21,22,23,24,28,36,37,38,39,40,41,42,43,44,45,46,47,48,66,69,71,73,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,127,128,129,136,137,138,139,142,143,144,147,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,178,180,182,183,184,185,196,197,198,199,200,201,202,203,204,205,206,207,211,214,216,217,218,234,243,244,245,246,247,248,254,255,257,258,259,260,265,270,278,279,280,282,284,286,288,295,300,301,302,316,317,320,330,331,352,],[44,44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-155,-134,-134,-134,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-158,44,44,44,-152,-154,-104,-151,-153,-107,-150,-149,-149,-149,-149,-149,-149,-115,-116,-145,-145,-119,-146,-147,-147,-123,-125,-129,-130,-131,-132,-133,-134,-47,-143,-126,44,-91,44,-93,-128,-127,-137,44,-102,44,-105,44,-108,44,44,44,44,44,44,44,44,-120,44,44,-22,-23,-24,44,44,-99,-142,-156,-148,-141,-134,-134,-109,-110,-111,-112,-113,-114,-134,-134,-134,-134,-77,44,-140,-96,-148,44,-103,-106,-117,-118,-121,-122,-82,-98,-134,44,-124,-165,-161,-168,44,-141,-95,-78,-83,-164,-18,-12,-92,-140,-86,-140,-134,-3,-94,-97,-19,]),'CSTSTRING':([7,11,13,14,15,16,17,18,19,20,21,22,23,24,28,36,37,38,39,40,41,42,43,44,45,46,47,48,66,69,71,73,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,127,128,129,136,137,138,139,142,143,144,147,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,178,180,182,183,184,185,196,197,198,199,200,201,202,203,204,205,206,207,211,214,216,217,218,234,243,244,245,246,247,248,254,255,257,258,259,260,265,270,278,279,280,282,284,286,288,295,300,301,302,316,317,320,330,331,352,],[45,45,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-155,-134,-134,-134,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-158,45,45,45,-152,-154,-104,-151,-153,-107,-150,-149,-149,-149,-149,-149,-149,-115,-116,-145,-145,-119,-146,-147,-147,-123,-125,-129,-130,-131,-132,-133,-134,-47,-143,-126,45,-91,45,-93,-128,-127,-137,45,-102,45,-105,45,-108,45,45,45,45,45,45,45,45,-120,45,45,-22,-23,-24,45,45,-99,-142,-156,-148,-141,-134,-134,-109,-110,-111,-112,-113,-114,-134,-134,-134,-134,-77,45,-140,-96,-148,45,-103,-106,-117,-118,-121,-122,-82,-98,-134,45,-124,-165,-161,-168,45,-141,-95,-78,-83,-164,-18,-12,-92,-140,-86,-140,-134,-3,-94,-97,-19,]),'TRUE':([7,11,13,14,15,16,17,18,19,20,21,22,23,24,28,36,37,38,39,40,41,42,43,44,45,46,47,48,66,69,71,73,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,127,128,129,136,137,138,139,142,143,144,147,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,178,180,182,183,184,185,196,197,198,199,200,201,202,203,204,205,206,207,211,214,216,217,218,234,243,244,245,246,247,248,254,255,257,258,259,260,265,270,278,279,280,282,284,286,288,295,300,301,302,316,317,320,330,331,352,],[47,47,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-155,-134,-134,-134,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-158,47,47,47,-152,-154,-104,-151,-153,-107,-150,-149,-149,-149,-149,-149,-149,-115,-116,-145,-145,-119,-146,-147,-147,-123,-125,-129,-130,-131,-132,-133,-134,-47,-143,-126,47,-91,47,-93,-128,-127,-137,47,-102,47,-105,47,-108,47,47,47,47,47,47,47,47,-120,47,47,-22,-23,-24,47,47,-99,-142,-156,-148,-141,-134,-134,-109,-110,-111,-112,-113,-114,-134,-134,-134,-134,-77,47,-140,-96,-148,47,-103,-106,-117,-118,-121,-122,-82,-98,-134,47,-124,-165,-161,-168,47,-141,-95,-78,-83,-164,-18,-12,-92,-140,-86,-140,-134,-3,-94,-97,-19,]),'FALSE':([7,11,13,14,15,16,17,18,19,20,21,22,23,24,28,36,37,38,39,40,41,42,43,44,45,46,47,48,66,69,71,73,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,127,128,129,136,137,138,139,142,143,144,147,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,178,180,182,183,184,185,196,197,198,199,200,201,202,203,204,205,206,207,211,214,216,217,218,234,243,244,245,246,247,248,254,255,257,258,259,260,265,270,278,279,280,282,284,286,288,295,300,301,302,316,317,320,330,331,352,],[48,48,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-155,-134,-134,-134,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-158,48,48,48,-152,-154,-104,-151,-153,-107,-150,-149,-149,-149,-149,-149,-149,-115,-116,-145,-145,-119,-146,-147,-147,-123,-125,-129,-130,-131,-132,-133,-134,-47,-143,-126,48,-91,48,-93,-128,-127,-137,48,-102,48,-105,48,-108,48,48,48,48,48,48,48,48,-120,48,48,-22,-23,-24,48,48,-99,-142,-156,-148,-141,-134,-134,-109,-110,-111,-112,-113,-114,-134,-134,-134,-134,-77,48,-140,-96,-148,48,-103,-106,-117,-118,-121,-122,-82,-98,-134,48,-124,-165,-161,-168,48,-141,-95,-78,-83,-164,-18,-12,-92,-140,-86,-140,-134,-3,-94,-97,-19,]),'DATAFRAME':([8,],[54,]),'FILE':([8,],[55,]),'INT':([8,34,272,307,],[56,56,56,56,]),'FLOAT':([8,34,272,307,],[57,57,57,57,]),'BOOL':([8,34,272,307,],[58,58,58,58,]),'STRING':([8,34,272,307,],[59,59,59,59,]),'CHAR':([8,34,272,307,],[60,60,60,60,]),'INTS':([8,272,307,],[61,61,61,]),'FLOATS':([8,272,307,],[62,62,62,]),'BOOLS':([8,272,307,],[63,63,63,]),'STRINGS':([8,272,307,],[64,64,64,]),'CHARS':([8,272,307,],[65,65,65,]),'MULT':([14,25,27,40,41,42,43,44,45,46,47,48,68,70,104,105,106,107,108,109,129,132,137,139,142,143,144,180,182,183,184,185,206,207,216,217,218,255,257,259,279,280,300,301,316,317,330,331,],[-127,-128,-137,101,-148,-144,-144,-144,-144,-144,-89,-90,-148,-141,-125,-129,-130,-131,-132,-133,-126,-127,-91,-93,-128,-127,-137,-99,-142,-156,-148,-141,101,101,-140,-96,-148,-98,-134,-124,-141,-95,-92,-140,-140,-134,-94,-97,]),'DIV':([14,25,27,40,41,42,43,44,45,46,47,48,68,70,104,105,106,107,108,109,129,132,137,139,142,143,144,180,182,183,184,185,206,207,216,217,218,255,257,259,279,280,300,301,316,317,330,331,],[-127,-128,-137,102,-148,-144,-144,-144,-144,-144,-89,-90,-148,-141,-125,-129,-130,-131,-132,-133,-126,-127,-91,-93,-128,-127,-137,-99,-142,-156,-148,-141,102,102,-140,-96,-148,-98,-134,-124,-141,-95,-92,-140,-140,-134,-94,-97,]),'PLUS':([14,25,27,39,40,41,42,43,44,45,46,47,48,68,70,100,103,104,105,106,107,108,109,129,132,137,139,142,143,144,168,180,182,183,184,185,204,205,206,207,216,217,218,247,248,255,257,259,279,280,300,301,316,317,330,331,],[-127,-128,-137,97,-134,-148,-144,-144,-144,-144,-144,-89,-90,-148,-141,-146,-123,-125,-129,-130,-131,-132,-133,-126,-127,-91,-93,-128,-127,-137,-120,-99,-142,-156,-148,-141,97,97,-134,-134,-140,-96,-148,-121,-122,-98,-134,-124,-141,-95,-92,-140,-140,-134,-94,-97,]),'MINUS':([14,25,27,39,40,41,42,43,44,45,46,47,48,68,70,100,103,104,105,106,107,108,109,129,132,137,139,142,143,144,168,180,182,183,184,185,204,205,206,207,216,217,218,247,248,255,257,259,279,280,300,301,316,317,330,331,],[-127,-128,-137,98,-134,-148,-144,-144,-144,-144,-144,-89,-90,-148,-141,-146,-123,-125,-129,-130,-131,-132,-133,-126,-127,-91,-93,-128,-127,-137,-120,-99,-142,-156,-148,-141,98,98,-134,-134,-140,-96,-148,-121,-122,-98,-134,-124,-141,-95,-92,-140,-140,-134,-94,-97,]),'LT':([14,25,27,38,39,40,41,42,43,44,45,46,47,48,68,70,96,99,100,103,104,105,106,107,108,109,129,132,137,139,142,143,144,168,180,182,183,184,185,204,205,206,207,216,217,218,245,246,247,248,255,257,259,279,280,300,301,316,317,330,331,],[-127,-128,-137,89,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-148,-141,-116,-119,-146,-123,-125,-129,-130,-131,-132,-133,-126,-127,-91,-93,-128,-127,-137,-120,-99,-142,-156,-148,-141,-134,-134,-134,-134,-140,-96,-148,-117,-118,-121,-122,-98,-134,-124,-141,-95,-92,-140,-140,-134,-94,-97,]),'GT':([14,25,27,38,39,40,41,42,43,44,45,46,47,48,68,70,96,99,100,103,104,105,106,107,108,109,129,132,137,139,142,143,144,168,180,182,183,184,185,204,205,206,207,216,217,218,245,246,247,248,255,257,259,279,280,300,301,316,317,330,331,],[-127,-128,-137,90,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-148,-141,-116,-119,-146,-123,-125,-129,-130,-131,-132,-133,-126,-127,-91,-93,-128,-127,-137,-120,-99,-142,-156,-148,-141,-134,-134,-134,-134,-140,-96,-148,-117,-118,-121,-122,-98,-134,-124,-141,-95,-92,-140,-140,-134,-94,-97,]),'GTE':([14,25,27,38,39,40,41,42,43,44,45,46,47,48,68,70,96,99,100,103,104,105,106,107,108,109,129,132,137,139,142,143,144,168,180,182,183,184,185,204,205,206,207,216,217,218,245,246,247,248,255,257,259,279,280,300,301,316,317,330,331,],[-127,-128,-137,91,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-148,-141,-116,-119,-146,-123,-125,-129,-130,-131,-132,-133,-126,-127,-91,-93,-128,-127,-137,-120,-99,-142,-156,-148,-141,-134,-134,-134,-134,-140,-96,-148,-117,-118,-121,-122,-98,-134,-124,-141,-95,-92,-140,-140,-134,-94,-97,]),'LTE':([14,25,27,38,39,40,41,42,43,44,45,46,47,48,68,70,96,99,100,103,104,105,106,107,108,109,129,132,137,139,142,143,144,168,180,182,183,184,185,204,205,206,207,216,217,218,245,246,247,248,255,257,259,279,280,300,301,316,317,330,331,],[-127,-128,-137,92,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-148,-141,-116,-119,-146,-123,-125,-129,-130,-131,-132,-133,-126,-127,-91,-93,-128,-127,-137,-120,-99,-142,-156,-148,-141,-134,-134,-134,-134,-140,-96,-148,-117,-118,-121,-122,-98,-134,-124,-141,-95,-92,-140,-140,-134,-94,-97,]),'EQ':([14,25,27,38,39,40,41,42,43,44,45,46,47,48,68,70,96,99,100,103,104,105,106,107,108,109,129,132,137,139,142,143,144,168,180,182,183,184,185,204,205,206,207,216,217,218,245,246,247,248,255,257,259,279,280,300,301,316,317,330,331,],[-127,-128,-137,93,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-148,-141,-116,-119,-146,-123,-125,-129,-130,-131,-132,-133,-126,-127,-91,-93,-128,-127,-137,-120,-99,-142,-156,-148,-141,-134,-134,-134,-134,-140,-96,-148,-117,-118,-121,-122,-98,-134,-124,-141,-95,-92,-140,-140,-134,-94,-97,]),'NE':([14,25,27,38,39,40,41,42,43,44,45,46,47,48,68,70,96,99,100,103,104,105,106,107,108,109,129,132,137,139,142,143,144,168,180,182,183,184,185,204,205,206,207,216,217,218,245,246,247,248,255,257,259,279,280,300,301,316,317,330,331,],[-127,-128,-137,94,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-148,-141,-116,-119,-146,-123,-125,-129,-130,-131,-132,-133,-126,-127,-91,-93,-128,-127,-137,-120,-99,-142,-156,-148,-141,-134,-134,-134,-134,-140,-96,-148,-117,-118,-121,-122,-98,-134,-124,-141,-95,-92,-140,-140,-134,-94,-97,]),'AND':([14,25,27,37,38,39,40,41,42,43,44,45,46,47,48,68,70,88,95,96,99,100,103,104,105,106,107,108,109,129,132,137,139,142,143,144,159,168,180,182,183,184,185,197,198,199,200,201,202,203,204,205,206,207,216,217,218,245,246,247,248,255,257,259,279,280,300,301,316,317,330,331,],[-127,-128,-137,86,-134,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-148,-141,-150,-115,-116,-119,-146,-123,-125,-129,-130,-131,-132,-133,-126,-127,-91,-93,-128,-127,-137,-108,-120,-99,-142,-156,-148,-141,86,-109,-110,-111,-112,-113,-114,-134,-134,-134,-134,-140,-96,-148,-117,-118,-121,-122,-98,-134,-124,-141,-95,-92,-140,-140,-134,-94,-97,]),'OR':([14,25,27,36,37,38,39,40,41,42,43,44,45,46,47,48,68,70,85,87,88,95,96,99,100,103,104,105,106,107,108,109,129,132,137,139,142,143,144,157,159,168,180,182,183,184,185,196,197,198,199,200,201,202,203,204,205,206,207,216,217,218,244,245,246,247,248,255,257,259,279,280,300,301,316,317,330,331,],[-127,-128,-137,83,-134,-134,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-148,-141,-151,-107,-150,-115,-116,-119,-146,-123,-125,-129,-130,-131,-132,-133,-126,-127,-91,-93,-128,-127,-137,-105,-108,-120,-99,-142,-156,-148,-141,83,-134,-109,-110,-111,-112,-113,-114,-134,-134,-134,-134,-140,-96,-148,-106,-117,-118,-121,-122,-98,-134,-124,-141,-95,-92,-140,-140,-134,-94,-97,]),'QUESTION':([14,25,26,27,36,37,38,39,40,41,42,43,44,45,46,47,48,68,70,82,84,85,87,88,95,96,99,100,103,104,105,106,107,108,109,129,132,137,139,142,143,144,155,157,159,168,180,182,183,184,185,196,197,198,199,200,201,202,203,204,205,206,207,216,217,218,243,244,245,246,247,248,255,257,259,279,280,300,301,316,317,330,331,],[-127,-128,69,-137,-134,-134,-134,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-148,-141,-152,-104,-151,-107,-150,-115,-116,-119,-146,-123,-125,-129,-130,-131,-132,-133,-126,-127,-91,-93,-128,-127,-137,-102,-105,-108,-120,-99,-142,-156,-148,-141,-134,-134,-109,-110,-111,-112,-113,-114,-134,-134,-134,-134,-140,-96,-148,-103,-106,-117,-118,-121,-122,-98,-134,-124,-141,-95,-92,-140,-140,-134,-94,-97,]),'AS':([25,27,68,70,137,139,151,182,193,216,217,232,257,264,279,280,300,301,316,317,330,331,],[-128,-137,128,-141,-91,-93,-137,-142,-141,-140,-96,-128,-134,128,-141,-95,-92,-140,-140,-134,-94,-97,]),'OBRACKET':([27,70,114,144,151,176,182,185,193,216,217,257,276,298,301,310,317,323,345,347,351,353,361,362,],[-137,138,-137,-137,-137,210,-142,138,138,-140,258,278,-140,313,-140,-137,278,335,-137,-140,356,313,-140,313,]),'PERIOD':([27,70,144,151,185,193,],[-137,140,-137,-137,140,140,]),'VOID':([34,],[80,]),'CPAREN':([36,37,38,39,40,41,42,43,44,45,46,47,48,82,84,85,87,88,95,96,99,100,103,104,105,106,107,108,109,129,136,137,139,141,142,143,144,146,151,155,157,159,168,179,180,182,183,184,185,189,190,193,196,197,198,199,200,201,202,203,204,205,206,207,213,215,216,217,218,233,235,236,238,240,243,244,245,246,247,248,255,256,257,259,266,267,269,272,277,279,280,285,287,290,291,292,300,301,303,306,308,309,315,316,317,318,319,321,322,330,331,333,334,337,344,347,353,357,360,],[-134,-134,-134,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-152,-104,-151,-107,-150,-115,-116,-119,-146,-123,-125,-129,-130,-131,-132,-133,-126,180,-91,-93,183,-128,-127,-137,188,-137,-102,-105,-108,-120,-134,-99,-142,-156,-148,-141,-134,-163,-141,-134,-134,-109,-110,-111,-112,-113,-114,-134,-134,-134,-134,255,-101,-140,-96,-148,265,-85,-134,-21,-20,-103,-106,-117,-118,-121,-122,-98,-134,-134,-124,-134,286,-88,-134,-100,-141,-95,-84,-163,305,-134,-7,-92,-140,-134,-6,-9,-137,-33,-140,-134,-87,332,-134,-139,-94,-97,-8,-10,-140,-32,-140,-134,-139,-11,]),'COMMA':([36,37,38,39,40,41,42,43,44,45,46,47,48,82,84,85,87,88,95,96,99,100,103,104,105,106,107,108,109,111,113,129,137,139,142,143,144,151,155,157,159,168,174,175,179,180,182,183,184,185,189,190,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,216,217,218,236,243,244,245,246,247,248,255,256,257,259,266,275,276,279,280,287,291,297,298,300,301,303,309,312,314,315,316,317,321,322,329,330,331,334,337,344,347,353,357,360,],[-134,-134,-134,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-152,-104,-151,-107,-150,-115,-116,-119,-146,-123,-125,-129,-130,-131,-132,-133,-137,-137,-126,-91,-93,-128,-127,-137,-137,-102,-105,-108,-120,-138,-138,214,-99,-142,-156,-148,-141,234,-163,-141,-134,-134,-109,-110,-111,-112,-113,-114,-134,-134,-134,-134,250,250,-140,-96,-148,268,-103,-106,-117,-118,-121,-122,-98,214,-134,-124,234,-137,-140,-141,-95,-163,307,-138,-134,-92,-140,234,-137,250,-138,-33,-140,-134,307,-139,339,-94,-97,-10,-140,-32,-140,-134,-139,-11,]),'CBRACKET':([36,37,38,39,40,41,42,43,44,45,46,47,48,82,84,85,87,88,95,96,99,100,103,104,105,106,107,108,109,129,137,139,142,143,144,155,157,159,168,180,181,182,183,184,185,196,197,198,199,200,201,202,203,204,205,206,207,216,217,218,243,244,245,246,247,248,253,255,257,259,279,280,281,299,300,301,316,317,328,330,331,342,359,],[-134,-134,-134,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-152,-104,-151,-107,-150,-115,-116,-119,-146,-123,-125,-129,-130,-131,-132,-133,-126,-91,-93,-128,-127,-137,-102,-105,-108,-120,-99,216,-142,-156,-148,-141,-134,-134,-109,-110,-111,-112,-113,-114,-134,-134,-134,-134,-140,-96,-148,-103,-106,-117,-118,-121,-122,276,-98,-134,-124,-141,-95,301,316,-92,-140,-140,-134,337,-94,-97,347,361,]),'COLON':([36,37,38,39,40,41,42,43,44,45,46,47,48,81,82,84,85,87,88,95,96,99,100,103,104,105,106,107,108,109,129,130,131,132,133,134,135,137,139,142,143,144,154,155,157,159,168,180,182,183,184,185,195,196,197,198,199,200,201,202,203,204,205,206,207,211,216,217,218,243,244,245,246,247,248,254,255,257,259,265,279,280,284,286,296,300,301,302,316,317,330,331,336,],[-134,-134,-134,-134,-134,-148,-144,-144,-144,-144,-144,-89,-90,-137,-152,-104,-151,-107,-150,-115,-116,-119,-146,-123,-125,-129,-130,-131,-132,-133,-126,178,-72,-73,-74,-75,-76,-91,-93,-128,-127,-137,-135,-102,-105,-108,-120,-99,-142,-156,-148,-141,242,-134,-134,-109,-110,-111,-112,-113,-114,-134,-134,-134,-134,-77,-140,-96,-148,-103,-106,-117,-118,-121,-122,-82,-98,-134,-124,-161,-141,-95,-83,-164,311,-92,-140,-86,-140,-134,-94,-97,343,]),'THEN':([72,149,188,332,],[145,191,-81,341,]),'METHODS':([110,171,172,173,311,324,325,326,],[-134,-22,-23,-24,-134,336,-14,-15,]),'FROM':([137,139,150,151,182,193,216,217,257,279,280,300,301,316,317,330,331,],[-91,-93,192,-137,-142,-141,-140,-96,-134,-141,-95,-92,-140,-140,-134,-94,-97,]),'TO':([137,139,151,182,193,216,217,238,239,240,257,279,280,300,301,316,317,330,331,],[-91,-93,-137,-142,-141,-140,-96,-21,271,-20,-134,-141,-95,-92,-140,-140,-134,-94,-97,]),'BY':([137,139,151,182,193,216,217,238,240,257,279,280,289,300,301,316,317,330,331,],[-91,-93,-137,-142,-141,-140,-96,-21,-20,-134,-141,-95,304,-92,-140,-140,-134,-94,-97,]),'ELSE':([186,262,],[220,-50,]),'ATTRIBUTES':([274,],[296,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'bloque':([4,6,7,11,305,],[5,9,21,21,320,]),'dec':([4,7,11,110,187,223,311,],[6,24,24,172,231,231,325,]),'b1':([7,11,],[10,67,]),'estatuto':([7,11,],[11,11,]),'empty':([7,11,36,37,38,39,40,110,179,186,187,189,196,197,204,205,206,207,208,209,223,236,256,257,266,272,291,298,303,311,312,317,321,329,343,349,353,362,],[12,12,84,87,95,99,103,173,215,221,224,235,84,87,99,99,103,103,251,251,224,269,215,280,235,292,308,315,235,326,251,280,308,340,350,350,315,315,]),'asignacion':([7,11,69,178,187,223,],[13,13,131,131,225,225,]),'llamada':([7,11,69,71,73,136,138,147,156,158,160,161,162,163,164,165,166,167,169,170,177,178,214,234,258,278,],[14,14,132,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,132,143,143,143,143,]),'condicion':([7,11,187,223,],[15,15,226,226,]),'escritura':([7,11,69,178,187,223,],[16,16,133,133,227,227,]),'leer':([7,11,69,178,187,223,],[17,17,134,134,228,228,]),'ciclo_while':([7,11,187,223,],[18,18,229,229,]),'ciclo_for':([7,11,187,223,],[19,19,230,230,]),'ternaria':([7,11,69,178,],[20,20,135,135,]),'funcion':([7,11,343,349,],[22,22,349,349,]),'clase':([7,11,],[23,23,]),'variable':([7,11,69,71,73,77,136,138,147,148,156,158,160,161,162,163,164,165,166,167,169,170,177,178,187,192,214,223,234,258,268,271,278,304,],[25,25,25,142,142,150,142,142,142,190,142,142,142,142,142,142,142,142,142,142,142,142,142,25,232,238,142,232,142,142,287,238,142,238,]),'exp':([7,11,69,71,73,136,138,147,177,178,214,234,258,278,],[26,26,26,141,146,179,181,189,211,26,256,266,281,299,]),'texp':([7,11,69,71,73,136,138,147,156,177,178,214,234,258,278,],[36,36,36,36,36,36,36,36,196,36,36,36,36,36,36,]),'gexp':([7,11,69,71,73,136,138,147,156,158,177,178,214,234,258,278,],[37,37,37,37,37,37,37,37,37,197,37,37,37,37,37,37,]),'mexp':([7,11,69,71,73,136,138,147,156,158,160,161,162,163,164,165,177,178,214,234,258,278,],[38,38,38,38,38,38,38,38,38,38,198,199,200,201,202,203,38,38,38,38,38,38,]),'termino':([7,11,69,71,73,136,138,147,156,158,160,161,162,163,164,165,166,167,177,178,214,234,258,278,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,204,205,39,39,39,39,39,39,]),'factor':([7,11,69,71,73,136,138,147,156,158,160,161,162,163,164,165,166,167,169,170,177,178,214,234,258,278,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,206,207,40,40,40,40,40,40,]),'varcst':([7,11,69,71,73,136,138,147,156,158,160,161,162,163,164,165,166,167,169,170,177,178,214,234,258,278,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'boolean':([7,11,69,71,73,136,138,147,156,158,160,161,162,163,164,165,166,167,169,170,177,178,214,234,258,278,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'tipo':([8,],[49,]),'compuesto':([8,],[50,]),'simple':([8,34,272,307,],[52,79,293,293,]),'multiple':([8,272,307,],[53,294,294,]),'saw_var_factor':([25,142,232,],[68,184,264,]),'saw_id':([27,81,111,113,114,144,151,152,275,309,310,345,],[70,154,174,175,176,185,193,194,297,322,323,351,]),'saw_oparen':([28,],[71,]),'cond2':([29,76,],[72,149,]),'saw_print':([30,],[74,]),'saw_read':([31,],[75,]),'saw_while':([32,],[76,]),'func1':([34,],[78,]),'exp1':([36,196,],[82,243,]),'texp1':([37,197,],[85,244,]),'gexp1':([38,],[88,]),'mexp1':([39,204,205,],[96,245,246,]),'term1':([40,206,207,],[100,247,248,]),'check_multdiv_operator':([41,68,184,218,],[104,129,129,259,]),'saw_end_value':([42,43,44,45,46,],[105,106,107,108,109,]),'saw_type':([51,54,55,56,57,58,59,60,61,62,63,64,65,80,],[112,115,116,117,118,119,120,121,122,123,124,125,126,153,]),'scope_end':([66,],[127,]),'estatuto_redux':([69,178,],[130,212,]),'saw_called_var':([70,185,193,279,],[137,137,137,300,]),'variable2':([70,185,193,],[139,139,139,]),'check_or_operator':([82,],[155,]),'saw_or':([83,],[156,]),'check_and_operator':([85,],[157,]),'saw_and':([86,],[158,]),'check_relational_operator':([88,],[159,]),'saw_relational_operator':([89,90,91,92,93,94,],[160,161,162,163,164,165,]),'saw_plusminus_operator':([97,98,],[166,167,]),'check_plusminus_operator':([100,],[168,]),'saw_multdiv_operator':([101,102,],[169,170,]),'dec1':([110,],[171,]),'saw_asig':([128,],[177,]),'bloque_ciclo':([145,191,261,341,],[186,237,283,346,]),'saw_class':([154,],[195,]),'saw_variable':([174,175,297,314,363,],[208,209,312,329,364,]),'llamada1':([179,256,],[213,277,]),'saw_called_var_from_class':([182,],[217,]),'saw_cparen':([183,],[218,]),'cond1':([186,],[219,]),'bc1':([187,223,],[222,263,]),'estatuto_ciclo':([187,223,],[223,223,]),'e1':([189,266,303,],[233,285,318,]),'saw_read_exp':([190,287,],[236,303,]),'ciclo_for1':([192,271,304,],[239,289,319,]),'saw_function':([194,],[241,]),'tipo1':([208,209,312,],[249,252,327,]),'saw_dimension':([216,276,301,316,337,347,361,],[257,298,317,330,344,353,362,]),'saw_else':([220,],[261,]),'l1':([236,],[267,]),'clase_bloque':([242,],[273,]),'variable1':([257,317,],[279,331,]),'bc_end':([260,],[282,]),'saw_print_end':([265,],[284,]),'saw_while_end':([270,],[288,]),'param':([272,],[290,]),'param2':([272,307,],[291,321,]),'saw_read_end':([286,],[302,]),'param1':([291,321,],[306,333,]),'tipo3':([298,353,362,],[314,357,363,]),'clase_bloque1':([311,],[324,]),'saw_variable_param':([322,357,],[334,360,]),'tipo2':([329,],[338,]),'clase_metodos_bloque':([343,349,],[348,355,]),'class_scope_end':([348,],[354,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID SEMICOLON bloque','programa',4,'p_programa','plyler.py',169),
  ('programa -> PROGRAM ID SEMICOLON dec bloque','programa',5,'p_programa','plyler.py',170),
  ('funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque','funcion',9,'p_funcion','plyler.py',177),
  ('func1 -> simple','func1',1,'p_funcion1','plyler.py',182),
  ('func1 -> VOID saw_type','func1',2,'p_funcion1','plyler.py',183),
  ('param -> param2 param1','param',2,'p_param','plyler.py',188),
  ('param -> empty','param',1,'p_param','plyler.py',189),
  ('param1 -> COMMA param2 param1','param1',3,'p_param1','plyler.py',194),
  ('param1 -> empty','param1',1,'p_param1','plyler.py',195),
  ('param2 -> simple ID saw_id saw_variable_param','param2',4,'p_param2','plyler.py',200),
  ('param2 -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable_param','param2',9,'p_param2','plyler.py',201),
  ('clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON','clase',7,'p_clase','plyler.py',208),
  ('clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY','clase_bloque',9,'p_clase_bloque','plyler.py',213),
  ('clase_bloque1 -> dec','clase_bloque1',1,'p_clase_bloque1','plyler.py',218),
  ('clase_bloque1 -> empty','clase_bloque1',1,'p_clase_bloque1','plyler.py',219),
  ('clase_metodos_bloque -> funcion clase_metodos_bloque','clase_metodos_bloque',2,'p_clase_metodos_bloque','plyler.py',224),
  ('clase_metodos_bloque -> empty','clase_metodos_bloque',1,'p_clase_metodos_bloque','plyler.py',225),
  ('ciclo_while -> WHILE saw_while cond2 THEN bloque_ciclo SEMICOLON saw_while_end','ciclo_while',7,'p_ciclo_while','plyler.py',232),
  ('ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque_ciclo SEMICOLON','ciclo_for',13,'p_ciclo_for','plyler.py',239),
  ('ciclo_for1 -> CSTINT','ciclo_for1',1,'p_ciclo_for1','plyler.py',244),
  ('ciclo_for1 -> variable','ciclo_for1',1,'p_ciclo_for1','plyler.py',245),
  ('dec -> VAR tipo SEMICOLON dec1','dec',4,'p_dec','plyler.py',252),
  ('dec1 -> dec','dec1',1,'p_dec1','plyler.py',257),
  ('dec1 -> empty','dec1',1,'p_dec1','plyler.py',258),
  ('tipo -> compuesto ID saw_id saw_variable tipo1','tipo',5,'p_tipo','plyler.py',265),
  ('tipo -> simple ID saw_id saw_variable tipo1','tipo',5,'p_tipo','plyler.py',266),
  ('tipo -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable tipo2','tipo',10,'p_tipo','plyler.py',267),
  ('tipo1 -> COMMA ID saw_id saw_variable tipo1','tipo1',5,'p_tipo1','plyler.py',272),
  ('tipo1 -> empty','tipo1',1,'p_tipo1','plyler.py',273),
  ('tipo2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable','tipo2',9,'p_tipo2','plyler.py',278),
  ('tipo2 -> empty','tipo2',1,'p_tipo2','plyler.py',279),
  ('tipo3 -> OBRACKET CSTINT CBRACKET saw_dimension','tipo3',4,'p_tipo3','plyler.py',284),
  ('tipo3 -> empty','tipo3',1,'p_tipo3','plyler.py',285),
  ('simple -> INT saw_type','simple',2,'p_tipo_simple','plyler.py',290),
  ('simple -> FLOAT saw_type','simple',2,'p_tipo_simple','plyler.py',291),
  ('simple -> BOOL saw_type','simple',2,'p_tipo_simple','plyler.py',292),
  ('simple -> STRING saw_type','simple',2,'p_tipo_simple','plyler.py',293),
  ('simple -> CHAR saw_type','simple',2,'p_tipo_simple','plyler.py',294),
  ('multiple -> INTS saw_type','multiple',2,'p_tipo_multiple','plyler.py',299),
  ('multiple -> FLOATS saw_type','multiple',2,'p_tipo_multiple','plyler.py',300),
  ('multiple -> BOOLS saw_type','multiple',2,'p_tipo_multiple','plyler.py',301),
  ('multiple -> STRINGS saw_type','multiple',2,'p_tipo_multiple','plyler.py',302),
  ('multiple -> CHARS saw_type','multiple',2,'p_tipo_multiple','plyler.py',303),
  ('compuesto -> ID saw_type','compuesto',2,'p_tipo_compuesto','plyler.py',308),
  ('compuesto -> DATAFRAME saw_type','compuesto',2,'p_tipo_compuesto','plyler.py',309),
  ('compuesto -> FILE saw_type','compuesto',2,'p_tipo_compuesto','plyler.py',310),
  ('bloque -> OCURLY b1 CCURLY scope_end','bloque',4,'p_bloque','plyler.py',317),
  ('b1 -> estatuto b1','b1',2,'p_b1','plyler.py',322),
  ('b1 -> empty','b1',1,'p_b1','plyler.py',323),
  ('bloque_ciclo -> OCURLY bc1 CCURLY','bloque_ciclo',3,'p_bloque_ciclo','plyler.py',330),
  ('bc1 -> estatuto_ciclo bc1','bc1',2,'p_bc1','plyler.py',335),
  ('bc1 -> empty','bc1',1,'p_bc1','plyler.py',336),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','plyler.py',343),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','plyler.py',344),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','plyler.py',345),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','plyler.py',346),
  ('estatuto -> leer','estatuto',1,'p_estatuto','plyler.py',347),
  ('estatuto -> ciclo_while','estatuto',1,'p_estatuto','plyler.py',348),
  ('estatuto -> ciclo_for','estatuto',1,'p_estatuto','plyler.py',349),
  ('estatuto -> ternaria','estatuto',1,'p_estatuto','plyler.py',350),
  ('estatuto -> bloque','estatuto',1,'p_estatuto','plyler.py',351),
  ('estatuto -> funcion','estatuto',1,'p_estatuto','plyler.py',352),
  ('estatuto -> clase','estatuto',1,'p_estatuto','plyler.py',353),
  ('estatuto -> dec','estatuto',1,'p_estatuto','plyler.py',354),
  ('estatuto_ciclo -> asignacion','estatuto_ciclo',1,'p_estatuto_ciclo','plyler.py',359),
  ('estatuto_ciclo -> condicion','estatuto_ciclo',1,'p_estatuto_ciclo','plyler.py',360),
  ('estatuto_ciclo -> escritura','estatuto_ciclo',1,'p_estatuto_ciclo','plyler.py',361),
  ('estatuto_ciclo -> leer','estatuto_ciclo',1,'p_estatuto_ciclo','plyler.py',362),
  ('estatuto_ciclo -> ciclo_while','estatuto_ciclo',1,'p_estatuto_ciclo','plyler.py',363),
  ('estatuto_ciclo -> ciclo_for','estatuto_ciclo',1,'p_estatuto_ciclo','plyler.py',364),
  ('estatuto_ciclo -> dec','estatuto_ciclo',1,'p_estatuto_ciclo','plyler.py',365),
  ('estatuto_redux -> asignacion','estatuto_redux',1,'p_estatuto_redux','plyler.py',370),
  ('estatuto_redux -> llamada','estatuto_redux',1,'p_estatuto_redux','plyler.py',371),
  ('estatuto_redux -> escritura','estatuto_redux',1,'p_estatuto_redux','plyler.py',372),
  ('estatuto_redux -> leer','estatuto_redux',1,'p_estatuto_redux','plyler.py',373),
  ('estatuto_redux -> ternaria','estatuto_redux',1,'p_estatuto_redux','plyler.py',374),
  ('asignacion -> variable saw_var_factor AS saw_asig exp','asignacion',5,'p_asignacion','plyler.py',381),
  ('condicion -> IF cond2 THEN bloque_ciclo cond1 SEMICOLON bc_end','condicion',7,'p_condicion','plyler.py',388),
  ('cond1 -> ELSE saw_else bloque_ciclo','cond1',3,'p_cond1','plyler.py',393),
  ('cond1 -> empty','cond1',1,'p_cond1','plyler.py',394),
  ('cond2 -> OPAREN exp CPAREN','cond2',3,'p_cond2','plyler.py',399),
  ('ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON','ternaria',6,'p_ternaria','plyler.py',406),
  ('escritura -> PRINT saw_print OPAREN exp e1 CPAREN saw_print_end','escritura',7,'p_escritura','plyler.py',413),
  ('e1 -> COMMA exp e1','e1',3,'p_e1','plyler.py',418),
  ('e1 -> empty','e1',1,'p_e1','plyler.py',419),
  ('leer -> READ saw_read OPAREN variable saw_read_exp l1 CPAREN saw_read_end','leer',8,'p_leer','plyler.py',426),
  ('l1 -> COMMA variable saw_read_exp e1','l1',4,'p_l1','plyler.py',431),
  ('l1 -> empty','l1',1,'p_l1','plyler.py',432),
  ('boolean -> TRUE','boolean',1,'p_boolean','plyler.py',439),
  ('boolean -> FALSE','boolean',1,'p_boolean','plyler.py',440),
  ('variable -> ID saw_id saw_called_var','variable',3,'p_variable','plyler.py',447),
  ('variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var','variable',8,'p_variable','plyler.py',448),
  ('variable -> ID saw_id variable2','variable',3,'p_variable','plyler.py',449),
  ('variable1 -> OBRACKET exp CBRACKET saw_dimension','variable1',4,'p_variable1','plyler.py',454),
  ('variable1 -> empty','variable1',1,'p_variable1','plyler.py',455),
  ('variable2 -> PERIOD ID saw_called_var_from_class','variable2',3,'p_variable2','plyler.py',460),
  ('variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1','variable2',8,'p_variable2','plyler.py',461),
  ('llamada -> ID saw_id OPAREN exp llamada1 CPAREN','llamada',6,'p_llamada_funcion','plyler.py',468),
  ('llamada -> ID saw_id OPAREN CPAREN','llamada',4,'p_llamada_funcion','plyler.py',469),
  ('llamada1 -> COMMA exp llamada1','llamada1',3,'p_llamada_funcion1','plyler.py',474),
  ('llamada1 -> empty','llamada1',1,'p_llamada_funcion1','plyler.py',475),
  ('exp -> texp exp1 check_or_operator','exp',3,'p_exp','plyler.py',482),
  ('exp1 -> OR saw_or texp exp1','exp1',4,'p_exp1','plyler.py',507),
  ('exp1 -> empty','exp1',1,'p_exp1','plyler.py',508),
  ('texp -> gexp texp1 check_and_operator','texp',3,'p_texp','plyler.py',513),
  ('texp1 -> AND saw_and gexp texp1','texp1',4,'p_texp1','plyler.py',518),
  ('texp1 -> empty','texp1',1,'p_texp1','plyler.py',519),
  ('gexp -> mexp gexp1 check_relational_operator','gexp',3,'p_gexp','plyler.py',524),
  ('gexp1 -> LT saw_relational_operator mexp','gexp1',3,'p_gexp1','plyler.py',529),
  ('gexp1 -> GT saw_relational_operator mexp','gexp1',3,'p_gexp1','plyler.py',530),
  ('gexp1 -> GTE saw_relational_operator mexp','gexp1',3,'p_gexp1','plyler.py',531),
  ('gexp1 -> LTE saw_relational_operator mexp','gexp1',3,'p_gexp1','plyler.py',532),
  ('gexp1 -> EQ saw_relational_operator mexp','gexp1',3,'p_gexp1','plyler.py',533),
  ('gexp1 -> NE saw_relational_operator mexp','gexp1',3,'p_gexp1','plyler.py',534),
  ('gexp1 -> empty','gexp1',1,'p_gexp1','plyler.py',535),
  ('mexp -> termino mexp1','mexp',2,'p_mexp','plyler.py',540),
  ('mexp1 -> PLUS saw_plusminus_operator termino mexp1','mexp1',4,'p_mexp1','plyler.py',545),
  ('mexp1 -> MINUS saw_plusminus_operator termino mexp1','mexp1',4,'p_mexp1','plyler.py',546),
  ('mexp1 -> empty','mexp1',1,'p_mexp1','plyler.py',547),
  ('termino -> factor term1 check_plusminus_operator','termino',3,'p_termino','plyler.py',554),
  ('term1 -> MULT saw_multdiv_operator factor term1','term1',4,'p_term1','plyler.py',559),
  ('term1 -> DIV saw_multdiv_operator factor term1','term1',4,'p_term1','plyler.py',560),
  ('term1 -> empty','term1',1,'p_term1','plyler.py',561),
  ('factor -> OPAREN saw_oparen exp CPAREN saw_cparen check_multdiv_operator','factor',6,'p_factor','plyler.py',568),
  ('factor -> varcst check_multdiv_operator','factor',2,'p_factor','plyler.py',569),
  ('factor -> variable saw_var_factor check_multdiv_operator','factor',3,'p_factor','plyler.py',570),
  ('factor -> llamada','factor',1,'p_factor','plyler.py',571),
  ('saw_var_factor -> <empty>','saw_var_factor',0,'p_saw_var_factor','plyler.py',576),
  ('varcst -> CSTINT saw_end_value','varcst',2,'p_varcst','plyler.py',586),
  ('varcst -> CSTFLT saw_end_value','varcst',2,'p_varcst','plyler.py',587),
  ('varcst -> CSTCHAR saw_end_value','varcst',2,'p_varcst','plyler.py',588),
  ('varcst -> CSTSTRING saw_end_value','varcst',2,'p_varcst','plyler.py',589),
  ('varcst -> boolean saw_end_value','varcst',2,'p_varcst','plyler.py',590),
  ('empty -> <empty>','empty',0,'p_empty','plyler.py',597),
  ('saw_class -> <empty>','saw_class',0,'p_saw_class','plyler.py',609),
  ('saw_type -> <empty>','saw_type',0,'p_saw_type','plyler.py',614),
  ('saw_id -> <empty>','saw_id',0,'p_saw_id','plyler.py',618),
  ('saw_variable -> <empty>','saw_variable',0,'p_saw_variable','plyler.py',622),
  ('saw_variable_param -> <empty>','saw_variable_param',0,'p_saw_variable_param','plyler.py',628),
  ('saw_dimension -> <empty>','saw_dimension',0,'p_saw_dimension','plyler.py',634),
  ('saw_called_var -> <empty>','saw_called_var',0,'p_saw_called_var','plyler.py',639),
  ('saw_called_var_from_class -> <empty>','saw_called_var_from_class',0,'p_saw_called_var_from_class','plyler.py',645),
  ('saw_asig -> <empty>','saw_asig',0,'p_saw_asig','plyler.py',652),
  ('saw_end_value -> <empty>','saw_end_value',0,'p_saw_end_value','plyler.py',656),
  ('saw_plusminus_operator -> <empty>','saw_plusminus_operator',0,'p_saw_plusminus_operator','plyler.py',660),
  ('check_plusminus_operator -> <empty>','check_plusminus_operator',0,'p_check_plusminus_operator','plyler.py',664),
  ('saw_multdiv_operator -> <empty>','saw_multdiv_operator',0,'p_saw_multdiv_operator','plyler.py',668),
  ('check_multdiv_operator -> <empty>','check_multdiv_operator',0,'p_check_multdiv_operator','plyler.py',672),
  ('saw_relational_operator -> <empty>','saw_relational_operator',0,'p_saw_relational_operator','plyler.py',676),
  ('check_relational_operator -> <empty>','check_relational_operator',0,'p_check_relational_operator','plyler.py',680),
  ('check_and_operator -> <empty>','check_and_operator',0,'p_check_and_operator','plyler.py',686),
  ('check_or_operator -> <empty>','check_or_operator',0,'p_check_or_operator','plyler.py',693),
  ('saw_and -> <empty>','saw_and',0,'p_saw_and','plyler.py',700),
  ('saw_or -> <empty>','saw_or',0,'p_saw_or','plyler.py',706),
  ('saw_oparen -> <empty>','saw_oparen',0,'p_saw_oparen','plyler.py',711),
  ('saw_cparen -> <empty>','saw_cparen',0,'p_saw_cparen','plyler.py',715),
  ('saw_function -> <empty>','saw_function',0,'p_saw_function','plyler.py',720),
  ('scope_end -> <empty>','scope_end',0,'p_scope_end','plyler.py',725),
  ('class_scope_end -> <empty>','class_scope_end',0,'p_class_scope_end','plyler.py',729),
  ('saw_print -> <empty>','saw_print',0,'p_saw_print','plyler.py',733),
  ('saw_print_end -> <empty>','saw_print_end',0,'p_saw_print_end','plyler.py',737),
  ('saw_read -> <empty>','saw_read',0,'p_saw_read','plyler.py',741),
  ('saw_read_exp -> <empty>','saw_read_exp',0,'p_saw_read_exp','plyler.py',745),
  ('saw_read_end -> <empty>','saw_read_end',0,'p_saw_read_end','plyler.py',752),
  ('bc_end -> <empty>','bc_end',0,'p_bc_end','plyler.py',756),
  ('saw_else -> <empty>','saw_else',0,'p_saw_else','plyler.py',760),
  ('saw_while -> <empty>','saw_while',0,'p_saw_while','plyler.py',764),
  ('saw_while_end -> <empty>','saw_while_end',0,'p_saw_while_end','plyler.py',768),
]
