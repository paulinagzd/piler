
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ATTRIBUTES BOOL BOOLS BY CBRACKET CCURLY CHAR CHARS CLASS COLON COMMA COMMENT CPAREN CSTCHAR CSTFLT CSTINT CSTSTRING DATAFRAME DIV ELSE EQ FALSE FILE FLOAT FLOATS FOR FROM FUNCTION GT GTE ID IF INT INTS LT LTE METHODS MINUS MULT NE OBRACKET OCURLY OPAREN OR PERIOD PLUS PRINT PROGRAM QUESTION READ RETURN SEMICOLON STRING STRINGS THEN TO TRUE VAR VOID WHILE\n  programa : PROGRAM ID saw_id saw_program SEMICOLON bloque\n           | PROGRAM ID saw_id saw_program SEMICOLON dec bloque\n  \n  funcion : FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque\n  \n  func1 : simple\n        | VOID saw_type\n  \n  param : param2 param1\n        | empty\n  \n  param1 : COMMA param2 param1\n         | empty\n  \n  param2 : simple ID saw_id_param\n         | multiple ID saw_id_param variable1 variable1\n  \n    clase : CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON\n   \n  clase_bloque :  OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY\n   \n  clase_bloque1 : dec\n                | empty\n   \n  clase_metodos_bloque : funcion clase_metodos_bloque\n                       | empty\n  \n  ciclo_while : WHILE cond2 THEN bloque SEMICOLON\n  \n  ciclo_for : FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON\n  \n  ciclo_for1 : CSTINT\n             | variable\n  \n  dec : VAR tipo SEMICOLON dec1\n  \n  dec1 : dec\n       | empty\n  \n  tipo : compuesto ID saw_id saw_variable tipo1\n       | simple ID saw_id saw_variable tipo1\n       | multiple ID saw_id saw_variable OBRACKET CSTINT CBRACKET tipo3 tipo2\n  \n  tipo1 : COMMA ID saw_id saw_variable tipo1\n        | empty\n  \n  tipo2 : COMMA ID saw_id OBRACKET CSTINT CBRACKET tipo3\n        | empty\n  \n  tipo3 : OBRACKET CSTINT CBRACKET\n        | empty\n  \n  simple : INT saw_type\n         | FLOAT saw_type\n         | BOOL saw_type\n         | STRING saw_type\n         | CHAR saw_type\n  \n  multiple : INTS saw_type\n           | FLOATS saw_type\n           | BOOLS saw_type\n           | STRINGS saw_type\n           | CHARS saw_type\n  \n  compuesto : ID saw_type\n            | DATAFRAME saw_type\n            | FILE saw_type\n  \n  bloque : OCURLY b1 CCURLY scope_end\n  \n  b1 : estatuto b1\n     | empty\n  \n  estatuto : asignacion\n           | llamada\n           | condicion\n           | escritura\n           | leer\n           | ciclo_while\n           | ciclo_for\n           | ternaria\n           | bloque\n           | funcion\n           | clase\n           | dec\n  \n  estatuto_redux : asignacion\n                 | llamada\n                 | escritura\n                 | leer\n                 | ternaria\n  \n  asignacion : variable AS exp saw_asig\n  \n  condicion : IF cond2 THEN bloque cond1 SEMICOLON\n  \n  cond1 : ELSE bloque\n        | ELSE IF cond2 THEN bloque cond1\n        | empty\n  \n    cond2 : OPAREN exp CPAREN\n  \n  ternaria : exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON\n  \n  escritura : PRINT OPAREN exp e1 CPAREN\n  \n  e1 : COMMA exp e1\n     | empty\n  \n  leer  : READ OPAREN exp e1 CPAREN\n  \n  boolean : TRUE\n          | FALSE\n  \n  variable : ID saw_id variable1 variable1 variable2\n  \n  variable1 : OBRACKET exp CBRACKET\n            | empty\n  \n  variable2 : PERIOD ID saw_id variable1 variable1 variable2\n            | empty \n  \n  llamada : ID saw_id OPAREN exp llamada1 CPAREN\n          | ID saw_id OPAREN CPAREN\n  \n  llamada1 : COMMA exp llamada1\n           | empty\n  \n  exp : texp exp1\n  \n  exp1 : OR saw_op texp exp1\n       | empty\n  \n  texp : gexp texp1\n  \n  texp1 : AND saw_op gexp texp1\n        | empty\n  \n  gexp : mexp gexp1\n  \n  gexp1 : LT saw_op mexp\n        | GT saw_op mexp\n        | GTE saw_op mexp\n        | LTE saw_op mexp\n        | EQ saw_op mexp\n        | NE saw_op mexp\n        | empty\n  \n  mexp : termino mexp1\n  \n  mexp1 : PLUS saw_op termino mexp1\n        | MINUS saw_op termino mexp1\n        | empty\n  \n  termino : factor term1\n  \n  term1 : MULT saw_op factor term1\n        | DIV saw_op factor term1\n        | empty\n  \n  factor : OPAREN exp CPAREN\n         | varcst\n         | variable\n         | llamada\n  \n  varcst : CSTINT saw_end_value_int\n         | CSTFLT saw_end_value_flt\n         | CSTCHAR \n         | CSTSTRING \n         | boolean \n  \n  empty : \n  \n  saw_program : \n  \n  saw_class : \n  \n  saw_type : \n  \n  saw_id : \n  \n  saw_id_param : \n  \n  saw_variable : \n  \n  saw_asig : \n  \n  saw_end_value_int : \n  \n  saw_end_value_flt : \n  \n  do_not_save : \n  \n  saw_op : \n  \n  saw_function : \n  \n  scope_start : \n  \n  scope_end : \n  \n  class_scope_start : \n  \n  class_scope_end : \n  '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,7,11,68,128,],[0,-1,-2,-134,-47,]),'ID':([2,9,10,13,15,16,17,18,19,20,21,22,23,24,25,26,30,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,74,75,76,78,79,80,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,136,137,138,139,140,141,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,171,173,174,179,183,187,188,189,190,191,192,193,194,195,196,197,198,204,206,207,208,209,213,215,216,222,223,224,225,226,227,229,233,234,236,237,241,248,254,255,256,260,262,274,277,287,289,306,],[3,29,53,29,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,76,86,-120,-120,-120,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,112,-123,114,115,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-134,76,29,-113,-114,-124,76,76,76,148,149,-4,-123,-89,-131,-91,-92,-131,-94,-95,-131,-131,-131,-131,-131,-131,-102,-103,-131,-131,-106,-107,-131,-131,-110,-115,-116,-120,-44,-45,-46,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-47,-127,76,-120,76,-82,-111,-120,-5,76,76,76,76,76,76,76,76,76,76,76,76,-22,-23,-24,-67,29,-86,-120,76,148,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,76,-80,236,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,245,-73,-85,-124,-68,148,-120,267,268,-12,-120,148,-120,-3,296,-83,-19,]),'SEMICOLON':([3,4,5,38,39,40,41,42,43,44,45,46,47,48,49,50,51,68,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,112,114,128,129,131,132,133,134,135,137,139,140,141,167,168,170,173,174,176,182,187,188,189,190,191,192,193,194,195,196,197,198,199,200,202,206,208,209,210,212,213,215,222,223,224,225,226,227,228,230,231,233,234,236,238,243,245,248,258,259,260,270,272,273,274,275,284,286,288,289,290,295,301,310,311,312,],[-124,-121,6,-120,-120,-120,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,111,-134,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-124,-124,-47,-127,-62,-63,-64,-65,-66,-120,-82,-111,-120,-126,-126,-67,-86,-120,-120,216,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-120,-120,233,-80,-84,-81,237,-71,-74,-77,-90,-93,-104,-105,-108,-109,-25,-29,-26,-73,-85,-124,-69,256,-124,-120,-126,-120,-120,-120,-120,-33,-120,-120,-28,-27,-31,-83,-70,-32,306,-13,-120,-30,]),'OCURLY':([6,8,9,13,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,128,129,137,139,140,141,142,146,164,165,166,170,173,174,187,188,189,190,191,192,193,194,195,196,197,198,206,208,209,211,213,215,216,221,222,223,224,225,226,227,233,234,236,237,248,256,260,261,263,274,277,289,297,306,],[9,9,9,9,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-134,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-120,-47,-127,-120,-82,-111,-120,9,9,-22,-23,-24,-67,-86,-120,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,9,-74,-77,-18,244,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,9,9,-120,-3,-83,9,-19,]),'VAR':([6,9,13,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,128,129,137,139,140,141,164,165,166,170,173,174,187,188,189,190,191,192,193,194,195,196,197,198,206,208,209,213,215,216,222,223,224,225,226,227,233,234,236,237,248,256,260,269,274,277,289,306,],[10,10,10,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-134,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,10,-47,-127,-120,-82,-111,-120,-22,-23,-24,-67,-86,-120,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,10,-120,-3,-83,-19,]),'CCURLY':([9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,69,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,128,129,137,139,140,141,164,165,166,170,173,174,187,188,189,190,191,192,193,194,195,196,197,198,206,208,209,213,215,216,222,223,224,225,226,227,233,234,236,237,248,256,260,274,277,289,299,302,303,304,306,307,308,],[-120,68,-120,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-134,-48,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-120,-47,-127,-120,-82,-111,-120,-22,-23,-24,-67,-86,-120,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-120,-136,-120,-17,-19,310,-16,]),'IF':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,128,129,137,139,140,141,164,165,166,170,173,174,187,188,189,190,191,192,193,194,195,196,197,198,206,208,209,211,213,215,216,222,223,224,225,226,227,233,234,236,237,248,256,260,274,277,289,306,],[31,31,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-134,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-120,-47,-127,-120,-82,-111,-120,-22,-23,-24,-67,-86,-120,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,239,-74,-77,-18,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'PRINT':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,71,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,128,129,137,139,140,141,164,165,166,170,171,173,174,187,188,189,190,191,192,193,194,195,196,197,198,206,208,209,213,215,216,222,223,224,225,226,227,233,234,236,237,248,256,260,274,277,289,306,],[32,32,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-134,32,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-120,-47,-127,-120,-82,-111,-120,-22,-23,-24,-67,32,-86,-120,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'READ':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,71,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,128,129,137,139,140,141,164,165,166,170,171,173,174,187,188,189,190,191,192,193,194,195,196,197,198,206,208,209,213,215,216,222,223,224,225,226,227,233,234,236,237,248,256,260,274,277,289,306,],[33,33,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-134,33,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-120,-47,-127,-120,-82,-111,-120,-22,-23,-24,-67,33,-86,-120,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'WHILE':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,128,129,137,139,140,141,164,165,166,170,173,174,187,188,189,190,191,192,193,194,195,196,197,198,206,208,209,213,215,216,222,223,224,225,226,227,233,234,236,237,248,256,260,274,277,289,306,],[34,34,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-134,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-120,-47,-127,-120,-82,-111,-120,-22,-23,-24,-67,-86,-120,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'FOR':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,128,129,137,139,140,141,164,165,166,170,173,174,187,188,189,190,191,192,193,194,195,196,197,198,206,208,209,213,215,216,222,223,224,225,226,227,233,234,236,237,248,256,260,274,277,289,306,],[35,35,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-134,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-120,-47,-127,-120,-82,-111,-120,-22,-23,-24,-67,-86,-120,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'FUNCTION':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,128,129,137,139,140,141,164,165,166,170,173,174,187,188,189,190,191,192,193,194,195,196,197,198,206,208,209,213,215,216,222,223,224,225,226,227,233,234,236,237,248,256,260,274,277,289,299,303,306,],[36,36,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-134,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-120,-47,-127,-120,-82,-111,-120,-22,-23,-24,-67,-86,-120,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,36,36,-19,]),'CLASS':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,128,129,137,139,140,141,164,165,166,170,173,174,187,188,189,190,191,192,193,194,195,196,197,198,206,208,209,213,215,216,222,223,224,225,226,227,233,234,236,237,248,256,260,274,277,289,306,],[37,37,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-134,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-120,-47,-127,-120,-82,-111,-120,-22,-23,-24,-67,-86,-120,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'OPAREN':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,38,39,40,41,42,43,44,45,46,47,48,49,50,68,70,71,72,74,75,76,78,79,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,128,129,136,137,138,139,140,141,149,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,171,173,174,179,185,187,188,189,190,191,192,193,194,195,196,197,198,204,206,208,209,213,215,216,220,222,223,224,225,226,227,233,234,236,237,239,248,256,260,274,277,289,306,],[30,30,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-124,30,78,79,80,78,82,-120,-120,-120,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-134,30,30,136,-113,-114,-124,30,30,30,-89,-131,-91,-92,-131,-94,-95,-131,-131,-131,-131,-131,-131,-102,-103,-131,-131,-106,-107,-131,-131,-110,-115,-116,-120,-47,-127,30,-120,30,-82,-111,136,-124,30,30,30,30,30,30,30,30,30,30,30,30,-22,-23,-24,-67,30,-86,-120,30,-132,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,30,-80,-84,-81,-74,-77,-18,242,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,78,-120,-12,-120,-120,-3,-83,-19,]),'CSTINT':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,30,38,39,40,41,42,43,44,45,46,47,48,49,50,68,70,71,74,75,76,78,79,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,128,129,136,137,138,139,140,141,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,171,173,174,179,183,187,188,189,190,191,192,193,194,195,196,197,198,204,206,208,209,213,215,216,222,223,224,225,226,227,232,233,234,236,237,241,248,256,260,262,271,274,277,289,305,306,],[44,44,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,44,-120,-120,-120,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-134,44,44,-113,-114,-124,44,44,44,-89,-131,-91,-92,-131,-94,-95,-131,-131,-131,-131,-131,-131,-102,-103,-131,-131,-106,-107,-131,-131,-110,-115,-116,-120,-47,-127,44,-120,44,-82,-111,-120,44,44,44,44,44,44,44,44,44,44,44,44,-22,-23,-24,-67,44,-86,-120,44,219,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,44,-80,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,246,-73,-85,-124,-68,219,-120,-12,-120,219,285,-120,-3,-83,309,-19,]),'CSTFLT':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,30,38,39,40,41,42,43,44,45,46,47,48,49,50,68,70,71,74,75,76,78,79,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,128,129,136,137,138,139,140,141,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,171,173,174,179,187,188,189,190,191,192,193,194,195,196,197,198,204,206,208,209,213,215,216,222,223,224,225,226,227,233,234,236,237,248,256,260,274,277,289,306,],[45,45,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,45,-120,-120,-120,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-134,45,45,-113,-114,-124,45,45,45,-89,-131,-91,-92,-131,-94,-95,-131,-131,-131,-131,-131,-131,-102,-103,-131,-131,-106,-107,-131,-131,-110,-115,-116,-120,-47,-127,45,-120,45,-82,-111,-120,45,45,45,45,45,45,45,45,45,45,45,45,-22,-23,-24,-67,45,-86,-120,45,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,45,-80,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'CSTCHAR':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,30,38,39,40,41,42,43,44,45,46,47,48,49,50,68,70,71,74,75,76,78,79,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,128,129,136,137,138,139,140,141,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,171,173,174,179,187,188,189,190,191,192,193,194,195,196,197,198,204,206,208,209,213,215,216,222,223,224,225,226,227,233,234,236,237,248,256,260,274,277,289,306,],[46,46,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,46,-120,-120,-120,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-134,46,46,-113,-114,-124,46,46,46,-89,-131,-91,-92,-131,-94,-95,-131,-131,-131,-131,-131,-131,-102,-103,-131,-131,-106,-107,-131,-131,-110,-115,-116,-120,-47,-127,46,-120,46,-82,-111,-120,46,46,46,46,46,46,46,46,46,46,46,46,-22,-23,-24,-67,46,-86,-120,46,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,46,-80,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'CSTSTRING':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,30,38,39,40,41,42,43,44,45,46,47,48,49,50,68,70,71,74,75,76,78,79,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,128,129,136,137,138,139,140,141,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,171,173,174,179,187,188,189,190,191,192,193,194,195,196,197,198,204,206,208,209,213,215,216,222,223,224,225,226,227,233,234,236,237,248,256,260,274,277,289,306,],[47,47,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,47,-120,-120,-120,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-134,47,47,-113,-114,-124,47,47,47,-89,-131,-91,-92,-131,-94,-95,-131,-131,-131,-131,-131,-131,-102,-103,-131,-131,-106,-107,-131,-131,-110,-115,-116,-120,-47,-127,47,-120,47,-82,-111,-120,47,47,47,47,47,47,47,47,47,47,47,47,-22,-23,-24,-67,47,-86,-120,47,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,47,-80,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'TRUE':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,30,38,39,40,41,42,43,44,45,46,47,48,49,50,68,70,71,74,75,76,78,79,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,128,129,136,137,138,139,140,141,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,171,173,174,179,187,188,189,190,191,192,193,194,195,196,197,198,204,206,208,209,213,215,216,222,223,224,225,226,227,233,234,236,237,248,256,260,274,277,289,306,],[49,49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,49,-120,-120,-120,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-134,49,49,-113,-114,-124,49,49,49,-89,-131,-91,-92,-131,-94,-95,-131,-131,-131,-131,-131,-131,-102,-103,-131,-131,-106,-107,-131,-131,-110,-115,-116,-120,-47,-127,49,-120,49,-82,-111,-120,49,49,49,49,49,49,49,49,49,49,49,49,-22,-23,-24,-67,49,-86,-120,49,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,49,-80,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'FALSE':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,30,38,39,40,41,42,43,44,45,46,47,48,49,50,68,70,71,74,75,76,78,79,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,128,129,136,137,138,139,140,141,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,171,173,174,179,187,188,189,190,191,192,193,194,195,196,197,198,204,206,208,209,213,215,216,222,223,224,225,226,227,233,234,236,237,248,256,260,274,277,289,306,],[50,50,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,50,-120,-120,-120,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-134,50,50,-113,-114,-124,50,50,50,-89,-131,-91,-92,-131,-94,-95,-131,-131,-131,-131,-131,-131,-102,-103,-131,-131,-106,-107,-131,-131,-110,-115,-116,-120,-47,-127,50,-120,50,-82,-111,-120,50,50,50,50,50,50,50,50,50,50,50,50,-22,-23,-24,-67,50,-86,-120,50,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,50,-80,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'DATAFRAME':([10,],[56,]),'FILE':([10,],[57,]),'INT':([10,36,242,265,],[58,58,58,58,]),'FLOAT':([10,36,242,265,],[59,59,59,59,]),'BOOL':([10,36,242,265,],[60,60,60,60,]),'STRING':([10,36,242,265,],[61,61,61,61,]),'CHAR':([10,36,242,265,],[62,62,62,62,]),'INTS':([10,242,265,],[63,63,63,]),'FLOATS':([10,242,265,],[64,64,64,]),'BOOLS':([10,242,265,],[65,65,65,]),'STRINGS':([10,242,265,],[66,66,66,]),'CHARS':([10,242,265,],[67,67,67,]),'MULT':([16,27,29,42,43,44,45,46,47,48,49,50,72,74,75,76,109,110,132,137,139,140,141,173,174,197,198,206,208,209,234,236,248,260,274,289,],[-114,-113,-124,106,-112,-128,-129,-117,-118,-119,-78,-79,-120,-113,-114,-124,-115,-116,-114,-120,-82,-111,-120,-86,-120,106,106,-80,-84,-81,-85,-124,-120,-120,-120,-83,]),'DIV':([16,27,29,42,43,44,45,46,47,48,49,50,72,74,75,76,109,110,132,137,139,140,141,173,174,197,198,206,208,209,234,236,248,260,274,289,],[-114,-113,-124,107,-112,-128,-129,-117,-118,-119,-78,-79,-120,-113,-114,-124,-115,-116,-114,-120,-82,-111,-120,-86,-120,107,107,-80,-84,-81,-85,-124,-120,-120,-120,-83,]),'PLUS':([16,27,29,41,42,43,44,45,46,47,48,49,50,72,74,75,76,105,108,109,110,132,137,139,140,141,173,174,195,196,197,198,206,208,209,226,227,234,236,248,260,274,289,],[-114,-113,-124,102,-120,-112,-128,-129,-117,-118,-119,-78,-79,-120,-113,-114,-124,-107,-110,-115,-116,-114,-120,-82,-111,-120,-86,-120,102,102,-120,-120,-80,-84,-81,-108,-109,-85,-124,-120,-120,-120,-83,]),'MINUS':([16,27,29,41,42,43,44,45,46,47,48,49,50,72,74,75,76,105,108,109,110,132,137,139,140,141,173,174,195,196,197,198,206,208,209,226,227,234,236,248,260,274,289,],[-114,-113,-124,103,-120,-112,-128,-129,-117,-118,-119,-78,-79,-120,-113,-114,-124,-107,-110,-115,-116,-114,-120,-82,-111,-120,-86,-120,103,103,-120,-120,-80,-84,-81,-108,-109,-85,-124,-120,-120,-120,-83,]),'LT':([16,27,29,40,41,42,43,44,45,46,47,48,49,50,72,74,75,76,101,104,105,108,109,110,132,137,139,140,141,173,174,195,196,197,198,206,208,209,224,225,226,227,234,236,248,260,274,289,],[-114,-113,-124,94,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-120,-113,-114,-124,-103,-106,-107,-110,-115,-116,-114,-120,-82,-111,-120,-86,-120,-120,-120,-120,-120,-80,-84,-81,-104,-105,-108,-109,-85,-124,-120,-120,-120,-83,]),'GT':([16,27,29,40,41,42,43,44,45,46,47,48,49,50,72,74,75,76,101,104,105,108,109,110,132,137,139,140,141,173,174,195,196,197,198,206,208,209,224,225,226,227,234,236,248,260,274,289,],[-114,-113,-124,95,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-120,-113,-114,-124,-103,-106,-107,-110,-115,-116,-114,-120,-82,-111,-120,-86,-120,-120,-120,-120,-120,-80,-84,-81,-104,-105,-108,-109,-85,-124,-120,-120,-120,-83,]),'GTE':([16,27,29,40,41,42,43,44,45,46,47,48,49,50,72,74,75,76,101,104,105,108,109,110,132,137,139,140,141,173,174,195,196,197,198,206,208,209,224,225,226,227,234,236,248,260,274,289,],[-114,-113,-124,96,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-120,-113,-114,-124,-103,-106,-107,-110,-115,-116,-114,-120,-82,-111,-120,-86,-120,-120,-120,-120,-120,-80,-84,-81,-104,-105,-108,-109,-85,-124,-120,-120,-120,-83,]),'LTE':([16,27,29,40,41,42,43,44,45,46,47,48,49,50,72,74,75,76,101,104,105,108,109,110,132,137,139,140,141,173,174,195,196,197,198,206,208,209,224,225,226,227,234,236,248,260,274,289,],[-114,-113,-124,97,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-120,-113,-114,-124,-103,-106,-107,-110,-115,-116,-114,-120,-82,-111,-120,-86,-120,-120,-120,-120,-120,-80,-84,-81,-104,-105,-108,-109,-85,-124,-120,-120,-120,-83,]),'EQ':([16,27,29,40,41,42,43,44,45,46,47,48,49,50,72,74,75,76,101,104,105,108,109,110,132,137,139,140,141,173,174,195,196,197,198,206,208,209,224,225,226,227,234,236,248,260,274,289,],[-114,-113,-124,98,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-120,-113,-114,-124,-103,-106,-107,-110,-115,-116,-114,-120,-82,-111,-120,-86,-120,-120,-120,-120,-120,-80,-84,-81,-104,-105,-108,-109,-85,-124,-120,-120,-120,-83,]),'NE':([16,27,29,40,41,42,43,44,45,46,47,48,49,50,72,74,75,76,101,104,105,108,109,110,132,137,139,140,141,173,174,195,196,197,198,206,208,209,224,225,226,227,234,236,248,260,274,289,],[-114,-113,-124,99,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-120,-113,-114,-124,-103,-106,-107,-110,-115,-116,-114,-120,-82,-111,-120,-86,-120,-120,-120,-120,-120,-80,-84,-81,-104,-105,-108,-109,-85,-124,-120,-120,-120,-83,]),'AND':([16,27,29,39,40,41,42,43,44,45,46,47,48,49,50,72,74,75,76,93,100,101,104,105,108,109,110,132,137,139,140,141,173,174,188,189,190,191,192,193,194,195,196,197,198,206,208,209,224,225,226,227,234,236,248,260,274,289,],[-114,-113,-124,91,-120,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-120,-113,-114,-124,-95,-102,-103,-106,-107,-110,-115,-116,-114,-120,-82,-111,-120,-86,-120,91,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,-104,-105,-108,-109,-85,-124,-120,-120,-120,-83,]),'OR':([16,27,29,38,39,40,41,42,43,44,45,46,47,48,49,50,72,74,75,76,90,92,93,100,101,104,105,108,109,110,132,137,139,140,141,173,174,187,188,189,190,191,192,193,194,195,196,197,198,206,208,209,223,224,225,226,227,234,236,248,260,274,289,],[-114,-113,-124,88,-120,-120,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-120,-113,-114,-124,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-114,-120,-82,-111,-120,-86,-120,88,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,-93,-104,-105,-108,-109,-85,-124,-120,-120,-120,-83,]),'QUESTION':([16,27,28,29,38,39,40,41,42,43,44,45,46,47,48,49,50,72,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,132,137,139,140,141,173,174,187,188,189,190,191,192,193,194,195,196,197,198,206,208,209,222,223,224,225,226,227,234,236,248,260,274,289,],[-114,-113,71,-124,-120,-120,-120,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-120,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-114,-120,-82,-111,-120,-86,-120,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,-90,-93,-104,-105,-108,-109,-85,-124,-120,-120,-120,-83,]),'AS':([27,29,72,137,139,174,206,208,209,236,248,260,274,289,],[70,-124,-120,-120,-82,-120,-80,-84,-81,-124,-120,-120,-120,-83,]),'OBRACKET':([29,72,76,115,137,139,141,148,169,184,201,209,236,248,259,260,268,280,293,296,300,311,],[-124,138,-124,-124,138,-82,138,-124,-126,138,232,-81,-124,138,271,138,-125,138,138,-124,305,271,]),'PERIOD':([29,72,76,137,139,141,148,174,184,209,236,248,260,274,],[-124,-120,-124,-120,-82,-120,-124,207,-120,-81,-124,-120,-120,207,]),'VOID':([36,],[85,]),'CPAREN':([38,39,40,41,42,43,44,45,46,47,48,49,50,73,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,136,137,139,140,141,143,144,145,148,172,173,174,178,180,181,184,187,188,189,190,191,192,193,194,195,196,197,198,203,205,206,208,209,214,217,219,222,223,224,225,226,227,234,235,236,240,242,247,248,251,252,253,260,264,266,267,268,274,276,278,279,280,289,292,293,298,],[-120,-120,-120,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,140,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,173,-120,-82,-111,-120,177,-120,-120,-124,-120,-86,-120,213,-76,215,-120,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,234,-88,-80,-84,-81,-120,-21,-20,-90,-93,-104,-105,-108,-109,-85,-120,-124,-75,-120,-87,-120,263,-120,-7,-120,-6,-9,-125,-125,-120,291,-120,-10,-120,-83,-8,-120,-11,]),'COLON':([38,39,40,41,42,43,44,45,46,47,48,49,50,74,75,76,86,87,89,90,92,93,100,101,104,105,108,109,110,129,130,131,132,133,134,135,137,139,140,141,151,170,173,174,186,187,188,189,190,191,192,193,194,195,196,197,198,206,208,209,213,215,222,223,224,225,226,227,233,234,236,248,257,260,274,289,294,],[-120,-120,-120,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-113,-114,-124,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-127,171,-62,-63,-64,-65,-66,-120,-82,-111,-120,-122,-67,-86,-120,221,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,-74,-77,-90,-93,-104,-105,-108,-109,-73,-85,-124,-120,269,-120,-120,-83,299,]),'COMMA':([38,39,40,41,42,43,44,45,46,47,48,49,50,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,112,114,137,139,140,141,144,145,167,168,172,173,174,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,208,209,214,222,223,224,225,226,227,234,235,236,245,248,252,258,259,260,267,268,270,272,273,274,278,279,280,289,293,295,298,],[-120,-120,-120,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-124,-124,-120,-82,-111,-120,179,179,-126,-126,204,-86,-120,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,229,229,-80,-84,-81,179,-90,-93,-104,-105,-108,-109,-85,204,-124,-124,-120,265,-126,-120,-120,-125,-125,229,287,-33,-120,265,-10,-120,-83,-120,-32,-11,]),'CBRACKET':([38,39,40,41,42,43,44,45,46,47,48,49,50,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,137,139,140,141,173,174,175,187,188,189,190,191,192,193,194,195,196,197,198,206,208,209,222,223,224,225,226,227,234,236,246,248,260,274,285,289,309,],[-120,-120,-120,-120,-120,-112,-128,-129,-117,-118,-119,-78,-79,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-120,-82,-111,-120,-86,-120,209,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,-90,-93,-104,-105,-108,-109,-85,-124,259,-120,-120,-120,295,-83,311,]),'ELSE':([68,128,176,275,],[-134,-47,211,211,]),'THEN':([77,81,177,249,291,],[142,146,-72,261,297,]),'METHODS':([111,164,165,166,269,281,282,283,],[-120,-22,-23,-24,-120,294,-14,-15,]),'FROM':([137,139,147,148,174,184,206,208,209,236,248,260,274,289,],[-120,-82,183,-124,-120,-120,-80,-84,-81,-124,-120,-120,-120,-83,]),'TO':([137,139,148,174,184,206,208,209,217,218,219,236,248,260,274,289,],[-120,-82,-124,-120,-120,-80,-84,-81,-21,241,-20,-124,-120,-120,-120,-83,]),'BY':([137,139,148,174,184,206,208,209,217,219,236,248,250,260,274,289,],[-120,-82,-124,-120,-120,-80,-84,-81,-21,-20,-124,-120,262,-120,-120,-83,]),'ATTRIBUTES':([244,],[257,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'saw_id':([3,29,76,86,112,114,115,148,149,236,245,296,],[4,72,141,151,167,168,169,184,185,248,258,300,]),'saw_program':([4,],[5,]),'bloque':([6,8,9,13,142,146,211,261,263,297,],[7,11,23,23,176,182,238,275,277,301,]),'dec':([6,9,13,111,269,],[8,26,26,165,282,]),'b1':([9,13,],[12,69,]),'estatuto':([9,13,],[13,13,]),'empty':([9,13,38,39,40,41,42,72,111,137,141,144,145,172,174,176,184,187,188,195,196,197,198,199,200,214,235,242,248,252,259,260,269,270,272,274,275,278,280,293,299,303,311,],[14,14,89,92,100,104,108,139,166,139,139,180,180,205,208,212,139,89,92,104,104,108,108,230,230,180,205,253,139,266,273,139,283,230,288,208,212,266,139,139,304,304,273,]),'asignacion':([9,13,71,171,],[15,15,131,131,]),'llamada':([9,13,30,70,71,78,79,80,136,138,152,153,154,155,156,157,158,159,160,161,162,163,171,179,204,],[16,16,75,75,132,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,132,75,75,]),'condicion':([9,13,],[17,17,]),'escritura':([9,13,71,171,],[18,18,133,133,]),'leer':([9,13,71,171,],[19,19,134,134,]),'ciclo_while':([9,13,],[20,20,]),'ciclo_for':([9,13,],[21,21,]),'ternaria':([9,13,71,171,],[22,22,135,135,]),'funcion':([9,13,299,303,],[24,24,303,303,]),'clase':([9,13,],[25,25,]),'variable':([9,13,30,70,71,78,79,80,82,136,138,152,153,154,155,156,157,158,159,160,161,162,163,171,179,183,204,241,262,],[27,27,74,74,27,74,74,74,147,74,74,74,74,74,74,74,74,74,74,74,74,74,74,27,74,217,74,217,217,]),'exp':([9,13,30,70,71,78,79,80,136,138,171,179,204,],[28,28,73,129,28,143,144,145,172,175,28,214,235,]),'texp':([9,13,30,70,71,78,79,80,136,138,152,171,179,204,],[38,38,38,38,38,38,38,38,38,38,187,38,38,38,]),'gexp':([9,13,30,70,71,78,79,80,136,138,152,153,171,179,204,],[39,39,39,39,39,39,39,39,39,39,39,188,39,39,39,]),'mexp':([9,13,30,70,71,78,79,80,136,138,152,153,154,155,156,157,158,159,171,179,204,],[40,40,40,40,40,40,40,40,40,40,40,40,189,190,191,192,193,194,40,40,40,]),'termino':([9,13,30,70,71,78,79,80,136,138,152,153,154,155,156,157,158,159,160,161,171,179,204,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,195,196,41,41,41,]),'factor':([9,13,30,70,71,78,79,80,136,138,152,153,154,155,156,157,158,159,160,161,162,163,171,179,204,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,197,198,42,42,42,]),'varcst':([9,13,30,70,71,78,79,80,136,138,152,153,154,155,156,157,158,159,160,161,162,163,171,179,204,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'boolean':([9,13,30,70,71,78,79,80,136,138,152,153,154,155,156,157,158,159,160,161,162,163,171,179,204,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'tipo':([10,],[51,]),'compuesto':([10,],[52,]),'simple':([10,36,242,265,],[54,84,254,254,]),'multiple':([10,242,265,],[55,255,255,]),'cond2':([31,34,239,],[77,81,249,]),'func1':([36,],[83,]),'exp1':([38,187,],[87,222,]),'texp1':([39,188,],[90,223,]),'gexp1':([40,],[93,]),'mexp1':([41,195,196,],[101,224,225,]),'term1':([42,197,198,],[105,226,227,]),'saw_end_value_int':([44,],[109,]),'saw_end_value_flt':([45,],[110,]),'saw_type':([53,56,57,58,59,60,61,62,63,64,65,66,67,85,],[113,116,117,118,119,120,121,122,123,124,125,126,127,150,]),'scope_end':([68,],[128,]),'estatuto_redux':([71,171,],[130,202,]),'variable1':([72,137,141,184,248,260,280,293,],[137,174,137,137,260,274,293,298,]),'saw_op':([88,91,94,95,96,97,98,99,102,103,106,107,],[152,153,154,155,156,157,158,159,160,161,162,163,]),'dec1':([111,],[164,]),'saw_asig':([129,],[170,]),'e1':([144,145,214,],[178,181,240,]),'saw_class':([151,],[186,]),'saw_variable':([167,168,169,258,],[199,200,201,270,]),'llamada1':([172,235,],[203,247,]),'variable2':([174,274,],[206,289,]),'cond1':([176,275,],[210,290,]),'ciclo_for1':([183,241,262,],[218,250,276,]),'saw_function':([185,],[220,]),'tipo1':([199,200,270,],[228,231,284,]),'clase_bloque':([221,],[243,]),'param':([242,],[251,]),'param2':([242,265,],[252,278,]),'param1':([252,278,],[264,292,]),'tipo3':([259,311,],[272,312,]),'saw_id_param':([267,268,],[279,280,]),'clase_bloque1':([269,],[281,]),'tipo2':([272,],[286,]),'clase_metodos_bloque':([299,303,],[302,308,]),'class_scope_end':([302,],[307,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID saw_id saw_program SEMICOLON bloque','programa',6,'p_programa','plyler.py',158),
  ('programa -> PROGRAM ID saw_id saw_program SEMICOLON dec bloque','programa',7,'p_programa','plyler.py',159),
  ('funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque','funcion',9,'p_funcion','plyler.py',169),
  ('func1 -> simple','func1',1,'p_funcion1','plyler.py',178),
  ('func1 -> VOID saw_type','func1',2,'p_funcion1','plyler.py',179),
  ('param -> param2 param1','param',2,'p_param','plyler.py',188),
  ('param -> empty','param',1,'p_param','plyler.py',189),
  ('param1 -> COMMA param2 param1','param1',3,'p_param1','plyler.py',197),
  ('param1 -> empty','param1',1,'p_param1','plyler.py',198),
  ('param2 -> simple ID saw_id_param','param2',3,'p_param2','plyler.py',206),
  ('param2 -> multiple ID saw_id_param variable1 variable1','param2',5,'p_param2','plyler.py',207),
  ('clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON','clase',7,'p_clase','plyler.py',216),
  ('clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY','clase_bloque',9,'p_clase_bloque','plyler.py',223),
  ('clase_bloque1 -> dec','clase_bloque1',1,'p_clase_bloque1','plyler.py',229),
  ('clase_bloque1 -> empty','clase_bloque1',1,'p_clase_bloque1','plyler.py',230),
  ('clase_metodos_bloque -> funcion clase_metodos_bloque','clase_metodos_bloque',2,'p_clase_metodos_bloque','plyler.py',236),
  ('clase_metodos_bloque -> empty','clase_metodos_bloque',1,'p_clase_metodos_bloque','plyler.py',237),
  ('ciclo_while -> WHILE cond2 THEN bloque SEMICOLON','ciclo_while',5,'p_ciclo_while','plyler.py',245),
  ('ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON','ciclo_for',13,'p_ciclo_for','plyler.py',254),
  ('ciclo_for1 -> CSTINT','ciclo_for1',1,'p_ciclo_for1','plyler.py',261),
  ('ciclo_for1 -> variable','ciclo_for1',1,'p_ciclo_for1','plyler.py',262),
  ('dec -> VAR tipo SEMICOLON dec1','dec',4,'p_dec','plyler.py',270),
  ('dec1 -> dec','dec1',1,'p_dec1','plyler.py',276),
  ('dec1 -> empty','dec1',1,'p_dec1','plyler.py',277),
  ('tipo -> compuesto ID saw_id saw_variable tipo1','tipo',5,'p_tipo','plyler.py',285),
  ('tipo -> simple ID saw_id saw_variable tipo1','tipo',5,'p_tipo','plyler.py',286),
  ('tipo -> multiple ID saw_id saw_variable OBRACKET CSTINT CBRACKET tipo3 tipo2','tipo',9,'p_tipo','plyler.py',287),
  ('tipo1 -> COMMA ID saw_id saw_variable tipo1','tipo1',5,'p_tipo1','plyler.py',294),
  ('tipo1 -> empty','tipo1',1,'p_tipo1','plyler.py',295),
  ('tipo2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET tipo3','tipo2',7,'p_tipo2','plyler.py',302),
  ('tipo2 -> empty','tipo2',1,'p_tipo2','plyler.py',303),
  ('tipo3 -> OBRACKET CSTINT CBRACKET','tipo3',3,'p_tipo3','plyler.py',309),
  ('tipo3 -> empty','tipo3',1,'p_tipo3','plyler.py',310),
  ('simple -> INT saw_type','simple',2,'p_tipo_simple','plyler.py',316),
  ('simple -> FLOAT saw_type','simple',2,'p_tipo_simple','plyler.py',317),
  ('simple -> BOOL saw_type','simple',2,'p_tipo_simple','plyler.py',318),
  ('simple -> STRING saw_type','simple',2,'p_tipo_simple','plyler.py',319),
  ('simple -> CHAR saw_type','simple',2,'p_tipo_simple','plyler.py',320),
  ('multiple -> INTS saw_type','multiple',2,'p_tipo_multiple','plyler.py',327),
  ('multiple -> FLOATS saw_type','multiple',2,'p_tipo_multiple','plyler.py',328),
  ('multiple -> BOOLS saw_type','multiple',2,'p_tipo_multiple','plyler.py',329),
  ('multiple -> STRINGS saw_type','multiple',2,'p_tipo_multiple','plyler.py',330),
  ('multiple -> CHARS saw_type','multiple',2,'p_tipo_multiple','plyler.py',331),
  ('compuesto -> ID saw_type','compuesto',2,'p_tipo_compuesto','plyler.py',337),
  ('compuesto -> DATAFRAME saw_type','compuesto',2,'p_tipo_compuesto','plyler.py',338),
  ('compuesto -> FILE saw_type','compuesto',2,'p_tipo_compuesto','plyler.py',339),
  ('bloque -> OCURLY b1 CCURLY scope_end','bloque',4,'p_bloque','plyler.py',347),
  ('b1 -> estatuto b1','b1',2,'p_b1','plyler.py',353),
  ('b1 -> empty','b1',1,'p_b1','plyler.py',354),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','plyler.py',362),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','plyler.py',363),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','plyler.py',364),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','plyler.py',365),
  ('estatuto -> leer','estatuto',1,'p_estatuto','plyler.py',366),
  ('estatuto -> ciclo_while','estatuto',1,'p_estatuto','plyler.py',367),
  ('estatuto -> ciclo_for','estatuto',1,'p_estatuto','plyler.py',368),
  ('estatuto -> ternaria','estatuto',1,'p_estatuto','plyler.py',369),
  ('estatuto -> bloque','estatuto',1,'p_estatuto','plyler.py',370),
  ('estatuto -> funcion','estatuto',1,'p_estatuto','plyler.py',371),
  ('estatuto -> clase','estatuto',1,'p_estatuto','plyler.py',372),
  ('estatuto -> dec','estatuto',1,'p_estatuto','plyler.py',373),
  ('estatuto_redux -> asignacion','estatuto_redux',1,'p_estatuto_redux','plyler.py',379),
  ('estatuto_redux -> llamada','estatuto_redux',1,'p_estatuto_redux','plyler.py',380),
  ('estatuto_redux -> escritura','estatuto_redux',1,'p_estatuto_redux','plyler.py',381),
  ('estatuto_redux -> leer','estatuto_redux',1,'p_estatuto_redux','plyler.py',382),
  ('estatuto_redux -> ternaria','estatuto_redux',1,'p_estatuto_redux','plyler.py',383),
  ('asignacion -> variable AS exp saw_asig','asignacion',4,'p_asignacion','plyler.py',391),
  ('condicion -> IF cond2 THEN bloque cond1 SEMICOLON','condicion',6,'p_condicion','plyler.py',399),
  ('cond1 -> ELSE bloque','cond1',2,'p_cond1','plyler.py',405),
  ('cond1 -> ELSE IF cond2 THEN bloque cond1','cond1',6,'p_cond1','plyler.py',406),
  ('cond1 -> empty','cond1',1,'p_cond1','plyler.py',407),
  ('cond2 -> OPAREN exp CPAREN','cond2',3,'p_cond2','plyler.py',413),
  ('ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON','ternaria',6,'p_ternaria','plyler.py',421),
  ('escritura -> PRINT OPAREN exp e1 CPAREN','escritura',5,'p_escritura','plyler.py',429),
  ('e1 -> COMMA exp e1','e1',3,'p_e1','plyler.py',435),
  ('e1 -> empty','e1',1,'p_e1','plyler.py',436),
  ('leer -> READ OPAREN exp e1 CPAREN','leer',5,'p_leer','plyler.py',444),
  ('boolean -> TRUE','boolean',1,'p_boolean','plyler.py',452),
  ('boolean -> FALSE','boolean',1,'p_boolean','plyler.py',453),
  ('variable -> ID saw_id variable1 variable1 variable2','variable',5,'p_variable','plyler.py',461),
  ('variable1 -> OBRACKET exp CBRACKET','variable1',3,'p_variable1','plyler.py',467),
  ('variable1 -> empty','variable1',1,'p_variable1','plyler.py',468),
  ('variable2 -> PERIOD ID saw_id variable1 variable1 variable2','variable2',6,'p_variable2','plyler.py',474),
  ('variable2 -> empty','variable2',1,'p_variable2','plyler.py',475),
  ('llamada -> ID saw_id OPAREN exp llamada1 CPAREN','llamada',6,'p_llamada_funcion','plyler.py',483),
  ('llamada -> ID saw_id OPAREN CPAREN','llamada',4,'p_llamada_funcion','plyler.py',484),
  ('llamada1 -> COMMA exp llamada1','llamada1',3,'p_llamada_funcion1','plyler.py',490),
  ('llamada1 -> empty','llamada1',1,'p_llamada_funcion1','plyler.py',491),
  ('exp -> texp exp1','exp',2,'p_exp','plyler.py',499),
  ('exp1 -> OR saw_op texp exp1','exp1',4,'p_exp1','plyler.py',505),
  ('exp1 -> empty','exp1',1,'p_exp1','plyler.py',506),
  ('texp -> gexp texp1','texp',2,'p_texp','plyler.py',512),
  ('texp1 -> AND saw_op gexp texp1','texp1',4,'p_texp1','plyler.py',518),
  ('texp1 -> empty','texp1',1,'p_texp1','plyler.py',519),
  ('gexp -> mexp gexp1','gexp',2,'p_gexp','plyler.py',525),
  ('gexp1 -> LT saw_op mexp','gexp1',3,'p_gexp1','plyler.py',531),
  ('gexp1 -> GT saw_op mexp','gexp1',3,'p_gexp1','plyler.py',532),
  ('gexp1 -> GTE saw_op mexp','gexp1',3,'p_gexp1','plyler.py',533),
  ('gexp1 -> LTE saw_op mexp','gexp1',3,'p_gexp1','plyler.py',534),
  ('gexp1 -> EQ saw_op mexp','gexp1',3,'p_gexp1','plyler.py',535),
  ('gexp1 -> NE saw_op mexp','gexp1',3,'p_gexp1','plyler.py',536),
  ('gexp1 -> empty','gexp1',1,'p_gexp1','plyler.py',537),
  ('mexp -> termino mexp1','mexp',2,'p_mexp','plyler.py',543),
  ('mexp1 -> PLUS saw_op termino mexp1','mexp1',4,'p_mexp1','plyler.py',549),
  ('mexp1 -> MINUS saw_op termino mexp1','mexp1',4,'p_mexp1','plyler.py',550),
  ('mexp1 -> empty','mexp1',1,'p_mexp1','plyler.py',551),
  ('termino -> factor term1','termino',2,'p_termino','plyler.py',559),
  ('term1 -> MULT saw_op factor term1','term1',4,'p_term1','plyler.py',565),
  ('term1 -> DIV saw_op factor term1','term1',4,'p_term1','plyler.py',566),
  ('term1 -> empty','term1',1,'p_term1','plyler.py',567),
  ('factor -> OPAREN exp CPAREN','factor',3,'p_factor','plyler.py',575),
  ('factor -> varcst','factor',1,'p_factor','plyler.py',576),
  ('factor -> variable','factor',1,'p_factor','plyler.py',577),
  ('factor -> llamada','factor',1,'p_factor','plyler.py',578),
  ('varcst -> CSTINT saw_end_value_int','varcst',2,'p_varcst','plyler.py',586),
  ('varcst -> CSTFLT saw_end_value_flt','varcst',2,'p_varcst','plyler.py',587),
  ('varcst -> CSTCHAR','varcst',1,'p_varcst','plyler.py',588),
  ('varcst -> CSTSTRING','varcst',1,'p_varcst','plyler.py',589),
  ('varcst -> boolean','varcst',1,'p_varcst','plyler.py',590),
  ('empty -> <empty>','empty',0,'p_empty','plyler.py',598),
  ('saw_program -> <empty>','saw_program',0,'p_saw_program','plyler.py',611),
  ('saw_class -> <empty>','saw_class',0,'p_saw_class','plyler.py',618),
  ('saw_type -> <empty>','saw_type',0,'p_saw_type','plyler.py',627),
  ('saw_id -> <empty>','saw_id',0,'p_saw_id','plyler.py',634),
  ('saw_id_param -> <empty>','saw_id_param',0,'p_saw_id_param','plyler.py',641),
  ('saw_variable -> <empty>','saw_variable',0,'p_saw_variable','plyler.py',651),
  ('saw_asig -> <empty>','saw_asig',0,'p_saw_asig','plyler.py',657),
  ('saw_end_value_int -> <empty>','saw_end_value_int',0,'p_saw_end_value_int','plyler.py',665),
  ('saw_end_value_flt -> <empty>','saw_end_value_flt',0,'p_saw_end_value_flt','plyler.py',673),
  ('do_not_save -> <empty>','do_not_save',0,'p_do_not_save','plyler.py',681),
  ('saw_op -> <empty>','saw_op',0,'p_saw_op','plyler.py',689),
  ('saw_function -> <empty>','saw_function',0,'p_saw_function','plyler.py',701),
  ('scope_start -> <empty>','scope_start',0,'p_scope_start','plyler.py',708),
  ('scope_end -> <empty>','scope_end',0,'p_scope_end','plyler.py',714),
  ('class_scope_start -> <empty>','class_scope_start',0,'p_class_scope_start','plyler.py',721),
  ('class_scope_end -> <empty>','class_scope_end',0,'p_class_scope_end','plyler.py',727),
]
