
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ATTRIBUTES BOOL BOOLS BY CBRACKET CCURLY CHAR CHARS CLASS COLON COMMA COMMENT CPAREN CSTCHAR CSTFLT CSTINT CSTSTRING DATAFRAME DIV ELSE EQ FALSE FILE FLOAT FLOATS FOR FROM FUNCTION GT GTE ID IF INT INTS LT LTE METHODS MINUS MULT NE OBRACKET OCURLY OPAREN OR PERIOD PLUS PRINT PROGRAM QUESTION READ RETURN SEMICOLON STRING STRINGS THEN TO TRUE VAR VOID WHILE\n  programa : PROGRAM ID saw_id saw_program SEMICOLON bloque\n           | PROGRAM ID saw_id saw_program SEMICOLON dec bloque\n  \n  funcion : FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque\n  \n  func1 : simple\n        | VOID saw_type\n  \n  param : param2 param1\n        | empty\n  \n  param1 : COMMA param2 param1\n         | empty\n  \n  param2 : simple ID saw_id_param\n         | multiple ID saw_id_param variable1 variable1\n  \n    clase : CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON\n   \n  clase_bloque :  OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY\n   \n  clase_bloque1 : dec\n                | empty\n   \n  clase_metodos_bloque : funcion clase_metodos_bloque\n                       | empty\n  \n  ciclo_while : WHILE cond2 THEN bloque SEMICOLON\n  \n  ciclo_for : FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON\n  \n  ciclo_for1 : CSTINT\n             | variable\n  \n  dec : VAR tipo SEMICOLON dec1\n  \n  dec1 : dec\n       | empty\n  \n  tipo : compuesto ID saw_id saw_variable tipo1\n       | simple ID saw_id saw_variable tipo1\n       | multiple ID saw_id saw_variable OBRACKET CSTINT CBRACKET tipo3 tipo2\n  \n  tipo1 : COMMA ID saw_id saw_variable tipo1\n        | empty\n  \n  tipo2 : COMMA ID saw_id OBRACKET CSTINT CBRACKET tipo3\n        | empty\n  \n  tipo3 : OBRACKET CSTINT CBRACKET\n        | empty\n  \n  simple : INT saw_type\n         | FLOAT saw_type\n         | BOOL saw_type\n         | STRING saw_type\n         | CHAR saw_type\n  \n  multiple : INTS saw_type\n           | FLOATS saw_type\n           | BOOLS saw_type\n           | STRINGS saw_type\n           | CHARS saw_type\n  \n  compuesto : ID saw_type\n            | DATAFRAME saw_type\n            | FILE saw_type\n  \n  bloque : OCURLY b1 CCURLY scope_end\n  \n  b1 : estatuto b1\n     | empty\n  \n  estatuto : asignacion\n           | llamada\n           | condicion\n           | escritura\n           | leer\n           | ciclo_while\n           | ciclo_for\n           | ternaria\n           | bloque\n           | funcion\n           | clase\n           | dec\n  \n  estatuto_redux : asignacion\n                 | llamada\n                 | escritura\n                 | leer\n                 | ternaria\n  \n  asignacion : variable AS exp saw_asig\n  \n  condicion : IF cond2 THEN bloque cond1 SEMICOLON\n  \n  cond1 : ELSE bloque\n        | ELSE IF cond2 THEN bloque cond1\n        | empty\n  \n    cond2 : OPAREN exp CPAREN\n  \n  ternaria : exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON\n  \n  escritura : PRINT OPAREN exp e1 CPAREN\n  \n  e1 : COMMA exp e1\n     | empty\n  \n  leer  : READ OPAREN exp e1 CPAREN\n  \n  boolean : TRUE\n          | FALSE\n  \n  variable : ID saw_id variable1 variable1 variable2\n  \n  variable1 : OBRACKET exp CBRACKET\n            | empty\n  \n  variable2 : PERIOD ID saw_id variable1 variable1 variable2\n            | empty \n  \n  llamada : ID saw_id OPAREN exp llamada1 CPAREN\n          | ID saw_id OPAREN CPAREN\n  \n  llamada1 : COMMA exp llamada1\n           | empty\n  \n  exp : texp exp1\n  \n  exp1 : OR saw_op texp exp1\n       | empty\n  \n  texp : gexp texp1\n  \n  texp1 : AND saw_op gexp texp1\n        | empty\n  \n  gexp : mexp gexp1\n  \n  gexp1 : LT saw_op mexp\n        | GT saw_op mexp\n        | GTE saw_op mexp\n        | LTE saw_op mexp\n        | EQ saw_op mexp\n        | NE saw_op mexp\n        | empty\n  \n  mexp : termino mexp1\n  \n  mexp1 : PLUS saw_op termino mexp1\n        | MINUS saw_op termino mexp1\n        | empty\n  \n  termino : factor term1\n  \n  term1 : MULT saw_op factor term1\n        | DIV saw_op factor term1\n        | empty\n  \n  factor : OPAREN exp CPAREN\n         | varcst\n         | variable\n         | llamada\n  \n  varcst : CSTINT saw_end_value\n         | CSTFLT saw_end_value\n         | CSTCHAR saw_end_value\n         | CSTSTRING saw_end_value\n         | boolean saw_end_value\n  \n  empty : \n  \n  saw_program : \n  \n  saw_class : \n  \n  saw_type : \n  \n  saw_id : \n  \n  saw_id_param : \n  \n  saw_variable : \n  \n  saw_asig : \n  \n  saw_end_value : \n  \n  do_not_save : \n  \n  saw_op : \n  \n  saw_function : \n  \n  scope_start : \n  \n  scope_end : \n  \n  class_scope_start : \n  \n  class_scope_end : \n  '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,7,11,68,131,],[0,-1,-2,-133,-47,]),'ID':([2,9,10,13,15,16,17,18,19,20,21,22,23,24,25,26,30,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,74,75,76,78,79,80,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,119,120,121,122,123,124,125,126,127,128,129,130,131,132,139,140,141,142,143,144,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,173,174,176,177,182,186,190,191,192,193,194,195,196,197,198,199,200,201,207,209,210,211,212,216,218,219,225,226,227,228,229,230,232,236,237,239,240,244,251,257,258,259,263,265,277,280,290,292,309,],[3,29,53,29,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,76,86,-120,-120,-120,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,115,-123,117,118,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-133,76,29,-113,-114,-124,76,76,76,151,152,-4,-123,-89,-130,-91,-92,-130,-94,-95,-130,-130,-130,-130,-130,-130,-102,-103,-130,-130,-106,-107,-130,-130,-110,-115,-116,-117,-118,-119,-120,-44,-45,-46,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-47,-127,76,-120,76,-82,-111,-120,-5,76,76,76,76,76,76,76,76,76,76,76,76,-22,-23,-24,-67,29,-86,-120,76,151,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,76,-80,239,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,248,-73,-85,-124,-68,151,-120,270,271,-12,-120,151,-120,-3,299,-83,-19,]),'SEMICOLON':([3,4,5,38,39,40,41,42,43,44,45,46,47,48,49,50,51,68,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,112,113,115,117,131,132,134,135,136,137,138,140,142,143,144,170,171,173,176,177,179,185,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,209,211,212,213,215,216,218,225,226,227,228,229,230,231,233,234,236,237,239,241,246,248,251,261,262,263,273,275,276,277,278,287,289,291,292,293,298,304,313,314,315,],[-124,-121,6,-120,-120,-120,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,114,-133,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-117,-118,-119,-124,-124,-47,-127,-62,-63,-64,-65,-66,-120,-82,-111,-120,-126,-126,-67,-86,-120,-120,219,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-120,-120,236,-80,-84,-81,240,-71,-74,-77,-90,-93,-104,-105,-108,-109,-25,-29,-26,-73,-85,-124,-69,259,-124,-120,-126,-120,-120,-120,-120,-33,-120,-120,-28,-27,-31,-83,-70,-32,309,-13,-120,-30,]),'OCURLY':([6,8,9,13,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,112,113,114,131,132,140,142,143,144,145,149,167,168,169,173,176,177,190,191,192,193,194,195,196,197,198,199,200,201,209,211,212,214,216,218,219,224,225,226,227,228,229,230,236,237,239,240,251,259,263,264,266,277,280,292,300,309,],[9,9,9,9,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-133,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-117,-118,-119,-120,-47,-127,-120,-82,-111,-120,9,9,-22,-23,-24,-67,-86,-120,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,9,-74,-77,-18,247,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,9,9,-120,-3,-83,9,-19,]),'VAR':([6,9,13,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,112,113,114,131,132,140,142,143,144,167,168,169,173,176,177,190,191,192,193,194,195,196,197,198,199,200,201,209,211,212,216,218,219,225,226,227,228,229,230,236,237,239,240,251,259,263,272,277,280,292,309,],[10,10,10,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-133,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-117,-118,-119,10,-47,-127,-120,-82,-111,-120,-22,-23,-24,-67,-86,-120,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,10,-120,-3,-83,-19,]),'CCURLY':([9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,69,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,112,113,114,131,132,140,142,143,144,167,168,169,173,176,177,190,191,192,193,194,195,196,197,198,199,200,201,209,211,212,216,218,219,225,226,227,228,229,230,236,237,239,240,251,259,263,277,280,292,302,305,306,307,309,310,311,],[-120,68,-120,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-133,-48,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-117,-118,-119,-120,-47,-127,-120,-82,-111,-120,-22,-23,-24,-67,-86,-120,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-120,-135,-120,-17,-19,313,-16,]),'IF':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,112,113,114,131,132,140,142,143,144,167,168,169,173,176,177,190,191,192,193,194,195,196,197,198,199,200,201,209,211,212,214,216,218,219,225,226,227,228,229,230,236,237,239,240,251,259,263,277,280,292,309,],[31,31,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-133,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-117,-118,-119,-120,-47,-127,-120,-82,-111,-120,-22,-23,-24,-67,-86,-120,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,242,-74,-77,-18,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'PRINT':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,71,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,112,113,114,131,132,140,142,143,144,167,168,169,173,174,176,177,190,191,192,193,194,195,196,197,198,199,200,201,209,211,212,216,218,219,225,226,227,228,229,230,236,237,239,240,251,259,263,277,280,292,309,],[32,32,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-133,32,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-117,-118,-119,-120,-47,-127,-120,-82,-111,-120,-22,-23,-24,-67,32,-86,-120,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'READ':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,71,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,112,113,114,131,132,140,142,143,144,167,168,169,173,174,176,177,190,191,192,193,194,195,196,197,198,199,200,201,209,211,212,216,218,219,225,226,227,228,229,230,236,237,239,240,251,259,263,277,280,292,309,],[33,33,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-133,33,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-117,-118,-119,-120,-47,-127,-120,-82,-111,-120,-22,-23,-24,-67,33,-86,-120,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'WHILE':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,112,113,114,131,132,140,142,143,144,167,168,169,173,176,177,190,191,192,193,194,195,196,197,198,199,200,201,209,211,212,216,218,219,225,226,227,228,229,230,236,237,239,240,251,259,263,277,280,292,309,],[34,34,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-133,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-117,-118,-119,-120,-47,-127,-120,-82,-111,-120,-22,-23,-24,-67,-86,-120,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'FOR':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,112,113,114,131,132,140,142,143,144,167,168,169,173,176,177,190,191,192,193,194,195,196,197,198,199,200,201,209,211,212,216,218,219,225,226,227,228,229,230,236,237,239,240,251,259,263,277,280,292,309,],[35,35,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-133,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-117,-118,-119,-120,-47,-127,-120,-82,-111,-120,-22,-23,-24,-67,-86,-120,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'FUNCTION':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,112,113,114,131,132,140,142,143,144,167,168,169,173,176,177,190,191,192,193,194,195,196,197,198,199,200,201,209,211,212,216,218,219,225,226,227,228,229,230,236,237,239,240,251,259,263,277,280,292,302,306,309,],[36,36,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-133,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-117,-118,-119,-120,-47,-127,-120,-82,-111,-120,-22,-23,-24,-67,-86,-120,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,36,36,-19,]),'CLASS':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,112,113,114,131,132,140,142,143,144,167,168,169,173,176,177,190,191,192,193,194,195,196,197,198,199,200,201,209,211,212,216,218,219,225,226,227,228,229,230,236,237,239,240,251,259,263,277,280,292,309,],[37,37,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-133,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-117,-118,-119,-120,-47,-127,-120,-82,-111,-120,-22,-23,-24,-67,-86,-120,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'OPAREN':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,38,39,40,41,42,43,44,45,46,47,48,49,50,68,70,71,72,74,75,76,78,79,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,131,132,139,140,141,142,143,144,152,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,173,174,176,177,182,188,190,191,192,193,194,195,196,197,198,199,200,201,207,209,211,212,216,218,219,223,225,226,227,228,229,230,236,237,239,240,242,251,259,263,277,280,292,309,],[30,30,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-124,30,78,79,80,78,82,-120,-120,-120,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-133,30,30,139,-113,-114,-124,30,30,30,-89,-130,-91,-92,-130,-94,-95,-130,-130,-130,-130,-130,-130,-102,-103,-130,-130,-106,-107,-130,-130,-110,-115,-116,-117,-118,-119,-120,-47,-127,30,-120,30,-82,-111,139,-124,30,30,30,30,30,30,30,30,30,30,30,30,-22,-23,-24,-67,30,-86,-120,30,-131,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,30,-80,-84,-81,-74,-77,-18,245,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,78,-120,-12,-120,-120,-3,-83,-19,]),'CSTINT':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,30,38,39,40,41,42,43,44,45,46,47,48,49,50,68,70,71,74,75,76,78,79,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,131,132,139,140,141,142,143,144,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,173,174,176,177,182,186,190,191,192,193,194,195,196,197,198,199,200,201,207,209,211,212,216,218,219,225,226,227,228,229,230,235,236,237,239,240,244,251,259,263,265,274,277,280,292,308,309,],[44,44,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,44,-120,-120,-120,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-133,44,44,-113,-114,-124,44,44,44,-89,-130,-91,-92,-130,-94,-95,-130,-130,-130,-130,-130,-130,-102,-103,-130,-130,-106,-107,-130,-130,-110,-115,-116,-117,-118,-119,-120,-47,-127,44,-120,44,-82,-111,-120,44,44,44,44,44,44,44,44,44,44,44,44,-22,-23,-24,-67,44,-86,-120,44,222,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,44,-80,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,249,-73,-85,-124,-68,222,-120,-12,-120,222,288,-120,-3,-83,312,-19,]),'CSTFLT':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,30,38,39,40,41,42,43,44,45,46,47,48,49,50,68,70,71,74,75,76,78,79,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,131,132,139,140,141,142,143,144,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,173,174,176,177,182,190,191,192,193,194,195,196,197,198,199,200,201,207,209,211,212,216,218,219,225,226,227,228,229,230,236,237,239,240,251,259,263,277,280,292,309,],[45,45,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,45,-120,-120,-120,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-133,45,45,-113,-114,-124,45,45,45,-89,-130,-91,-92,-130,-94,-95,-130,-130,-130,-130,-130,-130,-102,-103,-130,-130,-106,-107,-130,-130,-110,-115,-116,-117,-118,-119,-120,-47,-127,45,-120,45,-82,-111,-120,45,45,45,45,45,45,45,45,45,45,45,45,-22,-23,-24,-67,45,-86,-120,45,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,45,-80,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'CSTCHAR':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,30,38,39,40,41,42,43,44,45,46,47,48,49,50,68,70,71,74,75,76,78,79,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,131,132,139,140,141,142,143,144,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,173,174,176,177,182,190,191,192,193,194,195,196,197,198,199,200,201,207,209,211,212,216,218,219,225,226,227,228,229,230,236,237,239,240,251,259,263,277,280,292,309,],[46,46,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,46,-120,-120,-120,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-133,46,46,-113,-114,-124,46,46,46,-89,-130,-91,-92,-130,-94,-95,-130,-130,-130,-130,-130,-130,-102,-103,-130,-130,-106,-107,-130,-130,-110,-115,-116,-117,-118,-119,-120,-47,-127,46,-120,46,-82,-111,-120,46,46,46,46,46,46,46,46,46,46,46,46,-22,-23,-24,-67,46,-86,-120,46,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,46,-80,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'CSTSTRING':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,30,38,39,40,41,42,43,44,45,46,47,48,49,50,68,70,71,74,75,76,78,79,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,131,132,139,140,141,142,143,144,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,173,174,176,177,182,190,191,192,193,194,195,196,197,198,199,200,201,207,209,211,212,216,218,219,225,226,227,228,229,230,236,237,239,240,251,259,263,277,280,292,309,],[47,47,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,47,-120,-120,-120,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-133,47,47,-113,-114,-124,47,47,47,-89,-130,-91,-92,-130,-94,-95,-130,-130,-130,-130,-130,-130,-102,-103,-130,-130,-106,-107,-130,-130,-110,-115,-116,-117,-118,-119,-120,-47,-127,47,-120,47,-82,-111,-120,47,47,47,47,47,47,47,47,47,47,47,47,-22,-23,-24,-67,47,-86,-120,47,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,47,-80,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'TRUE':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,30,38,39,40,41,42,43,44,45,46,47,48,49,50,68,70,71,74,75,76,78,79,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,131,132,139,140,141,142,143,144,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,173,174,176,177,182,190,191,192,193,194,195,196,197,198,199,200,201,207,209,211,212,216,218,219,225,226,227,228,229,230,236,237,239,240,251,259,263,277,280,292,309,],[49,49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,49,-120,-120,-120,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-133,49,49,-113,-114,-124,49,49,49,-89,-130,-91,-92,-130,-94,-95,-130,-130,-130,-130,-130,-130,-102,-103,-130,-130,-106,-107,-130,-130,-110,-115,-116,-117,-118,-119,-120,-47,-127,49,-120,49,-82,-111,-120,49,49,49,49,49,49,49,49,49,49,49,49,-22,-23,-24,-67,49,-86,-120,49,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,49,-80,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'FALSE':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,30,38,39,40,41,42,43,44,45,46,47,48,49,50,68,70,71,74,75,76,78,79,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,131,132,139,140,141,142,143,144,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,173,174,176,177,182,190,191,192,193,194,195,196,197,198,199,200,201,207,209,211,212,216,218,219,225,226,227,228,229,230,236,237,239,240,251,259,263,277,280,292,309,],[50,50,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,50,-120,-120,-120,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-133,50,50,-113,-114,-124,50,50,50,-89,-130,-91,-92,-130,-94,-95,-130,-130,-130,-130,-130,-130,-102,-103,-130,-130,-106,-107,-130,-130,-110,-115,-116,-117,-118,-119,-120,-47,-127,50,-120,50,-82,-111,-120,50,50,50,50,50,50,50,50,50,50,50,50,-22,-23,-24,-67,50,-86,-120,50,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,50,-80,-84,-81,-74,-77,-18,-90,-93,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'DATAFRAME':([10,],[56,]),'FILE':([10,],[57,]),'INT':([10,36,245,268,],[58,58,58,58,]),'FLOAT':([10,36,245,268,],[59,59,59,59,]),'BOOL':([10,36,245,268,],[60,60,60,60,]),'STRING':([10,36,245,268,],[61,61,61,61,]),'CHAR':([10,36,245,268,],[62,62,62,62,]),'INTS':([10,245,268,],[63,63,63,]),'FLOATS':([10,245,268,],[64,64,64,]),'BOOLS':([10,245,268,],[65,65,65,]),'STRINGS':([10,245,268,],[66,66,66,]),'CHARS':([10,245,268,],[67,67,67,]),'MULT':([16,27,29,42,43,44,45,46,47,48,49,50,72,74,75,76,109,110,111,112,113,135,140,142,143,144,176,177,200,201,209,211,212,237,239,251,263,277,292,],[-114,-113,-124,106,-112,-128,-128,-128,-128,-128,-78,-79,-120,-113,-114,-124,-115,-116,-117,-118,-119,-114,-120,-82,-111,-120,-86,-120,106,106,-80,-84,-81,-85,-124,-120,-120,-120,-83,]),'DIV':([16,27,29,42,43,44,45,46,47,48,49,50,72,74,75,76,109,110,111,112,113,135,140,142,143,144,176,177,200,201,209,211,212,237,239,251,263,277,292,],[-114,-113,-124,107,-112,-128,-128,-128,-128,-128,-78,-79,-120,-113,-114,-124,-115,-116,-117,-118,-119,-114,-120,-82,-111,-120,-86,-120,107,107,-80,-84,-81,-85,-124,-120,-120,-120,-83,]),'PLUS':([16,27,29,41,42,43,44,45,46,47,48,49,50,72,74,75,76,105,108,109,110,111,112,113,135,140,142,143,144,176,177,198,199,200,201,209,211,212,229,230,237,239,251,263,277,292,],[-114,-113,-124,102,-120,-112,-128,-128,-128,-128,-128,-78,-79,-120,-113,-114,-124,-107,-110,-115,-116,-117,-118,-119,-114,-120,-82,-111,-120,-86,-120,102,102,-120,-120,-80,-84,-81,-108,-109,-85,-124,-120,-120,-120,-83,]),'MINUS':([16,27,29,41,42,43,44,45,46,47,48,49,50,72,74,75,76,105,108,109,110,111,112,113,135,140,142,143,144,176,177,198,199,200,201,209,211,212,229,230,237,239,251,263,277,292,],[-114,-113,-124,103,-120,-112,-128,-128,-128,-128,-128,-78,-79,-120,-113,-114,-124,-107,-110,-115,-116,-117,-118,-119,-114,-120,-82,-111,-120,-86,-120,103,103,-120,-120,-80,-84,-81,-108,-109,-85,-124,-120,-120,-120,-83,]),'LT':([16,27,29,40,41,42,43,44,45,46,47,48,49,50,72,74,75,76,101,104,105,108,109,110,111,112,113,135,140,142,143,144,176,177,198,199,200,201,209,211,212,227,228,229,230,237,239,251,263,277,292,],[-114,-113,-124,94,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-120,-113,-114,-124,-103,-106,-107,-110,-115,-116,-117,-118,-119,-114,-120,-82,-111,-120,-86,-120,-120,-120,-120,-120,-80,-84,-81,-104,-105,-108,-109,-85,-124,-120,-120,-120,-83,]),'GT':([16,27,29,40,41,42,43,44,45,46,47,48,49,50,72,74,75,76,101,104,105,108,109,110,111,112,113,135,140,142,143,144,176,177,198,199,200,201,209,211,212,227,228,229,230,237,239,251,263,277,292,],[-114,-113,-124,95,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-120,-113,-114,-124,-103,-106,-107,-110,-115,-116,-117,-118,-119,-114,-120,-82,-111,-120,-86,-120,-120,-120,-120,-120,-80,-84,-81,-104,-105,-108,-109,-85,-124,-120,-120,-120,-83,]),'GTE':([16,27,29,40,41,42,43,44,45,46,47,48,49,50,72,74,75,76,101,104,105,108,109,110,111,112,113,135,140,142,143,144,176,177,198,199,200,201,209,211,212,227,228,229,230,237,239,251,263,277,292,],[-114,-113,-124,96,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-120,-113,-114,-124,-103,-106,-107,-110,-115,-116,-117,-118,-119,-114,-120,-82,-111,-120,-86,-120,-120,-120,-120,-120,-80,-84,-81,-104,-105,-108,-109,-85,-124,-120,-120,-120,-83,]),'LTE':([16,27,29,40,41,42,43,44,45,46,47,48,49,50,72,74,75,76,101,104,105,108,109,110,111,112,113,135,140,142,143,144,176,177,198,199,200,201,209,211,212,227,228,229,230,237,239,251,263,277,292,],[-114,-113,-124,97,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-120,-113,-114,-124,-103,-106,-107,-110,-115,-116,-117,-118,-119,-114,-120,-82,-111,-120,-86,-120,-120,-120,-120,-120,-80,-84,-81,-104,-105,-108,-109,-85,-124,-120,-120,-120,-83,]),'EQ':([16,27,29,40,41,42,43,44,45,46,47,48,49,50,72,74,75,76,101,104,105,108,109,110,111,112,113,135,140,142,143,144,176,177,198,199,200,201,209,211,212,227,228,229,230,237,239,251,263,277,292,],[-114,-113,-124,98,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-120,-113,-114,-124,-103,-106,-107,-110,-115,-116,-117,-118,-119,-114,-120,-82,-111,-120,-86,-120,-120,-120,-120,-120,-80,-84,-81,-104,-105,-108,-109,-85,-124,-120,-120,-120,-83,]),'NE':([16,27,29,40,41,42,43,44,45,46,47,48,49,50,72,74,75,76,101,104,105,108,109,110,111,112,113,135,140,142,143,144,176,177,198,199,200,201,209,211,212,227,228,229,230,237,239,251,263,277,292,],[-114,-113,-124,99,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-120,-113,-114,-124,-103,-106,-107,-110,-115,-116,-117,-118,-119,-114,-120,-82,-111,-120,-86,-120,-120,-120,-120,-120,-80,-84,-81,-104,-105,-108,-109,-85,-124,-120,-120,-120,-83,]),'AND':([16,27,29,39,40,41,42,43,44,45,46,47,48,49,50,72,74,75,76,93,100,101,104,105,108,109,110,111,112,113,135,140,142,143,144,176,177,191,192,193,194,195,196,197,198,199,200,201,209,211,212,227,228,229,230,237,239,251,263,277,292,],[-114,-113,-124,91,-120,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-120,-113,-114,-124,-95,-102,-103,-106,-107,-110,-115,-116,-117,-118,-119,-114,-120,-82,-111,-120,-86,-120,91,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,-104,-105,-108,-109,-85,-124,-120,-120,-120,-83,]),'OR':([16,27,29,38,39,40,41,42,43,44,45,46,47,48,49,50,72,74,75,76,90,92,93,100,101,104,105,108,109,110,111,112,113,135,140,142,143,144,176,177,190,191,192,193,194,195,196,197,198,199,200,201,209,211,212,226,227,228,229,230,237,239,251,263,277,292,],[-114,-113,-124,88,-120,-120,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-120,-113,-114,-124,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-117,-118,-119,-114,-120,-82,-111,-120,-86,-120,88,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,-93,-104,-105,-108,-109,-85,-124,-120,-120,-120,-83,]),'QUESTION':([16,27,28,29,38,39,40,41,42,43,44,45,46,47,48,49,50,72,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,112,113,135,140,142,143,144,176,177,190,191,192,193,194,195,196,197,198,199,200,201,209,211,212,225,226,227,228,229,230,237,239,251,263,277,292,],[-114,-113,71,-124,-120,-120,-120,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-120,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-117,-118,-119,-114,-120,-82,-111,-120,-86,-120,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,-90,-93,-104,-105,-108,-109,-85,-124,-120,-120,-120,-83,]),'AS':([27,29,72,140,142,177,209,211,212,239,251,263,277,292,],[70,-124,-120,-120,-82,-120,-80,-84,-81,-124,-120,-120,-120,-83,]),'OBRACKET':([29,72,76,118,140,142,144,151,172,187,204,212,239,251,262,263,271,283,296,299,303,314,],[-124,141,-124,-124,141,-82,141,-124,-126,141,235,-81,-124,141,274,141,-125,141,141,-124,308,274,]),'PERIOD':([29,72,76,140,142,144,151,177,187,212,239,251,263,277,],[-124,-120,-124,-120,-82,-120,-124,210,-120,-81,-124,-120,-120,210,]),'VOID':([36,],[85,]),'CPAREN':([38,39,40,41,42,43,44,45,46,47,48,49,50,73,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,112,113,139,140,142,143,144,146,147,148,151,175,176,177,181,183,184,187,190,191,192,193,194,195,196,197,198,199,200,201,206,208,209,211,212,217,220,222,225,226,227,228,229,230,237,238,239,243,245,250,251,254,255,256,263,267,269,270,271,277,279,281,282,283,292,295,296,301,],[-120,-120,-120,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,143,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-117,-118,-119,176,-120,-82,-111,-120,180,-120,-120,-124,-120,-86,-120,216,-76,218,-120,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,237,-88,-80,-84,-81,-120,-21,-20,-90,-93,-104,-105,-108,-109,-85,-120,-124,-75,-120,-87,-120,266,-120,-7,-120,-6,-9,-125,-125,-120,294,-120,-10,-120,-83,-8,-120,-11,]),'COLON':([38,39,40,41,42,43,44,45,46,47,48,49,50,74,75,76,86,87,89,90,92,93,100,101,104,105,108,109,110,111,112,113,132,133,134,135,136,137,138,140,142,143,144,154,173,176,177,189,190,191,192,193,194,195,196,197,198,199,200,201,209,211,212,216,218,225,226,227,228,229,230,236,237,239,251,260,263,277,292,297,],[-120,-120,-120,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-113,-114,-124,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-117,-118,-119,-127,174,-62,-63,-64,-65,-66,-120,-82,-111,-120,-122,-67,-86,-120,224,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,-74,-77,-90,-93,-104,-105,-108,-109,-73,-85,-124,-120,272,-120,-120,-83,302,]),'COMMA':([38,39,40,41,42,43,44,45,46,47,48,49,50,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,112,113,115,117,140,142,143,144,147,148,170,171,175,176,177,190,191,192,193,194,195,196,197,198,199,200,201,202,203,209,211,212,217,225,226,227,228,229,230,237,238,239,248,251,255,261,262,263,270,271,273,275,276,277,281,282,283,292,296,298,301,],[-120,-120,-120,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-117,-118,-119,-124,-124,-120,-82,-111,-120,182,182,-126,-126,207,-86,-120,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,232,232,-80,-84,-81,182,-90,-93,-104,-105,-108,-109,-85,207,-124,-124,-120,268,-126,-120,-120,-125,-125,232,290,-33,-120,268,-10,-120,-83,-120,-32,-11,]),'CBRACKET':([38,39,40,41,42,43,44,45,46,47,48,49,50,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,112,113,140,142,143,144,176,177,178,190,191,192,193,194,195,196,197,198,199,200,201,209,211,212,225,226,227,228,229,230,237,239,249,251,263,277,288,292,312,],[-120,-120,-120,-120,-120,-112,-128,-128,-128,-128,-128,-78,-79,-113,-114,-124,-89,-91,-92,-94,-95,-102,-103,-106,-107,-110,-115,-116,-117,-118,-119,-120,-82,-111,-120,-86,-120,212,-120,-120,-96,-97,-98,-99,-100,-101,-120,-120,-120,-120,-80,-84,-81,-90,-93,-104,-105,-108,-109,-85,-124,262,-120,-120,-120,298,-83,314,]),'ELSE':([68,131,179,278,],[-133,-47,214,214,]),'THEN':([77,81,180,252,294,],[145,149,-72,264,300,]),'METHODS':([114,167,168,169,272,284,285,286,],[-120,-22,-23,-24,-120,297,-14,-15,]),'FROM':([140,142,150,151,177,187,209,211,212,239,251,263,277,292,],[-120,-82,186,-124,-120,-120,-80,-84,-81,-124,-120,-120,-120,-83,]),'TO':([140,142,151,177,187,209,211,212,220,221,222,239,251,263,277,292,],[-120,-82,-124,-120,-120,-80,-84,-81,-21,244,-20,-124,-120,-120,-120,-83,]),'BY':([140,142,151,177,187,209,211,212,220,222,239,251,253,263,277,292,],[-120,-82,-124,-120,-120,-80,-84,-81,-21,-20,-124,-120,265,-120,-120,-83,]),'ATTRIBUTES':([247,],[260,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'saw_id':([3,29,76,86,115,117,118,151,152,239,248,299,],[4,72,144,154,170,171,172,187,188,251,261,303,]),'saw_program':([4,],[5,]),'bloque':([6,8,9,13,145,149,214,264,266,300,],[7,11,23,23,179,185,241,278,280,304,]),'dec':([6,9,13,114,272,],[8,26,26,168,285,]),'b1':([9,13,],[12,69,]),'estatuto':([9,13,],[13,13,]),'empty':([9,13,38,39,40,41,42,72,114,140,144,147,148,175,177,179,187,190,191,198,199,200,201,202,203,217,238,245,251,255,262,263,272,273,275,277,278,281,283,296,302,306,314,],[14,14,89,92,100,104,108,142,169,142,142,183,183,208,211,215,142,89,92,104,104,108,108,233,233,183,208,256,142,269,276,142,286,233,291,211,215,269,142,142,307,307,276,]),'asignacion':([9,13,71,174,],[15,15,134,134,]),'llamada':([9,13,30,70,71,78,79,80,139,141,155,156,157,158,159,160,161,162,163,164,165,166,174,182,207,],[16,16,75,75,135,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,135,75,75,]),'condicion':([9,13,],[17,17,]),'escritura':([9,13,71,174,],[18,18,136,136,]),'leer':([9,13,71,174,],[19,19,137,137,]),'ciclo_while':([9,13,],[20,20,]),'ciclo_for':([9,13,],[21,21,]),'ternaria':([9,13,71,174,],[22,22,138,138,]),'funcion':([9,13,302,306,],[24,24,306,306,]),'clase':([9,13,],[25,25,]),'variable':([9,13,30,70,71,78,79,80,82,139,141,155,156,157,158,159,160,161,162,163,164,165,166,174,182,186,207,244,265,],[27,27,74,74,27,74,74,74,150,74,74,74,74,74,74,74,74,74,74,74,74,74,74,27,74,220,74,220,220,]),'exp':([9,13,30,70,71,78,79,80,139,141,174,182,207,],[28,28,73,132,28,146,147,148,175,178,28,217,238,]),'texp':([9,13,30,70,71,78,79,80,139,141,155,174,182,207,],[38,38,38,38,38,38,38,38,38,38,190,38,38,38,]),'gexp':([9,13,30,70,71,78,79,80,139,141,155,156,174,182,207,],[39,39,39,39,39,39,39,39,39,39,39,191,39,39,39,]),'mexp':([9,13,30,70,71,78,79,80,139,141,155,156,157,158,159,160,161,162,174,182,207,],[40,40,40,40,40,40,40,40,40,40,40,40,192,193,194,195,196,197,40,40,40,]),'termino':([9,13,30,70,71,78,79,80,139,141,155,156,157,158,159,160,161,162,163,164,174,182,207,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,198,199,41,41,41,]),'factor':([9,13,30,70,71,78,79,80,139,141,155,156,157,158,159,160,161,162,163,164,165,166,174,182,207,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,200,201,42,42,42,]),'varcst':([9,13,30,70,71,78,79,80,139,141,155,156,157,158,159,160,161,162,163,164,165,166,174,182,207,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'boolean':([9,13,30,70,71,78,79,80,139,141,155,156,157,158,159,160,161,162,163,164,165,166,174,182,207,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'tipo':([10,],[51,]),'compuesto':([10,],[52,]),'simple':([10,36,245,268,],[54,84,257,257,]),'multiple':([10,245,268,],[55,258,258,]),'cond2':([31,34,242,],[77,81,252,]),'func1':([36,],[83,]),'exp1':([38,190,],[87,225,]),'texp1':([39,191,],[90,226,]),'gexp1':([40,],[93,]),'mexp1':([41,198,199,],[101,227,228,]),'term1':([42,200,201,],[105,229,230,]),'saw_end_value':([44,45,46,47,48,],[109,110,111,112,113,]),'saw_type':([53,56,57,58,59,60,61,62,63,64,65,66,67,85,],[116,119,120,121,122,123,124,125,126,127,128,129,130,153,]),'scope_end':([68,],[131,]),'estatuto_redux':([71,174,],[133,205,]),'variable1':([72,140,144,187,251,263,283,296,],[140,177,140,140,263,277,296,301,]),'saw_op':([88,91,94,95,96,97,98,99,102,103,106,107,],[155,156,157,158,159,160,161,162,163,164,165,166,]),'dec1':([114,],[167,]),'saw_asig':([132,],[173,]),'e1':([147,148,217,],[181,184,243,]),'saw_class':([154,],[189,]),'saw_variable':([170,171,172,261,],[202,203,204,273,]),'llamada1':([175,238,],[206,250,]),'variable2':([177,277,],[209,292,]),'cond1':([179,278,],[213,293,]),'ciclo_for1':([186,244,265,],[221,253,279,]),'saw_function':([188,],[223,]),'tipo1':([202,203,273,],[231,234,287,]),'clase_bloque':([224,],[246,]),'param':([245,],[254,]),'param2':([245,268,],[255,281,]),'param1':([255,281,],[267,295,]),'tipo3':([262,314,],[275,315,]),'saw_id_param':([270,271,],[282,283,]),'clase_bloque1':([272,],[284,]),'tipo2':([275,],[289,]),'clase_metodos_bloque':([302,306,],[305,311,]),'class_scope_end':([305,],[310,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID saw_id saw_program SEMICOLON bloque','programa',6,'p_programa','plyler.py',158),
  ('programa -> PROGRAM ID saw_id saw_program SEMICOLON dec bloque','programa',7,'p_programa','plyler.py',159),
  ('funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque','funcion',9,'p_funcion','plyler.py',169),
  ('func1 -> simple','func1',1,'p_funcion1','plyler.py',178),
  ('func1 -> VOID saw_type','func1',2,'p_funcion1','plyler.py',179),
  ('param -> param2 param1','param',2,'p_param','plyler.py',188),
  ('param -> empty','param',1,'p_param','plyler.py',189),
  ('param1 -> COMMA param2 param1','param1',3,'p_param1','plyler.py',197),
  ('param1 -> empty','param1',1,'p_param1','plyler.py',198),
  ('param2 -> simple ID saw_id_param','param2',3,'p_param2','plyler.py',206),
  ('param2 -> multiple ID saw_id_param variable1 variable1','param2',5,'p_param2','plyler.py',207),
  ('clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON','clase',7,'p_clase','plyler.py',216),
  ('clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY','clase_bloque',9,'p_clase_bloque','plyler.py',223),
  ('clase_bloque1 -> dec','clase_bloque1',1,'p_clase_bloque1','plyler.py',229),
  ('clase_bloque1 -> empty','clase_bloque1',1,'p_clase_bloque1','plyler.py',230),
  ('clase_metodos_bloque -> funcion clase_metodos_bloque','clase_metodos_bloque',2,'p_clase_metodos_bloque','plyler.py',236),
  ('clase_metodos_bloque -> empty','clase_metodos_bloque',1,'p_clase_metodos_bloque','plyler.py',237),
  ('ciclo_while -> WHILE cond2 THEN bloque SEMICOLON','ciclo_while',5,'p_ciclo_while','plyler.py',245),
  ('ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON','ciclo_for',13,'p_ciclo_for','plyler.py',254),
  ('ciclo_for1 -> CSTINT','ciclo_for1',1,'p_ciclo_for1','plyler.py',261),
  ('ciclo_for1 -> variable','ciclo_for1',1,'p_ciclo_for1','plyler.py',262),
  ('dec -> VAR tipo SEMICOLON dec1','dec',4,'p_dec','plyler.py',270),
  ('dec1 -> dec','dec1',1,'p_dec1','plyler.py',276),
  ('dec1 -> empty','dec1',1,'p_dec1','plyler.py',277),
  ('tipo -> compuesto ID saw_id saw_variable tipo1','tipo',5,'p_tipo','plyler.py',285),
  ('tipo -> simple ID saw_id saw_variable tipo1','tipo',5,'p_tipo','plyler.py',286),
  ('tipo -> multiple ID saw_id saw_variable OBRACKET CSTINT CBRACKET tipo3 tipo2','tipo',9,'p_tipo','plyler.py',287),
  ('tipo1 -> COMMA ID saw_id saw_variable tipo1','tipo1',5,'p_tipo1','plyler.py',294),
  ('tipo1 -> empty','tipo1',1,'p_tipo1','plyler.py',295),
  ('tipo2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET tipo3','tipo2',7,'p_tipo2','plyler.py',302),
  ('tipo2 -> empty','tipo2',1,'p_tipo2','plyler.py',303),
  ('tipo3 -> OBRACKET CSTINT CBRACKET','tipo3',3,'p_tipo3','plyler.py',309),
  ('tipo3 -> empty','tipo3',1,'p_tipo3','plyler.py',310),
  ('simple -> INT saw_type','simple',2,'p_tipo_simple','plyler.py',316),
  ('simple -> FLOAT saw_type','simple',2,'p_tipo_simple','plyler.py',317),
  ('simple -> BOOL saw_type','simple',2,'p_tipo_simple','plyler.py',318),
  ('simple -> STRING saw_type','simple',2,'p_tipo_simple','plyler.py',319),
  ('simple -> CHAR saw_type','simple',2,'p_tipo_simple','plyler.py',320),
  ('multiple -> INTS saw_type','multiple',2,'p_tipo_multiple','plyler.py',327),
  ('multiple -> FLOATS saw_type','multiple',2,'p_tipo_multiple','plyler.py',328),
  ('multiple -> BOOLS saw_type','multiple',2,'p_tipo_multiple','plyler.py',329),
  ('multiple -> STRINGS saw_type','multiple',2,'p_tipo_multiple','plyler.py',330),
  ('multiple -> CHARS saw_type','multiple',2,'p_tipo_multiple','plyler.py',331),
  ('compuesto -> ID saw_type','compuesto',2,'p_tipo_compuesto','plyler.py',337),
  ('compuesto -> DATAFRAME saw_type','compuesto',2,'p_tipo_compuesto','plyler.py',338),
  ('compuesto -> FILE saw_type','compuesto',2,'p_tipo_compuesto','plyler.py',339),
  ('bloque -> OCURLY b1 CCURLY scope_end','bloque',4,'p_bloque','plyler.py',347),
  ('b1 -> estatuto b1','b1',2,'p_b1','plyler.py',353),
  ('b1 -> empty','b1',1,'p_b1','plyler.py',354),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','plyler.py',362),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','plyler.py',363),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','plyler.py',364),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','plyler.py',365),
  ('estatuto -> leer','estatuto',1,'p_estatuto','plyler.py',366),
  ('estatuto -> ciclo_while','estatuto',1,'p_estatuto','plyler.py',367),
  ('estatuto -> ciclo_for','estatuto',1,'p_estatuto','plyler.py',368),
  ('estatuto -> ternaria','estatuto',1,'p_estatuto','plyler.py',369),
  ('estatuto -> bloque','estatuto',1,'p_estatuto','plyler.py',370),
  ('estatuto -> funcion','estatuto',1,'p_estatuto','plyler.py',371),
  ('estatuto -> clase','estatuto',1,'p_estatuto','plyler.py',372),
  ('estatuto -> dec','estatuto',1,'p_estatuto','plyler.py',373),
  ('estatuto_redux -> asignacion','estatuto_redux',1,'p_estatuto_redux','plyler.py',379),
  ('estatuto_redux -> llamada','estatuto_redux',1,'p_estatuto_redux','plyler.py',380),
  ('estatuto_redux -> escritura','estatuto_redux',1,'p_estatuto_redux','plyler.py',381),
  ('estatuto_redux -> leer','estatuto_redux',1,'p_estatuto_redux','plyler.py',382),
  ('estatuto_redux -> ternaria','estatuto_redux',1,'p_estatuto_redux','plyler.py',383),
  ('asignacion -> variable AS exp saw_asig','asignacion',4,'p_asignacion','plyler.py',391),
  ('condicion -> IF cond2 THEN bloque cond1 SEMICOLON','condicion',6,'p_condicion','plyler.py',399),
  ('cond1 -> ELSE bloque','cond1',2,'p_cond1','plyler.py',405),
  ('cond1 -> ELSE IF cond2 THEN bloque cond1','cond1',6,'p_cond1','plyler.py',406),
  ('cond1 -> empty','cond1',1,'p_cond1','plyler.py',407),
  ('cond2 -> OPAREN exp CPAREN','cond2',3,'p_cond2','plyler.py',413),
  ('ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON','ternaria',6,'p_ternaria','plyler.py',421),
  ('escritura -> PRINT OPAREN exp e1 CPAREN','escritura',5,'p_escritura','plyler.py',429),
  ('e1 -> COMMA exp e1','e1',3,'p_e1','plyler.py',435),
  ('e1 -> empty','e1',1,'p_e1','plyler.py',436),
  ('leer -> READ OPAREN exp e1 CPAREN','leer',5,'p_leer','plyler.py',444),
  ('boolean -> TRUE','boolean',1,'p_boolean','plyler.py',452),
  ('boolean -> FALSE','boolean',1,'p_boolean','plyler.py',453),
  ('variable -> ID saw_id variable1 variable1 variable2','variable',5,'p_variable','plyler.py',461),
  ('variable1 -> OBRACKET exp CBRACKET','variable1',3,'p_variable1','plyler.py',467),
  ('variable1 -> empty','variable1',1,'p_variable1','plyler.py',468),
  ('variable2 -> PERIOD ID saw_id variable1 variable1 variable2','variable2',6,'p_variable2','plyler.py',474),
  ('variable2 -> empty','variable2',1,'p_variable2','plyler.py',475),
  ('llamada -> ID saw_id OPAREN exp llamada1 CPAREN','llamada',6,'p_llamada_funcion','plyler.py',483),
  ('llamada -> ID saw_id OPAREN CPAREN','llamada',4,'p_llamada_funcion','plyler.py',484),
  ('llamada1 -> COMMA exp llamada1','llamada1',3,'p_llamada_funcion1','plyler.py',490),
  ('llamada1 -> empty','llamada1',1,'p_llamada_funcion1','plyler.py',491),
  ('exp -> texp exp1','exp',2,'p_exp','plyler.py',499),
  ('exp1 -> OR saw_op texp exp1','exp1',4,'p_exp1','plyler.py',505),
  ('exp1 -> empty','exp1',1,'p_exp1','plyler.py',506),
  ('texp -> gexp texp1','texp',2,'p_texp','plyler.py',512),
  ('texp1 -> AND saw_op gexp texp1','texp1',4,'p_texp1','plyler.py',518),
  ('texp1 -> empty','texp1',1,'p_texp1','plyler.py',519),
  ('gexp -> mexp gexp1','gexp',2,'p_gexp','plyler.py',525),
  ('gexp1 -> LT saw_op mexp','gexp1',3,'p_gexp1','plyler.py',531),
  ('gexp1 -> GT saw_op mexp','gexp1',3,'p_gexp1','plyler.py',532),
  ('gexp1 -> GTE saw_op mexp','gexp1',3,'p_gexp1','plyler.py',533),
  ('gexp1 -> LTE saw_op mexp','gexp1',3,'p_gexp1','plyler.py',534),
  ('gexp1 -> EQ saw_op mexp','gexp1',3,'p_gexp1','plyler.py',535),
  ('gexp1 -> NE saw_op mexp','gexp1',3,'p_gexp1','plyler.py',536),
  ('gexp1 -> empty','gexp1',1,'p_gexp1','plyler.py',537),
  ('mexp -> termino mexp1','mexp',2,'p_mexp','plyler.py',543),
  ('mexp1 -> PLUS saw_op termino mexp1','mexp1',4,'p_mexp1','plyler.py',549),
  ('mexp1 -> MINUS saw_op termino mexp1','mexp1',4,'p_mexp1','plyler.py',550),
  ('mexp1 -> empty','mexp1',1,'p_mexp1','plyler.py',551),
  ('termino -> factor term1','termino',2,'p_termino','plyler.py',559),
  ('term1 -> MULT saw_op factor term1','term1',4,'p_term1','plyler.py',565),
  ('term1 -> DIV saw_op factor term1','term1',4,'p_term1','plyler.py',566),
  ('term1 -> empty','term1',1,'p_term1','plyler.py',567),
  ('factor -> OPAREN exp CPAREN','factor',3,'p_factor','plyler.py',575),
  ('factor -> varcst','factor',1,'p_factor','plyler.py',576),
  ('factor -> variable','factor',1,'p_factor','plyler.py',577),
  ('factor -> llamada','factor',1,'p_factor','plyler.py',578),
  ('varcst -> CSTINT saw_end_value','varcst',2,'p_varcst','plyler.py',586),
  ('varcst -> CSTFLT saw_end_value','varcst',2,'p_varcst','plyler.py',587),
  ('varcst -> CSTCHAR saw_end_value','varcst',2,'p_varcst','plyler.py',588),
  ('varcst -> CSTSTRING saw_end_value','varcst',2,'p_varcst','plyler.py',589),
  ('varcst -> boolean saw_end_value','varcst',2,'p_varcst','plyler.py',590),
  ('empty -> <empty>','empty',0,'p_empty','plyler.py',598),
  ('saw_program -> <empty>','saw_program',0,'p_saw_program','plyler.py',611),
  ('saw_class -> <empty>','saw_class',0,'p_saw_class','plyler.py',618),
  ('saw_type -> <empty>','saw_type',0,'p_saw_type','plyler.py',627),
  ('saw_id -> <empty>','saw_id',0,'p_saw_id','plyler.py',634),
  ('saw_id_param -> <empty>','saw_id_param',0,'p_saw_id_param','plyler.py',641),
  ('saw_variable -> <empty>','saw_variable',0,'p_saw_variable','plyler.py',651),
  ('saw_asig -> <empty>','saw_asig',0,'p_saw_asig','plyler.py',657),
  ('saw_end_value -> <empty>','saw_end_value',0,'p_saw_end_value','plyler.py',665),
  ('do_not_save -> <empty>','do_not_save',0,'p_do_not_save','plyler.py',675),
  ('saw_op -> <empty>','saw_op',0,'p_saw_op','plyler.py',683),
  ('saw_function -> <empty>','saw_function',0,'p_saw_function','plyler.py',695),
  ('scope_start -> <empty>','scope_start',0,'p_scope_start','plyler.py',702),
  ('scope_end -> <empty>','scope_end',0,'p_scope_end','plyler.py',708),
  ('class_scope_start -> <empty>','class_scope_start',0,'p_class_scope_start','plyler.py',715),
  ('class_scope_end -> <empty>','class_scope_end',0,'p_class_scope_end','plyler.py',721),
]
