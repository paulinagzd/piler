
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

<<<<<<< HEAD
_lr_signature = 'AND AS ATTRIBUTES BOOL BOOLS BY CBRACKET CCURLY CHAR CHARS CLASS COLON COMMA COMMENT CPAREN CSTCHAR CSTFLT CSTINT CSTSTRING DATAFRAME DIV ELSE EQ FALSE FILE FLOAT FLOATS FOR FROM FUNCTION GT GTE ID IF INT INTS LT LTE METHODS MINUS MULT NE OBRACKET OCURLY OPAREN OR PERIOD PLUS PRINT PROGRAM QUESTION READ RETURN SEMICOLON STRING STRINGS THEN TO TRUE VAR VOID WHILE\n  programa : PROGRAM ID saw_id saw_program SEMICOLON bloque\n           | PROGRAM ID saw_id saw_program SEMICOLON dec bloque\n  \n  funcion : FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque\n  \n  func1 : simple\n        | VOID saw_type\n  \n  param : param2 param1\n        | empty\n  \n  param1 : COMMA param2 param1\n         | empty\n  \n  param2 : simple ID saw_id_param\n         | multiple ID saw_id_param variable1 variable1\n  \n    clase : CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON\n   \n  clase_bloque :  OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY\n   \n  clase_bloque1 : dec\n                | empty\n   \n  clase_metodos_bloque : funcion clase_metodos_bloque\n                       | empty\n  \n  ciclo_while : WHILE cond2 THEN bloque SEMICOLON\n  \n  ciclo_for : FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON\n  \n  ciclo_for1 : CSTINT\n             | variable\n  \n  dec : VAR tipo SEMICOLON dec1\n  \n  dec1 : dec\n       | empty\n  \n  tipo : compuesto ID saw_id saw_variable tipo1\n       | simple ID saw_id saw_variable tipo1\n       | multiple ID saw_id saw_variable OBRACKET CSTINT CBRACKET tipo3 tipo2\n  \n  tipo1 : COMMA ID saw_id saw_variable tipo1\n        | empty\n  \n  tipo2 : COMMA ID saw_id OBRACKET CSTINT CBRACKET tipo3\n        | empty\n  \n  tipo3 : OBRACKET CSTINT CBRACKET\n        | empty\n  \n  simple : INT saw_type\n         | FLOAT saw_type\n         | BOOL saw_type\n         | STRING saw_type\n         | CHAR saw_type\n  \n  multiple : INTS saw_type\n           | FLOATS saw_type\n           | BOOLS saw_type\n           | STRINGS saw_type\n           | CHARS saw_type\n  \n  compuesto : ID saw_type\n            | DATAFRAME saw_type\n            | FILE saw_type\n  \n  bloque : OCURLY b1 CCURLY scope_end\n  \n  b1 : estatuto b1\n     | empty\n  \n  estatuto : asignacion\n           | llamada\n           | condicion\n           | escritura\n           | leer\n           | ciclo_while\n           | ciclo_for\n           | ternaria\n           | bloque\n           | funcion\n           | clase\n           | dec\n  \n  estatuto_redux : asignacion\n                 | llamada\n                 | escritura\n                 | leer\n                 | ternaria\n  \n  asignacion : variable AS exp saw_asig\n  \n  condicion : IF cond2 THEN bloque cond1 SEMICOLON\n  \n  cond1 : ELSE bloque\n        | ELSE IF cond2 THEN bloque cond1\n        | empty\n  \n    cond2 : OPAREN exp CPAREN\n  \n  ternaria : exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON\n  \n  escritura : PRINT OPAREN exp e1 CPAREN\n  \n  e1 : COMMA exp e1\n     | empty\n  \n  leer  : READ OPAREN exp e1 CPAREN\n  \n  boolean : TRUE\n          | FALSE\n  \n  variable : ID saw_id variable1 variable1 variable2\n  \n  variable1 : OBRACKET exp CBRACKET\n            | empty\n  \n  variable2 : PERIOD ID saw_id variable1 variable1 variable2\n            | empty \n  \n  llamada : ID saw_id OPAREN exp llamada1 CPAREN\n          | ID saw_id OPAREN CPAREN\n  \n  llamada1 : COMMA exp llamada1\n           | empty\n  \n  exp : texp exp1 end_of_expression\n  \n  exp1 : OR texp exp1\n       | empty\n  \n  texp : gexp texp1\n  \n  texp1 : AND gexp texp1\n        | empty\n  \n  gexp : mexp gexp1\n  \n  gexp1 : LT mexp\n        | GT mexp\n        | GTE mexp\n        | LTE mexp\n        | EQ mexp\n        | NE mexp\n        | empty\n  \n  mexp : termino mexp1\n  \n  mexp1 : PLUS saw_plusminus_operator termino mexp1\n        | MINUS saw_plusminus_operator termino mexp1\n        | empty\n  \n  termino : factor term1 check_plusminus_operator\n  \n  term1 : MULT saw_multdiv_operator factor term1\n        | DIV saw_multdiv_operator factor term1\n        | empty\n  \n  factor : OPAREN exp CPAREN check_multdiv_operator\n         | varcst check_multdiv_operator\n         | variable\n         | llamada\n  \n  varcst : CSTINT saw_end_value_int\n         | CSTFLT saw_end_value_flt\n         | CSTCHAR \n         | CSTSTRING \n         | boolean \n  \n  empty : \n  \n  saw_program : \n  \n  saw_class : \n  \n  saw_type : \n  \n  saw_id : \n  \n  saw_id_param : \n  \n  saw_variable : \n  \n  saw_asig : \n  \n  saw_end_value_int : \n  \n  saw_end_value_flt : \n  \n  saw_plusminus_operator  : \n  \n  check_plusminus_operator  : \n  \n  saw_multdiv_operator  : \n  \n  check_multdiv_operator  : \n  \n  end_of_expression : \n  \n  do_not_save : \n  \n  saw_function : \n  \n  scope_start : \n  \n  scope_end : \n  \n  class_scope_start : \n  \n  class_scope_end : \n  '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,7,11,68,129,],[0,-1,-2,-138,-47,]),'ID':([2,9,10,13,15,16,17,18,19,20,21,22,23,24,25,26,30,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,74,75,76,78,79,80,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,137,138,139,140,141,142,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,173,174,176,177,179,183,187,191,192,193,194,195,196,202,204,205,206,207,211,213,214,220,221,222,223,225,229,230,232,233,237,244,250,251,252,256,258,270,273,283,285,302,],[3,29,53,29,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,76,86,-120,-120,-120,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,113,-123,115,116,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-138,76,29,-113,-114,-124,76,76,76,149,150,-4,-123,-134,76,-91,-92,76,-94,-95,76,76,76,76,76,76,-102,-103,-130,-130,-106,-131,-132,-132,-110,-112,-115,-116,-120,-44,-45,-46,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-47,-127,76,-120,76,-82,-133,-120,-5,-89,-120,-120,-96,-97,-98,-99,-100,-101,76,76,-107,76,76,-22,-23,-24,-67,29,-86,-120,-111,76,149,-90,-93,-120,-120,-120,-120,76,-80,232,-84,-81,-74,-77,-18,-104,-105,-108,-109,241,-73,-85,-124,-68,149,-120,263,264,-12,-120,149,-120,-3,292,-83,-19,]),'SEMICOLON':([3,4,5,38,39,40,41,42,43,44,45,46,47,48,49,50,51,68,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,113,115,129,130,132,133,134,135,136,138,140,141,142,153,154,155,156,157,158,159,160,161,164,170,171,173,176,177,179,180,186,191,192,193,194,195,196,197,198,200,204,206,207,208,210,211,213,220,221,222,223,224,226,227,229,230,232,234,239,241,244,254,255,256,266,268,269,270,271,280,282,284,285,286,291,297,306,307,308,],[-124,-121,6,-120,-120,-120,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,112,-138,-113,-114,-124,-134,-91,-92,-94,-95,-102,-103,-106,-131,-110,-112,-115,-116,-124,-124,-47,-127,-62,-63,-64,-65,-66,-120,-82,-133,-120,-89,-120,-120,-96,-97,-98,-99,-100,-101,-107,-126,-126,-67,-86,-120,-111,-120,214,-90,-93,-120,-120,-120,-120,-120,-120,229,-80,-84,-81,233,-71,-74,-77,-104,-105,-108,-109,-25,-29,-26,-73,-85,-124,-69,252,-124,-120,-126,-120,-120,-120,-120,-33,-120,-120,-28,-27,-31,-83,-70,-32,302,-13,-120,-30,]),'OCURLY':([6,8,9,13,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,112,129,130,138,140,141,142,143,147,153,154,155,156,157,158,159,160,161,164,167,168,169,173,176,177,179,191,192,193,194,195,196,204,206,207,209,211,213,214,219,220,221,222,223,229,230,232,233,244,252,256,257,259,270,273,285,293,302,],[9,9,9,9,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-138,-113,-114,-124,-134,-91,-92,-94,-95,-102,-103,-106,-131,-110,-112,-115,-116,-120,-47,-127,-120,-82,-133,-120,9,9,-89,-120,-120,-96,-97,-98,-99,-100,-101,-107,-22,-23,-24,-67,-86,-120,-111,-90,-93,-120,-120,-120,-120,-80,-84,-81,9,-74,-77,-18,240,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,9,9,-120,-3,-83,9,-19,]),'VAR':([6,9,13,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,112,129,130,138,140,141,142,153,154,155,156,157,158,159,160,161,164,167,168,169,173,176,177,179,191,192,193,194,195,196,204,206,207,211,213,214,220,221,222,223,229,230,232,233,244,252,256,265,270,273,285,302,],[10,10,10,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-138,-113,-114,-124,-134,-91,-92,-94,-95,-102,-103,-106,-131,-110,-112,-115,-116,10,-47,-127,-120,-82,-133,-120,-89,-120,-120,-96,-97,-98,-99,-100,-101,-107,-22,-23,-24,-67,-86,-120,-111,-90,-93,-120,-120,-120,-120,-80,-84,-81,-74,-77,-18,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,10,-120,-3,-83,-19,]),'CCURLY':([9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,69,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,112,129,130,138,140,141,142,153,154,155,156,157,158,159,160,161,164,167,168,169,173,176,177,179,191,192,193,194,195,196,204,206,207,211,213,214,220,221,222,223,229,230,232,233,244,252,256,270,273,285,295,298,299,300,302,303,304,],[-120,68,-120,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-138,-48,-113,-114,-124,-134,-91,-92,-94,-95,-102,-103,-106,-131,-110,-112,-115,-116,-120,-47,-127,-120,-82,-133,-120,-89,-120,-120,-96,-97,-98,-99,-100,-101,-107,-22,-23,-24,-67,-86,-120,-111,-90,-93,-120,-120,-120,-120,-80,-84,-81,-74,-77,-18,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-120,-140,-120,-17,-19,306,-16,]),'IF':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,112,129,130,138,140,141,142,153,154,155,156,157,158,159,160,161,164,167,168,169,173,176,177,179,191,192,193,194,195,196,204,206,207,209,211,213,214,220,221,222,223,229,230,232,233,244,252,256,270,273,285,302,],[31,31,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-138,-113,-114,-124,-134,-91,-92,-94,-95,-102,-103,-106,-131,-110,-112,-115,-116,-120,-47,-127,-120,-82,-133,-120,-89,-120,-120,-96,-97,-98,-99,-100,-101,-107,-22,-23,-24,-67,-86,-120,-111,-90,-93,-120,-120,-120,-120,-80,-84,-81,235,-74,-77,-18,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'PRINT':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,71,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,112,129,130,138,140,141,142,153,154,155,156,157,158,159,160,161,164,167,168,169,173,174,176,177,179,191,192,193,194,195,196,204,206,207,211,213,214,220,221,222,223,229,230,232,233,244,252,256,270,273,285,302,],[32,32,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-138,32,-113,-114,-124,-134,-91,-92,-94,-95,-102,-103,-106,-131,-110,-112,-115,-116,-120,-47,-127,-120,-82,-133,-120,-89,-120,-120,-96,-97,-98,-99,-100,-101,-107,-22,-23,-24,-67,32,-86,-120,-111,-90,-93,-120,-120,-120,-120,-80,-84,-81,-74,-77,-18,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'READ':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,71,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,112,129,130,138,140,141,142,153,154,155,156,157,158,159,160,161,164,167,168,169,173,174,176,177,179,191,192,193,194,195,196,204,206,207,211,213,214,220,221,222,223,229,230,232,233,244,252,256,270,273,285,302,],[33,33,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-138,33,-113,-114,-124,-134,-91,-92,-94,-95,-102,-103,-106,-131,-110,-112,-115,-116,-120,-47,-127,-120,-82,-133,-120,-89,-120,-120,-96,-97,-98,-99,-100,-101,-107,-22,-23,-24,-67,33,-86,-120,-111,-90,-93,-120,-120,-120,-120,-80,-84,-81,-74,-77,-18,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'WHILE':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,112,129,130,138,140,141,142,153,154,155,156,157,158,159,160,161,164,167,168,169,173,176,177,179,191,192,193,194,195,196,204,206,207,211,213,214,220,221,222,223,229,230,232,233,244,252,256,270,273,285,302,],[34,34,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-138,-113,-114,-124,-134,-91,-92,-94,-95,-102,-103,-106,-131,-110,-112,-115,-116,-120,-47,-127,-120,-82,-133,-120,-89,-120,-120,-96,-97,-98,-99,-100,-101,-107,-22,-23,-24,-67,-86,-120,-111,-90,-93,-120,-120,-120,-120,-80,-84,-81,-74,-77,-18,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'FOR':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,112,129,130,138,140,141,142,153,154,155,156,157,158,159,160,161,164,167,168,169,173,176,177,179,191,192,193,194,195,196,204,206,207,211,213,214,220,221,222,223,229,230,232,233,244,252,256,270,273,285,302,],[35,35,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-138,-113,-114,-124,-134,-91,-92,-94,-95,-102,-103,-106,-131,-110,-112,-115,-116,-120,-47,-127,-120,-82,-133,-120,-89,-120,-120,-96,-97,-98,-99,-100,-101,-107,-22,-23,-24,-67,-86,-120,-111,-90,-93,-120,-120,-120,-120,-80,-84,-81,-74,-77,-18,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'FUNCTION':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,112,129,130,138,140,141,142,153,154,155,156,157,158,159,160,161,164,167,168,169,173,176,177,179,191,192,193,194,195,196,204,206,207,211,213,214,220,221,222,223,229,230,232,233,244,252,256,270,273,285,295,299,302,],[36,36,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-138,-113,-114,-124,-134,-91,-92,-94,-95,-102,-103,-106,-131,-110,-112,-115,-116,-120,-47,-127,-120,-82,-133,-120,-89,-120,-120,-96,-97,-98,-99,-100,-101,-107,-22,-23,-24,-67,-86,-120,-111,-90,-93,-120,-120,-120,-120,-80,-84,-81,-74,-77,-18,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,36,36,-19,]),'CLASS':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,38,39,40,41,42,43,44,45,46,47,48,49,50,68,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,112,129,130,138,140,141,142,153,154,155,156,157,158,159,160,161,164,167,168,169,173,176,177,179,191,192,193,194,195,196,204,206,207,211,213,214,220,221,222,223,229,230,232,233,244,252,256,270,273,285,302,],[37,37,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-120,-120,-120,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-138,-113,-114,-124,-134,-91,-92,-94,-95,-102,-103,-106,-131,-110,-112,-115,-116,-120,-47,-127,-120,-82,-133,-120,-89,-120,-120,-96,-97,-98,-99,-100,-101,-107,-22,-23,-24,-67,-86,-120,-111,-90,-93,-120,-120,-120,-120,-80,-84,-81,-74,-77,-18,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'OPAREN':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,38,39,40,41,42,43,44,45,46,47,48,49,50,68,70,71,72,74,75,76,78,79,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,129,130,137,138,139,140,141,142,150,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,173,174,176,177,179,183,189,191,192,193,194,195,196,202,204,206,207,211,213,214,218,220,221,222,223,229,230,232,233,235,244,252,256,270,273,285,302,],[30,30,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-124,30,78,79,80,78,82,-120,-120,-120,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-138,30,30,137,-113,-114,-124,30,30,30,-134,30,-91,-92,30,-94,-95,30,30,30,30,30,30,-102,-103,-130,-130,-106,-131,-132,-132,-110,-112,-115,-116,-120,-47,-127,30,-120,30,-82,-133,137,-124,-89,-120,-120,-96,-97,-98,-99,-100,-101,30,30,-107,30,30,-22,-23,-24,-67,30,-86,-120,-111,30,-136,-90,-93,-120,-120,-120,-120,30,-80,-84,-81,-74,-77,-18,238,-104,-105,-108,-109,-73,-85,-124,-68,78,-120,-12,-120,-120,-3,-83,-19,]),'CSTINT':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,30,38,39,40,41,42,43,44,45,46,47,48,49,50,68,70,71,74,75,76,78,79,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,129,130,137,138,139,140,141,142,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,173,174,176,177,179,183,187,191,192,193,194,195,196,202,204,206,207,211,213,214,220,221,222,223,228,229,230,232,233,237,244,252,256,258,267,270,273,285,301,302,],[44,44,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,44,-120,-120,-120,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-138,44,44,-113,-114,-124,44,44,44,-134,44,-91,-92,44,-94,-95,44,44,44,44,44,44,-102,-103,-130,-130,-106,-131,-132,-132,-110,-112,-115,-116,-120,-47,-127,44,-120,44,-82,-133,-120,-89,-120,-120,-96,-97,-98,-99,-100,-101,44,44,-107,44,44,-22,-23,-24,-67,44,-86,-120,-111,44,217,-90,-93,-120,-120,-120,-120,44,-80,-84,-81,-74,-77,-18,-104,-105,-108,-109,242,-73,-85,-124,-68,217,-120,-12,-120,217,281,-120,-3,-83,305,-19,]),'CSTFLT':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,30,38,39,40,41,42,43,44,45,46,47,48,49,50,68,70,71,74,75,76,78,79,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,129,130,137,138,139,140,141,142,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,173,174,176,177,179,183,191,192,193,194,195,196,202,204,206,207,211,213,214,220,221,222,223,229,230,232,233,244,252,256,270,273,285,302,],[45,45,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,45,-120,-120,-120,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-138,45,45,-113,-114,-124,45,45,45,-134,45,-91,-92,45,-94,-95,45,45,45,45,45,45,-102,-103,-130,-130,-106,-131,-132,-132,-110,-112,-115,-116,-120,-47,-127,45,-120,45,-82,-133,-120,-89,-120,-120,-96,-97,-98,-99,-100,-101,45,45,-107,45,45,-22,-23,-24,-67,45,-86,-120,-111,45,-90,-93,-120,-120,-120,-120,45,-80,-84,-81,-74,-77,-18,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'CSTCHAR':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,30,38,39,40,41,42,43,44,45,46,47,48,49,50,68,70,71,74,75,76,78,79,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,129,130,137,138,139,140,141,142,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,173,174,176,177,179,183,191,192,193,194,195,196,202,204,206,207,211,213,214,220,221,222,223,229,230,232,233,244,252,256,270,273,285,302,],[46,46,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,46,-120,-120,-120,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-138,46,46,-113,-114,-124,46,46,46,-134,46,-91,-92,46,-94,-95,46,46,46,46,46,46,-102,-103,-130,-130,-106,-131,-132,-132,-110,-112,-115,-116,-120,-47,-127,46,-120,46,-82,-133,-120,-89,-120,-120,-96,-97,-98,-99,-100,-101,46,46,-107,46,46,-22,-23,-24,-67,46,-86,-120,-111,46,-90,-93,-120,-120,-120,-120,46,-80,-84,-81,-74,-77,-18,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'CSTSTRING':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,30,38,39,40,41,42,43,44,45,46,47,48,49,50,68,70,71,74,75,76,78,79,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,129,130,137,138,139,140,141,142,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,173,174,176,177,179,183,191,192,193,194,195,196,202,204,206,207,211,213,214,220,221,222,223,229,230,232,233,244,252,256,270,273,285,302,],[47,47,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,47,-120,-120,-120,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-138,47,47,-113,-114,-124,47,47,47,-134,47,-91,-92,47,-94,-95,47,47,47,47,47,47,-102,-103,-130,-130,-106,-131,-132,-132,-110,-112,-115,-116,-120,-47,-127,47,-120,47,-82,-133,-120,-89,-120,-120,-96,-97,-98,-99,-100,-101,47,47,-107,47,47,-22,-23,-24,-67,47,-86,-120,-111,47,-90,-93,-120,-120,-120,-120,47,-80,-84,-81,-74,-77,-18,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'TRUE':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,30,38,39,40,41,42,43,44,45,46,47,48,49,50,68,70,71,74,75,76,78,79,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,129,130,137,138,139,140,141,142,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,173,174,176,177,179,183,191,192,193,194,195,196,202,204,206,207,211,213,214,220,221,222,223,229,230,232,233,244,252,256,270,273,285,302,],[49,49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,49,-120,-120,-120,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-138,49,49,-113,-114,-124,49,49,49,-134,49,-91,-92,49,-94,-95,49,49,49,49,49,49,-102,-103,-130,-130,-106,-131,-132,-132,-110,-112,-115,-116,-120,-47,-127,49,-120,49,-82,-133,-120,-89,-120,-120,-96,-97,-98,-99,-100,-101,49,49,-107,49,49,-22,-23,-24,-67,49,-86,-120,-111,49,-90,-93,-120,-120,-120,-120,49,-80,-84,-81,-74,-77,-18,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'FALSE':([9,13,15,16,17,18,19,20,21,22,23,24,25,26,30,38,39,40,41,42,43,44,45,46,47,48,49,50,68,70,71,74,75,76,78,79,80,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,129,130,137,138,139,140,141,142,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,173,174,176,177,179,183,191,192,193,194,195,196,202,204,206,207,211,213,214,220,221,222,223,229,230,232,233,244,252,256,270,273,285,302,],[50,50,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,50,-120,-120,-120,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-138,50,50,-113,-114,-124,50,50,50,-134,50,-91,-92,50,-94,-95,50,50,50,50,50,50,-102,-103,-130,-130,-106,-131,-132,-132,-110,-112,-115,-116,-120,-47,-127,50,-120,50,-82,-133,-120,-89,-120,-120,-96,-97,-98,-99,-100,-101,50,50,-107,50,50,-22,-23,-24,-67,50,-86,-120,-111,50,-90,-93,-120,-120,-120,-120,50,-80,-84,-81,-74,-77,-18,-104,-105,-108,-109,-73,-85,-124,-68,-120,-12,-120,-120,-3,-83,-19,]),'DATAFRAME':([10,],[56,]),'FILE':([10,],[57,]),'INT':([10,36,238,261,],[58,58,58,58,]),'FLOAT':([10,36,238,261,],[59,59,59,59,]),'BOOL':([10,36,238,261,],[60,60,60,60,]),'STRING':([10,36,238,261,],[61,61,61,61,]),'CHAR':([10,36,238,261,],[62,62,62,62,]),'INTS':([10,238,261,],[63,63,63,]),'FLOATS':([10,238,261,],[64,64,64,]),'BOOLS':([10,238,261,],[65,65,65,]),'STRINGS':([10,238,261,],[66,66,66,]),'CHARS':([10,238,261,],[67,67,67,]),'MULT':([16,27,29,42,43,44,45,46,47,48,49,50,72,74,75,76,109,110,111,133,138,140,141,142,176,177,179,195,196,204,206,207,230,232,244,256,270,285,],[-114,-113,-124,106,-133,-128,-129,-117,-118,-119,-78,-79,-120,-113,-114,-124,-112,-115,-116,-114,-120,-82,-133,-120,-86,-120,-111,106,106,-80,-84,-81,-85,-124,-120,-120,-120,-83,]),'DIV':([16,27,29,42,43,44,45,46,47,48,49,50,72,74,75,76,109,110,111,133,138,140,141,142,176,177,179,195,196,204,206,207,230,232,244,256,270,285,],[-114,-113,-124,107,-133,-128,-129,-117,-118,-119,-78,-79,-120,-113,-114,-124,-112,-115,-116,-114,-120,-82,-133,-120,-86,-120,-111,107,107,-80,-84,-81,-85,-124,-120,-120,-120,-83,]),'PLUS':([16,27,29,41,42,43,44,45,46,47,48,49,50,72,74,75,76,105,108,109,110,111,133,138,140,141,142,164,176,177,179,193,194,195,196,204,206,207,222,223,230,232,244,256,270,285,],[-114,-113,-124,102,-120,-133,-128,-129,-117,-118,-119,-78,-79,-120,-113,-114,-124,-131,-110,-112,-115,-116,-114,-120,-82,-133,-120,-107,-86,-120,-111,102,102,-120,-120,-80,-84,-81,-108,-109,-85,-124,-120,-120,-120,-83,]),'MINUS':([16,27,29,41,42,43,44,45,46,47,48,49,50,72,74,75,76,105,108,109,110,111,133,138,140,141,142,164,176,177,179,193,194,195,196,204,206,207,222,223,230,232,244,256,270,285,],[-114,-113,-124,103,-120,-133,-128,-129,-117,-118,-119,-78,-79,-120,-113,-114,-124,-131,-110,-112,-115,-116,-114,-120,-82,-133,-120,-107,-86,-120,-111,103,103,-120,-120,-80,-84,-81,-108,-109,-85,-124,-120,-120,-120,-83,]),'LT':([16,27,29,40,41,42,43,44,45,46,47,48,49,50,72,74,75,76,101,104,105,108,109,110,111,133,138,140,141,142,164,176,177,179,193,194,195,196,204,206,207,220,221,222,223,230,232,244,256,270,285,],[-114,-113,-124,94,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-120,-113,-114,-124,-103,-106,-131,-110,-112,-115,-116,-114,-120,-82,-133,-120,-107,-86,-120,-111,-120,-120,-120,-120,-80,-84,-81,-104,-105,-108,-109,-85,-124,-120,-120,-120,-83,]),'GT':([16,27,29,40,41,42,43,44,45,46,47,48,49,50,72,74,75,76,101,104,105,108,109,110,111,133,138,140,141,142,164,176,177,179,193,194,195,196,204,206,207,220,221,222,223,230,232,244,256,270,285,],[-114,-113,-124,95,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-120,-113,-114,-124,-103,-106,-131,-110,-112,-115,-116,-114,-120,-82,-133,-120,-107,-86,-120,-111,-120,-120,-120,-120,-80,-84,-81,-104,-105,-108,-109,-85,-124,-120,-120,-120,-83,]),'GTE':([16,27,29,40,41,42,43,44,45,46,47,48,49,50,72,74,75,76,101,104,105,108,109,110,111,133,138,140,141,142,164,176,177,179,193,194,195,196,204,206,207,220,221,222,223,230,232,244,256,270,285,],[-114,-113,-124,96,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-120,-113,-114,-124,-103,-106,-131,-110,-112,-115,-116,-114,-120,-82,-133,-120,-107,-86,-120,-111,-120,-120,-120,-120,-80,-84,-81,-104,-105,-108,-109,-85,-124,-120,-120,-120,-83,]),'LTE':([16,27,29,40,41,42,43,44,45,46,47,48,49,50,72,74,75,76,101,104,105,108,109,110,111,133,138,140,141,142,164,176,177,179,193,194,195,196,204,206,207,220,221,222,223,230,232,244,256,270,285,],[-114,-113,-124,97,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-120,-113,-114,-124,-103,-106,-131,-110,-112,-115,-116,-114,-120,-82,-133,-120,-107,-86,-120,-111,-120,-120,-120,-120,-80,-84,-81,-104,-105,-108,-109,-85,-124,-120,-120,-120,-83,]),'EQ':([16,27,29,40,41,42,43,44,45,46,47,48,49,50,72,74,75,76,101,104,105,108,109,110,111,133,138,140,141,142,164,176,177,179,193,194,195,196,204,206,207,220,221,222,223,230,232,244,256,270,285,],[-114,-113,-124,98,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-120,-113,-114,-124,-103,-106,-131,-110,-112,-115,-116,-114,-120,-82,-133,-120,-107,-86,-120,-111,-120,-120,-120,-120,-80,-84,-81,-104,-105,-108,-109,-85,-124,-120,-120,-120,-83,]),'NE':([16,27,29,40,41,42,43,44,45,46,47,48,49,50,72,74,75,76,101,104,105,108,109,110,111,133,138,140,141,142,164,176,177,179,193,194,195,196,204,206,207,220,221,222,223,230,232,244,256,270,285,],[-114,-113,-124,99,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-120,-113,-114,-124,-103,-106,-131,-110,-112,-115,-116,-114,-120,-82,-133,-120,-107,-86,-120,-111,-120,-120,-120,-120,-80,-84,-81,-104,-105,-108,-109,-85,-124,-120,-120,-120,-83,]),'AND':([16,27,29,39,40,41,42,43,44,45,46,47,48,49,50,72,74,75,76,93,100,101,104,105,108,109,110,111,133,138,140,141,142,155,156,157,158,159,160,161,164,176,177,179,193,194,195,196,204,206,207,220,221,222,223,230,232,244,256,270,285,],[-114,-113,-124,91,-120,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-120,-113,-114,-124,-95,-102,-103,-106,-131,-110,-112,-115,-116,-114,-120,-82,-133,-120,91,-96,-97,-98,-99,-100,-101,-107,-86,-120,-111,-120,-120,-120,-120,-80,-84,-81,-104,-105,-108,-109,-85,-124,-120,-120,-120,-83,]),'OR':([16,27,29,38,39,40,41,42,43,44,45,46,47,48,49,50,72,74,75,76,90,92,93,100,101,104,105,108,109,110,111,133,138,140,141,142,154,155,156,157,158,159,160,161,164,176,177,179,192,193,194,195,196,204,206,207,220,221,222,223,230,232,244,256,270,285,],[-114,-113,-124,88,-120,-120,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-120,-113,-114,-124,-92,-94,-95,-102,-103,-106,-131,-110,-112,-115,-116,-114,-120,-82,-133,-120,88,-120,-96,-97,-98,-99,-100,-101,-107,-86,-120,-111,-93,-120,-120,-120,-120,-80,-84,-81,-104,-105,-108,-109,-85,-124,-120,-120,-120,-83,]),'QUESTION':([16,27,28,29,38,39,40,41,42,43,44,45,46,47,48,49,50,72,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,133,138,140,141,142,153,154,155,156,157,158,159,160,161,164,176,177,179,191,192,193,194,195,196,204,206,207,220,221,222,223,230,232,244,256,270,285,],[-114,-113,71,-124,-120,-120,-120,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-120,-113,-114,-124,-134,-91,-92,-94,-95,-102,-103,-106,-131,-110,-112,-115,-116,-114,-120,-82,-133,-120,-89,-120,-120,-96,-97,-98,-99,-100,-101,-107,-86,-120,-111,-90,-93,-120,-120,-120,-120,-80,-84,-81,-104,-105,-108,-109,-85,-124,-120,-120,-120,-83,]),'AS':([27,29,72,138,140,177,204,206,207,232,244,256,270,285,],[70,-124,-120,-120,-82,-120,-80,-84,-81,-124,-120,-120,-120,-83,]),'OBRACKET':([29,72,76,116,138,140,142,149,172,188,199,207,232,244,255,256,264,276,289,292,296,307,],[-124,139,-124,-124,139,-82,139,-124,-126,139,228,-81,-124,139,267,139,-125,139,139,-124,301,267,]),'PERIOD':([29,72,76,138,140,142,149,177,188,207,232,244,256,270,],[-124,-120,-124,-120,-82,-120,-124,205,-120,-81,-124,-120,-120,205,]),'VOID':([36,],[85,]),'CPAREN':([38,39,40,41,42,43,44,45,46,47,48,49,50,73,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,137,138,140,141,142,144,145,146,149,153,154,155,156,157,158,159,160,161,164,175,176,177,179,182,184,185,188,191,192,193,194,195,196,201,203,204,206,207,212,215,217,220,221,222,223,230,231,232,236,238,243,244,247,248,249,256,260,262,263,264,270,272,274,275,276,285,288,289,294,],[-120,-120,-120,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,141,-113,-114,-124,-134,-91,-92,-94,-95,-102,-103,-106,-131,-110,-112,-115,-116,176,-120,-82,-133,-120,181,-120,-120,-124,-89,-120,-120,-96,-97,-98,-99,-100,-101,-107,-120,-86,-120,-111,211,-76,213,-120,-90,-93,-120,-120,-120,-120,230,-88,-80,-84,-81,-120,-21,-20,-104,-105,-108,-109,-85,-120,-124,-75,-120,-87,-120,259,-120,-7,-120,-6,-9,-125,-125,-120,287,-120,-10,-120,-83,-8,-120,-11,]),'COLON':([38,39,40,41,42,43,44,45,46,47,48,49,50,74,75,76,86,87,89,90,92,93,100,101,104,105,108,109,110,111,130,131,132,133,134,135,136,138,140,141,142,152,153,154,155,156,157,158,159,160,161,164,173,176,177,179,190,191,192,193,194,195,196,204,206,207,211,213,220,221,222,223,229,230,232,244,253,256,270,285,290,],[-120,-120,-120,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-113,-114,-124,-124,-134,-91,-92,-94,-95,-102,-103,-106,-131,-110,-112,-115,-116,-127,174,-62,-63,-64,-65,-66,-120,-82,-133,-120,-122,-89,-120,-120,-96,-97,-98,-99,-100,-101,-107,-67,-86,-120,-111,219,-90,-93,-120,-120,-120,-120,-80,-84,-81,-74,-77,-104,-105,-108,-109,-73,-85,-124,-120,265,-120,-120,-83,295,]),'COMMA':([38,39,40,41,42,43,44,45,46,47,48,49,50,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,113,115,138,140,141,142,145,146,153,154,155,156,157,158,159,160,161,164,170,171,175,176,177,179,191,192,193,194,195,196,197,198,204,206,207,212,220,221,222,223,230,231,232,241,244,248,254,255,256,263,264,266,268,269,270,274,275,276,285,289,291,294,],[-120,-120,-120,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-113,-114,-124,-134,-91,-92,-94,-95,-102,-103,-106,-131,-110,-112,-115,-116,-124,-124,-120,-82,-133,-120,183,183,-89,-120,-120,-96,-97,-98,-99,-100,-101,-107,-126,-126,202,-86,-120,-111,-90,-93,-120,-120,-120,-120,225,225,-80,-84,-81,183,-104,-105,-108,-109,-85,202,-124,-124,-120,261,-126,-120,-120,-125,-125,225,283,-33,-120,261,-10,-120,-83,-120,-32,-11,]),'CBRACKET':([38,39,40,41,42,43,44,45,46,47,48,49,50,74,75,76,87,89,90,92,93,100,101,104,105,108,109,110,111,138,140,141,142,153,154,155,156,157,158,159,160,161,164,176,177,178,179,191,192,193,194,195,196,204,206,207,220,221,222,223,230,232,242,244,256,270,281,285,305,],[-120,-120,-120,-120,-120,-133,-128,-129,-117,-118,-119,-78,-79,-113,-114,-124,-134,-91,-92,-94,-95,-102,-103,-106,-131,-110,-112,-115,-116,-120,-82,-133,-120,-89,-120,-120,-96,-97,-98,-99,-100,-101,-107,-86,-120,207,-111,-90,-93,-120,-120,-120,-120,-80,-84,-81,-104,-105,-108,-109,-85,-124,255,-120,-120,-120,291,-83,307,]),'ELSE':([68,129,180,271,],[-138,-47,209,209,]),'THEN':([77,81,181,245,287,],[143,147,-72,257,293,]),'METHODS':([112,167,168,169,265,277,278,279,],[-120,-22,-23,-24,-120,290,-14,-15,]),'FROM':([138,140,148,149,177,188,204,206,207,232,244,256,270,285,],[-120,-82,187,-124,-120,-120,-80,-84,-81,-124,-120,-120,-120,-83,]),'TO':([138,140,149,177,188,204,206,207,215,216,217,232,244,256,270,285,],[-120,-82,-124,-120,-120,-80,-84,-81,-21,237,-20,-124,-120,-120,-120,-83,]),'BY':([138,140,149,177,188,204,206,207,215,217,232,244,246,256,270,285,],[-120,-82,-124,-120,-120,-80,-84,-81,-21,-20,-124,-120,258,-120,-120,-83,]),'ATTRIBUTES':([240,],[253,]),}
=======
_lr_signature = 'AND AS ATTRIBUTES BOOL BOOLS BY CBRACKET CCURLY CHAR CHARS CLASS COLON COMMA COMMENT CPAREN CSTCHAR CSTFLT CSTINT CSTSTRING DATAFRAME DIV ELSE EQ FALSE FILE FLOAT FLOATS FOR FROM FUNCTION GT GTE ID IF INT INTS LT LTE METHODS MINUS MULT NE OBRACKET OCURLY OPAREN OR PERIOD PLUS PRINT PROGRAM QUESTION READ RETURN SEMICOLON STRING STRINGS THEN TO TRUE VAR VOID WHILE\n  programa : PROGRAM ID saw_program SEMICOLON bloque\n           | PROGRAM ID saw_program SEMICOLON dec bloque\n  \n  funcion : FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque\n  \n  func1 : simple\n        | VOID saw_type\n  \n  param : param2 param1\n        | empty\n  \n  param1 : COMMA param2 param1\n         | empty\n  \n  param2 : simple ID saw_id saw_variable\n         | multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable\n  \n    clase : CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON\n   \n  clase_bloque :  OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY\n   \n  clase_bloque1 : dec\n                | empty\n   \n  clase_metodos_bloque : funcion clase_metodos_bloque\n                       | empty\n  \n  ciclo_while : WHILE cond2 THEN bloque SEMICOLON\n  \n  ciclo_for : FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON\n  \n  ciclo_for1 : CSTINT\n             | variable\n  \n  dec : VAR tipo SEMICOLON dec1\n  \n  dec1 : dec\n       | empty\n  \n  tipo : compuesto ID saw_id saw_variable tipo1\n       | simple ID saw_id saw_variable tipo1\n       | multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable tipo2\n  \n  tipo1 : COMMA ID saw_id saw_variable tipo1\n        | empty\n  \n  tipo2 : COMMA ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable\n        | empty\n  \n  tipo3 : OBRACKET CSTINT CBRACKET saw_dimension\n        | empty\n  \n  simple : INT saw_type\n         | FLOAT saw_type\n         | BOOL saw_type\n         | STRING saw_type\n         | CHAR saw_type\n  \n  multiple : INTS saw_type\n           | FLOATS saw_type\n           | BOOLS saw_type\n           | STRINGS saw_type\n           | CHARS saw_type\n  \n  compuesto : ID saw_type\n            | DATAFRAME saw_type\n            | FILE saw_type\n  \n  bloque : OCURLY b1 CCURLY scope_end\n  \n  b1 : estatuto b1\n     | empty\n  \n  estatuto : asignacion\n           | llamada\n           | condicion\n           | escritura\n           | leer\n           | ciclo_while\n           | ciclo_for\n           | ternaria\n           | bloque\n           | funcion\n           | clase\n           | dec\n  \n  estatuto_redux : asignacion\n                 | llamada\n                 | escritura\n                 | leer\n                 | ternaria\n  \n  asignacion : variable AS exp saw_asig\n  \n  condicion : IF cond2 THEN bloque cond1 SEMICOLON\n  \n  cond1 : ELSE bloque\n        | ELSE IF cond2 THEN bloque cond1\n        | empty\n  \n    cond2 : OPAREN exp CPAREN\n  \n  ternaria : exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON\n  \n  escritura : PRINT OPAREN exp e1 CPAREN\n  \n  e1 : COMMA exp e1\n     | empty\n  \n  leer  : READ OPAREN exp e1 CPAREN\n  \n  boolean : TRUE\n          | FALSE\n  \n  variable : ID saw_id saw_called_var\n           | ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var\n           | ID saw_id variable2\n  \n  variable1 : OBRACKET exp CBRACKET saw_dimension\n            | empty\n  \n  variable2 : PERIOD ID saw_called_var_from_class\n            | PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1\n  \n  llamada : ID saw_id OPAREN exp llamada1 CPAREN\n          | ID saw_id OPAREN CPAREN\n  \n  llamada1 : COMMA exp llamada1\n           | empty\n  \n  exp : texp exp1\n  \n  exp1 : OR saw_op texp exp1\n       | empty\n  \n  texp : gexp texp1\n  \n  texp1 : AND saw_op gexp texp1\n        | empty\n  \n  gexp : mexp gexp1\n  \n  gexp1 : LT saw_op mexp\n        | GT saw_op mexp\n        | GTE saw_op mexp\n        | LTE saw_op mexp\n        | EQ saw_op mexp\n        | NE saw_op mexp\n        | empty\n  \n  mexp : termino mexp1\n  \n  mexp1 : PLUS saw_op termino mexp1\n        | MINUS saw_op termino mexp1\n        | empty\n  \n  termino : factor term1\n  \n  term1 : MULT saw_op factor term1\n        | DIV saw_op factor term1\n        | empty\n  \n  factor : OPAREN exp CPAREN\n         | varcst\n         | variable\n         | llamada\n  \n  varcst : CSTINT saw_end_value_int\n         | CSTFLT saw_end_value_flt\n         | CSTCHAR \n         | CSTSTRING \n         | boolean \n  \n  empty : \n  \n  saw_program : \n  \n  saw_class : \n  \n  saw_type : \n  \n  saw_id : \n  \n  saw_variable : \n  \n  saw_dimension : \n  \n  saw_called_var : \n  \n  saw_called_var_from_class : \n  \n  saw_asig : \n  \n  saw_end_value_int : \n  \n  saw_end_value_flt : \n  \n  saw_op : \n  \n  saw_function : \n  \n  scope_end : \n  \n  class_scope_end : \n  '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,6,10,67,127,],[0,-1,-2,-136,-47,]),'ID':([2,8,9,12,14,15,16,17,18,19,20,21,22,23,24,25,29,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,73,74,75,77,78,79,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,115,116,117,118,119,120,121,122,123,124,125,126,127,128,135,136,137,138,139,140,141,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,171,173,175,179,183,187,188,189,190,191,192,193,194,195,196,197,198,204,206,207,211,213,214,220,221,222,223,224,225,227,231,232,234,235,236,240,247,248,249,256,257,258,263,264,266,278,279,282,292,293,302,315,],[3,28,52,28,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,75,85,-122,-122,-122,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,111,-125,113,114,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-136,75,28,-115,-116,-126,75,75,75,148,149,-4,-125,-91,-134,-93,-94,-134,-96,-97,-134,-134,-134,-134,-134,-134,-104,-105,-134,-134,-108,-109,-134,-134,-112,-117,-118,-122,-44,-45,-46,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-47,-131,75,-80,75,-82,175,-113,-129,-5,75,75,75,75,75,75,75,75,75,75,75,75,-22,-23,-24,-67,28,-88,-130,75,148,-122,-122,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,75,-128,-85,-74,-77,-18,-92,-95,-106,-107,-110,-111,244,-73,-87,-122,75,-68,148,75,-129,-84,271,272,-12,-81,-128,148,-128,-122,-3,-83,-86,308,-19,]),'SEMICOLON':([3,4,37,38,39,40,41,42,43,44,45,46,47,48,49,50,67,73,74,75,86,88,89,91,92,99,100,103,104,107,108,109,111,113,127,128,130,131,132,133,134,136,138,140,141,167,168,170,173,175,176,182,187,188,189,190,191,192,193,194,195,196,197,198,199,200,202,206,207,208,210,211,213,220,221,222,223,224,225,226,228,229,231,232,234,237,242,244,245,248,249,260,261,263,264,274,276,277,278,279,280,289,291,292,293,294,300,301,303,307,309,321,324,325,326,327,],[-123,5,-122,-122,-122,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,110,-136,-115,-116,-126,-91,-93,-94,-96,-97,-104,-105,-108,-109,-112,-117,-118,-126,-126,-47,-131,-62,-63,-64,-65,-66,-80,-82,-113,-129,-127,-127,-67,-88,-130,-122,214,-122,-122,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-122,-122,231,-128,-85,236,-71,-74,-77,-92,-95,-106,-107,-110,-111,-25,-29,-26,-73,-87,-122,-69,258,-126,-128,-129,-84,-127,-122,-81,-128,-122,-127,-33,-128,-122,-122,-28,-122,-83,-86,-70,-128,-27,-31,-32,315,-13,-128,-122,-127,-30,]),'OCURLY':([5,7,8,12,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,73,74,75,86,88,89,91,92,99,100,103,104,107,108,109,110,127,128,136,138,140,141,142,146,164,165,166,170,173,175,187,188,189,190,191,192,193,194,195,196,197,198,206,207,209,211,213,214,219,220,221,222,223,224,225,231,232,234,236,248,249,258,263,264,265,267,278,279,282,292,293,304,315,],[8,8,8,8,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-122,-122,-122,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-136,-115,-116,-126,-91,-93,-94,-96,-97,-104,-105,-108,-109,-112,-117,-118,-122,-47,-131,-80,-82,-113,-129,8,8,-22,-23,-24,-67,-88,-130,-122,-122,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,8,-74,-77,-18,243,-92,-95,-106,-107,-110,-111,-73,-87,-122,-68,-129,-84,-12,-81,-128,8,8,-128,-122,-3,-83,-86,8,-19,]),'VAR':([5,8,12,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,73,74,75,86,88,89,91,92,99,100,103,104,107,108,109,110,127,128,136,138,140,141,164,165,166,170,173,175,187,188,189,190,191,192,193,194,195,196,197,198,206,207,211,213,214,220,221,222,223,224,225,231,232,234,236,248,249,258,263,264,273,278,279,282,292,293,315,],[9,9,9,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-122,-122,-122,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-136,-115,-116,-126,-91,-93,-94,-96,-97,-104,-105,-108,-109,-112,-117,-118,9,-47,-131,-80,-82,-113,-129,-22,-23,-24,-67,-88,-130,-122,-122,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,-74,-77,-18,-92,-95,-106,-107,-110,-111,-73,-87,-122,-68,-129,-84,-12,-81,-128,9,-128,-122,-3,-83,-86,-19,]),'CCURLY':([8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,68,73,74,75,86,88,89,91,92,99,100,103,104,107,108,109,110,127,128,136,138,140,141,164,165,166,170,173,175,187,188,189,190,191,192,193,194,195,196,197,198,206,207,211,213,214,220,221,222,223,224,225,231,232,234,236,248,249,258,263,264,278,279,282,292,293,306,311,312,313,315,317,318,],[-122,67,-122,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-122,-122,-122,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-136,-48,-115,-116,-126,-91,-93,-94,-96,-97,-104,-105,-108,-109,-112,-117,-118,-122,-47,-131,-80,-82,-113,-129,-22,-23,-24,-67,-88,-130,-122,-122,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,-74,-77,-18,-92,-95,-106,-107,-110,-111,-73,-87,-122,-68,-129,-84,-12,-81,-128,-128,-122,-3,-83,-86,-122,-137,-122,-17,-19,321,-16,]),'IF':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,73,74,75,86,88,89,91,92,99,100,103,104,107,108,109,110,127,128,136,138,140,141,164,165,166,170,173,175,187,188,189,190,191,192,193,194,195,196,197,198,206,207,209,211,213,214,220,221,222,223,224,225,231,232,234,236,248,249,258,263,264,278,279,282,292,293,315,],[30,30,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-122,-122,-122,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-136,-115,-116,-126,-91,-93,-94,-96,-97,-104,-105,-108,-109,-112,-117,-118,-122,-47,-131,-80,-82,-113,-129,-22,-23,-24,-67,-88,-130,-122,-122,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,238,-74,-77,-18,-92,-95,-106,-107,-110,-111,-73,-87,-122,-68,-129,-84,-12,-81,-128,-128,-122,-3,-83,-86,-19,]),'PRINT':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,70,73,74,75,86,88,89,91,92,99,100,103,104,107,108,109,110,127,128,136,138,140,141,164,165,166,170,171,173,175,187,188,189,190,191,192,193,194,195,196,197,198,206,207,211,213,214,220,221,222,223,224,225,231,232,234,236,248,249,258,263,264,278,279,282,292,293,315,],[31,31,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-122,-122,-122,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-136,31,-115,-116,-126,-91,-93,-94,-96,-97,-104,-105,-108,-109,-112,-117,-118,-122,-47,-131,-80,-82,-113,-129,-22,-23,-24,-67,31,-88,-130,-122,-122,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,-74,-77,-18,-92,-95,-106,-107,-110,-111,-73,-87,-122,-68,-129,-84,-12,-81,-128,-128,-122,-3,-83,-86,-19,]),'READ':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,70,73,74,75,86,88,89,91,92,99,100,103,104,107,108,109,110,127,128,136,138,140,141,164,165,166,170,171,173,175,187,188,189,190,191,192,193,194,195,196,197,198,206,207,211,213,214,220,221,222,223,224,225,231,232,234,236,248,249,258,263,264,278,279,282,292,293,315,],[32,32,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-122,-122,-122,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-136,32,-115,-116,-126,-91,-93,-94,-96,-97,-104,-105,-108,-109,-112,-117,-118,-122,-47,-131,-80,-82,-113,-129,-22,-23,-24,-67,32,-88,-130,-122,-122,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,-74,-77,-18,-92,-95,-106,-107,-110,-111,-73,-87,-122,-68,-129,-84,-12,-81,-128,-128,-122,-3,-83,-86,-19,]),'WHILE':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,73,74,75,86,88,89,91,92,99,100,103,104,107,108,109,110,127,128,136,138,140,141,164,165,166,170,173,175,187,188,189,190,191,192,193,194,195,196,197,198,206,207,211,213,214,220,221,222,223,224,225,231,232,234,236,248,249,258,263,264,278,279,282,292,293,315,],[33,33,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-122,-122,-122,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-136,-115,-116,-126,-91,-93,-94,-96,-97,-104,-105,-108,-109,-112,-117,-118,-122,-47,-131,-80,-82,-113,-129,-22,-23,-24,-67,-88,-130,-122,-122,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,-74,-77,-18,-92,-95,-106,-107,-110,-111,-73,-87,-122,-68,-129,-84,-12,-81,-128,-128,-122,-3,-83,-86,-19,]),'FOR':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,73,74,75,86,88,89,91,92,99,100,103,104,107,108,109,110,127,128,136,138,140,141,164,165,166,170,173,175,187,188,189,190,191,192,193,194,195,196,197,198,206,207,211,213,214,220,221,222,223,224,225,231,232,234,236,248,249,258,263,264,278,279,282,292,293,315,],[34,34,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-122,-122,-122,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-136,-115,-116,-126,-91,-93,-94,-96,-97,-104,-105,-108,-109,-112,-117,-118,-122,-47,-131,-80,-82,-113,-129,-22,-23,-24,-67,-88,-130,-122,-122,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,-74,-77,-18,-92,-95,-106,-107,-110,-111,-73,-87,-122,-68,-129,-84,-12,-81,-128,-128,-122,-3,-83,-86,-19,]),'FUNCTION':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,73,74,75,86,88,89,91,92,99,100,103,104,107,108,109,110,127,128,136,138,140,141,164,165,166,170,173,175,187,188,189,190,191,192,193,194,195,196,197,198,206,207,211,213,214,220,221,222,223,224,225,231,232,234,236,248,249,258,263,264,278,279,282,292,293,306,312,315,],[35,35,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-122,-122,-122,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-136,-115,-116,-126,-91,-93,-94,-96,-97,-104,-105,-108,-109,-112,-117,-118,-122,-47,-131,-80,-82,-113,-129,-22,-23,-24,-67,-88,-130,-122,-122,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,-74,-77,-18,-92,-95,-106,-107,-110,-111,-73,-87,-122,-68,-129,-84,-12,-81,-128,-128,-122,-3,-83,-86,35,35,-19,]),'CLASS':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,47,48,49,67,73,74,75,86,88,89,91,92,99,100,103,104,107,108,109,110,127,128,136,138,140,141,164,165,166,170,173,175,187,188,189,190,191,192,193,194,195,196,197,198,206,207,211,213,214,220,221,222,223,224,225,231,232,234,236,248,249,258,263,264,278,279,282,292,293,315,],[36,36,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-122,-122,-122,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-136,-115,-116,-126,-91,-93,-94,-96,-97,-104,-105,-108,-109,-112,-117,-118,-122,-47,-131,-80,-82,-113,-129,-22,-23,-24,-67,-88,-130,-122,-122,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,-74,-77,-18,-92,-95,-106,-107,-110,-111,-73,-87,-122,-68,-129,-84,-12,-81,-128,-128,-122,-3,-83,-86,-19,]),'OPAREN':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,37,38,39,40,41,42,43,44,45,46,47,48,49,67,69,70,71,73,74,75,77,78,79,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,127,128,135,136,137,138,140,141,149,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,171,173,175,179,185,187,188,189,190,191,192,193,194,195,196,197,198,204,206,207,211,213,214,218,220,221,222,223,224,225,231,232,234,235,236,238,247,248,249,258,263,264,278,279,282,292,293,315,],[29,29,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-126,29,77,78,79,77,81,-122,-122,-122,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-136,29,29,135,-115,-116,-126,29,29,29,-91,-134,-93,-94,-134,-96,-97,-134,-134,-134,-134,-134,-134,-104,-105,-134,-134,-108,-109,-134,-134,-112,-117,-118,-122,-47,-131,29,-80,29,-82,-113,135,-126,29,29,29,29,29,29,29,29,29,29,29,29,-22,-23,-24,-67,29,-88,-130,29,-135,-122,-122,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,29,-128,-85,-74,-77,-18,241,-92,-95,-106,-107,-110,-111,-73,-87,-122,29,-68,77,29,-129,-84,-12,-81,-128,-128,-122,-3,-83,-86,-19,]),'CSTINT':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,29,37,38,39,40,41,42,43,44,45,46,47,48,49,67,69,70,73,74,75,77,78,79,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,127,128,135,136,137,138,140,141,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,171,173,175,179,183,187,188,189,190,191,192,193,194,195,196,197,198,201,204,206,207,211,213,214,220,221,222,223,224,225,231,232,234,235,236,240,247,248,249,258,263,264,266,275,278,279,282,292,293,298,315,319,],[43,43,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,43,-122,-122,-122,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-136,43,43,-115,-116,-126,43,43,43,-91,-134,-93,-94,-134,-96,-97,-134,-134,-134,-134,-134,-134,-104,-105,-134,-134,-108,-109,-134,-134,-112,-117,-118,-122,-47,-131,43,-80,43,-82,-113,-129,43,43,43,43,43,43,43,43,43,43,43,43,-22,-23,-24,-67,43,-88,-130,43,217,-122,-122,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,230,43,-128,-85,-74,-77,-18,-92,-95,-106,-107,-110,-111,-73,-87,-122,43,-68,217,43,-129,-84,-12,-81,-128,217,290,-128,-122,-3,-83,-86,305,-19,322,]),'CSTFLT':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,29,37,38,39,40,41,42,43,44,45,46,47,48,49,67,69,70,73,74,75,77,78,79,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,127,128,135,136,137,138,140,141,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,171,173,175,179,187,188,189,190,191,192,193,194,195,196,197,198,204,206,207,211,213,214,220,221,222,223,224,225,231,232,234,235,236,247,248,249,258,263,264,278,279,282,292,293,315,],[44,44,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,44,-122,-122,-122,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-136,44,44,-115,-116,-126,44,44,44,-91,-134,-93,-94,-134,-96,-97,-134,-134,-134,-134,-134,-134,-104,-105,-134,-134,-108,-109,-134,-134,-112,-117,-118,-122,-47,-131,44,-80,44,-82,-113,-129,44,44,44,44,44,44,44,44,44,44,44,44,-22,-23,-24,-67,44,-88,-130,44,-122,-122,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,44,-128,-85,-74,-77,-18,-92,-95,-106,-107,-110,-111,-73,-87,-122,44,-68,44,-129,-84,-12,-81,-128,-128,-122,-3,-83,-86,-19,]),'CSTCHAR':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,29,37,38,39,40,41,42,43,44,45,46,47,48,49,67,69,70,73,74,75,77,78,79,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,127,128,135,136,137,138,140,141,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,171,173,175,179,187,188,189,190,191,192,193,194,195,196,197,198,204,206,207,211,213,214,220,221,222,223,224,225,231,232,234,235,236,247,248,249,258,263,264,278,279,282,292,293,315,],[45,45,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,45,-122,-122,-122,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-136,45,45,-115,-116,-126,45,45,45,-91,-134,-93,-94,-134,-96,-97,-134,-134,-134,-134,-134,-134,-104,-105,-134,-134,-108,-109,-134,-134,-112,-117,-118,-122,-47,-131,45,-80,45,-82,-113,-129,45,45,45,45,45,45,45,45,45,45,45,45,-22,-23,-24,-67,45,-88,-130,45,-122,-122,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,45,-128,-85,-74,-77,-18,-92,-95,-106,-107,-110,-111,-73,-87,-122,45,-68,45,-129,-84,-12,-81,-128,-128,-122,-3,-83,-86,-19,]),'CSTSTRING':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,29,37,38,39,40,41,42,43,44,45,46,47,48,49,67,69,70,73,74,75,77,78,79,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,127,128,135,136,137,138,140,141,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,171,173,175,179,187,188,189,190,191,192,193,194,195,196,197,198,204,206,207,211,213,214,220,221,222,223,224,225,231,232,234,235,236,247,248,249,258,263,264,278,279,282,292,293,315,],[46,46,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,46,-122,-122,-122,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-136,46,46,-115,-116,-126,46,46,46,-91,-134,-93,-94,-134,-96,-97,-134,-134,-134,-134,-134,-134,-104,-105,-134,-134,-108,-109,-134,-134,-112,-117,-118,-122,-47,-131,46,-80,46,-82,-113,-129,46,46,46,46,46,46,46,46,46,46,46,46,-22,-23,-24,-67,46,-88,-130,46,-122,-122,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,46,-128,-85,-74,-77,-18,-92,-95,-106,-107,-110,-111,-73,-87,-122,46,-68,46,-129,-84,-12,-81,-128,-128,-122,-3,-83,-86,-19,]),'TRUE':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,29,37,38,39,40,41,42,43,44,45,46,47,48,49,67,69,70,73,74,75,77,78,79,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,127,128,135,136,137,138,140,141,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,171,173,175,179,187,188,189,190,191,192,193,194,195,196,197,198,204,206,207,211,213,214,220,221,222,223,224,225,231,232,234,235,236,247,248,249,258,263,264,278,279,282,292,293,315,],[48,48,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,48,-122,-122,-122,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-136,48,48,-115,-116,-126,48,48,48,-91,-134,-93,-94,-134,-96,-97,-134,-134,-134,-134,-134,-134,-104,-105,-134,-134,-108,-109,-134,-134,-112,-117,-118,-122,-47,-131,48,-80,48,-82,-113,-129,48,48,48,48,48,48,48,48,48,48,48,48,-22,-23,-24,-67,48,-88,-130,48,-122,-122,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,48,-128,-85,-74,-77,-18,-92,-95,-106,-107,-110,-111,-73,-87,-122,48,-68,48,-129,-84,-12,-81,-128,-128,-122,-3,-83,-86,-19,]),'FALSE':([8,12,14,15,16,17,18,19,20,21,22,23,24,25,29,37,38,39,40,41,42,43,44,45,46,47,48,49,67,69,70,73,74,75,77,78,79,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,127,128,135,136,137,138,140,141,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,171,173,175,179,187,188,189,190,191,192,193,194,195,196,197,198,204,206,207,211,213,214,220,221,222,223,224,225,231,232,234,235,236,247,248,249,258,263,264,278,279,282,292,293,315,],[49,49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,49,-122,-122,-122,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-136,49,49,-115,-116,-126,49,49,49,-91,-134,-93,-94,-134,-96,-97,-134,-134,-134,-134,-134,-134,-104,-105,-134,-134,-108,-109,-134,-134,-112,-117,-118,-122,-47,-131,49,-80,49,-82,-113,-129,49,49,49,49,49,49,49,49,49,49,49,49,-22,-23,-24,-67,49,-88,-130,49,-122,-122,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,49,-128,-85,-74,-77,-18,-92,-95,-106,-107,-110,-111,-73,-87,-122,49,-68,49,-129,-84,-12,-81,-128,-128,-122,-3,-83,-86,-19,]),'DATAFRAME':([9,],[55,]),'FILE':([9,],[56,]),'INT':([9,35,241,269,],[57,57,57,57,]),'FLOAT':([9,35,241,269,],[58,58,58,58,]),'BOOL':([9,35,241,269,],[59,59,59,59,]),'STRING':([9,35,241,269,],[60,60,60,60,]),'CHAR':([9,35,241,269,],[61,61,61,61,]),'INTS':([9,241,269,],[62,62,62,]),'FLOATS':([9,241,269,],[63,63,63,]),'BOOLS':([9,241,269,],[64,64,64,]),'STRINGS':([9,241,269,],[65,65,65,]),'CHARS':([9,241,269,],[66,66,66,]),'MULT':([15,26,28,41,42,43,44,45,46,47,48,49,71,73,74,75,108,109,131,136,138,140,141,173,175,197,198,206,207,232,234,248,249,263,264,278,279,292,293,],[-116,-115,-126,105,-114,-132,-133,-119,-120,-121,-78,-79,-129,-115,-116,-126,-117,-118,-116,-80,-82,-113,-129,-88,-130,105,105,-128,-85,-87,-122,-129,-84,-81,-128,-128,-122,-83,-86,]),'DIV':([15,26,28,41,42,43,44,45,46,47,48,49,71,73,74,75,108,109,131,136,138,140,141,173,175,197,198,206,207,232,234,248,249,263,264,278,279,292,293,],[-116,-115,-126,106,-114,-132,-133,-119,-120,-121,-78,-79,-129,-115,-116,-126,-117,-118,-116,-80,-82,-113,-129,-88,-130,106,106,-128,-85,-87,-122,-129,-84,-81,-128,-128,-122,-83,-86,]),'PLUS':([15,26,28,40,41,42,43,44,45,46,47,48,49,71,73,74,75,104,107,108,109,131,136,138,140,141,173,175,195,196,197,198,206,207,224,225,232,234,248,249,263,264,278,279,292,293,],[-116,-115,-126,101,-122,-114,-132,-133,-119,-120,-121,-78,-79,-129,-115,-116,-126,-109,-112,-117,-118,-116,-80,-82,-113,-129,-88,-130,101,101,-122,-122,-128,-85,-110,-111,-87,-122,-129,-84,-81,-128,-128,-122,-83,-86,]),'MINUS':([15,26,28,40,41,42,43,44,45,46,47,48,49,71,73,74,75,104,107,108,109,131,136,138,140,141,173,175,195,196,197,198,206,207,224,225,232,234,248,249,263,264,278,279,292,293,],[-116,-115,-126,102,-122,-114,-132,-133,-119,-120,-121,-78,-79,-129,-115,-116,-126,-109,-112,-117,-118,-116,-80,-82,-113,-129,-88,-130,102,102,-122,-122,-128,-85,-110,-111,-87,-122,-129,-84,-81,-128,-128,-122,-83,-86,]),'LT':([15,26,28,39,40,41,42,43,44,45,46,47,48,49,71,73,74,75,100,103,104,107,108,109,131,136,138,140,141,173,175,195,196,197,198,206,207,222,223,224,225,232,234,248,249,263,264,278,279,292,293,],[-116,-115,-126,93,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-129,-115,-116,-126,-105,-108,-109,-112,-117,-118,-116,-80,-82,-113,-129,-88,-130,-122,-122,-122,-122,-128,-85,-106,-107,-110,-111,-87,-122,-129,-84,-81,-128,-128,-122,-83,-86,]),'GT':([15,26,28,39,40,41,42,43,44,45,46,47,48,49,71,73,74,75,100,103,104,107,108,109,131,136,138,140,141,173,175,195,196,197,198,206,207,222,223,224,225,232,234,248,249,263,264,278,279,292,293,],[-116,-115,-126,94,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-129,-115,-116,-126,-105,-108,-109,-112,-117,-118,-116,-80,-82,-113,-129,-88,-130,-122,-122,-122,-122,-128,-85,-106,-107,-110,-111,-87,-122,-129,-84,-81,-128,-128,-122,-83,-86,]),'GTE':([15,26,28,39,40,41,42,43,44,45,46,47,48,49,71,73,74,75,100,103,104,107,108,109,131,136,138,140,141,173,175,195,196,197,198,206,207,222,223,224,225,232,234,248,249,263,264,278,279,292,293,],[-116,-115,-126,95,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-129,-115,-116,-126,-105,-108,-109,-112,-117,-118,-116,-80,-82,-113,-129,-88,-130,-122,-122,-122,-122,-128,-85,-106,-107,-110,-111,-87,-122,-129,-84,-81,-128,-128,-122,-83,-86,]),'LTE':([15,26,28,39,40,41,42,43,44,45,46,47,48,49,71,73,74,75,100,103,104,107,108,109,131,136,138,140,141,173,175,195,196,197,198,206,207,222,223,224,225,232,234,248,249,263,264,278,279,292,293,],[-116,-115,-126,96,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-129,-115,-116,-126,-105,-108,-109,-112,-117,-118,-116,-80,-82,-113,-129,-88,-130,-122,-122,-122,-122,-128,-85,-106,-107,-110,-111,-87,-122,-129,-84,-81,-128,-128,-122,-83,-86,]),'EQ':([15,26,28,39,40,41,42,43,44,45,46,47,48,49,71,73,74,75,100,103,104,107,108,109,131,136,138,140,141,173,175,195,196,197,198,206,207,222,223,224,225,232,234,248,249,263,264,278,279,292,293,],[-116,-115,-126,97,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-129,-115,-116,-126,-105,-108,-109,-112,-117,-118,-116,-80,-82,-113,-129,-88,-130,-122,-122,-122,-122,-128,-85,-106,-107,-110,-111,-87,-122,-129,-84,-81,-128,-128,-122,-83,-86,]),'NE':([15,26,28,39,40,41,42,43,44,45,46,47,48,49,71,73,74,75,100,103,104,107,108,109,131,136,138,140,141,173,175,195,196,197,198,206,207,222,223,224,225,232,234,248,249,263,264,278,279,292,293,],[-116,-115,-126,98,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-129,-115,-116,-126,-105,-108,-109,-112,-117,-118,-116,-80,-82,-113,-129,-88,-130,-122,-122,-122,-122,-128,-85,-106,-107,-110,-111,-87,-122,-129,-84,-81,-128,-128,-122,-83,-86,]),'AND':([15,26,28,38,39,40,41,42,43,44,45,46,47,48,49,71,73,74,75,92,99,100,103,104,107,108,109,131,136,138,140,141,173,175,188,189,190,191,192,193,194,195,196,197,198,206,207,222,223,224,225,232,234,248,249,263,264,278,279,292,293,],[-116,-115,-126,90,-122,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-129,-115,-116,-126,-97,-104,-105,-108,-109,-112,-117,-118,-116,-80,-82,-113,-129,-88,-130,90,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,-106,-107,-110,-111,-87,-122,-129,-84,-81,-128,-128,-122,-83,-86,]),'OR':([15,26,28,37,38,39,40,41,42,43,44,45,46,47,48,49,71,73,74,75,89,91,92,99,100,103,104,107,108,109,131,136,138,140,141,173,175,187,188,189,190,191,192,193,194,195,196,197,198,206,207,221,222,223,224,225,232,234,248,249,263,264,278,279,292,293,],[-116,-115,-126,87,-122,-122,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-129,-115,-116,-126,-94,-96,-97,-104,-105,-108,-109,-112,-117,-118,-116,-80,-82,-113,-129,-88,-130,87,-122,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,-95,-106,-107,-110,-111,-87,-122,-129,-84,-81,-128,-128,-122,-83,-86,]),'QUESTION':([15,26,27,28,37,38,39,40,41,42,43,44,45,46,47,48,49,71,73,74,75,86,88,89,91,92,99,100,103,104,107,108,109,131,136,138,140,141,173,175,187,188,189,190,191,192,193,194,195,196,197,198,206,207,220,221,222,223,224,225,232,234,248,249,263,264,278,279,292,293,],[-116,-115,70,-126,-122,-122,-122,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-129,-115,-116,-126,-91,-93,-94,-96,-97,-104,-105,-108,-109,-112,-117,-118,-116,-80,-82,-113,-129,-88,-130,-122,-122,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,-92,-95,-106,-107,-110,-111,-87,-122,-129,-84,-81,-128,-128,-122,-83,-86,]),'AS':([26,28,71,136,138,175,206,207,234,248,249,263,264,278,279,292,293,],[69,-126,-129,-80,-82,-130,-128,-85,-122,-129,-84,-81,-128,-128,-122,-83,-86,]),'OBRACKET':([28,71,75,114,141,148,169,175,184,206,207,234,245,261,264,272,279,285,308,310,314,316,324,325,],[-126,137,-126,-126,137,-126,201,-130,137,-128,235,247,-128,275,-128,-126,247,298,-126,-128,319,275,-128,275,]),'PERIOD':([28,71,75,141,148,184,],[-126,139,-126,139,-126,139,]),'VOID':([35,],[84,]),'CPAREN':([37,38,39,40,41,42,43,44,45,46,47,48,49,72,73,74,75,86,88,89,91,92,99,100,103,104,107,108,109,135,136,138,140,141,143,144,145,148,172,173,175,178,180,181,184,187,188,189,190,191,192,193,194,195,196,197,198,203,205,206,207,212,215,217,220,221,222,223,224,225,232,233,234,239,241,246,248,249,253,254,255,263,264,268,270,271,277,278,279,281,283,284,292,293,296,297,300,307,310,316,320,323,],[-122,-122,-122,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,140,-115,-116,-126,-91,-93,-94,-96,-97,-104,-105,-108,-109,-112,-117,-118,173,-80,-82,-113,-129,177,-122,-122,-126,-122,-88,-130,211,-76,213,-129,-122,-122,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,232,-90,-128,-85,-122,-21,-20,-92,-95,-106,-107,-110,-111,-87,-122,-122,-75,-122,-89,-129,-84,267,-122,-7,-81,-128,-6,-9,-126,-33,-128,-122,295,-122,-127,-83,-86,-8,-10,-128,-32,-128,-122,-127,-11,]),'COLON':([37,38,39,40,41,42,43,44,45,46,47,48,49,73,74,75,85,86,88,89,91,92,99,100,103,104,107,108,109,128,129,130,131,132,133,134,136,138,140,141,151,170,173,175,186,187,188,189,190,191,192,193,194,195,196,197,198,206,207,211,213,220,221,222,223,224,225,231,232,234,248,249,259,263,264,278,279,292,293,299,],[-122,-122,-122,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-115,-116,-126,-126,-91,-93,-94,-96,-97,-104,-105,-108,-109,-112,-117,-118,-131,171,-62,-63,-64,-65,-66,-80,-82,-113,-129,-124,-67,-88,-130,219,-122,-122,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,-74,-77,-92,-95,-106,-107,-110,-111,-73,-87,-122,-129,-84,273,-81,-128,-128,-122,-83,-86,306,]),'COMMA':([37,38,39,40,41,42,43,44,45,46,47,48,49,73,74,75,86,88,89,91,92,99,100,103,104,107,108,109,111,113,136,138,140,141,144,145,167,168,172,173,175,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,207,212,220,221,222,223,224,225,232,233,234,244,245,248,249,254,260,261,263,264,271,274,276,277,278,279,283,284,291,292,293,297,300,307,310,316,320,323,],[-122,-122,-122,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-115,-116,-126,-91,-93,-94,-96,-97,-104,-105,-108,-109,-112,-117,-118,-126,-126,-80,-82,-113,-129,179,179,-127,-127,204,-88,-130,-122,-122,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,227,227,-128,-85,179,-92,-95,-106,-107,-110,-111,-87,204,-122,-126,-128,-129,-84,269,-127,-122,-81,-128,-126,227,-127,-33,-128,-122,269,-127,302,-83,-86,-10,-128,-32,-128,-122,-127,-11,]),'CBRACKET':([37,38,39,40,41,42,43,44,45,46,47,48,49,73,74,75,86,88,89,91,92,99,100,103,104,107,108,109,136,138,140,141,173,174,175,187,188,189,190,191,192,193,194,195,196,197,198,206,207,220,221,222,223,224,225,230,232,234,248,249,250,262,263,264,278,279,290,292,293,305,322,],[-122,-122,-122,-122,-122,-114,-132,-133,-119,-120,-121,-78,-79,-115,-116,-126,-91,-93,-94,-96,-97,-104,-105,-108,-109,-112,-117,-118,-80,-82,-113,-129,-88,206,-130,-122,-122,-98,-99,-100,-101,-102,-103,-122,-122,-122,-122,-128,-85,-92,-95,-106,-107,-110,-111,245,-87,-122,-129,-84,264,278,-81,-128,-128,-122,300,-83,-86,310,324,]),'ELSE':([67,127,176,280,],[-136,-47,209,209,]),'THEN':([76,80,177,251,295,],[142,146,-72,265,304,]),'METHODS':([110,164,165,166,273,286,287,288,],[-122,-22,-23,-24,-122,299,-14,-15,]),'FROM':([136,138,147,148,175,184,206,207,234,248,249,263,264,278,279,292,293,],[-80,-82,183,-126,-130,-129,-128,-85,-122,-129,-84,-81,-128,-128,-122,-83,-86,]),'TO':([136,138,148,175,184,206,207,215,216,217,234,248,249,263,264,278,279,292,293,],[-80,-82,-126,-130,-129,-128,-85,-21,240,-20,-122,-129,-84,-81,-128,-128,-122,-83,-86,]),'BY':([136,138,148,175,184,206,207,215,217,234,248,249,252,263,264,278,279,292,293,],[-80,-82,-126,-130,-129,-128,-85,-21,-20,-122,-129,-84,266,-81,-128,-128,-122,-83,-86,]),'ATTRIBUTES':([243,],[259,]),}
>>>>>>> master

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

<<<<<<< HEAD
_lr_goto_items = {'programa':([0,],[1,]),'saw_id':([3,29,76,86,113,115,116,149,150,232,241,292,],[4,72,142,152,170,171,172,188,189,244,254,296,]),'saw_program':([4,],[5,]),'bloque':([6,8,9,13,143,147,209,257,259,293,],[7,11,23,23,180,186,234,271,273,297,]),'dec':([6,9,13,112,265,],[8,26,26,168,278,]),'b1':([9,13,],[12,69,]),'estatuto':([9,13,],[13,13,]),'empty':([9,13,38,39,40,41,42,72,112,138,142,145,146,154,155,175,177,180,188,193,194,195,196,197,198,212,231,238,244,248,255,256,265,266,268,270,271,274,276,289,295,299,307,],[14,14,89,92,100,104,108,140,169,140,140,184,184,89,92,203,206,210,140,104,104,108,108,226,226,184,203,249,140,262,269,140,279,226,284,206,210,262,140,140,300,300,269,]),'asignacion':([9,13,71,174,],[15,15,132,132,]),'llamada':([9,13,30,70,71,78,79,80,88,91,94,95,96,97,98,99,137,139,162,163,165,166,174,183,202,],[16,16,75,75,133,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,133,75,75,]),'condicion':([9,13,],[17,17,]),'escritura':([9,13,71,174,],[18,18,134,134,]),'leer':([9,13,71,174,],[19,19,135,135,]),'ciclo_while':([9,13,],[20,20,]),'ciclo_for':([9,13,],[21,21,]),'ternaria':([9,13,71,174,],[22,22,136,136,]),'funcion':([9,13,295,299,],[24,24,299,299,]),'clase':([9,13,],[25,25,]),'variable':([9,13,30,70,71,78,79,80,82,88,91,94,95,96,97,98,99,137,139,162,163,165,166,174,183,187,202,237,258,],[27,27,74,74,27,74,74,74,148,74,74,74,74,74,74,74,74,74,74,74,74,74,74,27,74,215,74,215,215,]),'exp':([9,13,30,70,71,78,79,80,137,139,174,183,202,],[28,28,73,130,28,144,145,146,175,178,28,212,231,]),'texp':([9,13,30,70,71,78,79,80,88,137,139,174,183,202,],[38,38,38,38,38,38,38,38,154,38,38,38,38,38,]),'gexp':([9,13,30,70,71,78,79,80,88,91,137,139,174,183,202,],[39,39,39,39,39,39,39,39,39,155,39,39,39,39,39,]),'mexp':([9,13,30,70,71,78,79,80,88,91,94,95,96,97,98,99,137,139,174,183,202,],[40,40,40,40,40,40,40,40,40,40,156,157,158,159,160,161,40,40,40,40,40,]),'termino':([9,13,30,70,71,78,79,80,88,91,94,95,96,97,98,99,137,139,162,163,174,183,202,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,193,194,41,41,41,]),'factor':([9,13,30,70,71,78,79,80,88,91,94,95,96,97,98,99,137,139,162,163,165,166,174,183,202,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,195,196,42,42,42,]),'varcst':([9,13,30,70,71,78,79,80,88,91,94,95,96,97,98,99,137,139,162,163,165,166,174,183,202,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'boolean':([9,13,30,70,71,78,79,80,88,91,94,95,96,97,98,99,137,139,162,163,165,166,174,183,202,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'tipo':([10,],[51,]),'compuesto':([10,],[52,]),'simple':([10,36,238,261,],[54,84,250,250,]),'multiple':([10,238,261,],[55,251,251,]),'cond2':([31,34,235,],[77,81,245,]),'func1':([36,],[83,]),'exp1':([38,154,],[87,191,]),'texp1':([39,155,],[90,192,]),'gexp1':([40,],[93,]),'mexp1':([41,193,194,],[101,220,221,]),'term1':([42,195,196,],[105,222,223,]),'check_multdiv_operator':([43,141,],[109,179,]),'saw_end_value_int':([44,],[110,]),'saw_end_value_flt':([45,],[111,]),'saw_type':([53,56,57,58,59,60,61,62,63,64,65,66,67,85,],[114,117,118,119,120,121,122,123,124,125,126,127,128,151,]),'scope_end':([68,],[129,]),'estatuto_redux':([71,174,],[131,200,]),'variable1':([72,138,142,188,244,256,276,289,],[138,177,138,138,256,270,289,294,]),'end_of_expression':([87,],[153,]),'saw_plusminus_operator':([102,103,],[162,163,]),'check_plusminus_operator':([105,],[164,]),'saw_multdiv_operator':([106,107,],[165,166,]),'dec1':([112,],[167,]),'saw_asig':([130,],[173,]),'e1':([145,146,212,],[182,185,236,]),'saw_class':([152,],[190,]),'saw_variable':([170,171,172,254,],[197,198,199,266,]),'llamada1':([175,231,],[201,243,]),'variable2':([177,270,],[204,285,]),'cond1':([180,271,],[208,286,]),'ciclo_for1':([187,237,258,],[216,246,272,]),'saw_function':([189,],[218,]),'tipo1':([197,198,266,],[224,227,280,]),'clase_bloque':([219,],[239,]),'param':([238,],[247,]),'param2':([238,261,],[248,274,]),'param1':([248,274,],[260,288,]),'tipo3':([255,307,],[268,308,]),'saw_id_param':([263,264,],[275,276,]),'clase_bloque1':([265,],[277,]),'tipo2':([268,],[282,]),'clase_metodos_bloque':([295,299,],[298,304,]),'class_scope_end':([298,],[303,]),}
=======
_lr_goto_items = {'programa':([0,],[1,]),'saw_program':([3,],[4,]),'bloque':([5,7,8,12,142,146,209,265,267,304,],[6,10,22,22,176,182,237,280,282,309,]),'dec':([5,8,12,110,273,],[7,25,25,165,287,]),'b1':([8,12,],[11,68,]),'estatuto':([8,12,],[12,12,]),'empty':([8,12,37,38,39,40,41,110,144,145,172,176,187,188,195,196,197,198,199,200,212,233,234,241,254,261,273,274,279,280,283,291,306,312,316,325,],[13,13,88,91,99,103,107,166,180,180,205,210,88,91,103,103,107,107,228,228,180,205,249,255,270,277,288,228,249,210,270,303,313,313,277,277,]),'asignacion':([8,12,70,171,],[14,14,130,130,]),'llamada':([8,12,29,69,70,77,78,79,135,137,152,153,154,155,156,157,158,159,160,161,162,163,171,179,204,235,247,],[15,15,74,74,131,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,131,74,74,74,74,]),'condicion':([8,12,],[16,16,]),'escritura':([8,12,70,171,],[17,17,132,132,]),'leer':([8,12,70,171,],[18,18,133,133,]),'ciclo_while':([8,12,],[19,19,]),'ciclo_for':([8,12,],[20,20,]),'ternaria':([8,12,70,171,],[21,21,134,134,]),'funcion':([8,12,306,312,],[23,23,312,312,]),'clase':([8,12,],[24,24,]),'variable':([8,12,29,69,70,77,78,79,81,135,137,152,153,154,155,156,157,158,159,160,161,162,163,171,179,183,204,235,240,247,266,],[26,26,73,73,26,73,73,73,147,73,73,73,73,73,73,73,73,73,73,73,73,73,73,26,73,215,73,73,215,73,215,]),'exp':([8,12,29,69,70,77,78,79,135,137,171,179,204,235,247,],[27,27,72,128,27,143,144,145,172,174,27,212,233,250,262,]),'texp':([8,12,29,69,70,77,78,79,135,137,152,171,179,204,235,247,],[37,37,37,37,37,37,37,37,37,37,187,37,37,37,37,37,]),'gexp':([8,12,29,69,70,77,78,79,135,137,152,153,171,179,204,235,247,],[38,38,38,38,38,38,38,38,38,38,38,188,38,38,38,38,38,]),'mexp':([8,12,29,69,70,77,78,79,135,137,152,153,154,155,156,157,158,159,171,179,204,235,247,],[39,39,39,39,39,39,39,39,39,39,39,39,189,190,191,192,193,194,39,39,39,39,39,]),'termino':([8,12,29,69,70,77,78,79,135,137,152,153,154,155,156,157,158,159,160,161,171,179,204,235,247,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,195,196,40,40,40,40,40,]),'factor':([8,12,29,69,70,77,78,79,135,137,152,153,154,155,156,157,158,159,160,161,162,163,171,179,204,235,247,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,197,198,41,41,41,41,41,]),'varcst':([8,12,29,69,70,77,78,79,135,137,152,153,154,155,156,157,158,159,160,161,162,163,171,179,204,235,247,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'boolean':([8,12,29,69,70,77,78,79,135,137,152,153,154,155,156,157,158,159,160,161,162,163,171,179,204,235,247,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'tipo':([9,],[50,]),'compuesto':([9,],[51,]),'simple':([9,35,241,269,],[53,83,256,256,]),'multiple':([9,241,269,],[54,257,257,]),'saw_id':([28,75,85,111,113,114,148,149,244,271,272,308,],[71,141,151,167,168,169,184,185,260,284,285,314,]),'cond2':([30,33,238,],[76,80,251,]),'func1':([35,],[82,]),'exp1':([37,187,],[86,220,]),'texp1':([38,188,],[89,221,]),'gexp1':([39,],[92,]),'mexp1':([40,195,196,],[100,222,223,]),'term1':([41,197,198,],[104,224,225,]),'saw_end_value_int':([43,],[108,]),'saw_end_value_flt':([44,],[109,]),'saw_type':([52,55,56,57,58,59,60,61,62,63,64,65,66,84,],[112,115,116,117,118,119,120,121,122,123,124,125,126,150,]),'scope_end':([67,],[127,]),'estatuto_redux':([70,171,],[129,202,]),'saw_called_var':([71,141,184,248,],[136,136,136,263,]),'variable2':([71,141,184,],[138,138,138,]),'saw_op':([87,90,93,94,95,96,97,98,101,102,105,106,],[152,153,154,155,156,157,158,159,160,161,162,163,]),'dec1':([110,],[164,]),'saw_asig':([128,],[170,]),'e1':([144,145,212,],[178,181,239,]),'saw_class':([151,],[186,]),'saw_variable':([167,168,260,276,284,320,326,],[199,200,274,291,297,323,327,]),'llamada1':([172,233,],[203,246,]),'saw_called_var_from_class':([175,],[207,]),'cond1':([176,280,],[208,294,]),'ciclo_for1':([183,240,266,],[216,252,281,]),'saw_function':([185,],[218,]),'tipo1':([199,200,274,],[226,229,289,]),'saw_dimension':([206,245,264,278,300,310,324,],[234,261,279,292,307,316,325,]),'clase_bloque':([219,],[242,]),'variable1':([234,279,],[248,293,]),'param':([241,],[253,]),'param2':([241,269,],[254,283,]),'param1':([254,283,],[268,296,]),'tipo3':([261,316,325,],[276,320,326,]),'clase_bloque1':([273,],[286,]),'tipo2':([291,],[301,]),'clase_metodos_bloque':([306,312,],[311,318,]),'class_scope_end':([311,],[317,]),}
>>>>>>> master

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
<<<<<<< HEAD
  ('programa -> PROGRAM ID saw_id saw_program SEMICOLON bloque','programa',6,'p_programa','plyler.py',159),
  ('programa -> PROGRAM ID saw_id saw_program SEMICOLON dec bloque','programa',7,'p_programa','plyler.py',160),
  ('funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque','funcion',9,'p_funcion','plyler.py',170),
  ('func1 -> simple','func1',1,'p_funcion1','plyler.py',179),
  ('func1 -> VOID saw_type','func1',2,'p_funcion1','plyler.py',180),
  ('param -> param2 param1','param',2,'p_param','plyler.py',189),
  ('param -> empty','param',1,'p_param','plyler.py',190),
  ('param1 -> COMMA param2 param1','param1',3,'p_param1','plyler.py',198),
  ('param1 -> empty','param1',1,'p_param1','plyler.py',199),
  ('param2 -> simple ID saw_id_param','param2',3,'p_param2','plyler.py',207),
  ('param2 -> multiple ID saw_id_param variable1 variable1','param2',5,'p_param2','plyler.py',208),
  ('clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON','clase',7,'p_clase','plyler.py',217),
  ('clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY','clase_bloque',9,'p_clase_bloque','plyler.py',224),
  ('clase_bloque1 -> dec','clase_bloque1',1,'p_clase_bloque1','plyler.py',230),
  ('clase_bloque1 -> empty','clase_bloque1',1,'p_clase_bloque1','plyler.py',231),
  ('clase_metodos_bloque -> funcion clase_metodos_bloque','clase_metodos_bloque',2,'p_clase_metodos_bloque','plyler.py',237),
  ('clase_metodos_bloque -> empty','clase_metodos_bloque',1,'p_clase_metodos_bloque','plyler.py',238),
  ('ciclo_while -> WHILE cond2 THEN bloque SEMICOLON','ciclo_while',5,'p_ciclo_while','plyler.py',246),
  ('ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON','ciclo_for',13,'p_ciclo_for','plyler.py',255),
  ('ciclo_for1 -> CSTINT','ciclo_for1',1,'p_ciclo_for1','plyler.py',262),
  ('ciclo_for1 -> variable','ciclo_for1',1,'p_ciclo_for1','plyler.py',263),
  ('dec -> VAR tipo SEMICOLON dec1','dec',4,'p_dec','plyler.py',271),
  ('dec1 -> dec','dec1',1,'p_dec1','plyler.py',277),
  ('dec1 -> empty','dec1',1,'p_dec1','plyler.py',278),
  ('tipo -> compuesto ID saw_id saw_variable tipo1','tipo',5,'p_tipo','plyler.py',286),
  ('tipo -> simple ID saw_id saw_variable tipo1','tipo',5,'p_tipo','plyler.py',287),
  ('tipo -> multiple ID saw_id saw_variable OBRACKET CSTINT CBRACKET tipo3 tipo2','tipo',9,'p_tipo','plyler.py',288),
  ('tipo1 -> COMMA ID saw_id saw_variable tipo1','tipo1',5,'p_tipo1','plyler.py',295),
  ('tipo1 -> empty','tipo1',1,'p_tipo1','plyler.py',296),
  ('tipo2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET tipo3','tipo2',7,'p_tipo2','plyler.py',303),
  ('tipo2 -> empty','tipo2',1,'p_tipo2','plyler.py',304),
  ('tipo3 -> OBRACKET CSTINT CBRACKET','tipo3',3,'p_tipo3','plyler.py',310),
  ('tipo3 -> empty','tipo3',1,'p_tipo3','plyler.py',311),
  ('simple -> INT saw_type','simple',2,'p_tipo_simple','plyler.py',317),
  ('simple -> FLOAT saw_type','simple',2,'p_tipo_simple','plyler.py',318),
  ('simple -> BOOL saw_type','simple',2,'p_tipo_simple','plyler.py',319),
  ('simple -> STRING saw_type','simple',2,'p_tipo_simple','plyler.py',320),
  ('simple -> CHAR saw_type','simple',2,'p_tipo_simple','plyler.py',321),
  ('multiple -> INTS saw_type','multiple',2,'p_tipo_multiple','plyler.py',328),
  ('multiple -> FLOATS saw_type','multiple',2,'p_tipo_multiple','plyler.py',329),
  ('multiple -> BOOLS saw_type','multiple',2,'p_tipo_multiple','plyler.py',330),
  ('multiple -> STRINGS saw_type','multiple',2,'p_tipo_multiple','plyler.py',331),
  ('multiple -> CHARS saw_type','multiple',2,'p_tipo_multiple','plyler.py',332),
  ('compuesto -> ID saw_type','compuesto',2,'p_tipo_compuesto','plyler.py',338),
  ('compuesto -> DATAFRAME saw_type','compuesto',2,'p_tipo_compuesto','plyler.py',339),
  ('compuesto -> FILE saw_type','compuesto',2,'p_tipo_compuesto','plyler.py',340),
  ('bloque -> OCURLY b1 CCURLY scope_end','bloque',4,'p_bloque','plyler.py',348),
  ('b1 -> estatuto b1','b1',2,'p_b1','plyler.py',354),
  ('b1 -> empty','b1',1,'p_b1','plyler.py',355),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','plyler.py',363),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','plyler.py',364),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','plyler.py',365),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','plyler.py',366),
  ('estatuto -> leer','estatuto',1,'p_estatuto','plyler.py',367),
  ('estatuto -> ciclo_while','estatuto',1,'p_estatuto','plyler.py',368),
  ('estatuto -> ciclo_for','estatuto',1,'p_estatuto','plyler.py',369),
  ('estatuto -> ternaria','estatuto',1,'p_estatuto','plyler.py',370),
  ('estatuto -> bloque','estatuto',1,'p_estatuto','plyler.py',371),
  ('estatuto -> funcion','estatuto',1,'p_estatuto','plyler.py',372),
  ('estatuto -> clase','estatuto',1,'p_estatuto','plyler.py',373),
  ('estatuto -> dec','estatuto',1,'p_estatuto','plyler.py',374),
  ('estatuto_redux -> asignacion','estatuto_redux',1,'p_estatuto_redux','plyler.py',380),
  ('estatuto_redux -> llamada','estatuto_redux',1,'p_estatuto_redux','plyler.py',381),
  ('estatuto_redux -> escritura','estatuto_redux',1,'p_estatuto_redux','plyler.py',382),
  ('estatuto_redux -> leer','estatuto_redux',1,'p_estatuto_redux','plyler.py',383),
  ('estatuto_redux -> ternaria','estatuto_redux',1,'p_estatuto_redux','plyler.py',384),
  ('asignacion -> variable AS exp saw_asig','asignacion',4,'p_asignacion','plyler.py',392),
  ('condicion -> IF cond2 THEN bloque cond1 SEMICOLON','condicion',6,'p_condicion','plyler.py',400),
  ('cond1 -> ELSE bloque','cond1',2,'p_cond1','plyler.py',406),
  ('cond1 -> ELSE IF cond2 THEN bloque cond1','cond1',6,'p_cond1','plyler.py',407),
  ('cond1 -> empty','cond1',1,'p_cond1','plyler.py',408),
  ('cond2 -> OPAREN exp CPAREN','cond2',3,'p_cond2','plyler.py',414),
  ('ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON','ternaria',6,'p_ternaria','plyler.py',422),
  ('escritura -> PRINT OPAREN exp e1 CPAREN','escritura',5,'p_escritura','plyler.py',430),
  ('e1 -> COMMA exp e1','e1',3,'p_e1','plyler.py',436),
  ('e1 -> empty','e1',1,'p_e1','plyler.py',437),
  ('leer -> READ OPAREN exp e1 CPAREN','leer',5,'p_leer','plyler.py',445),
  ('boolean -> TRUE','boolean',1,'p_boolean','plyler.py',453),
  ('boolean -> FALSE','boolean',1,'p_boolean','plyler.py',454),
  ('variable -> ID saw_id variable1 variable1 variable2','variable',5,'p_variable','plyler.py',462),
  ('variable1 -> OBRACKET exp CBRACKET','variable1',3,'p_variable1','plyler.py',468),
  ('variable1 -> empty','variable1',1,'p_variable1','plyler.py',469),
  ('variable2 -> PERIOD ID saw_id variable1 variable1 variable2','variable2',6,'p_variable2','plyler.py',475),
  ('variable2 -> empty','variable2',1,'p_variable2','plyler.py',476),
  ('llamada -> ID saw_id OPAREN exp llamada1 CPAREN','llamada',6,'p_llamada_funcion','plyler.py',484),
  ('llamada -> ID saw_id OPAREN CPAREN','llamada',4,'p_llamada_funcion','plyler.py',485),
  ('llamada1 -> COMMA exp llamada1','llamada1',3,'p_llamada_funcion1','plyler.py',491),
  ('llamada1 -> empty','llamada1',1,'p_llamada_funcion1','plyler.py',492),
  ('exp -> texp exp1 end_of_expression','exp',3,'p_exp','plyler.py',500),
  ('exp1 -> OR texp exp1','exp1',3,'p_exp1','plyler.py',507),
  ('exp1 -> empty','exp1',1,'p_exp1','plyler.py',508),
  ('texp -> gexp texp1','texp',2,'p_texp','plyler.py',514),
  ('texp1 -> AND gexp texp1','texp1',3,'p_texp1','plyler.py',520),
  ('texp1 -> empty','texp1',1,'p_texp1','plyler.py',521),
  ('gexp -> mexp gexp1','gexp',2,'p_gexp','plyler.py',527),
  ('gexp1 -> LT mexp','gexp1',2,'p_gexp1','plyler.py',533),
  ('gexp1 -> GT mexp','gexp1',2,'p_gexp1','plyler.py',534),
  ('gexp1 -> GTE mexp','gexp1',2,'p_gexp1','plyler.py',535),
  ('gexp1 -> LTE mexp','gexp1',2,'p_gexp1','plyler.py',536),
  ('gexp1 -> EQ mexp','gexp1',2,'p_gexp1','plyler.py',537),
  ('gexp1 -> NE mexp','gexp1',2,'p_gexp1','plyler.py',538),
  ('gexp1 -> empty','gexp1',1,'p_gexp1','plyler.py',539),
  ('mexp -> termino mexp1','mexp',2,'p_mexp','plyler.py',545),
  ('mexp1 -> PLUS saw_plusminus_operator termino mexp1','mexp1',4,'p_mexp1','plyler.py',550),
  ('mexp1 -> MINUS saw_plusminus_operator termino mexp1','mexp1',4,'p_mexp1','plyler.py',551),
  ('mexp1 -> empty','mexp1',1,'p_mexp1','plyler.py',552),
  ('termino -> factor term1 check_plusminus_operator','termino',3,'p_termino','plyler.py',560),
  ('term1 -> MULT saw_multdiv_operator factor term1','term1',4,'p_term1','plyler.py',566),
  ('term1 -> DIV saw_multdiv_operator factor term1','term1',4,'p_term1','plyler.py',567),
  ('term1 -> empty','term1',1,'p_term1','plyler.py',568),
  ('factor -> OPAREN exp CPAREN check_multdiv_operator','factor',4,'p_factor','plyler.py',576),
  ('factor -> varcst check_multdiv_operator','factor',2,'p_factor','plyler.py',577),
  ('factor -> variable','factor',1,'p_factor','plyler.py',578),
  ('factor -> llamada','factor',1,'p_factor','plyler.py',579),
  ('varcst -> CSTINT saw_end_value_int','varcst',2,'p_varcst','plyler.py',587),
  ('varcst -> CSTFLT saw_end_value_flt','varcst',2,'p_varcst','plyler.py',588),
  ('varcst -> CSTCHAR','varcst',1,'p_varcst','plyler.py',589),
  ('varcst -> CSTSTRING','varcst',1,'p_varcst','plyler.py',590),
  ('varcst -> boolean','varcst',1,'p_varcst','plyler.py',591),
  ('empty -> <empty>','empty',0,'p_empty','plyler.py',599),
  ('saw_program -> <empty>','saw_program',0,'p_saw_program','plyler.py',612),
  ('saw_class -> <empty>','saw_class',0,'p_saw_class','plyler.py',619),
  ('saw_type -> <empty>','saw_type',0,'p_saw_type','plyler.py',628),
  ('saw_id -> <empty>','saw_id',0,'p_saw_id','plyler.py',635),
  ('saw_id_param -> <empty>','saw_id_param',0,'p_saw_id_param','plyler.py',642),
  ('saw_variable -> <empty>','saw_variable',0,'p_saw_variable','plyler.py',652),
  ('saw_asig -> <empty>','saw_asig',0,'p_saw_asig','plyler.py',658),
  ('saw_end_value_int -> <empty>','saw_end_value_int',0,'p_saw_end_value_int','plyler.py',666),
  ('saw_end_value_flt -> <empty>','saw_end_value_flt',0,'p_saw_end_value_flt','plyler.py',676),
  ('saw_plusminus_operator -> <empty>','saw_plusminus_operator',0,'p_saw_plusminus_operator','plyler.py',690),
  ('check_plusminus_operator -> <empty>','check_plusminus_operator',0,'p_check_plusminus_operator','plyler.py',696),
  ('saw_multdiv_operator -> <empty>','saw_multdiv_operator',0,'p_saw_multdiv_operator','plyler.py',720),
  ('check_multdiv_operator -> <empty>','check_multdiv_operator',0,'p_check_multdiv_operator','plyler.py',726),
  ('end_of_expression -> <empty>','end_of_expression',0,'p_end_of_expression','plyler.py',749),
  ('do_not_save -> <empty>','do_not_save',0,'p_do_not_save','plyler.py',755),
  ('saw_function -> <empty>','saw_function',0,'p_saw_function','plyler.py',763),
  ('scope_start -> <empty>','scope_start',0,'p_scope_start','plyler.py',770),
  ('scope_end -> <empty>','scope_end',0,'p_scope_end','plyler.py',776),
  ('class_scope_start -> <empty>','class_scope_start',0,'p_class_scope_start','plyler.py',783),
  ('class_scope_end -> <empty>','class_scope_end',0,'p_class_scope_end','plyler.py',789),
=======
  ('programa -> PROGRAM ID saw_program SEMICOLON bloque','programa',5,'p_programa','plyler.py',162),
  ('programa -> PROGRAM ID saw_program SEMICOLON dec bloque','programa',6,'p_programa','plyler.py',163),
  ('funcion -> FUNCTION func1 ID saw_id saw_function OPAREN param CPAREN bloque','funcion',9,'p_funcion','plyler.py',171),
  ('func1 -> simple','func1',1,'p_funcion1','plyler.py',178),
  ('func1 -> VOID saw_type','func1',2,'p_funcion1','plyler.py',179),
  ('param -> param2 param1','param',2,'p_param','plyler.py',186),
  ('param -> empty','param',1,'p_param','plyler.py',187),
  ('param1 -> COMMA param2 param1','param1',3,'p_param1','plyler.py',195),
  ('param1 -> empty','param1',1,'p_param1','plyler.py',196),
  ('param2 -> simple ID saw_id saw_variable','param2',4,'p_param2','plyler.py',204),
  ('param2 -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable','param2',9,'p_param2','plyler.py',205),
  ('clase -> CLASS ID saw_id saw_class COLON clase_bloque SEMICOLON','clase',7,'p_clase','plyler.py',214),
  ('clase_bloque -> OCURLY ATTRIBUTES COLON clase_bloque1 METHODS COLON clase_metodos_bloque class_scope_end CCURLY','clase_bloque',9,'p_clase_bloque','plyler.py',220),
  ('clase_bloque1 -> dec','clase_bloque1',1,'p_clase_bloque1','plyler.py',226),
  ('clase_bloque1 -> empty','clase_bloque1',1,'p_clase_bloque1','plyler.py',227),
  ('clase_metodos_bloque -> funcion clase_metodos_bloque','clase_metodos_bloque',2,'p_clase_metodos_bloque','plyler.py',233),
  ('clase_metodos_bloque -> empty','clase_metodos_bloque',1,'p_clase_metodos_bloque','plyler.py',234),
  ('ciclo_while -> WHILE cond2 THEN bloque SEMICOLON','ciclo_while',5,'p_ciclo_while','plyler.py',242),
  ('ciclo_for -> FOR OPAREN variable FROM ciclo_for1 TO ciclo_for1 BY ciclo_for1 CPAREN THEN bloque SEMICOLON','ciclo_for',13,'p_ciclo_for','plyler.py',251),
  ('ciclo_for1 -> CSTINT','ciclo_for1',1,'p_ciclo_for1','plyler.py',258),
  ('ciclo_for1 -> variable','ciclo_for1',1,'p_ciclo_for1','plyler.py',259),
  ('dec -> VAR tipo SEMICOLON dec1','dec',4,'p_dec','plyler.py',267),
  ('dec1 -> dec','dec1',1,'p_dec1','plyler.py',273),
  ('dec1 -> empty','dec1',1,'p_dec1','plyler.py',274),
  ('tipo -> compuesto ID saw_id saw_variable tipo1','tipo',5,'p_tipo','plyler.py',282),
  ('tipo -> simple ID saw_id saw_variable tipo1','tipo',5,'p_tipo','plyler.py',283),
  ('tipo -> multiple ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable tipo2','tipo',10,'p_tipo','plyler.py',284),
  ('tipo1 -> COMMA ID saw_id saw_variable tipo1','tipo1',5,'p_tipo1','plyler.py',290),
  ('tipo1 -> empty','tipo1',1,'p_tipo1','plyler.py',291),
  ('tipo2 -> COMMA ID saw_id OBRACKET CSTINT CBRACKET saw_dimension tipo3 saw_variable','tipo2',9,'p_tipo2','plyler.py',297),
  ('tipo2 -> empty','tipo2',1,'p_tipo2','plyler.py',298),
  ('tipo3 -> OBRACKET CSTINT CBRACKET saw_dimension','tipo3',4,'p_tipo3','plyler.py',304),
  ('tipo3 -> empty','tipo3',1,'p_tipo3','plyler.py',305),
  ('simple -> INT saw_type','simple',2,'p_tipo_simple','plyler.py',311),
  ('simple -> FLOAT saw_type','simple',2,'p_tipo_simple','plyler.py',312),
  ('simple -> BOOL saw_type','simple',2,'p_tipo_simple','plyler.py',313),
  ('simple -> STRING saw_type','simple',2,'p_tipo_simple','plyler.py',314),
  ('simple -> CHAR saw_type','simple',2,'p_tipo_simple','plyler.py',315),
  ('multiple -> INTS saw_type','multiple',2,'p_tipo_multiple','plyler.py',321),
  ('multiple -> FLOATS saw_type','multiple',2,'p_tipo_multiple','plyler.py',322),
  ('multiple -> BOOLS saw_type','multiple',2,'p_tipo_multiple','plyler.py',323),
  ('multiple -> STRINGS saw_type','multiple',2,'p_tipo_multiple','plyler.py',324),
  ('multiple -> CHARS saw_type','multiple',2,'p_tipo_multiple','plyler.py',325),
  ('compuesto -> ID saw_type','compuesto',2,'p_tipo_compuesto','plyler.py',331),
  ('compuesto -> DATAFRAME saw_type','compuesto',2,'p_tipo_compuesto','plyler.py',332),
  ('compuesto -> FILE saw_type','compuesto',2,'p_tipo_compuesto','plyler.py',333),
  ('bloque -> OCURLY b1 CCURLY scope_end','bloque',4,'p_bloque','plyler.py',341),
  ('b1 -> estatuto b1','b1',2,'p_b1','plyler.py',347),
  ('b1 -> empty','b1',1,'p_b1','plyler.py',348),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','plyler.py',356),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','plyler.py',357),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','plyler.py',358),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','plyler.py',359),
  ('estatuto -> leer','estatuto',1,'p_estatuto','plyler.py',360),
  ('estatuto -> ciclo_while','estatuto',1,'p_estatuto','plyler.py',361),
  ('estatuto -> ciclo_for','estatuto',1,'p_estatuto','plyler.py',362),
  ('estatuto -> ternaria','estatuto',1,'p_estatuto','plyler.py',363),
  ('estatuto -> bloque','estatuto',1,'p_estatuto','plyler.py',364),
  ('estatuto -> funcion','estatuto',1,'p_estatuto','plyler.py',365),
  ('estatuto -> clase','estatuto',1,'p_estatuto','plyler.py',366),
  ('estatuto -> dec','estatuto',1,'p_estatuto','plyler.py',367),
  ('estatuto_redux -> asignacion','estatuto_redux',1,'p_estatuto_redux','plyler.py',373),
  ('estatuto_redux -> llamada','estatuto_redux',1,'p_estatuto_redux','plyler.py',374),
  ('estatuto_redux -> escritura','estatuto_redux',1,'p_estatuto_redux','plyler.py',375),
  ('estatuto_redux -> leer','estatuto_redux',1,'p_estatuto_redux','plyler.py',376),
  ('estatuto_redux -> ternaria','estatuto_redux',1,'p_estatuto_redux','plyler.py',377),
  ('asignacion -> variable AS exp saw_asig','asignacion',4,'p_asignacion','plyler.py',385),
  ('condicion -> IF cond2 THEN bloque cond1 SEMICOLON','condicion',6,'p_condicion','plyler.py',393),
  ('cond1 -> ELSE bloque','cond1',2,'p_cond1','plyler.py',399),
  ('cond1 -> ELSE IF cond2 THEN bloque cond1','cond1',6,'p_cond1','plyler.py',400),
  ('cond1 -> empty','cond1',1,'p_cond1','plyler.py',401),
  ('cond2 -> OPAREN exp CPAREN','cond2',3,'p_cond2','plyler.py',407),
  ('ternaria -> exp QUESTION estatuto_redux COLON estatuto_redux SEMICOLON','ternaria',6,'p_ternaria','plyler.py',415),
  ('escritura -> PRINT OPAREN exp e1 CPAREN','escritura',5,'p_escritura','plyler.py',423),
  ('e1 -> COMMA exp e1','e1',3,'p_e1','plyler.py',429),
  ('e1 -> empty','e1',1,'p_e1','plyler.py',430),
  ('leer -> READ OPAREN exp e1 CPAREN','leer',5,'p_leer','plyler.py',438),
  ('boolean -> TRUE','boolean',1,'p_boolean','plyler.py',446),
  ('boolean -> FALSE','boolean',1,'p_boolean','plyler.py',447),
  ('variable -> ID saw_id saw_called_var','variable',3,'p_variable','plyler.py',455),
  ('variable -> ID saw_id OBRACKET exp CBRACKET saw_dimension variable1 saw_called_var','variable',8,'p_variable','plyler.py',456),
  ('variable -> ID saw_id variable2','variable',3,'p_variable','plyler.py',457),
  ('variable1 -> OBRACKET exp CBRACKET saw_dimension','variable1',4,'p_variable1','plyler.py',463),
  ('variable1 -> empty','variable1',1,'p_variable1','plyler.py',464),
  ('variable2 -> PERIOD ID saw_called_var_from_class','variable2',3,'p_variable2','plyler.py',470),
  ('variable2 -> PERIOD ID saw_called_var_from_class OBRACKET exp CBRACKET saw_dimension variable1','variable2',8,'p_variable2','plyler.py',471),
  ('llamada -> ID saw_id OPAREN exp llamada1 CPAREN','llamada',6,'p_llamada_funcion','plyler.py',479),
  ('llamada -> ID saw_id OPAREN CPAREN','llamada',4,'p_llamada_funcion','plyler.py',480),
  ('llamada1 -> COMMA exp llamada1','llamada1',3,'p_llamada_funcion1','plyler.py',486),
  ('llamada1 -> empty','llamada1',1,'p_llamada_funcion1','plyler.py',487),
  ('exp -> texp exp1','exp',2,'p_exp','plyler.py',495),
  ('exp1 -> OR saw_op texp exp1','exp1',4,'p_exp1','plyler.py',501),
  ('exp1 -> empty','exp1',1,'p_exp1','plyler.py',502),
  ('texp -> gexp texp1','texp',2,'p_texp','plyler.py',508),
  ('texp1 -> AND saw_op gexp texp1','texp1',4,'p_texp1','plyler.py',514),
  ('texp1 -> empty','texp1',1,'p_texp1','plyler.py',515),
  ('gexp -> mexp gexp1','gexp',2,'p_gexp','plyler.py',521),
  ('gexp1 -> LT saw_op mexp','gexp1',3,'p_gexp1','plyler.py',527),
  ('gexp1 -> GT saw_op mexp','gexp1',3,'p_gexp1','plyler.py',528),
  ('gexp1 -> GTE saw_op mexp','gexp1',3,'p_gexp1','plyler.py',529),
  ('gexp1 -> LTE saw_op mexp','gexp1',3,'p_gexp1','plyler.py',530),
  ('gexp1 -> EQ saw_op mexp','gexp1',3,'p_gexp1','plyler.py',531),
  ('gexp1 -> NE saw_op mexp','gexp1',3,'p_gexp1','plyler.py',532),
  ('gexp1 -> empty','gexp1',1,'p_gexp1','plyler.py',533),
  ('mexp -> termino mexp1','mexp',2,'p_mexp','plyler.py',539),
  ('mexp1 -> PLUS saw_op termino mexp1','mexp1',4,'p_mexp1','plyler.py',545),
  ('mexp1 -> MINUS saw_op termino mexp1','mexp1',4,'p_mexp1','plyler.py',546),
  ('mexp1 -> empty','mexp1',1,'p_mexp1','plyler.py',547),
  ('termino -> factor term1','termino',2,'p_termino','plyler.py',555),
  ('term1 -> MULT saw_op factor term1','term1',4,'p_term1','plyler.py',561),
  ('term1 -> DIV saw_op factor term1','term1',4,'p_term1','plyler.py',562),
  ('term1 -> empty','term1',1,'p_term1','plyler.py',563),
  ('factor -> OPAREN exp CPAREN','factor',3,'p_factor','plyler.py',571),
  ('factor -> varcst','factor',1,'p_factor','plyler.py',572),
  ('factor -> variable','factor',1,'p_factor','plyler.py',573),
  ('factor -> llamada','factor',1,'p_factor','plyler.py',574),
  ('varcst -> CSTINT saw_end_value_int','varcst',2,'p_varcst','plyler.py',582),
  ('varcst -> CSTFLT saw_end_value_flt','varcst',2,'p_varcst','plyler.py',583),
  ('varcst -> CSTCHAR','varcst',1,'p_varcst','plyler.py',584),
  ('varcst -> CSTSTRING','varcst',1,'p_varcst','plyler.py',585),
  ('varcst -> boolean','varcst',1,'p_varcst','plyler.py',586),
  ('empty -> <empty>','empty',0,'p_empty','plyler.py',594),
  ('saw_program -> <empty>','saw_program',0,'p_saw_program','plyler.py',607),
  ('saw_class -> <empty>','saw_class',0,'p_saw_class','plyler.py',612),
  ('saw_type -> <empty>','saw_type',0,'p_saw_type','plyler.py',620),
  ('saw_id -> <empty>','saw_id',0,'p_saw_id','plyler.py',628),
  ('saw_variable -> <empty>','saw_variable',0,'p_saw_variable','plyler.py',642),
  ('saw_dimension -> <empty>','saw_dimension',0,'p_saw_dimension','plyler.py',649),
  ('saw_called_var -> <empty>','saw_called_var',0,'p_saw_called_var','plyler.py',656),
  ('saw_called_var_from_class -> <empty>','saw_called_var_from_class',0,'p_saw_called_var_from_class','plyler.py',664),
  ('saw_asig -> <empty>','saw_asig',0,'p_saw_asig','plyler.py',673),
  ('saw_end_value_int -> <empty>','saw_end_value_int',0,'p_saw_end_value_int','plyler.py',678),
  ('saw_end_value_flt -> <empty>','saw_end_value_flt',0,'p_saw_end_value_flt','plyler.py',683),
  ('saw_op -> <empty>','saw_op',0,'p_saw_op','plyler.py',688),
  ('saw_function -> <empty>','saw_function',0,'p_saw_function','plyler.py',693),
  ('scope_end -> <empty>','scope_end',0,'p_scope_end','plyler.py',700),
  ('class_scope_end -> <empty>','class_scope_end',0,'p_class_scope_end','plyler.py',706),
>>>>>>> master
]
